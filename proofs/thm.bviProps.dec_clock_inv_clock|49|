Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bviProps
% (69084)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 744
% Passive clauses: 6529
% Generated clauses: 29043
% Final active clauses: 719
% Final passive clauses: 5360
% Input formulas: 69
% Initial clauses: 216
% 
% Duplicate literals: 321
% Trivial inequalities: 20
% Fw subsumption resolutions: 1759
% Fw demodulations: 2204
% Bw demodulations: 21
% 
% Simple tautologies: 237
% Equational tautologies: 60
% Forward subsumptions: 17371
% Fw demodulations to eq. taut.: 56
% 
% Binary resolution: 6945
% Factoring: 1018
% Forward superposition: 7638
% Backward superposition: 8681
% Self superposition: 72
% Equality factoring: 26
% Equality resolution: 13
% 
% Split clauses: 568
% Split components: 1141
% SAT solver clauses: 886
% SAT solver unit clauses: 19
% SAT solver binary clauses: 116
% 
% Sat splits: 568
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 886
% TWLsolver calls for satisfiability: 358
% 
% Memory used [KB]: 16375
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bviProps
% (69115)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 431
% Passive clauses: 2706
% Generated clauses: 17883
% Final active clauses: 423
% Final passive clauses: 2249
% Input formulas: 69
% Initial clauses: 216
% 
% Duplicate literals: 192
% Trivial inequalities: 19
% Fw subsumption resolutions: 887
% Fw demodulations: 2049
% Bw demodulations: 32
% Condensations: 317
% Global subsumptions: 18
% 
% Simple tautologies: 252
% Equational tautologies: 22
% Forward subsumptions: 7846
% Fw demodulations to eq. taut.: 42
% 
% Binary resolution: 3068
% Factoring: 324
% Forward superposition: 4966
% Backward superposition: 2967
% Self superposition: 74
% Equality factoring: 26
% Equality resolution: 14
% 
% Split clauses: 104
% Split components: 208
% SAT solver clauses: 3642
% SAT solver unit clauses: 225
% SAT solver binary clauses: 76
% SAT solver learnt clauses: 36
% SAT solver learnt literals: 12
% 
% Sat splits: 104
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 3570
% TWLsolver calls for satisfiability: 1575
% 
% Memory used [KB]: 16758
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bviProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bviProps
% SZS output start Proof for thm.bviProps
fof(f16366,plain,(
  $false),
  inference(subsumption_resolution,[],[f6285,f11578])).
fof(f11578,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(subsumption_resolution,[],[f11551,f7900])).
fof(f7900,plain,(
  ( ! [X12,X13] : (s('type.num.num',X12) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num',X13)))) )),
  inference(subsumption_resolution,[],[f7828,f289])).
fof(f289,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bviProps.dec_clock_inv_clock|49|',aHL_TRUTH)).
fof(f7828,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s('type.num.num',X12) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num',X13)))) )),
  inference(superposition,[],[f399,f5063])).
fof(f5063,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f4957,f559])).
fof(f559,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f297,f314])).
fof(f314,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.bool.EQ_CLAUSES|split|1')).
fof(f297,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X11] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.ZERO_LESS_EQ')).
fof(f4957,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f414,f302])).
fof(f302,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X12] : s('type.num.num',X12) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.ADD_|48|')).
fof(f414,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X12,X11,X15] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X15))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X15)))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.ADD_MONO_LESS_EQ')).
fof(f399,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) = s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(flattening,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (~s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X12,X11] : (~s('type.num.num',X11) = s('type.num.num',X12) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))),s('type.num.num',X12))))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.NOT_NUM_EQ')).
fof(f11551,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X12)))) )),
  inference(superposition,[],[f3879,f2678])).
fof(f2678,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f2591,f306])).
fof(f306,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X11] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X11)))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.SUC_ONE_ADD')).
fof(f2591,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f306,f302])).
fof(f3879,plain,(
  ( ! [X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X19)) )),
  inference(forward_demodulation,[],[f3878,f300])).
fof(f300,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X11] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.MULT|split|0')).
fof(f3878,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.num.|48|_0')))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))) )),
  inference(forward_demodulation,[],[f3877,f300])).
fof(f3877,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))) )),
  inference(subsumption_resolution,[],[f3876,f289])).
fof(f3876,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))) )),
  inference(forward_demodulation,[],[f3841,f559])).
fof(f3841,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X19)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)))) )),
  inference(superposition,[],[f367,f300])).
fof(f367,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f230])).
fof(f230,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f229])).
fof(f229,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X12,X11] : (s('type.num.num',X11) = s('type.num.num',X12) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X12),s('type.num.num',X11)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X12))))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.EQ_LESS_EQ')).
fof(f6285,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK10),sK11))))),s('type.num.num','const.num.|48|_0'))))),
  inference(unit_resulting_resolution,[],[f287,f5652,f397])).
fof(f397,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f244])).
fof(f5652,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK10),sK11))))))),
  inference(unit_resulting_resolution,[],[f5593,f401])).
fof(f401,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f245])).
fof(f245,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X12,X11] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X11)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X12)))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.NOT_LESS')).
fof(f5593,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK10),sK11))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(unit_resulting_resolution,[],[f2681,f2686])).
fof(f2686,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f2684,f2683])).
fof(f2683,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2592,f2591])).
fof(f2592,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f306,f360])).
fof(f360,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X12,X11] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X12))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11)))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.arithmetic.ADD_SYM')).
fof(f2684,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2)))))) )),
  inference(backward_demodulation,[],[f2683,f2682])).
fof(f2682,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f2677,f2591])).
fof(f2677,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2)))))) )),
  inference(backward_demodulation,[],[f2591,f359])).
fof(f359,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2))))))),
  inference(ennf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2))))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ! [X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X3),s('type.bviSem.state'(X0),X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X7,X8] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X6),X7))))) = s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),X7))))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.bviProps.dec_clock_inv_clock')).
fof(f2681,plain,(
  s('type.bviSem.state'(sK10),'const.bviProps.inc_clock_2'(s('type.num.num',sK12),s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.bviSem.state'(sK10),sK11))))) != s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.bviSem.state'(sK10),'const.bviProps.inc_clock_2'(s('type.num.num',sK12),s('type.bviSem.state'(sK10),sK11)))))),
  inference(backward_demodulation,[],[f2591,f288])).
fof(f288,plain,(
  s('type.bviSem.state'(sK10),'const.bviProps.inc_clock_2'(s('type.num.num',sK12),s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK10),sK11))))) != s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK10),'const.bviProps.inc_clock_2'(s('type.num.num',sK12),s('type.bviSem.state'(sK10),sK11)))))),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK10),sK11))) & s('type.bviSem.state'(sK10),'const.bviProps.inc_clock_2'(s('type.num.num',sK12),s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK10),sK11))))) != s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK10),'const.bviProps.inc_clock_2'(s('type.num.num',sK12),s('type.bviSem.state'(sK10),sK11)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f161])).
fof(f161,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) & s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) != s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X7))) => s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X7))))) = s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X7))) => s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X7))))) = s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),X7))))))),
  file('thm.bviProps.dec_clock_inv_clock|49|','thm.bviProps.dec_clock_inv_clock|49|')).
fof(f287,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK10),sK11)))),
  inference(cnf_transformation,[],[f197])).
% SZS output end Proof for thm.bviProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 381
% Passive clauses: 2256
% Generated clauses: 16954
% Final active clauses: 238
% Final passive clauses: 932
% Input formulas: 69
% Initial clauses: 216
% 
% Duplicate literals: 87
% Trivial inequalities: 18
% Fw subsumption resolutions: 992
% Fw demodulations: 2944
% Bw demodulations: 937
% Condensations: 238
% Global subsumptions: 479
% 
% Simple tautologies: 99
% Equational tautologies: 48
% Forward subsumptions: 8332
% Fw demodulations to eq. taut.: 50
% Bw demodulations to eq. taut.: 6
% 
% Unit resulting resolution: 4578
% Factoring: 2
% Forward superposition: 2987
% Backward superposition: 2444
% Self superposition: 64
% Equality factoring: 26
% Equality resolution: 6
% 
% Split clauses: 58
% Split components: 116
% SAT solver clauses: 4114
% SAT solver unit clauses: 2503
% SAT solver binary clauses: 1061
% 
% Sat splits: 58
% Sat splitting refutations: 1261
% 
% Memory used [KB]: 21492
% Time elapsed: 0.621 s
% ------------------------------
% ------------------------------
% Success in time 1.96 s
