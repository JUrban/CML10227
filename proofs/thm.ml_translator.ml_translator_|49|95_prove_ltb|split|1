Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% (121392)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 772
% Passive clauses: 3913
% Generated clauses: 22414
% Final active clauses: 747
% Final passive clauses: 2870
% Input formulas: 114
% Initial clauses: 277
% 
% Duplicate literals: 210
% Trivial inequalities: 49
% Fw subsumption resolutions: 1406
% Fw demodulations: 1612
% Bw demodulations: 7
% 
% Simple tautologies: 186
% Equational tautologies: 26
% Forward subsumptions: 14840
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 4694
% Factoring: 1200
% Forward superposition: 6056
% Backward superposition: 6729
% Self superposition: 47
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 196
% Split components: 393
% SAT solver clauses: 362
% SAT solver unit clauses: 13
% SAT solver binary clauses: 63
% 
% Sat splits: 196
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 362
% TWLsolver calls for satisfiability: 318
% 
% Memory used [KB]: 13176
% Time elapsed: 0.607 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f877,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f876,f394,f682,f515,f749,f583,f790])).
fof(f790,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | $spl158),
  inference(cnf_transformation,[],[f790_D])).
fof(f790_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f583,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f231])).
fof(f231,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8,X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.ml_translator.ml_translator_|49|95_prove_ltb|split|1','thm.arithmetic.LEFT_ADD_DISTRIB')).
fof(f749,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl86),
  inference(cnf_transformation,[],[f749_D])).
fof(f749_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f515,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7)))),
  file('thm.ml_translator.ml_translator_|49|95_prove_ltb|split|1','thm.arithmetic.MULT_SYM')).
fof(f682,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK12),s('type.num.num',sK11))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num',sK12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) | $spl1),
  inference(cnf_transformation,[],[f682_D])).
fof(f682_D,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK12),s('type.num.num',sK11))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num',sK12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f394,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK12),s('type.num.num',sK11))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num',sK12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK11),s('type.num.num',sK10)))))),
  inference(cnf_transformation,[],[f284])).
fof(f284,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK12),s('type.num.num',sK11))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num',sK12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK11),s('type.num.num',sK10)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f245])).
fof(f245,plain,(
  ? [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f116])).
fof(f116,plain,(
  ~! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.ml_translator.ml_translator_|49|95_prove_ltb|split|1','thm.ml_translator.ml_translator_|49|95_prove_ltb|split|1')).
fof(f876,plain,(
  $false | ($spl1 | $spl86 | $spl158)),
  inference(subsumption_resolution,[],[f875,f790])).
fof(f875,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK12),s('type.num.num',sK11))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num',sK12))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK10),s('type.num.num',sK11))))) | ($spl1 | $spl86)),
  inference(forward_demodulation,[],[f682,f749])).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Passive clauses: 136
% Generated clauses: 469
% Final passive clauses: 132
% Input formulas: 114
% Initial clauses: 277
% 
% Duplicate literals: 5
% Trivial inequalities: 1
% Fw subsumption resolutions: 8
% Fw demodulations: 2
% Bw demodulations: 4
% Condensations: 4
% Global subsumptions: 23
% 
% Simple tautologies: 81
% Equational tautologies: 1
% Forward subsumptions: 2
% 
% SAT solver clauses: 517
% SAT solver unit clauses: 329
% SAT solver binary clauses: 76
% SAT solver learnt clauses: 47
% SAT solver learnt literals: 12
% 
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 424
% TWLsolver calls for satisfiability: 1526
% 
% Memory used [KB]: 1279
% Time elapsed: 0.011 s
% ------------------------------
% ------------------------------
% Success in time 0.65 s
