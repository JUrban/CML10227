Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvlProps
% (70465)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 183
% Passive clauses: 1886
% Generated clauses: 25578
% Final active clauses: 152
% Final passive clauses: 1492
% Input formulas: 15
% Initial clauses: 35
% 
% Duplicate literals: 1453
% Trivial inequalities: 323
% Fw subsumption resolutions: 3965
% Fw demodulations: 3131
% Bw demodulations: 30
% 
% Simple tautologies: 592
% Equational tautologies: 60
% Forward subsumptions: 11707
% 
% Binary resolution: 264
% Forward superposition: 6852
% Backward superposition: 8817
% Self superposition: 232
% Equality factoring: 177
% Equality resolution: 50
% 
% Split clauses: 1259
% Split components: 2594
% SAT solver clauses: 2052
% SAT solver unit clauses: 60
% SAT solver binary clauses: 437
% 
% Sat splits: 1259
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2049
% TWLsolver calls for satisfiability: 160
% 
% Memory used [KB]: 16758
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvlProps
% (70490)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 185
% Passive clauses: 527
% Generated clauses: 19864
% Final active clauses: 155
% Final passive clauses: 271
% Input formulas: 15
% Initial clauses: 35
% 
% Duplicate literals: 864
% Trivial inequalities: 286
% Fw subsumption resolutions: 1409
% Fw demodulations: 2087
% Bw demodulations: 90
% Condensations: 1869
% 
% Simple tautologies: 164
% Equational tautologies: 47
% Forward subsumptions: 11523
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 341
% Forward superposition: 8670
% Backward superposition: 5607
% Self superposition: 244
% Equality factoring: 136
% Equality resolution: 20
% 
% Split clauses: 62
% Split components: 124
% SAT solver clauses: 1017
% SAT solver unit clauses: 50
% SAT solver binary clauses: 50
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 62
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 1016
% TWLsolver calls for satisfiability: 1465
% 
% Memory used [KB]: 29679
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 137 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvlProps
% (70508)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 422
% Passive clauses: 3865
% Generated clauses: 83993
% Final active clauses: 204
% Final passive clauses: 980
% Input formulas: 15
% Initial clauses: 35
% Discarded non-redundant clauses: 2852
% 
% Duplicate literals: 5525
% Trivial inequalities: 1000
% Fw subsumption resolutions: 7027
% Fw demodulations: 11568
% Bw demodulations: 1422
% Condensations: 9105
% Global subsumptions: 90
% 
% Simple tautologies: 794
% Equational tautologies: 1109
% Forward subsumptions: 43791
% Fw demodulations to eq. taut.: 113
% Bw demodulations to eq. taut.: 138
% 
% Unit resulting resolution: 4280
% Forward superposition: 26282
% Backward superposition: 15301
% Self superposition: 452
% Equality factoring: 228
% Equality resolution: 57
% 
% Split clauses: 136
% Split components: 277
% SAT solver clauses: 4304
% SAT solver unit clauses: 52
% SAT solver binary clauses: 206
% 
% Sat splits: 136
% Sat splitting refutations: 75
% 
% Memory used [KB]: 213770
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.bvlProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvlProps
% SZS output start Proof for thm.bvlProps
fof(f4258,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f87,f128,f628,f102,f2059,f2123,f2074,f2141,f2157,f2142,f2159,f2172,f2192,f2193,f2250,f2321,f2268,f2267,f2424,f2208,f2425,f2158,f2209,f2660,f2731,f2678,f2677,f3135,f3237,f3136,f3137,f3138,f3139,f3140,f3141,f3262,f3243,f3263,f3265,f3309,f3347,f3380,f3426,f3461,f3540,f3642,f3643,f3644,f3645,f3646,f3647,f3648,f3650,f3249,f3652,f3269,f3686,f3784,f3832,f3864,f3962,f4010,f4112,f103,f4114,f4116,f4118,f3239,f4120,f3259,f3257,f4122,f4124,f3241,f3261,f4127,f3253,f4129,f3277,f3428,f3275,f3273,f3271,f3267,f4135,f3251,f4140,f3247,f4146,f3255,f3349,f3245,f4179])).
fof(f4179,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f4147,f90])).
fof(f90,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1)))),
  inference(resolution,[],[f60,f78])).
fof(f78,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X23] : (s(bool,'T_0') = s(bool,X23) <=> p(s(bool,X23)))),
  file('thm.bvlProps.isVar_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f60,plain,(
  ~p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X16] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X16)))))) & ! [X13,X14,X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X13),s('type.bvl.exp',X14),s('type.bvl.exp',X15)))))) & ! [X11,X12] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12)))))) & ! [X10] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X10)))))) & ! [X8,X9] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X8),s('type.bvl.exp',X9)))))) & ! [X7] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X7)))))) & ! [X4,X5,X6] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X4),s('type.option.option'('type.num.num'),X5),s('type.list.list'('type.bvl.exp'),X6)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X2),s('type.list.list'('type.bvl.exp'),X3)))))) & ~p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f40])).
fof(f40,plain,(
  ? [X0] : (! [X16] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X16)))))) & ! [X13,X14,X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X13),s('type.bvl.exp',X14),s('type.bvl.exp',X15)))))) & ! [X11,X12] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12)))))) & ! [X10] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X10)))))) & ! [X8,X9] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X8),s('type.bvl.exp',X9)))))) & ! [X7] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X7)))))) & ! [X4,X5,X6] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X4),s('type.option.option'('type.num.num'),X5),s('type.list.list'('type.bvl.exp'),X6)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X2),s('type.list.list'('type.bvl.exp'),X3)))))) & ? [X1] : ~p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,plain,(
  ? [X0] : (! [X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X15)))))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X12),s('type.bvl.exp',X13),s('type.bvl.exp',X14)))))) & ! [X10,X11] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X10),s('type.bvl.exp',X11)))))) & ! [X9] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X9)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X7),s('type.bvl.exp',X8)))))) & ! [X6] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5)))))) & ! [X1,X2] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2)))))) & ? [X16] : ~p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',X16)))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ? [X0] : ((! [X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X15)))))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X12),s('type.bvl.exp',X13),s('type.bvl.exp',X14)))))) & ! [X10,X11] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X10),s('type.bvl.exp',X11)))))) & ! [X9] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X9)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X7),s('type.bvl.exp',X8)))))) & ! [X6] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5)))))) & ! [X1,X2] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2))))))) & ? [X16] : ~p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',X16)))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0] : ((! [X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X15)))))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X12),s('type.bvl.exp',X13),s('type.bvl.exp',X14)))))) & ! [X10,X11] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X10),s('type.bvl.exp',X11)))))) & ! [X9] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X9)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X7),s('type.bvl.exp',X8)))))) & ! [X6] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5)))))) & ! [X1,X2] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2))))))) => ! [X16] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',X16)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((! [X7] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7)))))) & ! [X8,X9,X10] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X8),s('type.bvl.exp',X9),s('type.bvl.exp',X10)))))) & ! [X11,X12] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12)))))) & ! [X13] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X13)))))) & ! [X14,X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X14),s('type.bvl.exp',X15)))))) & ! [X16] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X16)))))) & ! [X17,X18,X19] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X17),s('type.option.option'('type.num.num'),X18),s('type.list.list'('type.bvl.exp'),X19)))))) & ! [X20,X21] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.bvl.exp'),X21))))))) => ! [X22] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp',X22)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((! [X7] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7)))))) & ! [X8,X9,X10] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X8),s('type.bvl.exp',X9),s('type.bvl.exp',X10)))))) & ! [X11,X12] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12)))))) & ! [X13] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X13)))))) & ! [X14,X15] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X14),s('type.bvl.exp',X15)))))) & ! [X16] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X16)))))) & ! [X17,X18,X19] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X17),s('type.option.option'('type.num.num'),X18),s('type.list.list'('type.bvl.exp'),X19)))))) & ! [X20,X21] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.bvl.exp'),X21))))))) => ! [X22] : p(s(bool,happ(s(fun('type.bvl.exp',bool),X6),s('type.bvl.exp',X22)))))),
  file('thm.bvlProps.isVar_ind','thm.bvlProps.isVar_ind')).
fof(f4147,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl42),
  inference(superposition,[],[f789,f3255])).
fof(f789,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X0),s('type.list.list'('type.bvl.exp'),X1)))))) )),
  inference(resolution,[],[f59,f79])).
fof(f79,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f50])).
fof(f59,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X2),s('type.list.list'('type.bvl.exp'),X3))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3245,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | $spl32),
  inference(cnf_transformation,[],[f3245_D])).
fof(f3245_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3349,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | $spl64),
  inference(cnf_transformation,[],[f3349_D])).
fof(f3349_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f3255,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | $spl42),
  inference(cnf_transformation,[],[f3255_D])).
fof(f3255_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f4146,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | ($spl31 | $spl35 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f4145,f3242])).
fof(f3242,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl31),
  inference(cnf_transformation,[],[f3242_D])).
fof(f3242_D,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f4145,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | ($spl35 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f4144,f3248])).
fof(f3248,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | $spl37),
  inference(cnf_transformation,[],[f3248_D])).
fof(f3248_D,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f4144,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | ($spl35 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f4143,f3250])).
fof(f3250,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | $spl39),
  inference(cnf_transformation,[],[f3250_D])).
fof(f3250_D,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f4143,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | ($spl35 | $spl41)),
  inference(subsumption_resolution,[],[f4142,f3252])).
fof(f3252,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | $spl41),
  inference(cnf_transformation,[],[f3252_D])).
fof(f3252_D,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f4142,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl35),
  inference(trivial_inequality_removal,[],[f4141])).
fof(f4141,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp',sK1) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl35),
  inference(superposition,[],[f3246,f69])).
fof(f69,plain,(
  ( ! [X0] : (s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.bvl.exp'),sK31(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(X0)),s('type.option.option'('type.num.num'),sK28(X0)),s('type.list.list'('type.bvl.exp'),sK29(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(X0)),s('type.bvl.exp',sK25(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(X0)),s('type.bvl.exp',sK22(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(X0)),s('type.bvl.exp',sK19(X0)),s('type.bvl.exp',sK20(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(X0))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(X0)),s('type.bvl.exp',sK19(X0)),s('type.bvl.exp',sK20(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(X0)),s('type.bvl.exp',sK22(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(X0)),s('type.bvl.exp',sK25(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(X0)),s('type.option.option'('type.num.num'),sK28(X0)),s('type.list.list'('type.bvl.exp'),sK29(X0)))) | s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.bvl.exp'),sK31(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31])],[f19])).
fof(f19,plain,(
  ! [X0] : (? [X15] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X15))) | ? [X12,X13,X14] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X12),s('type.bvl.exp',X13),s('type.bvl.exp',X14))) | ? [X10,X11] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X10),s('type.bvl.exp',X11))) | ? [X9] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X9))) | ? [X7,X8] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X7),s('type.bvl.exp',X8))) | ? [X6] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6))) | ? [X3,X4,X5] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5))) | ? [X1,X2] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X24] : (? [X7] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7))) | ? [X25,X26,X27] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X25),s('type.bvl.exp',X26),s('type.bvl.exp',X27))) | ? [X28,X25] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X28),s('type.bvl.exp',X25))) | ? [X25] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X25))) | ? [X25,X26] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X25),s('type.bvl.exp',X26))) | ? [X25] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X25))) | ? [X7,X29,X28] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X7),s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.bvl.exp'),X28))) | ? [X29,X28] : s('type.bvl.exp',X24) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X29),s('type.list.list'('type.bvl.exp'),X28))))),
  file('thm.bvlProps.isVar_ind','thm.bvl.exp_nchotomy')).
fof(f3246,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | $spl35),
  inference(cnf_transformation,[],[f3246_D])).
fof(f3246_D,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f3247,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | $spl34),
  inference(cnf_transformation,[],[f3247_D])).
fof(f3247_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f4140,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | ($spl31 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f4139,f3242])).
fof(f4139,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | ($spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f4138,f3248])).
fof(f4138,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | ($spl39 | $spl41)),
  inference(subsumption_resolution,[],[f4137,f3252])).
fof(f4137,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl39),
  inference(trivial_inequality_removal,[],[f4136])).
fof(f4136,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp',sK1) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl39),
  inference(superposition,[],[f3250,f69])).
fof(f3251,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | $spl38),
  inference(cnf_transformation,[],[f3251_D])).
fof(f3251_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f4135,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | ($spl31 | $spl37 | $spl41)),
  inference(subsumption_resolution,[],[f4134,f3242])).
fof(f4134,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | ($spl37 | $spl41)),
  inference(subsumption_resolution,[],[f4133,f3248])).
fof(f4133,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl41),
  inference(trivial_inequality_removal,[],[f4132])).
fof(f4132,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp',sK1) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl41),
  inference(superposition,[],[f3252,f69])).
fof(f3267,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl52),
  inference(cnf_transformation,[],[f3267_D])).
fof(f3267_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f3271,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl56),
  inference(cnf_transformation,[],[f3271_D])).
fof(f3271_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f3273,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl58),
  inference(cnf_transformation,[],[f3273_D])).
fof(f3273_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f3275,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl60),
  inference(cnf_transformation,[],[f3275_D])).
fof(f3275_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f3428,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl66),
  inference(cnf_transformation,[],[f3428_D])).
fof(f3428_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3277,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl62),
  inference(cnf_transformation,[],[f3277_D])).
fof(f3277_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f4129,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl51),
  inference(subsumption_resolution,[],[f4128,f3264])).
fof(f3264,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl51),
  inference(cnf_transformation,[],[f3264_D])).
fof(f3264_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f4128,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(subsumption_resolution,[],[f4104,f80])).
fof(f80,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvlProps.isVar_ind',aHL_FALSITY)).
fof(f4104,plain,(
  p(s(bool,'F_0')) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(superposition,[],[f725,f2064])).
fof(f2064,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))),
  inference(resolution,[],[f1990,f75])).
fof(f75,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X23] : (s(bool,'F_0') = s(bool,X23) <=> ~p(s(bool,X23)))),
  file('thm.bvlProps.isVar_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f1990,plain,(
  ~p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(resolution,[],[f89,f86])).
fof(f86,plain,(
  ( ! [X0] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),'const.relation.EMPTY_REL_0'))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),'const.relation.EMPTY_REL_0'))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X31] : p(s(bool,'const.relation.WF_1'(s(fun(X31,fun(X31,bool)),'const.relation.EMPTY_REL_0'))))),
  file('thm.bvlProps.isVar_ind','thm.relation.WF_EMPTY_REL')).
fof(f89,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X4)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,X4,'type.bvl.exp')))))) )),
  inference(resolution,[],[f60,f71])).
fof(f71,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK32(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK32(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK32(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK32])],[f45])).
fof(f45,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X31] : ! [X32] : (p(s(bool,'const.relation.WF_1'(s(fun(X31,fun(X31,bool)),X32)))) => ! [X6] : (! [X33] : (! [X34] : (p(s(bool,happ(s(fun(X31,bool),happ(s(fun(X31,fun(X31,bool)),X32),s(X31,X34))),s(X31,X33)))) => p(s(bool,happ(s(fun(X31,bool),X6),s(X31,X34))))) => p(s(bool,happ(s(fun(X31,bool),X6),s(X31,X33))))) => ! [X33] : p(s(bool,happ(s(fun(X31,bool),X6),s(X31,X33))))))),
  file('thm.bvlProps.isVar_ind','thm.relation.WF_INDUCTION_THM')).
fof(f725,plain,(
  ( ! [X23] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(X23)),s('type.list.list'('type.bvl.exp'),sK31(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(X23)),s('type.option.option'('type.num.num'),sK28(X23)),s('type.list.list'('type.bvl.exp'),sK29(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(X23)),s('type.bvl.exp',sK25(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(X23)),s('type.bvl.exp',sK19(X23)),s('type.bvl.exp',sK20(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(X23))))) )),
  inference(superposition,[],[f54,f69])).
fof(f54,plain,(
  ( ! [X12,X11] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3253,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | $spl40),
  inference(cnf_transformation,[],[f3253_D])).
fof(f3253_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f4127,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4126,f3242])).
fof(f4126,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl37),
  inference(subsumption_resolution,[],[f4125,f3248])).
fof(f4125,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1))))),
  inference(subsumption_resolution,[],[f4103,f80])).
fof(f4103,plain,(
  p(s(bool,'F_0')) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1))))),
  inference(superposition,[],[f725,f92])).
fof(f92,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1)))),
  inference(resolution,[],[f60,f75])).
fof(f3261,plain,(
  p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | $spl48),
  inference(cnf_transformation,[],[f3261_D])).
fof(f3261_D,plain,(
  p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f3241,plain,(
  s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl29),
  inference(cnf_transformation,[],[f3241_D])).
fof(f3241_D,plain,(
  s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f4124,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4123,f3242])).
fof(f4123,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | $spl37),
  inference(subsumption_resolution,[],[f4016,f3248])).
fof(f4016,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))))),
  inference(resolution,[],[f725,f2139])).
fof(f2139,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),X4),s('type.bvl.exp',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,X4,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,X4,bool,'type.bvl.exp')))))) )),
  inference(superposition,[],[f94,f75])).
fof(f94,plain,(
  ( ! [X0] : (s(bool,f(s('type.bvl.exp',sK33(sK0,X0,bool,'type.bvl.exp')))) != s(bool,g(s('type.bvl.exp',sK33(sK0,X0,bool,'type.bvl.exp')))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',sK1))))) )),
  inference(superposition,[],[f60,f85])).
fof(f85,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,X1),X2) = s(fun(X0,X1),X3) | s(X1,f(s(X0,sK33(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK33(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK33(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK33(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK33])],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.bvlProps.isVar_ind',aHL_EXT)).
fof(f4122,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4121,f3242])).
fof(f4121,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | $spl37),
  inference(subsumption_resolution,[],[f4015,f3248])).
fof(f4015,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))))),
  inference(resolution,[],[f725,f2190])).
fof(f2190,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),X4),s('type.bvl.exp',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(X4,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(X4,sK0,bool,'type.bvl.exp')))))) )),
  inference(superposition,[],[f95,f75])).
fof(f95,plain,(
  ( ! [X1] : (s(bool,f(s('type.bvl.exp',sK33(X1,sK0,bool,'type.bvl.exp')))) != s(bool,g(s('type.bvl.exp',sK33(X1,sK0,bool,'type.bvl.exp')))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),X1),s('type.bvl.exp',sK1))))) )),
  inference(superposition,[],[f60,f85])).
fof(f3257,plain,(
  s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl44),
  inference(cnf_transformation,[],[f3257_D])).
fof(f3257_D,plain,(
  s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f3259,plain,(
  s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl47),
  inference(cnf_transformation,[],[f3259_D])).
fof(f3259_D,plain,(
  s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f4120,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4119,f3242])).
fof(f4119,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl37),
  inference(subsumption_resolution,[],[f4014,f3248])).
fof(f4014,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f725,f2135])).
fof(f2135,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,X0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,X0,bool,'type.bvl.exp'))))) )),
  inference(superposition,[],[f94,f84])).
fof(f84,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvlProps.isVar_ind',aHL_BOOL_CASES)).
fof(f3239,plain,(
  s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl26),
  inference(cnf_transformation,[],[f3239_D])).
fof(f3239_D,plain,(
  s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4118,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4117,f3242])).
fof(f4117,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl37),
  inference(subsumption_resolution,[],[f4013,f3248])).
fof(f4013,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f725,f2136])).
fof(f2136,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),X1),s('type.bvl.exp',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,X1,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,X1,bool,'type.bvl.exp'))))) )),
  inference(superposition,[],[f94,f84])).
fof(f4116,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4115,f3242])).
fof(f4115,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl37),
  inference(subsumption_resolution,[],[f4012,f3248])).
fof(f4012,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f725,f2186])).
fof(f2186,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),X0),s('type.bvl.exp',sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(X0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(X0,sK0,bool,'type.bvl.exp'))))) )),
  inference(superposition,[],[f95,f84])).
fof(f4114,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f4113,f3242])).
fof(f4113,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl37),
  inference(subsumption_resolution,[],[f4011,f3248])).
fof(f4011,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f725,f2187])).
fof(f2187,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),X1),s('type.bvl.exp',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(X1,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(X1,sK0,bool,'type.bvl.exp'))))) )),
  inference(superposition,[],[f95,f84])).
fof(f103,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f4112,plain,(
  ( ! [X2] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,X2,'type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,X2,'type.bvl.exp')))))) ) | $spl70),
  inference(cnf_transformation,[],[f4112_D])).
fof(f4112_D,plain,(
  ( ! [X2] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,X2,'type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,X2,'type.bvl.exp')))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f4010,plain,(
  ( ! [X2,X3] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,X2,'type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X3)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(resolution,[],[f725,f71])).
fof(f3962,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f3934,f90])).
fof(f3934,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl40),
  inference(superposition,[],[f308,f3253])).
fof(f308,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X0)))))) )),
  inference(resolution,[],[f57,f79])).
fof(f57,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X7))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3864,plain,(
  $false | $spl38),
  inference(subsumption_resolution,[],[f3833,f90])).
fof(f3833,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl38),
  inference(superposition,[],[f427,f3251])).
fof(f427,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X0),s('type.bvl.exp',X1)))))) )),
  inference(resolution,[],[f56,f79])).
fof(f56,plain,(
  ( ! [X8,X9] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X8),s('type.bvl.exp',X9))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3832,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f3831,f3242])).
fof(f3831,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl37),
  inference(trivial_inequality_removal,[],[f3830])).
fof(f3830,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp',sK1) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl37),
  inference(superposition,[],[f3248,f69])).
fof(f3784,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3756,f90])).
fof(f3756,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl36),
  inference(superposition,[],[f214,f3249])).
fof(f214,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X0)))))) )),
  inference(resolution,[],[f55,f79])).
fof(f55,plain,(
  ( ! [X10] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X10))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3686,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f3655,f90])).
fof(f3655,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl34),
  inference(superposition,[],[f639,f3247])).
fof(f639,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X0),s('type.bvl.exp',X1)))))) )),
  inference(resolution,[],[f54,f79])).
fof(f3269,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl54),
  inference(cnf_transformation,[],[f3269_D])).
fof(f3269_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f3652,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl51),
  inference(subsumption_resolution,[],[f3651,f3264])).
fof(f3651,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(subsumption_resolution,[],[f3634,f80])).
fof(f3634,plain,(
  p(s(bool,'F_0')) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(superposition,[],[f1170,f2064])).
fof(f1170,plain,(
  ( ! [X23] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(X23)),s('type.list.list'('type.bvl.exp'),sK31(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(X23)),s('type.option.option'('type.num.num'),sK28(X23)),s('type.list.list'('type.bvl.exp'),sK29(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(X23)),s('type.bvl.exp',sK25(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(X23)),s('type.bvl.exp',sK22(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(X23))))) )),
  inference(superposition,[],[f53,f69])).
fof(f53,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X13),s('type.bvl.exp',X14),s('type.bvl.exp',X15))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3249,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | $spl36),
  inference(cnf_transformation,[],[f3249_D])).
fof(f3249_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3650,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | $spl31),
  inference(subsumption_resolution,[],[f3649,f3242])).
fof(f3649,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1))))),
  inference(subsumption_resolution,[],[f3633,f80])).
fof(f3633,plain,(
  p(s(bool,'F_0')) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1))))),
  inference(superposition,[],[f1170,f92])).
fof(f3648,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | $spl31),
  inference(subsumption_resolution,[],[f3546,f3242])).
fof(f3546,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))))),
  inference(resolution,[],[f1170,f2139])).
fof(f3647,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))) | $spl31),
  inference(subsumption_resolution,[],[f3545,f3242])).
fof(f3545,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))))),
  inference(resolution,[],[f1170,f2190])).
fof(f3646,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl31),
  inference(subsumption_resolution,[],[f3544,f3242])).
fof(f3544,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1170,f2135])).
fof(f3645,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl31),
  inference(subsumption_resolution,[],[f3543,f3242])).
fof(f3543,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1170,f2136])).
fof(f3644,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl31),
  inference(subsumption_resolution,[],[f3542,f3242])).
fof(f3542,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1170,f2186])).
fof(f3643,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | $spl31),
  inference(subsumption_resolution,[],[f3541,f3242])).
fof(f3541,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1170,f2187])).
fof(f3642,plain,(
  ( ! [X2] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,X2,'type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,X2,'type.bvl.exp')))))) ) | $spl68),
  inference(cnf_transformation,[],[f3642_D])).
fof(f3642_D,plain,(
  ( ! [X2] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,X2,'type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,X2,'type.bvl.exp')))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f3540,plain,(
  ( ! [X2,X3] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,X2,'type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X3)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(resolution,[],[f1170,f71])).
fof(f3461,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f3429,f90])).
fof(f3429,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl32),
  inference(superposition,[],[f940,f3245])).
fof(f940,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X0),s('type.bvl.exp',X1),s('type.bvl.exp',X2)))))) )),
  inference(resolution,[],[f53,f79])).
fof(f3426,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl51),
  inference(trivial_inequality_removal,[],[f3425])).
fof(f3425,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) != s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.option.option'('type.num.num'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl51),
  inference(superposition,[],[f3264,f69])).
fof(f3380,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f3352,f2062])).
fof(f2062,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))),
  inference(resolution,[],[f1990,f78])).
fof(f3352,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))) | $spl50),
  inference(superposition,[],[f105,f3265])).
fof(f105,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X0)))))) )),
  inference(resolution,[],[f52,f79])).
fof(f52,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X16))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3347,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | $spl31),
  inference(trivial_inequality_removal,[],[f3346])).
fof(f3346,plain,(
  s('type.bvl.exp',sK1) != s('type.bvl.exp',sK1) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK27(sK1)),s('type.option.option'('type.num.num'),sK28(sK1)),s('type.list.list'('type.bvl.exp'),sK29(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | $spl31),
  inference(superposition,[],[f3242,f69])).
fof(f3309,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f3282,f90])).
fof(f3282,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK1))) | $spl30),
  inference(superposition,[],[f105,f3243])).
fof(f3265,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl50),
  inference(cnf_transformation,[],[f3265_D])).
fof(f3265_D,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f3263,plain,(
  s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(subsumption_resolution,[],[f3229,f80])).
fof(f3229,plain,(
  p(s(bool,'F_0')) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))))),
  inference(superposition,[],[f1321,f2064])).
fof(f1321,plain,(
  ( ! [X23] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(X23)),s('type.list.list'('type.bvl.exp'),sK31(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(X23)),s('type.bvl.exp',sK25(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(X23)),s('type.bvl.exp',sK22(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(X23)),s('type.bvl.exp',sK19(X23)),s('type.bvl.exp',sK20(X23)))) | s('type.bvl.exp',X23) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(X23))))) )),
  inference(superposition,[],[f58,f69])).
fof(f58,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X4),s('type.option.option'('type.num.num'),X5),s('type.list.list'('type.bvl.exp'),X6))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f3243,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | $spl30),
  inference(cnf_transformation,[],[f3243_D])).
fof(f3243_D,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3262,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1))))),
  inference(subsumption_resolution,[],[f3228,f80])).
fof(f3228,plain,(
  p(s(bool,'F_0')) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1))))),
  inference(superposition,[],[f1321,f92])).
fof(f3141,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))))),
  inference(resolution,[],[f1321,f2139])).
fof(f3140,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | p(s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))))),
  inference(resolution,[],[f1321,f2190])).
fof(f3139,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1321,f2135])).
fof(f3138,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1321,f2136])).
fof(f3137,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1321,f2186])).
fof(f3136,plain,(
  s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK1)),s('type.list.list'('type.bvl.exp'),sK31(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK1)),s('type.bvl.exp',sK25(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK1)),s('type.bvl.exp',sK22(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK1)),s('type.bvl.exp',sK19(sK1)),s('type.bvl.exp',sK20(sK1)))) | s('type.bvl.exp',sK1) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp')))) | s(bool,'T_0') = s(bool,g(s('type.bvl.exp',sK33(sK0,sK0,bool,'type.bvl.exp'))))),
  inference(resolution,[],[f1321,f2187])).
fof(f3237,plain,(
  ( ! [X2] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp')))))) ) | $spl24),
  inference(cnf_transformation,[],[f3237_D])).
fof(f3237_D,plain,(
  ( ! [X2] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp')))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3135,plain,(
  ( ! [X2,X3] : (s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK30(sK32(sK0,X2,'type.bvl.exp'))),s('type.list.list'('type.bvl.exp'),sK31(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK26(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK24(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK25(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK23(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK21(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK22(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK18(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK19(sK32(sK0,X2,'type.bvl.exp'))),s('type.bvl.exp',sK20(sK32(sK0,X2,'type.bvl.exp'))))) | s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK17(sK32(sK0,X2,'type.bvl.exp'))))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X3)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(resolution,[],[f1321,f71])).
fof(f2677,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) ) | $spl20),
  inference(cnf_transformation,[],[f2677_D])).
fof(f2677_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2678,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',X0))))) ) | $spl22),
  inference(cnf_transformation,[],[f2678_D])).
fof(f2678_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',X0))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2731,plain,(
  ( ! [X2,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) ) | $spl4),
  inference(subsumption_resolution,[],[f2703,f80])).
fof(f2703,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) ) | $spl4),
  inference(superposition,[],[f70,f2665])).
fof(f2665,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))) | $spl4),
  inference(resolution,[],[f2640,f75])).
fof(f2640,plain,(
  ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl4),
  inference(resolution,[],[f2074,f86])).
fof(f70,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK32(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f2660,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',X0)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))),X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) ) | $spl4),
  inference(resolution,[],[f2640,f70])).
fof(f2209,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3)))) ) | $spl14),
  inference(cnf_transformation,[],[f2209_D])).
fof(f2209_D,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2158,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5),s('type.bvl.exp',X4))),s('type.bvl.exp',sK32(sK0,X5,'type.bvl.exp')))))) ) | $spl8),
  inference(cnf_transformation,[],[f2158_D])).
fof(f2158_D,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5),s('type.bvl.exp',X4))),s('type.bvl.exp',sK32(sK0,X5,'type.bvl.exp')))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f2425,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X9)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X10),s('type.bvl.exp',X9))),s('type.bvl.exp',sK32(sK0,X10,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X10)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X8)))) )),
  inference(subsumption_resolution,[],[f2398,f80])).
fof(f2398,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X9)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X10),s('type.bvl.exp',X9))),s('type.bvl.exp',sK32(sK0,X10,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X10)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X8)))) )),
  inference(superposition,[],[f70,f2197])).
fof(f2197,plain,(
  ( ! [X10] : (s(bool,'F_0') = s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,X10,'type.bvl.exp')))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X10)))) )),
  inference(resolution,[],[f1993,f75])).
fof(f1993,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) )),
  inference(resolution,[],[f89,f75])).
fof(f2208,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')))))) ) | $spl12),
  inference(cnf_transformation,[],[f2208_D])).
fof(f2208_D,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2424,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X6)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X7),s('type.bvl.exp',sK32(sK0,X5,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X7,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X7)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5)))) )),
  inference(subsumption_resolution,[],[f2397,f80])).
fof(f2397,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X6)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X7),s('type.bvl.exp',sK32(sK0,X5,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X7,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X7)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5)))) )),
  inference(superposition,[],[f70,f2197])).
fof(f2267,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1)),X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) ) | $spl16),
  inference(cnf_transformation,[],[f2267_D])).
fof(f2267_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1)),X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2268,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',X0))))) ) | $spl18),
  inference(cnf_transformation,[],[f2268_D])).
fof(f2268_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',X0))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2321,plain,(
  ( ! [X2,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1)),X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) ) | $spl0),
  inference(subsumption_resolution,[],[f2293,f80])).
fof(f2293,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1)),X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) ) | $spl0),
  inference(superposition,[],[f70,f2255])).
fof(f2255,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))) | $spl0),
  inference(resolution,[],[f2236,f75])).
fof(f2236,plain,(
  ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp'))))) | $spl0),
  inference(resolution,[],[f102,f86])).
fof(f2250,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1))),s('type.bvl.exp',X0)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),'const.relation.EMPTY_REL_0'),s('type.bvl.exp',sK1)),X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) ) | $spl0),
  inference(resolution,[],[f2236,f70])).
fof(f2193,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X4)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5),s('type.bvl.exp',X4))),s('type.bvl.exp',sK32(sK0,X5,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5))))) )),
  inference(resolution,[],[f1993,f70])).
fof(f2192,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(resolution,[],[f1993,f70])).
fof(f2172,plain,(
  $false | $spl10),
  inference(resolution,[],[f2169,f86])).
fof(f2169,plain,(
  ( ! [X3] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3))))) ) | $spl10),
  inference(trivial_inequality_removal,[],[f2166])).
fof(f2166,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3))))) ) | $spl10),
  inference(superposition,[],[f2159,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X23] : (s(bool,'T_0') = s(bool,X23) <=> p(s(bool,X23)))),
  file('thm.bvlProps.isVar_ind','thm.bool.EQ_CLAUSES|split|1')).
fof(f2159,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3)))) ) | $spl10),
  inference(cnf_transformation,[],[f2159_D])).
fof(f2159_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2142,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X3))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X4)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5),s('type.bvl.exp',X4))),s('type.bvl.exp',sK32(sK0,X5,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X5))))) )),
  inference(resolution,[],[f1991,f70])).
fof(f1991,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0)))) )),
  inference(resolution,[],[f89,f78])).
fof(f2157,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')))))) ) | $spl6),
  inference(cnf_transformation,[],[f2157_D])).
fof(f2157_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp')))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2141,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X0))) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,X0,'type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(resolution,[],[f1991,f70])).
fof(f2074,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp')))))) ) | $spl4),
  inference(cnf_transformation,[],[f2074_D])).
fof(f2074_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp')))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f2123,plain,(
  ( ! [X2,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(subsumption_resolution,[],[f2095,f80])).
fof(f2095,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X2,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X2))))) )),
  inference(superposition,[],[f70,f2064])).
fof(f2059,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X0)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK32(sK0,'const.relation.EMPTY_REL_0','type.bvl.exp')))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) )),
  inference(resolution,[],[f1990,f70])).
fof(f102,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp')))))) ) | $spl0),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp')))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f628,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X0)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) )),
  inference(subsumption_resolution,[],[f600,f80])).
fof(f600,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X0)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) )),
  inference(superposition,[],[f70,f92])).
fof(f128,plain,(
  $false | $spl2),
  inference(resolution,[],[f103,f60])).
fof(f87,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.bvl.exp',bool),sK0),s('type.bvl.exp',X0)))) | ~p(s(bool,happ(s(fun('type.bvl.exp',bool),happ(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1),s('type.bvl.exp',sK1))),s('type.bvl.exp',sK32(sK0,X1,'type.bvl.exp'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.bvl.exp',fun('type.bvl.exp',bool)),X1))))) )),
  inference(resolution,[],[f60,f70])).
% SZS output end Proof for thm.bvlProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 139
% Passive clauses: 1014
% Generated clauses: 4151
% Final active clauses: 117
% Final passive clauses: 810
% Input formulas: 15
% Initial clauses: 35
% 
% Selected by SInE selection: 15
% SInE iterations: 1
% 
% Duplicate literals: 2
% Trivial inequalities: 64
% Fw subsumption resolutions: 186
% Fw demodulations: 648
% Bw demodulations: 12
% 
% Simple tautologies: 2
% Forward subsumptions: 2192
% 
% Binary resolution: 245
% Forward superposition: 2417
% Backward superposition: 539
% 
% Split clauses: 47
% Split components: 247
% SAT solver clauses: 58
% SAT solver unit clauses: 10
% SAT solver binary clauses: 13
% 
% Sat splits: 47
% Sat splitting refutations: 10
% 
% Memory used [KB]: 4349
% Time elapsed: 0.354 s
% ------------------------------
% ------------------------------
% Success in time 12.104 s
