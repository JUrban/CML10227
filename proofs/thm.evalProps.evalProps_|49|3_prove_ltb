Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.evalProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.evalProps
% SZS output start Proof for thm.evalProps
fof(f4924,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4923,f223,f415,f413,f411,f409,f407,f405,f403,f4921,f4802,f4801,f4800,f4715,f4922])).
fof(f4922,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f409,f224])).
fof(f224,plain,(
  ( ! [X24,X23,X22] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK16),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK15))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK19))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK24),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK23))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK27))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK30))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK33))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK34),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK35),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK36)))))))))) & ! [X22,X23,X24] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))))) & ! [X19,X20,X21] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X21))))))))) & ! [X15,X16,X17,X18] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X16),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X17),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X18))))))))) & ! [X11,X12,X13,X14] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X13),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X14))))))))) & ! [X7,X8,X9,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X9),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X10))))))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X4),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X6))))))))) & ! [X1,X2,X3] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X45,X46,X47,X48] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X45),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X46),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X48),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X47))))))))) | ? [X41,X42,X43,X44] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X41),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X42),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X44),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X43))))))))) | ? [X37,X38,X39,X40] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X37),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X38),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X40),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X39))))))))) | ? [X34,X35,X36] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X34),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X35),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X36))))))))) | ? [X31,X32,X33] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X33))))))))) | ? [X28,X29,X30] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X30))))))))) | ? [X25,X26,X27] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X27)))))))))) & ! [X22,X23,X24] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))))) & ! [X19,X20,X21] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X21))))))))) & ! [X15,X16,X17,X18] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X16),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X17),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X18))))))))) & ! [X11,X12,X13,X14] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X13),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X14))))))))) & ! [X7,X8,X9,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X9),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X10))))))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X4),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X6))))))))) & ! [X1,X2,X3] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3))))))))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X21,X22,X23,X24] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X24),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X23))))))))) | ? [X17,X18,X19,X20] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X19))))))))) | ? [X13,X14,X15,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X16),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X15))))))))) | ? [X10,X11,X12] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X10),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X11),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12))))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X9))))))))) | ? [X4,X5,X6] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X4),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X6))))))))) | ? [X1,X2,X3] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))))))) & ! [X46,X47,X48] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X46),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X47),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X48))))))))) & ! [X43,X44,X45] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X43),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X44),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X45))))))))) & ! [X39,X40,X41,X42] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X39),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X40),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X41),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X42))))))))) & ! [X35,X36,X37,X38] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X37),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X38))))))))) & ! [X31,X32,X33,X34] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X33),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X34))))))))) & ! [X28,X29,X30] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X30))))))))) & ! [X25,X26,X27] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X27))))))))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X21,X22,X23,X24] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X24),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X23))))))))) | ? [X17,X18,X19,X20] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X19))))))))) | ? [X13,X14,X15,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X16),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X15))))))))) | ? [X10,X11,X12] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X10),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X11),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12))))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X9))))))))) | ? [X4,X5,X6] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X4),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X6))))))))) | ? [X1,X2,X3] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))))))) & (! [X46,X47,X48] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X46),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X47),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X48))))))))) & ! [X43,X44,X45] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X43),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X44),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X45))))))))) & ! [X39,X40,X41,X42] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X39),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X40),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X41),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X42))))))))) & ! [X35,X36,X37,X38] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X37),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X38))))))))) & ! [X31,X32,X33,X34] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X33),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X34))))))))) & ! [X28,X29,X30] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X30))))))))) & ! [X25,X26,X27] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X27)))))))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X21,X22,X23,X24] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X24),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X23))))))))) | ? [X17,X18,X19,X20] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X19))))))))) | ? [X13,X14,X15,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X16),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X15))))))))) | ? [X10,X11,X12] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X10),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X11),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12))))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X9))))))))) | ? [X4,X5,X6] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X4),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X6))))))))) | ? [X1,X2,X3] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))))))) => (? [X46,X47,X48] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X46),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X47),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X48))))))))) | ? [X43,X44,X45] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X43),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X44),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X45))))))))) | ? [X39,X40,X41,X42] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X39),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X40),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X41),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X42))))))))) | ? [X35,X36,X37,X38] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X37),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X38))))))))) | ? [X31,X32,X33,X34] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X33),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X34))))))))) | ? [X28,X29,X30] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X30))))))))) | ? [X25,X26,X27] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X0) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X27)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7,X8,X9,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X9))))))))) | ? [X7,X8,X11,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X11))))))))) | ? [X7,X8,X12,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X12))))))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X15))))))))) | ? [X7,X8,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))))) | ? [X7,X8,X17] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X17))))))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15)))))))))) => (? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X15))))))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))))))))) | ? [X7,X8,X10,X9] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X9))))))))) | ? [X7,X8,X10,X11] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X11))))))))) | ? [X7,X8,X10,X12] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X12))))))))) | ? [X7,X8,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))))) | ? [X7,X8,X17] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X17)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7,X8,X9,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X9))))))))) | ? [X7,X8,X11,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X11))))))))) | ? [X7,X8,X12,X10] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X12))))))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X15))))))))) | ? [X7,X8,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))))) | ? [X7,X8,X17] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X17))))))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15)))))))))) => (? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X15))))))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))))))))) | ? [X7,X8,X10,X9] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X9))))))))) | ? [X7,X8,X10,X11] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X11))))))))) | ? [X7,X8,X10,X12] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X10),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X12))))))))) | ? [X7,X8,X16] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))))) | ? [X7,X8,X17] : s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),X6) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X17)))))))))))),
  file('thm.evalProps.evalProps_|49|3_prove_ltb','thm.evalProps.evalProps_|49|3_prove_ltb')).
fof(f4715,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f403,f226])).
fof(f226,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X16),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X17),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X18)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4800,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f411,f229])).
fof(f229,plain,(
  ( ! [X6,X4,X5] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X4),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X6)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4801,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f407,f228])).
fof(f228,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X7),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X8),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X9),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X10)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4802,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f405,f227])).
fof(f227,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X11),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',X13),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X14)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4921,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f415,f225])).
fof(f225,plain,(
  ( ! [X21,X19,X20] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X19),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X20),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X21)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f403,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK16),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK15))))))))) | $spl0),
  inference(cnf_transformation,[],[f403_D])).
fof(f403_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK16),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK15))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f405,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK19))))))))) | $spl2),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK19))))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f407,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK24),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK23))))))))) | $spl4),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK24),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK23))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f409,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK27))))))))) | $spl6),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK27))))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f411,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK30))))))))) | $spl8),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK30))))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f413,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK33))))))))) | $spl10),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK33))))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f415,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK34),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK35),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK36))))))))) | $spl12),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK34),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK35),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK36))))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f223,plain,(
  s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK34),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK35),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK36))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK31),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK32),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK33))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W64_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK30))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK26),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK27))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK21),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK22),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK24),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK23))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK18),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK20),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK19))))))))) | s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) = s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',sK13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',sK14),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size',sK16),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK15)))))))))),
  inference(cnf_transformation,[],[f138])).
fof(f4923,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f413,f230])).
fof(f230,plain,(
  ( ! [X2,X3,X1] : (s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),sK12) != s('type.pair.prod'('type.ast.shift','type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit'))),'const.pair.,_2'(s('type.ast.shift',X1),s('type.pair.prod'('type.num.num','type.pair.prod'('type.ast.word_size','type.ast.lit')),'const.pair.,_2'(s('type.num.num',X2),s('type.pair.prod'('type.ast.word_size','type.ast.lit'),'const.pair.,_2'(s('type.ast.word_size','const.ast.W8_0'),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))))))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.evalProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 396
% Passive clauses: 1559
% Generated clauses: 4694
% Final active clauses: 396
% Final passive clauses: 965
% Input formulas: 37
% Initial clauses: 175
% 
% Duplicate literals: 155
% Trivial inequalities: 29
% Fw subsumption resolutions: 313
% 
% Simple tautologies: 145
% Equational tautologies: 34
% Forward subsumptions: 2443
% 
% Binary resolution: 2908
% Factoring: 806
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 111
% Split components: 228
% SAT solver clauses: 224
% SAT solver unit clauses: 13
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 111
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 223
% TWLsolver calls for satisfiability: 187
% 
% Memory used [KB]: 2686
% Time elapsed: 0.207 s
% ------------------------------
% ------------------------------
% Success in time 0.21 s
