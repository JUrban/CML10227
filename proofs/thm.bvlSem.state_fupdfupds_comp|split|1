Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvlSem
% (139454)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 124
% Passive clauses: 2090
% Generated clauses: 14494
% Final active clauses: 97
% Final passive clauses: 1791
% Input formulas: 37
% Initial clauses: 40
% 
% Duplicate literals: 530
% Trivial inequalities: 56
% Fw subsumption resolutions: 500
% Fw demodulations: 1276
% Bw demodulations: 24
% 
% Simple tautologies: 75
% Equational tautologies: 21
% Forward subsumptions: 9694
% 
% Binary resolution: 99
% Forward superposition: 6612
% Backward superposition: 4947
% Self superposition: 269
% Equality factoring: 58
% Equality resolution: 5
% 
% Split clauses: 257
% Split components: 522
% SAT solver clauses: 379
% SAT solver unit clauses: 3
% SAT solver binary clauses: 68
% 
% Sat splits: 257
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 379
% TWLsolver calls for satisfiability: 97
% 
% Memory used [KB]: 22643
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvlSem
% (139472)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 75
% Passive clauses: 1161
% Generated clauses: 10987
% Final active clauses: 74
% Final passive clauses: 1057
% Input formulas: 37
% Initial clauses: 40
% 
% Duplicate literals: 498
% Trivial inequalities: 74
% Fw subsumption resolutions: 335
% Fw demodulations: 982
% Bw demodulations: 27
% Condensations: 875
% 
% Simple tautologies: 93
% Equational tautologies: 22
% Forward subsumptions: 5315
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 42
% Forward superposition: 3253
% Backward superposition: 3417
% Self superposition: 213
% Equality factoring: 60
% Equality resolution: 7
% 
% Split clauses: 63
% Split components: 126
% SAT solver clauses: 1627
% SAT solver unit clauses: 68
% SAT solver binary clauses: 58
% 
% Sat splits: 63
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1627
% TWLsolver calls for satisfiability: 135
% 
% Memory used [KB]: 23411
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvlSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvlSem
% SZS output start Proof for thm.bvlSem
fof(f10839,plain,(
  $false),
  inference(subsumption_resolution,[],[f10838,f116])).
fof(f116,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1',aHL_TRUTH)).
fof(f10838,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f10836,f644])).
fof(f644,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(equality_resolution,[],[f437])).
fof(f437,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) )),
  inference(condensation,[],[f436])).
fof(f436,plain,(
  ( ! [X10,X8,X11,X9] : (s(X8,X9) != s(X8,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f433,f159])).
fof(f159,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f117,f118])).
fof(f118,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1',aHL_BOOL_CASES)).
fof(f117,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1',aHL_FALSITY)).
fof(f433,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X11)) | s(X8,X9) != s(X8,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f134,f157])).
fof(f157,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f118,f118])).
fof(f134,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X35,X36,X37] : (p(s(bool,happ(s(fun(X35,bool),happ(s(fun(X35,fun(X35,bool)),'=_0'),s(X35,X36))),s(X35,X37)))) <=> s(X35,X36) = s(X35,X37))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1',arity_0_HL_EQ)).
fof(f10836,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.bvlSem.state'(sK1)),bool),happ(s(fun(fun(sK0,'type.bvlSem.state'(sK1)),fun(fun(sK0,'type.bvlSem.state'(sK1)),bool)),'=_0'),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2))))),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2))))))),
  inference(backward_demodulation,[],[f10784,f2168])).
fof(f2168,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.bvlSem.state'(sK1)),bool),happ(s(fun(fun(sK0,'type.bvlSem.state'(sK1)),fun(fun(sK0,'type.bvlSem.state'(sK1)),bool)),'=_0'),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4))),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2))))))),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2))))))),
  inference(unit_resulting_resolution,[],[f115,f133])).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f114])).
fof(f115,plain,(
  s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2))) != s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4))),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2)))))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2))) != s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK4))),s(fun(sK0,'type.bvlSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(sK1),'type.bvlSem.state'(sK1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),sK3))),s(fun(sK0,'type.bvlSem.state'(sK1)),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f105])).
fof(f105,plain,(
  ? [X0,X1,X2,X3,X4] : s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X3))))),s(fun(X0,'type.bvlSem.state'(X1)),X2))) != s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X4))),s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X3))),s(fun(X0,'type.bvlSem.state'(X1)),X2)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4] : s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X3))))),s(fun(X0,'type.bvlSem.state'(X1)),X2))) = s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X4))),s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X3))),s(fun(X0,'type.bvlSem.state'(X1)),X2)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X3))))),s(fun(X0,'type.bvlSem.state'(X1)),X2))) = s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X4))),s(fun(X0,'type.bvlSem.state'(X1)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X1),'type.bvlSem.state'(X1)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X3))),s(fun(X0,'type.bvlSem.state'(X1)),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X9))))),s(fun(X6,'type.bvlSem.state'(X7)),X8))) = s(fun(X6,'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X10))),s(fun(X6,'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X9))),s(fun(X6,'type.bvlSem.state'(X7)),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X9))))),s(fun(X6,'type.bvlSem.state'(X7)),X8))) = s(fun(X6,'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X10))),s(fun(X6,'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X9))),s(fun(X6,'type.bvlSem.state'(X7)),X8)))))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1','thm.bvlSem.state_fupdfupds_comp|split|1')).
fof(f10784,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X3,'type.bvlSem.state'(X0)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2))))),s(fun(X3,'type.bvlSem.state'(X0)),X4))) = s(fun(X3,'type.bvlSem.state'(X0)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1))),s(fun(X3,'type.bvlSem.state'(X0)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2))),s(fun(X3,'type.bvlSem.state'(X0)),X4)))))) )),
  inference(superposition,[],[f140,f120])).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1))))) = s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2))),s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1)))))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1))))) = s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2))),s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1)))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1,X2] : s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1))))) = s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X2))),s(fun('type.bvlSem.state'(X0),'type.bvlSem.state'(X0)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : ! [X9,X10] : s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X9))))) = s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.combin.o_2'(s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X10))),s(fun('type.bvlSem.state'(X7),'type.bvlSem.state'(X7)),'const.bvlSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.bvlSem.v')),'type.list.list'('type.option.option'('type.bvlSem.v'))),X9)))))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1','thm.bvlSem.state_fupdfupds_comp|split|0')).
fof(f140,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X14,X6,X18,X16] : ! [X10,X9,X8] : s(fun(X18,X14),'const.combin.o_2'(s(fun(X6,X14),X10),s(fun(X18,X6),'const.combin.o_2'(s(fun(X16,X6),X9),s(fun(X18,X16),X8))))) = s(fun(X18,X14),'const.combin.o_2'(s(fun(X16,X14),'const.combin.o_2'(s(fun(X6,X14),X10),s(fun(X16,X6),X9))),s(fun(X18,X16),X8)))),
  file('thm.bvlSem.state_fupdfupds_comp|split|1','thm.combin.o_ASSOC')).
% SZS output end Proof for thm.bvlSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 98
% Passive clauses: 1628
% Generated clauses: 11598
% Final active clauses: 57
% Final passive clauses: 678
% Input formulas: 37
% Initial clauses: 40
% 
% Duplicate literals: 440
% Trivial inequalities: 38
% Fw subsumption resolutions: 325
% Fw demodulations: 1868
% Bw demodulations: 697
% Condensations: 458
% Global subsumptions: 3
% 
% Simple tautologies: 98
% Equational tautologies: 87
% Forward subsumptions: 6506
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 28
% 
% Unit resulting resolution: 434
% Forward superposition: 3066
% Backward superposition: 2941
% Self superposition: 183
% Equality factoring: 54
% Equality resolution: 1
% 
% Split clauses: 33
% Split components: 66
% SAT solver clauses: 1763
% SAT solver unit clauses: 325
% SAT solver binary clauses: 644
% 
% Sat splits: 33
% Sat splitting refutations: 64
% 
% Memory used [KB]: 15351
% Time elapsed: 0.602 s
% ------------------------------
% ------------------------------
% Success in time 1.94 s
