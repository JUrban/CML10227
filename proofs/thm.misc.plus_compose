Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.misc
% (143440)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 58
% Passive clauses: 2011
% Generated clauses: 9712
% Final active clauses: 56
% Final passive clauses: 1830
% Input formulas: 16
% Initial clauses: 21
% 
% Duplicate literals: 587
% Trivial inequalities: 99
% Fw subsumption resolutions: 924
% Fw demodulations: 597
% 
% Simple tautologies: 190
% Equational tautologies: 116
% Forward subsumptions: 4082
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 25
% Forward superposition: 3538
% Backward superposition: 3100
% Self superposition: 446
% Equality factoring: 326
% Equality resolution: 18
% 
% Split clauses: 364
% Split components: 732
% SAT solver clauses: 1157
% SAT solver unit clauses: 235
% SAT solver binary clauses: 395
% 
% Sat splits: 364
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1153
% TWLsolver calls for satisfiability: 34
% 
% Memory used [KB]: 7036
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.misc
% (143469)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 55
% Passive clauses: 540
% Generated clauses: 7904
% Final active clauses: 51
% Final passive clauses: 482
% Input formulas: 16
% Initial clauses: 21
% 
% Duplicate literals: 801
% Trivial inequalities: 68
% Fw subsumption resolutions: 190
% Fw demodulations: 644
% Bw demodulations: 3
% Condensations: 1331
% 
% Simple tautologies: 110
% Equational tautologies: 64
% Forward subsumptions: 2941
% Fw demodulations to eq. taut.: 17
% 
% Binary resolution: 16
% Forward superposition: 2202
% Backward superposition: 1741
% Self superposition: 271
% Equality factoring: 174
% Equality resolution: 13
% 
% Split clauses: 63
% Split components: 127
% SAT solver clauses: 1253
% SAT solver unit clauses: 26
% SAT solver binary clauses: 82
% 
% Sat splits: 63
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1253
% TWLsolver calls for satisfiability: 84
% 
% Memory used [KB]: 12025
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f25207,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f25206])).
fof(f25206,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f25205,f61])).
fof(f61,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X17,X18] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X17))),s('type.num.num',X18)))),
  file('thm.misc.plus_compose','ARITY_1_2_const.arithmetic.+')).
fof(f25205,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f25204,f1182])).
fof(f1182,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',happ(s(fun(X30,'type.num.num'),X31),s(X30,X32))))) = s('type.num.num','const.combin.o_3'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X29))),s(fun(X30,'type.num.num'),X31),s(X30,X32)))) )),
  inference(superposition,[],[f68,f61])).
fof(f68,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X13,X9,X16] : ! [X14,X15,X11] : s(X13,'const.combin.o_3'(s(fun(X9,X13),X14),s(fun(X16,X9),X15),s(X16,X11))) = s(X13,happ(s(fun(X9,X13),X14),s(X9,happ(s(fun(X16,X9),X15),s(X16,X11)))))),
  file('thm.misc.plus_compose','thm.combin.o_THM')).
fof(f25204,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.combin.o_3'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f25202,f69])).
fof(f69,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X13,X16,X9] : ! [X17,X18,X19] : s(X13,'const.combin.o_3'(s(fun(X16,X13),X17),s(fun(X9,X16),X18),s(X9,X19))) = s(X13,happ(s(fun(X9,X13),'const.combin.o_2'(s(fun(X16,X13),X17),s(fun(X9,X16),X18))),s(X9,X19)))),
  file('thm.misc.plus_compose','ARITY_2_3_const.combin.o')).
fof(f25202,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1))))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f2189,f66])).
fof(f66,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7,X6,X8] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.misc.plus_compose','thm.arithmetic.EQ_MONO_ADD_EQ')).
fof(f2189,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))))) != s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1))))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num'))))),
  inference(forward_demodulation,[],[f2188,f65])).
fof(f65,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X6,X8] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))),
  file('thm.misc.plus_compose','thm.arithmetic.ADD_ASSOC')).
fof(f2188,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))) != s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1))))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num'))))),
  inference(forward_demodulation,[],[f2163,f61])).
fof(f2163,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num')))) != s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1))))),s('type.num.num',sK3('const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))),'type.num.num','type.num.num'))))),
  inference(unit_resulting_resolution,[],[f71,f64])).
fof(f64,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,sK3(X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK3(X3,X2,X1,X0)))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X5] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) & (s(X0,happ(s(fun(X1,X0),X2),s(X1,sK3(X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK3(X3,X2,X1,X0)))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X5] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) & (? [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(rectify,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3] : ((s(fun(X1,X0),X2) != s(fun(X1,X0),X3) | ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4)))) & (? [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))) | s(fun(X1,X0),X2) = s(fun(X1,X0),X3)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2,X3] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) <=> ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ! [X2,X3] : (s(fun(X1,X0),X2) = s(fun(X1,X0),X3) <=> ! [X4] : s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X4))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X13,X9] : ! [X14,X15] : (s(fun(X9,X13),X14) = s(fun(X9,X13),X15) <=> ! [X11] : s(X13,happ(s(fun(X9,X13),X14),s(X9,X11))) = s(X13,happ(s(fun(X9,X13),X15),s(X9,X11))))),
  file('thm.misc.plus_compose','thm.bool.FUN_EQ_THM')).
fof(f71,plain,(
  s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) != s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))))),
  inference(backward_demodulation,[],[f61,f49])).
fof(f49,plain,(
  s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s('type.num.num',sK1))))) != s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s('type.num.num',sK1))))) != s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f37])).
fof(f37,plain,(
  ? [X0,X1] : s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1))))) != s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1] : s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1))))) = s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X7)))))),
  file('thm.misc.plus_compose','thm.misc.plus_compose')).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 110
% Passive clauses: 2212
% Generated clauses: 27247
% Final active clauses: 72
% Final passive clauses: 925
% Input formulas: 16
% Initial clauses: 21
% 
% Duplicate literals: 2638
% Trivial inequalities: 173
% Fw subsumption resolutions: 1097
% Fw demodulations: 1345
% Bw demodulations: 952
% Condensations: 4270
% Global subsumptions: 7
% 
% Simple tautologies: 327
% Equational tautologies: 710
% Forward subsumptions: 14459
% Fw demodulations to eq. taut.: 62
% Bw demodulations to eq. taut.: 69
% 
% Unit resulting resolution: 1285
% Forward superposition: 7188
% Backward superposition: 5215
% Self superposition: 424
% Equality factoring: 270
% Equality resolution: 21
% 
% Split clauses: 84
% Split components: 169
% SAT solver clauses: 2425
% SAT solver unit clauses: 91
% SAT solver binary clauses: 435
% 
% Sat splits: 84
% Sat splitting refutations: 36
% 
% Memory used [KB]: 16119
% Time elapsed: 2.826 s
% ------------------------------
% ------------------------------
% Success in time 4.16 s
