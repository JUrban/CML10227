Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (98805)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 188
% Passive clauses: 3515
% Generated clauses: 25605
% Final active clauses: 132
% Final passive clauses: 3097
% Input formulas: 132
% Initial clauses: 143
% 
% Duplicate literals: 891
% Trivial inequalities: 168
% Fw subsumption resolutions: 2390
% Fw demodulations: 4619
% Bw demodulations: 49
% 
% Simple tautologies: 209
% Equational tautologies: 49
% Forward subsumptions: 12869
% 
% Binary resolution: 631
% Factoring: 3
% Forward superposition: 9774
% Backward superposition: 6495
% Self superposition: 198
% Equality factoring: 96
% Equality resolution: 19
% 
% Split clauses: 293
% Split components: 586
% SAT solver clauses: 907
% SAT solver unit clauses: 43
% SAT solver binary clauses: 155
% 
% Sat splits: 293
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 907
% TWLsolver calls for satisfiability: 171
% 
% Memory used [KB]: 15991
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% (98831)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 123
% Passive clauses: 905
% Generated clauses: 14328
% Final active clauses: 97
% Final passive clauses: 645
% Input formulas: 132
% Initial clauses: 143
% 
% Duplicate literals: 602
% Trivial inequalities: 154
% Fw subsumption resolutions: 923
% Fw demodulations: 1622
% Bw demodulations: 156
% Condensations: 1337
% 
% Simple tautologies: 161
% Equational tautologies: 44
% Forward subsumptions: 7050
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 281
% Factoring: 1
% Forward superposition: 4112
% Backward superposition: 3766
% Self superposition: 179
% Equality factoring: 98
% Equality resolution: 12
% 
% Split clauses: 99
% Split components: 198
% SAT solver clauses: 1624
% SAT solver unit clauses: 259
% SAT solver binary clauses: 48
% 
% Sat splits: 99
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1624
% TWLsolver calls for satisfiability: 329
% 
% Memory used [KB]: 17270
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f46465,plain,(
  $false),
  inference(subsumption_resolution,[],[f46464,f407])).
fof(f407,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f42])).
fof(f42,axiom,(
  p(s(bool,'T_0'))),
  file('thm.wordSem.state_fupdfupds_comp|split|5','thm.bool.TRUTH')).
fof(f46464,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f46462,f4441])).
fof(f4441,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(condensation,[],[f4440])).
fof(f4440,plain,(
  ( ! [X10,X8,X9] : (s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X9))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f4363,f555])).
fof(f555,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f409,f410])).
fof(f410,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.wordSem.state_fupdfupds_comp|split|5',aHL_BOOL_CASES)).
fof(f409,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordSem.state_fupdfupds_comp|split|5',aHL_FALSITY)).
fof(f4363,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X10)) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X9))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f4224,f553])).
fof(f553,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f410,f410])).
fof(f4224,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(backward_demodulation,[],[f4121,f1570])).
fof(f1570,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'const.combin.o_3'(s(fun(X0,fun(X0,bool)),'=_0'),s(fun(X0,X0),'_i_0_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f1523,f489])).
fof(f489,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f265])).
fof(f265,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7,X15] : ! [X11,X10,X16] : s(X6,'const.combin.o_3'(s(fun(X7,X6),X11),s(fun(X15,X7),X10),s(X15,X16))) = s(X6,happ(s(fun(X7,X6),X11),s(X7,happ(s(fun(X15,X7),X10),s(X15,X16)))))),
  file('thm.wordSem.state_fupdfupds_comp|split|5','thm.combin.o_THM')).
fof(f1523,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1))))),s(X0,X1))))) )),
  inference(unit_resulting_resolution,[],[f411,f487])).
fof(f487,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f405])).
fof(f405,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X47,X48,X49] : (p(s(bool,happ(s(fun(X47,bool),happ(s(fun(X47,fun(X47,bool)),'=_0'),s(X47,X48))),s(X47,X49)))) <=> s(X47,X48) = s(X47,X49))),
  file('thm.wordSem.state_fupdfupds_comp|split|5',arity_0_HL_EQ)).
fof(f411,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X42] : ! [X44] : s(X42,X44) = s(X42,happ(s(fun(X42,X42),'_i_0_0'),s(X42,X44)))),
  file('thm.wordSem.state_fupdfupds_comp|split|5','_i0_ax')).
fof(f4121,plain,(
  ( ! [X76,X74,X75,X73] : (s(X75,happ(s(fun(X73,X75),X76),s(X73,X74))) = s(X75,'const.combin.o_3'(s(fun(X73,X75),X76),s(fun(X73,X73),'_i_0_0'),s(X73,X74)))) )),
  inference(superposition,[],[f489,f411])).
fof(f46462,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool),happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool)),'=_0'),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5),s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5),s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))))),
  inference(backward_demodulation,[],[f46395,f15032])).
fof(f15032,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool),happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool)),'=_0'),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5),s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))))),
  inference(unit_resulting_resolution,[],[f406,f486])).
fof(f486,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f405])).
fof(f406,plain,(
  s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5),s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))) != s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3)))))),
  inference(cnf_transformation,[],[f391])).
fof(f391,plain,(
  s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5),s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))) != s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK5))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),sK4))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f385])).
fof(f385,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X5),s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X4))))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3))) != s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X5))),s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X4))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3)))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X5),s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X4))))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3))) = s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X5))),s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X4))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X5),s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X4))))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3))) = s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X5))),s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X4))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X11),s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X10))))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9))) = s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X11))),s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X10))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X11),s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X10))))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9))) = s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X11))),s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X10))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9)))))),
  file('thm.wordSem.state_fupdfupds_comp|split|5','thm.wordSem.state_fupdfupds_comp|split|5')).
fof(f46395,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X4,'type.wordSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.wordSem.state'(X0,X1),'type.wordSem.state'(X0,X1)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X2),s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3))))),s(fun(X4,'type.wordSem.state'(X0,X1)),X5))) = s(fun(X4,'type.wordSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.wordSem.state'(X0,X1),'type.wordSem.state'(X0,X1)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X2))),s(fun(X4,'type.wordSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.wordSem.state'(X0,X1),'type.wordSem.state'(X0,X1)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3))),s(fun(X4,'type.wordSem.state'(X0,X1)),X5)))))) )),
  inference(superposition,[],[f495,f444])).
fof(f444,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X3),s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2))))) = s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X3))),s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2)))))) )),
  inference(cnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0,X1,X2,X3] : s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X3),s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2))))) = s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X3))),s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2)))))),
  inference(flattening,[],[f179])).
fof(f179,plain,(
  ! [X0,X1] : ! [X2,X3] : s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X3),s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2))))) = s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X3))),s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X7] : ! [X10,X11] : s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.o_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X11),s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X10))))) = s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X11))),s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_stack_fupd_1'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),X10)))))),
  file('thm.wordSem.state_fupdfupds_comp|split|5','thm.wordSem.state_fupdfupds_comp|split|4')).
fof(f495,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f277])).
fof(f277,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X7,X18,X15] : ! [X11,X10,X9] : s(fun(X18,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X18,X7),'const.combin.o_2'(s(fun(X15,X7),X10),s(fun(X18,X15),X9))))) = s(fun(X18,X6),'const.combin.o_2'(s(fun(X15,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X15,X7),X10))),s(fun(X18,X15),X9)))),
  file('thm.wordSem.state_fupdfupds_comp|split|5','thm.combin.o_ASSOC')).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 290
% Passive clauses: 4763
% Generated clauses: 50287
% Final active clauses: 110
% Final passive clauses: 1492
% Input formulas: 132
% Initial clauses: 143
% 
% Duplicate literals: 1366
% Trivial inequalities: 140
% Fw subsumption resolutions: 1665
% Fw demodulations: 8230
% Bw demodulations: 2758
% Condensations: 2134
% Global subsumptions: 337
% 
% Simple tautologies: 204
% Equational tautologies: 240
% Forward subsumptions: 30672
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 88
% 
% Unit resulting resolution: 1446
% Factoring: 1
% Forward superposition: 14436
% Backward superposition: 12567
% Self superposition: 372
% Equality factoring: 150
% Equality resolution: 8
% 
% Split clauses: 55
% Split components: 110
% SAT solver clauses: 5635
% SAT solver unit clauses: 1270
% SAT solver binary clauses: 2482
% 
% Sat splits: 55
% Sat splitting refutations: 423
% 
% Memory used [KB]: 49252
% Time elapsed: 2.433 s
% ------------------------------
% ------------------------------
% Success in time 3.79 s
