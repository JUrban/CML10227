Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.bvl_to_bviProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvl_to_bviProof
% SZS output start Proof for thm.bvl_to_bviProof
fof(f644,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f642,f69,f72,f70,f82,f332,f337,f335,f378])).
fof(f378,plain,(
  $false | ($spl3 | $spl4)),
  inference(trivial_inequality_removal,[],[f373])).
fof(f373,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl4)),
  inference(superposition,[],[f72,f335])).
fof(f335,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(cnf_transformation,[],[f335_D])).
fof(f335_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f337,plain,(
  s(bool,'F_0') = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))) | $spl6),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  s(bool,'F_0') = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f332,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(duplicate_literal_removal,[],[f290])).
fof(f290,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f256,f51])).
fof(f51,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvl_to_bviProof.bv_ok_Unit',aHL_BOOL_CASES)).
fof(f256,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f174,f46])).
fof(f46,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bvl_to_bviProof.bv_ok_Unit',aHL_TRUTH)).
fof(f174,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f45,f63])).
fof(f63,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f51,f51])).
fof(f45,plain,(
  ~p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',sK0),sK1),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f39])).
fof(f39,plain,(
  ? [X0,X1] : ~p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X0),X1),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X0),X1),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ~! [X0] : ! [X1] : p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X0),X1),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X6),X7),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : p(s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X6),X7),s('type.bvlSem.v','const.bvlSem.Unit_0'))))),
  file('thm.bvl_to_bviProof.bv_ok_Unit','thm.bvl_to_bviProof.bv_ok_Unit')).
fof(f82,plain,(
  $false | $spl0),
  inference(resolution,[],[f79,f46])).
fof(f79,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f50,f70])).
fof(f50,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvl_to_bviProof.bv_ok_Unit',aHL_FALSITY)).
fof(f70,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f72,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f72_D])).
fof(f72_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f69,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f51])).
fof(f642,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f619,f72])).
fof(f619,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl6),
  inference(backward_demodulation,[],[f600,f337])).
fof(f600,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X4),X5),s('type.bvlSem.v','const.bvlSem.Unit_0')))) )),
  inference(superposition,[],[f594,f56])).
fof(f56,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X0),X1),s('type.bvlSem.v',X2))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X1))),s('type.bvlSem.v',X2)))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X0),X1),s('type.bvlSem.v',X2))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X1))),s('type.bvlSem.v',X2)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X0),X1),s('type.bvlSem.v',X2))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X1))),s('type.bvlSem.v',X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X17,X18] : s(bool,'const.bvl_to_bviProof.bv_ok_2'(s('type.finite_map.fmap'('type.num.num',X6),X17),s('type.bvlSem.v',X18))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X6),X17))),s('type.bvlSem.v',X18)))),
  file('thm.bvl_to_bviProof.bv_ok_Unit','ARITY_1_2_const.bvl_to_bviProof.bv_ok')).
fof(f594,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X1))),s('type.bvlSem.v','const.bvlSem.Unit_0')))) )),
  inference(forward_demodulation,[],[f573,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X14] : s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X14),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.bvl_to_bviProof.bv_ok_Unit','thm.list.EVERY_DEF|split|0')).
fof(f573,plain,(
  ( ! [X0,X1] : (s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X1))),s('type.bvlSem.v','const.bvlSem.Unit_0'))) = s(bool,'const.list.EVERY_2'(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X1))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))) )),
  inference(superposition,[],[f58,f49])).
fof(f49,plain,(
  s('type.bvlSem.v','const.bvlSem.Unit_0') = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.dec_to_exh.tuple_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  s('type.bvlSem.v','const.bvlSem.Unit_0') = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.dec_to_exh.tuple_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  file('thm.bvl_to_bviProof.bv_ok_Unit','thm.bvlSem.Unit_def')).
fof(f58,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.list.EVERY_2'(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X3))),s('type.list.list'('type.bvlSem.v'),X1))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X3))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X1)))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.list.EVERY_2'(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X3))),s('type.list.list'('type.bvlSem.v'),X1))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X3))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X1)))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.list.EVERY_2'(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X3))),s('type.list.list'('type.bvlSem.v'),X1))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X0),X3))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X9,X10,X7] : s(bool,'const.list.EVERY_2'(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X6),X7))),s('type.list.list'('type.bvlSem.v'),X9))) = s(bool,happ(s(fun('type.bvlSem.v',bool),'const.bvl_to_bviProof.bv_ok_1'(s('type.finite_map.fmap'('type.num.num',X6),X7))),s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.bvlSem.v'),X9)))))),
  file('thm.bvl_to_bviProof.bv_ok_Unit','thm.bvl_to_bviProof.bv_ok_def|split|1')).
% SZS output end Proof for thm.bvl_to_bviProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 32
% Passive clauses: 119
% Generated clauses: 581
% Final active clauses: 24
% Final passive clauses: 78
% Input formulas: 16
% Initial clauses: 18
% 
% Duplicate literals: 89
% Trivial inequalities: 6
% Fw subsumption resolutions: 9
% Fw demodulations: 34
% Bw demodulations: 5
% 
% Simple tautologies: 20
% Equational tautologies: 15
% Forward subsumptions: 281
% 
% Binary resolution: 9
% Forward superposition: 196
% Backward superposition: 151
% Self superposition: 28
% Equality factoring: 28
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 13
% SAT solver unit clauses: 6
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 1
% 
% Sat splits: 4
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 10
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 1023
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.03 s
