Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.conSem
% (79422)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 197
% Passive clauses: 2529
% Generated clauses: 22973
% Final active clauses: 158
% Final passive clauses: 1971
% Input formulas: 47
% Initial clauses: 93
% 
% Duplicate literals: 745
% Trivial inequalities: 650
% Fw subsumption resolutions: 2224
% Fw demodulations: 2242
% Bw demodulations: 30
% 
% Simple tautologies: 462
% Equational tautologies: 30
% Forward subsumptions: 13386
% 
% Binary resolution: 176
% Forward superposition: 8652
% Backward superposition: 7671
% Self superposition: 211
% Equality factoring: 56
% Equality resolution: 58
% 
% Split clauses: 433
% Split components: 881
% SAT solver clauses: 883
% SAT solver unit clauses: 19
% SAT solver binary clauses: 172
% 
% Sat splits: 433
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 880
% TWLsolver calls for satisfiability: 115
% 
% Memory used [KB]: 15223
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.conSem
% (79464)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 90
% Passive clauses: 301
% Generated clauses: 9560
% Final active clauses: 79
% Final passive clauses: 191
% Input formulas: 47
% Initial clauses: 93
% 
% Duplicate literals: 356
% Trivial inequalities: 177
% Fw subsumption resolutions: 762
% Fw demodulations: 1050
% Bw demodulations: 23
% Condensations: 811
% Global subsumptions: 8
% 
% Simple tautologies: 145
% Equational tautologies: 26
% Forward subsumptions: 5215
% 
% Binary resolution: 25
% Forward superposition: 3171
% Backward superposition: 2896
% Self superposition: 186
% Equality factoring: 49
% Equality resolution: 24
% 
% Split clauses: 116
% Split components: 235
% SAT solver clauses: 816
% SAT solver unit clauses: 118
% SAT solver binary clauses: 48
% SAT solver learnt clauses: 16
% 
% Sat splits: 116
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 784
% TWLsolver calls for satisfiability: 399
% 
% Memory used [KB]: 8571
% Time elapsed: 0.710 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.conSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.conSem
% SZS output start Proof for thm.conSem
fof(f328895,plain,(
  $false),
  inference(subsumption_resolution,[],[f328894,f52805])).
fof(f52805,plain,(
  s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3)))))),
  inference(unit_resulting_resolution,[],[f171,f40579,f40580,f40581,f236])).
fof(f236,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))) | s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) | s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2] : ((s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))))) & (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))) | s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2)))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ((s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))))) & ((s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))) | s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2)))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : (s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2) <=> (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0] : ! [X1,X2] : (s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2) <=> (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X20] : ! [X23,X24] : (s('type.conSem.state'(X20),X23) = s('type.conSem.state'(X20),X24) <=> (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X20),X23))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X20),X24))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X20),X23))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X20),X24))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X20),X23))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X20),X24))) & s('type.ffi.ffi_state'(X20),'const.conSem.state_ffi_1'(s('type.conSem.state'(X20),X23))) = s('type.ffi.ffi_state'(X20),'const.conSem.state_ffi_1'(s('type.conSem.state'(X20),X24)))))),
  file('thm.conSem.check_clock_id','thm.conSem.state_component_equality')).
fof(f40581,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.check_clock_2'(s('type.conSem.state'(X0),X1),s('type.conSem.state'(X2),X3)))))) )),
  inference(forward_demodulation,[],[f39855,f222])).
fof(f222,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X20] : ! [X9,X21] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X20),X9))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X20),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X20),X9)))))),
  file('thm.conSem.check_clock_id','thm.conSem.conSem_|49||48|2_prove_ltb')).
fof(f39855,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.check_clock_2'(s('type.conSem.state'(X0),X1),s('type.conSem.state'(X2),X3))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))))))),s('type.conSem.state'(X0),X1)))))) )),
  inference(unit_resulting_resolution,[],[f247,f234])).
fof(f234,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f164])).
fof(f247,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.conSem.state'(X1),'const.conSem.check_clock_2'(s('type.conSem.state'(X1),X2),s('type.conSem.state'(X0),X3))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3))))))),s('type.conSem.state'(X1),X2)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2,X3] : s('type.conSem.state'(X1),'const.conSem.check_clock_2'(s('type.conSem.state'(X1),X2),s('type.conSem.state'(X0),X3))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3))))))),s('type.conSem.state'(X1),X2)))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.conSem.state'(X1),'const.conSem.check_clock_2'(s('type.conSem.state'(X1),X2),s('type.conSem.state'(X0),X3))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3))))))),s('type.conSem.state'(X1),X2)))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6,X7] : ! [X8,X9] : s('type.conSem.state'(X7),'const.conSem.check_clock_2'(s('type.conSem.state'(X7),X8),s('type.conSem.state'(X6),X9))) = s('type.conSem.state'(X7),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X7),X8))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X9))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X7),X8))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X9))))))),s('type.conSem.state'(X7),X8)))),
  file('thm.conSem.check_clock_id','thm.conSem.check_clock_def')).
fof(f40580,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.check_clock_2'(s('type.conSem.state'(X0),X1),s('type.conSem.state'(X2),X3)))))) )),
  inference(forward_demodulation,[],[f39856,f219])).
fof(f219,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X20] : ! [X9,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X20),X9))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X20),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X20),X9)))))),
  file('thm.conSem.check_clock_id','thm.conSem.conSem_99_prove_ltb')).
fof(f39856,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.check_clock_2'(s('type.conSem.state'(X0),X1),s('type.conSem.state'(X2),X3))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))))))),s('type.conSem.state'(X0),X1)))))) )),
  inference(unit_resulting_resolution,[],[f247,f233])).
fof(f233,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f164])).
fof(f40579,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.check_clock_2'(s('type.conSem.state'(X0),X1),s('type.conSem.state'(X2),X3)))))) )),
  inference(forward_demodulation,[],[f39857,f218])).
fof(f218,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X20] : ! [X9,X21] : s('type.ffi.ffi_state'(X20),'const.conSem.state_ffi_1'(s('type.conSem.state'(X20),X9))) = s('type.ffi.ffi_state'(X20),'const.conSem.state_ffi_1'(s('type.conSem.state'(X20),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X20),X9)))))),
  file('thm.conSem.check_clock_id','thm.conSem.conSem_|49||48|5_prove_ltb')).
fof(f39857,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.check_clock_2'(s('type.conSem.state'(X0),X1),s('type.conSem.state'(X2),X3))))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))))))),s('type.conSem.state'(X0),X1)))))) )),
  inference(unit_resulting_resolution,[],[f247,f235])).
fof(f235,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f164])).
fof(f171,plain,(
  s('type.conSem.state'(sK1),sK2) != s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3)))),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK0),sK3)))))) & s('type.conSem.state'(sK1),sK2) != s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f123])).
fof(f123,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3)))))) & s('type.conSem.state'(X1),X2) != s('type.conSem.state'(X1),'const.conSem.check_clock_2'(s('type.conSem.state'(X1),X2),s('type.conSem.state'(X0),X3))))),
  inference(ennf_transformation,[],[f50])).
fof(f50,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3)))))) => s('type.conSem.state'(X1),X2) = s('type.conSem.state'(X1),'const.conSem.check_clock_2'(s('type.conSem.state'(X1),X2),s('type.conSem.state'(X0),X3))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X3)))))) => s('type.conSem.state'(X1),X2) = s('type.conSem.state'(X1),'const.conSem.check_clock_2'(s('type.conSem.state'(X1),X2),s('type.conSem.state'(X0),X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X7),X8))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X9)))))) => s('type.conSem.state'(X7),X8) = s('type.conSem.state'(X7),'const.conSem.check_clock_2'(s('type.conSem.state'(X7),X8),s('type.conSem.state'(X6),X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X7),X8))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X9)))))) => s('type.conSem.state'(X7),X8) = s('type.conSem.state'(X7),'const.conSem.check_clock_2'(s('type.conSem.state'(X7),X8),s('type.conSem.state'(X6),X9))))),
  file('thm.conSem.check_clock_id','thm.conSem.check_clock_id')).
fof(f328894,plain,(
  s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3)))))),
  inference(forward_demodulation,[],[f326392,f281])).
fof(f281,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f242,f241])).
fof(f241,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7] : ! [X11,X12] : s(X7,X11) = s(X7,'const.combin.K_2'(s(X7,X11),s(X6,X12)))),
  file('thm.conSem.check_clock_id','thm.combin.K_THM')).
fof(f242,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X7,X6] : ! [X25,X26] : s(X7,'const.combin.K_2'(s(X7,X25),s(X6,X26))) = s(X7,happ(s(fun(X6,X7),'const.combin.K_1'(s(X7,X25))),s(X6,X26)))),
  file('thm.conSem.check_clock_id','ARITY_1_2_const.combin.K')).
fof(f326392,plain,(
  s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2)))))),
  inference(superposition,[],[f227,f41022])).
fof(f41022,plain,(
  s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))))),s('type.conSem.state'(sK1),sK2)))),
  inference(forward_demodulation,[],[f40068,f216])).
fof(f216,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X7] : ! [X13,X14] : s(X7,X13) = s(X7,'const.bool.COND_3'(s(bool,'T_0'),s(X7,X13),s(X7,X14)))),
  file('thm.conSem.check_clock_id','thm.bool.COND_CLAUSES|split|0')).
fof(f40068,plain,(
  s('type.conSem.state'(sK1),'const.conSem.check_clock_2'(s('type.conSem.state'(sK1),sK2),s('type.conSem.state'(sK0),sK3))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK0),sK3))))))),s('type.conSem.state'(sK1),sK2)))),
  inference(superposition,[],[f247,f284])).
fof(f284,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK0),sK3)))))),
  inference(unit_resulting_resolution,[],[f170,f177])).
fof(f177,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.conSem.check_clock_id','thm.bool.EQ_CLAUSES|split|0')).
fof(f170,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),sK2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK0),sK3))))))),
  inference(cnf_transformation,[],[f136])).
fof(f227,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X20] : ! [X9,X21] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X21),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X20),X9))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X20),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X20),X9)))))),
  file('thm.conSem.check_clock_id','thm.conSem.conSem_|49||48|8_prove_ltb')).
% SZS output end Proof for thm.conSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 200
% Passive clauses: 1173
% Generated clauses: 328728
% Final active clauses: 126
% Final passive clauses: 488
% Input formulas: 47
% Initial clauses: 93
% Discarded non-redundant clauses: 9222
% 
% Duplicate literals: 706
% Trivial inequalities: 355
% Fw subsumption resolutions: 2125
% Fw demodulations: 214168
% Bw demodulations: 238
% Condensations: 1962
% Global subsumptions: 13
% 
% Simple tautologies: 366
% Equational tautologies: 115
% Forward subsumptions: 60578
% Fw demodulations to eq. taut.: 37920
% 
% Unit resulting resolution: 90675
% Forward superposition: 9830
% Backward superposition: 7925
% Self superposition: 267
% Equality factoring: 38
% Equality resolution: 64
% 
% Split clauses: 58
% Split components: 123
% SAT solver clauses: 1335
% SAT solver unit clauses: 130
% SAT solver binary clauses: 174
% 
% Sat splits: 58
% Sat splitting refutations: 31
% 
% Memory used [KB]: 115776
% Time elapsed: 9.173 s
% ------------------------------
% ------------------------------
% Success in time 10.53 s
