Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.dec_to_exhProof
% (25173)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1157
% Passive clauses: 7191
% Generated clauses: 22148
% Final active clauses: 1149
% Final passive clauses: 5601
% Input formulas: 69
% Initial clauses: 424
% 
% Duplicate literals: 299
% Trivial inequalities: 21
% Fw subsumption resolutions: 2007
% Fw demodulations: 1933
% Bw demodulations: 4
% 
% Simple tautologies: 313
% Equational tautologies: 45
% Forward subsumptions: 9797
% 
% Binary resolution: 8654
% Factoring: 1497
% Forward superposition: 2996
% Backward superposition: 4013
% Self superposition: 39
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 694
% Split components: 1390
% SAT solver clauses: 971
% SAT solver unit clauses: 11
% SAT solver binary clauses: 68
% 
% Sat splits: 694
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 971
% TWLsolver calls for satisfiability: 514
% 
% Memory used [KB]: 12281
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.dec_to_exhProof
% (25189)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 416
% Passive clauses: 2046
% Generated clauses: 7600
% Final active clauses: 412
% Final passive clauses: 1625
% Input formulas: 69
% Initial clauses: 424
% 
% Duplicate literals: 87
% Trivial inequalities: 4
% Fw subsumption resolutions: 436
% Fw demodulations: 315
% Bw demodulations: 8
% Condensations: 108
% Global subsumptions: 20
% 
% Simple tautologies: 218
% Equational tautologies: 9
% Forward subsumptions: 2087
% 
% Binary resolution: 2157
% Factoring: 306
% Forward superposition: 810
% Backward superposition: 804
% Self superposition: 39
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 2672
% SAT solver unit clauses: 406
% SAT solver binary clauses: 135
% SAT solver learnt clauses: 40
% SAT solver learnt literals: 70
% 
% Sat splits: 10
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2592
% TWLsolver calls for satisfiability: 21185
% 
% Memory used [KB]: 17654
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.dec_to_exhProof
% (25207)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1523
% Passive clauses: 9437
% Generated clauses: 152831
% Final active clauses: 1150
% Final passive clauses: 2795
% Input formulas: 69
% Initial clauses: 424
% Discarded non-redundant clauses: 6998
% 
% Duplicate literals: 218
% Trivial inequalities: 44
% Fw subsumption resolutions: 3075
% Fw demodulations: 73197
% Bw demodulations: 2963
% Condensations: 274
% Global subsumptions: 591
% 
% Simple tautologies: 131
% Equational tautologies: 109
% Forward subsumptions: 44424
% Fw demodulations to eq. taut.: 13678
% Bw demodulations to eq. taut.: 17
% 
% Unit resulting resolution: 59751
% Factoring: 1
% Forward superposition: 5745
% Backward superposition: 4584
% Self superposition: 108
% Equality factoring: 26
% Equality resolution: 43
% 
% Split clauses: 60
% Split components: 125
% SAT solver clauses: 12622
% SAT solver unit clauses: 3454
% SAT solver binary clauses: 4281
% 
% Sat splits: 60
% Sat splitting refutations: 2471
% 
% Memory used [KB]: 119614
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.dec_to_exhProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.dec_to_exhProof
% SZS output start Proof for thm.dec_to_exhProof
fof(f12468,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f12466])).
fof(f12466,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),'const.list.NIL_0')),
  inference(resolution,[],[f12451,f654])).
fof(f654,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP14(X0,X1,X2,X3,X4) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),X3) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X4)) )),
  inference(cnf_transformation,[],[f330])).
fof(f330,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP14(X0,X1,X2,X3,X4) | (s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X4) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X3)) | (s('type.list.list'('type.conSem.v'),X4) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK48(X4,X3,X2,X1,X0)),s('type.list.list'('type.conSem.v'),sK50(X4,X3,X2,X1,X0)))) & s('type.list.list'('type.exhSem.v'),X3) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK49(X4,X3,X2,X1,X0)),s('type.list.list'('type.exhSem.v'),sK51(X4,X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X2),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.conSem.v',sK48(X4,X3,X2,X1,X0)))),s('type.exhSem.v',sK49(X4,X3,X2,X1,X0))))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK50(X4,X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK51(X4,X3,X2,X1,X0))))))) & (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X4) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),X3)) & ! [X5,X6,X7,X8] : (s('type.list.list'('type.conSem.v'),X4) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X7))) | s('type.list.list'('type.exhSem.v'),X3) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X6),s('type.list.list'('type.exhSem.v'),X8))) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X2),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.conSem.v',X5))),s('type.exhSem.v',X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X7))),s('type.list.list'('type.exhSem.v'),X8)))))) | sP14(X0,X1,X2,X3,X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK48,sK49,sK50,sK51])],[f329])).
fof(f329,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP14(X0,X1,X2,X3,X4) | (s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X4) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X3)) | ? [X9,X10,X11,X12] : (s('type.list.list'('type.conSem.v'),X4) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X9),s('type.list.list'('type.conSem.v'),X11))) & s('type.list.list'('type.exhSem.v'),X3) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),X12))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X2),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.conSem.v',X9))),s('type.exhSem.v',X10)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X11))),s('type.list.list'('type.exhSem.v'),X12)))))) & (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X4) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),X3)) & ! [X5,X6,X7,X8] : (s('type.list.list'('type.conSem.v'),X4) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X7))) | s('type.list.list'('type.exhSem.v'),X3) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X6),s('type.list.list'('type.exhSem.v'),X8))) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X2),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.conSem.v',X5))),s('type.exhSem.v',X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X7))),s('type.list.list'('type.exhSem.v'),X8)))))) | sP14(X0,X1,X2,X3,X4)))),
  inference(rectify,[],[f328])).
fof(f328,plain,(
  ! [X4,X14,X3,X16,X15] : ((~sP14(X4,X14,X3,X16,X15) | (s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X15) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),X16)) & ! [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) | s('type.list.list'('type.exhSem.v'),X16) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) | sP14(X4,X14,X3,X16,X15)))),
  inference(flattening,[],[f327])).
fof(f327,plain,(
  ! [X4,X14,X3,X16,X15] : ((~sP14(X4,X14,X3,X16,X15) | ((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20))))))) & (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X15) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),X16)) & ! [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) | s('type.list.list'('type.exhSem.v'),X16) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) | sP14(X4,X14,X3,X16,X15)))),
  inference(nnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X4,X14,X3,X16,X15] : (sP14(X4,X14,X3,X16,X15) <=> ((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP14])])).
fof(f12451,plain,(
  ~sP14(sK74('const.list.NIL_0','const.list.NIL_0',sK34),sK34,sK73('const.list.NIL_0','const.list.NIL_0',sK34),'const.list.NIL_0','const.list.NIL_0')),
  inference(subsumption_resolution,[],[f12450,f617])).
fof(f617,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.dec_to_exhProof.v_rel_rules|split|6',aHL_FALSITY)).
fof(f12450,plain,(
  p(s(bool,'F_0')) | ~sP14(sK74('const.list.NIL_0','const.list.NIL_0',sK34),sK34,sK73('const.list.NIL_0','const.list.NIL_0',sK34),'const.list.NIL_0','const.list.NIL_0')),
  inference(forward_demodulation,[],[f12274,f899])).
fof(f899,plain,(
  s(bool,'F_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK34),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),
  inference(resolution,[],[f413,f574])).
fof(f574,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f295])).
fof(f295,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f294])).
fof(f294,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(ennf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X16] : ((p(s(bool,X16)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X16))),
  file('thm.dec_to_exhProof.v_rel_rules|split|6','thm.bool.IMP_F_EQ_F')).
fof(f413,plain,(
  ~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK34),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK34),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK34])],[f146])).
fof(f146,plain,(
  ? [X0] : ~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0] : p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|6','thm.dec_to_exhProof.v_rel_rules|split|6')).
fof(f12274,plain,(
  p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK34),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))) | ~sP14(sK74('const.list.NIL_0','const.list.NIL_0',sK34),sK34,sK73('const.list.NIL_0','const.list.NIL_0',sK34),'const.list.NIL_0','const.list.NIL_0')),
  inference(resolution,[],[f828,f679])).
fof(f679,plain,(
  ( ! [X2,X0,X10,X1,X11,X9] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK74(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11)))) | ~sP14(sK74(X2,X1,X0),X9,sK73(X2,X1,X0),X11,X10)) )),
  inference(cnf_transformation,[],[f345])).
fof(f345,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ! [X12,X13,X14] : (sP16(X12,X13,X14) | (sP14(X13,sK67(X14,X13,X12,X2,X1,X0),X12,sK69(X14,X13,X12,X2,X1,X0),sK68(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK67(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.conSem.v'),sK68(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK69(X14,X13,X12,X2,X1,X0)))))) | (sP15(X14,sK70(X14,X13,X12,X2,X1,X0),X12,sK72(X14,X13,X12,X2,X1,X0),sK71(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK70(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK71(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK72(X14,X13,X12,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2)))))) & ((~sP16(sK73(X2,X1,X0),sK74(X2,X1,X0),sK75(X2,X1,X0)) & ! [X9,X10,X11] : (~sP14(sK74(X2,X1,X0),X9,sK73(X2,X1,X0),X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK74(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP15(sK75(X2,X1,X0),X6,sK73(X2,X1,X0),X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),sK75(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK74(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) | p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK67,sK68,sK69,sK70,sK71,sK72,sK73,sK74,sK75])],[f344])).
fof(f344,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ! [X12,X13,X14] : (sP16(X12,X13,X14) | ? [X18,X19,X20] : (sP14(X13,X18,X12,X20,X19) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X18))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20))))) | ? [X15,X16,X17] : (sP15(X14,X15,X12,X17,X16) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X16))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2)))))) & (? [X3,X4,X5] : (~sP16(X3,X4,X5) & ! [X9,X10,X11] : (~sP14(X4,X9,X3,X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP15(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) | p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(rectify,[],[f343])).
fof(f343,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ! [X3,X4,X5] : (sP16(X3,X4,X5) | ? [X14,X15,X16] : (sP14(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP15(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2)))))) & (? [X3,X4,X5] : (~sP16(X3,X4,X5) & ! [X14,X15,X16] : (~sP14(X4,X14,X3,X16,X15) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (~sP15(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) | p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(nnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : (sP16(X3,X4,X5) | ? [X14,X15,X16] : (sP14(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP15(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(definition_folding,[],[f178,f207,f206,f205,f204,f203,f202,f201])).
fof(f201,plain,(
  ! [X5,X21,X23,X22] : (sP10(X5,X21,X23,X22) <=> ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f202,plain,(
  ! [X5,X21,X23,X22] : (sP11(X5,X21,X23,X22) <=> ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f203,plain,(
  ! [X4,X21,X23,X22] : (sP12(X4,X21,X23,X22) <=> ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f204,plain,(
  ! [X4,X21,X23,X22] : (sP13(X4,X21,X23,X22) <=> ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP13])])).
fof(f206,plain,(
  ! [X5,X6,X3,X8,X7] : (sP15(X5,X6,X3,X8,X7) <=> ((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP15])])).
fof(f207,plain,(
  ! [X3,X4,X5] : (sP16(X3,X4,X5) <=> ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP12(X4,X21,X23,X22) | sP10(X5,X21,X23,X22) | sP11(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP13(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP16])])).
fof(f178,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : (? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(flattening,[],[f177])).
fof(f177,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : ((? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(ennf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : ((! [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) & ! [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X5,X7,X8] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5),s('type.list.list'('type.conSem.v'),X7),s('type.list.list'('type.exhSem.v'),X8)))) <=> ! [X9,X10,X11] : ((! [X12,X13,X14] : ((? [X15] : (s('type.conSem.v',X13) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X15))) & s('type.exhSem.v',X14) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X15)))) | ? [X16,X17,X18] : (s('type.conSem.v',X13) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16),s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X14) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16))),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18))))) | ? [X19,X20,X21,X22,X23] : (s('type.conSem.v',X13) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.string.char'),X20),s('type.conLang.exp',X21))) & s('type.exhSem.v',X14) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.string.char'),X20),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.conLang.exp',X21))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X22,X19,X20,X24,X23] : (s('type.conSem.v',X13) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24),s('type.list.list'('type.string.char'),X20))) & s('type.exhSem.v',X14) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24))),s('type.list.list'('type.string.char'),X20))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X15] : (s('type.conSem.v',X13) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X15))) & s('type.exhSem.v',X14) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X15)))) | ? [X17,X18] : (s('type.conSem.v',X13) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X14) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))),s('type.conSem.v',X13))),s('type.exhSem.v',X14))))) & ! [X25,X26,X27] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X26) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X27)) | ? [X28,X29,X17,X18] : (s('type.list.list'('type.conSem.v'),X26) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),X17))) & s('type.list.list'('type.exhSem.v'),X27) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X29),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.list.list'('type.conSem.v'),X26))),s('type.list.list'('type.exhSem.v'),X27))))) & ! [X30,X31,X32] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)) | ? [X20,X28,X29,X19,X22] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.conSem.v',X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.exhSem.v',X29))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5))),s('type.list.list'('type.conSem.v'),X7))),s('type.list.list'('type.exhSem.v'),X8))))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|6','thm.dec_to_exhProof.v_rel|49|_def')).
fof(f828,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK74('const.list.NIL_0','const.list.NIL_0',sK34)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK34))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))),
  inference(resolution,[],[f413,f681])).
fof(f681,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK74(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) )),
  inference(cnf_transformation,[],[f345])).
% SZS output end Proof for thm.dec_to_exhProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 589
% Passive clauses: 2409
% Generated clauses: 11617
% Final active clauses: 582
% Final passive clauses: 1986
% Input formulas: 69
% Initial clauses: 406
% 
% Selected by SInE selection: 56
% SInE iterations: 1
% 
% Duplicate literals: 627
% Trivial inequalities: 163
% Fw subsumption resolutions: 1383
% Fw demodulations: 252
% Bw demodulations: 1
% 
% Simple tautologies: 1966
% Equational tautologies: 98
% Forward subsumptions: 4568
% 
% Binary resolution: 3997
% Forward superposition: 4900
% Backward superposition: 233
% Equality resolution: 38
% 
% Split clauses: 148
% Split components: 332
% SAT solver clauses: 200
% SAT solver unit clauses: 17
% SAT solver binary clauses: 11
% 
% Sat splits: 148
% Sat splitting refutations: 17
% 
% Memory used [KB]: 22003
% Time elapsed: 0.495 s
% ------------------------------
% ------------------------------
% Success in time 12.227 s
