Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.benchmark
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.benchmark
% SZS output start Proof for thm.benchmark
fof(f4558,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4557,f224,f407,f405,f403,f401,f228,f400,f4555,f4556])).
fof(f4556,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f405,f226])).
fof(f226,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.benchmark.heap'(sK12),sK13) != s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,X9),s('type.benchmark.heap'(sK12),X10))),s(sK12,X11),s('type.benchmark.heap'(sK12),X12)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') = s('type.benchmark.heap'(sK12),sK13) | s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK14),s('type.benchmark.heap'(sK12),sK15))) | s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK16),s('type.benchmark.heap'(sK12),sK17))),s(sK12,sK18),s('type.benchmark.heap'(sK12),sK19))) | s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),sK20),s(sK12,sK21),s('type.benchmark.heap'(sK12),sK22))),s(sK12,sK23),s('type.benchmark.heap'(sK12),sK24))),s(sK12,sK25),s('type.benchmark.heap'(sK12),sK26)))) & ! [X13,X14] : s('type.benchmark.heap'(sK12),sK13) != s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,X13),s('type.benchmark.heap'(sK12),X14))) & ! [X9,X10,X11,X12] : s('type.benchmark.heap'(sK12),sK13) != s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,X9),s('type.benchmark.heap'(sK12),X10))),s(sK12,X11),s('type.benchmark.heap'(sK12),X12))) & ! [X2,X3,X4,X5,X6,X7,X8] : s('type.benchmark.heap'(sK12),sK13) != s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),X2),s(sK12,X3),s('type.benchmark.heap'(sK12),X4))),s(sK12,X5),s('type.benchmark.heap'(sK12),X6))),s(sK12,X7),s('type.benchmark.heap'(sK12),X8))) & s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') != s('type.benchmark.heap'(sK12),sK13)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1) | ? [X26,X27] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X26),s('type.benchmark.heap'(X0),X27))) | ? [X22,X23,X24,X25] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X22),s('type.benchmark.heap'(X0),X23))),s(X0,X24),s('type.benchmark.heap'(X0),X25))) | ? [X15,X16,X17,X18,X19,X20,X21] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X15),s(X0,X16),s('type.benchmark.heap'(X0),X17))),s(X0,X18),s('type.benchmark.heap'(X0),X19))),s(X0,X20),s('type.benchmark.heap'(X0),X21)))) & ! [X13,X14] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X13),s('type.benchmark.heap'(X0),X14))) & ! [X9,X10,X11,X12] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X9),s('type.benchmark.heap'(X0),X10))),s(X0,X11),s('type.benchmark.heap'(X0),X12))) & ! [X2,X3,X4,X5,X6,X7,X8] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X2),s(X0,X3),s('type.benchmark.heap'(X0),X4))),s(X0,X5),s('type.benchmark.heap'(X0),X6))),s(X0,X7),s('type.benchmark.heap'(X0),X8))) & s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') != s('type.benchmark.heap'(X0),X1))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1) | ? [X13,X14] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X13),s('type.benchmark.heap'(X0),X14))) | ? [X9,X10,X11,X12] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X9),s('type.benchmark.heap'(X0),X10))),s(X0,X11),s('type.benchmark.heap'(X0),X12))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X2),s(X0,X3),s('type.benchmark.heap'(X0),X4))),s(X0,X5),s('type.benchmark.heap'(X0),X6))),s(X0,X7),s('type.benchmark.heap'(X0),X8)))) & ! [X26,X27] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X26),s('type.benchmark.heap'(X0),X27))) & ! [X22,X23,X24,X25] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X22),s('type.benchmark.heap'(X0),X23))),s(X0,X24),s('type.benchmark.heap'(X0),X25))) & ! [X15,X16,X17,X18,X19,X20,X21] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X15),s(X0,X16),s('type.benchmark.heap'(X0),X17))),s(X0,X18),s('type.benchmark.heap'(X0),X19))),s(X0,X20),s('type.benchmark.heap'(X0),X21))) & s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') != s('type.benchmark.heap'(X0),X1))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1) | ? [X13,X14] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X13),s('type.benchmark.heap'(X0),X14))) | ? [X9,X10,X11,X12] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X9),s('type.benchmark.heap'(X0),X10))),s(X0,X11),s('type.benchmark.heap'(X0),X12))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X2),s(X0,X3),s('type.benchmark.heap'(X0),X4))),s(X0,X5),s('type.benchmark.heap'(X0),X6))),s(X0,X7),s('type.benchmark.heap'(X0),X8)))) & (! [X26,X27] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X26),s('type.benchmark.heap'(X0),X27))) & ! [X22,X23,X24,X25] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X22),s('type.benchmark.heap'(X0),X23))),s(X0,X24),s('type.benchmark.heap'(X0),X25))) & ! [X15,X16,X17,X18,X19,X20,X21] : s('type.benchmark.heap'(X0),X1) != s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X15),s(X0,X16),s('type.benchmark.heap'(X0),X17))),s(X0,X18),s('type.benchmark.heap'(X0),X19))),s(X0,X20),s('type.benchmark.heap'(X0),X21))) & s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') != s('type.benchmark.heap'(X0),X1)))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1) | ? [X13,X14] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X13),s('type.benchmark.heap'(X0),X14))) | ? [X9,X10,X11,X12] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X9),s('type.benchmark.heap'(X0),X10))),s(X0,X11),s('type.benchmark.heap'(X0),X12))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X2),s(X0,X3),s('type.benchmark.heap'(X0),X4))),s(X0,X5),s('type.benchmark.heap'(X0),X6))),s(X0,X7),s('type.benchmark.heap'(X0),X8)))) => (? [X26,X27] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X26),s('type.benchmark.heap'(X0),X27))) | ? [X22,X23,X24,X25] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X22),s('type.benchmark.heap'(X0),X23))),s(X0,X24),s('type.benchmark.heap'(X0),X25))) | ? [X15,X16,X17,X18,X19,X20,X21] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X15),s(X0,X16),s('type.benchmark.heap'(X0),X17))),s(X0,X18),s('type.benchmark.heap'(X0),X19))),s(X0,X20),s('type.benchmark.heap'(X0),X21))) | s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1) | ? [X13,X14] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X13),s('type.benchmark.heap'(X0),X14))) | ? [X9,X10,X11,X12] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X9),s('type.benchmark.heap'(X0),X10))),s(X0,X11),s('type.benchmark.heap'(X0),X12))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X2),s(X0,X3),s('type.benchmark.heap'(X0),X4))),s(X0,X5),s('type.benchmark.heap'(X0),X6))),s(X0,X7),s('type.benchmark.heap'(X0),X8)))) => (? [X26,X27] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X26),s('type.benchmark.heap'(X0),X27))) | ? [X22,X23,X24,X25] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Empty_0'),s(X0,X22),s('type.benchmark.heap'(X0),X23))),s(X0,X24),s('type.benchmark.heap'(X0),X25))) | ? [X15,X16,X17,X18,X19,X20,X21] : s('type.benchmark.heap'(X0),X1) = s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X0),X15),s(X0,X16),s('type.benchmark.heap'(X0),X17))),s(X0,X18),s('type.benchmark.heap'(X0),X19))),s(X0,X20),s('type.benchmark.heap'(X0),X21))) | s('type.benchmark.heap'(X0),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((s('type.benchmark.heap'(X6),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X6),X7) | ? [X8,X9] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))) | ? [X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11))) | ? [X12,X13,X14,X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),X12),s(X6,X13),s('type.benchmark.heap'(X6),X14))),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11)))) => (? [X8,X9] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))) | ? [X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11))) | ? [X12,X13,X14,X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),X12),s(X6,X13),s('type.benchmark.heap'(X6),X14))),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11))) | s('type.benchmark.heap'(X6),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((s('type.benchmark.heap'(X6),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X6),X7) | ? [X8,X9] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))) | ? [X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11))) | ? [X12,X13,X14,X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),X12),s(X6,X13),s('type.benchmark.heap'(X6),X14))),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11)))) => (? [X8,X9] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))) | ? [X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Empty_0'),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11))) | ? [X12,X13,X14,X8,X9,X10,X11] : s('type.benchmark.heap'(X6),X7) = s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),'const.benchmark.Tree_3'(s('type.benchmark.heap'(X6),X12),s(X6,X13),s('type.benchmark.heap'(X6),X14))),s(X6,X8),s('type.benchmark.heap'(X6),X9))),s(X6,X10),s('type.benchmark.heap'(X6),X11))) | s('type.benchmark.heap'(X6),'const.benchmark.Empty_0') = s('type.benchmark.heap'(X6),X7)))),
  file('thm.benchmark.benchmark_|49|7|49|_prove_ltb','thm.benchmark.benchmark_|49|7|49|_prove_ltb')).
fof(f4555,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f407,f227])).
fof(f227,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.benchmark.heap'(sK12),sK13) != s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),X2),s(sK12,X3),s('type.benchmark.heap'(sK12),X4))),s(sK12,X5),s('type.benchmark.heap'(sK12),X6))),s(sK12,X7),s('type.benchmark.heap'(sK12),X8)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f400,plain,(
  s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') != s('type.benchmark.heap'(sK12),sK13) | $spl1),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') != s('type.benchmark.heap'(sK12),sK13) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f228,plain,(
  s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') != s('type.benchmark.heap'(sK12),sK13)),
  inference(cnf_transformation,[],[f139])).
fof(f401,plain,(
  s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') = s('type.benchmark.heap'(sK12),sK13) | $spl0),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') = s('type.benchmark.heap'(sK12),sK13) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f403,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK14),s('type.benchmark.heap'(sK12),sK15))) | $spl2),
  inference(cnf_transformation,[],[f403_D])).
fof(f403_D,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK14),s('type.benchmark.heap'(sK12),sK15))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f405,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK16),s('type.benchmark.heap'(sK12),sK17))),s(sK12,sK18),s('type.benchmark.heap'(sK12),sK19))) | $spl4),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK16),s('type.benchmark.heap'(sK12),sK17))),s(sK12,sK18),s('type.benchmark.heap'(sK12),sK19))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f407,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),sK20),s(sK12,sK21),s('type.benchmark.heap'(sK12),sK22))),s(sK12,sK23),s('type.benchmark.heap'(sK12),sK24))),s(sK12,sK25),s('type.benchmark.heap'(sK12),sK26))) | $spl6),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),sK20),s(sK12,sK21),s('type.benchmark.heap'(sK12),sK22))),s(sK12,sK23),s('type.benchmark.heap'(sK12),sK24))),s(sK12,sK25),s('type.benchmark.heap'(sK12),sK26))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f224,plain,(
  s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),sK20),s(sK12,sK21),s('type.benchmark.heap'(sK12),sK22))),s(sK12,sK23),s('type.benchmark.heap'(sK12),sK24))),s(sK12,sK25),s('type.benchmark.heap'(sK12),sK26))) | s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK16),s('type.benchmark.heap'(sK12),sK17))),s(sK12,sK18),s('type.benchmark.heap'(sK12),sK19))) | s('type.benchmark.heap'(sK12),sK13) = s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,sK14),s('type.benchmark.heap'(sK12),sK15))) | s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0') = s('type.benchmark.heap'(sK12),sK13)),
  inference(cnf_transformation,[],[f139])).
fof(f4557,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f403,f225])).
fof(f225,plain,(
  ( ! [X14,X13] : (s('type.benchmark.heap'(sK12),sK13) != s('type.benchmark.heap'(sK12),'const.benchmark.Tree_3'(s('type.benchmark.heap'(sK12),'const.benchmark.Empty_0'),s(sK12,X13),s('type.benchmark.heap'(sK12),X14)))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.benchmark
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 357
% Passive clauses: 1447
% Generated clauses: 4326
% Final active clauses: 357
% Final passive clauses: 933
% Input formulas: 37
% Initial clauses: 172
% 
% Duplicate literals: 153
% Trivial inequalities: 13
% Fw subsumption resolutions: 293
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2239
% 
% Binary resolution: 2688
% Factoring: 766
% Forward superposition: 130
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 95
% Split components: 193
% SAT solver clauses: 173
% SAT solver unit clauses: 10
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 1
% 
% Sat splits: 95
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 172
% TWLsolver calls for satisfiability: 144
% 
% Memory used [KB]: 2302
% Time elapsed: 0.185 s
% ------------------------------
% ------------------------------
% Success in time 0.21 s
