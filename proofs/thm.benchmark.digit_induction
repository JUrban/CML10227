Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.benchmark
% (74132)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 129
% Passive clauses: 3050
% Generated clauses: 16194
% Final active clauses: 121
% Final passive clauses: 2767
% Input formulas: 37
% Initial clauses: 64
% 
% Duplicate literals: 498
% Trivial inequalities: 345
% Fw subsumption resolutions: 1671
% Fw demodulations: 2387
% Bw demodulations: 7
% 
% Simple tautologies: 270
% Equational tautologies: 41
% Forward subsumptions: 7717
% 
% Binary resolution: 199
% Factoring: 1
% Forward superposition: 6571
% Backward superposition: 4361
% Self superposition: 181
% Equality factoring: 94
% Equality resolution: 39
% 
% Split clauses: 181
% Split components: 364
% SAT solver clauses: 364
% SAT solver unit clauses: 14
% SAT solver binary clauses: 93
% 
% Sat splits: 181
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 364
% TWLsolver calls for satisfiability: 110
% 
% Memory used [KB]: 14072
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.benchmark
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.benchmark
% SZS output start Proof for thm.benchmark
fof(f7066,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7051,f251,f256,f128,f196,f140,f208,f266,f274,f130,f194,f139,f209,f6849,f6853,f6851,f265,f272,f201,f203,f276,f282,f142,f210,f2725,f2747,f156,f216,f252,f257,f129,f195,f6881,f250,f255,f127,f198])).
fof(f198,plain,(
  p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0')))) | $spl6),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0')))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f127,plain,(
  p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0'))))),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0')))) & ! [X5] : p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X5)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X3),s('type.benchmark.times'(sK0),X4)))))) & ~p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f108])).
fof(f108,plain,(
  ? [X0,X1] : (p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0')))) & ! [X5] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X5)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X3),s('type.benchmark.times'(X0),X4)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),X2)))))),
  inference(rectify,[],[f101])).
fof(f101,plain,(
  ? [X0,X1] : (p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X2),s('type.benchmark.times'(X0),X3)))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),X5)))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ? [X0,X1] : ((p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X2),s('type.benchmark.times'(X0),X3))))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),X5)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X2),s('type.benchmark.times'(X0),X3))))))) => ! [X5] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),X5)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X2),s('type.benchmark.times'(X0),X3))))))) => ! [X5] : p(s(bool,happ(s(fun('type.benchmark.digit'(X0),bool),X1),s('type.benchmark.digit'(X0),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),'const.benchmark.Zero_0')))) & ! [X8] : p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X8)))))) & ! [X8,X9] : p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X8),s('type.benchmark.times'(X6),X9))))))) => ! [X10] : p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),'const.benchmark.Zero_0')))) & ! [X8] : p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X8)))))) & ! [X8,X9] : p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X8),s('type.benchmark.times'(X6),X9))))))) => ! [X10] : p(s(bool,happ(s(fun('type.benchmark.digit'(X6),bool),X7),s('type.benchmark.digit'(X6),X10)))))),
  file('thm.benchmark.digit_induction','thm.benchmark.digit_induction')).
fof(f255,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0'))) | $spl90),
  inference(cnf_transformation,[],[f255_D])).
fof(f255_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0'))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f250,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0'))) | ($spl6 | $spl14)),
  inference(resolution,[],[f208,f198])).
fof(f6881,plain,(
  $false | ($spl90 | $spl97 | $spl100 | $spl1212)),
  inference(subsumption_resolution,[],[f6880,f272])).
fof(f6880,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl90 | $spl100 | $spl1212)),
  inference(forward_demodulation,[],[f6878,f255])).
fof(f6878,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0'))) | ($spl100 | $spl1212)),
  inference(backward_demodulation,[],[f6851,f282])).
fof(f195,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X3),s('type.benchmark.times'(sK0),X4))))))) ) | $spl2),
  inference(cnf_transformation,[],[f195_D])).
fof(f195_D,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X3),s('type.benchmark.times'(sK0),X4))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f129,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X3),s('type.benchmark.times'(sK0),X4))))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f257,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X1),s('type.benchmark.times'(sK0),X2)))))) ) | $spl94),
  inference(cnf_transformation,[],[f257_D])).
fof(f257_D,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X1),s('type.benchmark.times'(sK0),X2)))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f252,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.Two_2'(s('type.benchmark.times'(sK0),X1),s('type.benchmark.times'(sK0),X2)))))) ) | ($spl2 | $spl14)),
  inference(resolution,[],[f208,f195])).
fof(f216,plain,(
  ( ! [X0,X1] : (s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),sK4(X1,X0)),s('type.benchmark.times'(X0),sK5(X1,X0)))) | s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),sK3(X1,X0)))) | s('type.benchmark.digit'(X0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X0),X1)) ) | $spl28),
  inference(cnf_transformation,[],[f216_D])).
fof(f216_D,plain,(
  ( ! [X0,X1] : (s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),sK4(X1,X0)),s('type.benchmark.times'(X0),sK5(X1,X0)))) | s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),sK3(X1,X0)))) | s('type.benchmark.digit'(X0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X0),X1)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f156,plain,(
  ( ! [X0,X1] : (s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),sK4(X1,X0)),s('type.benchmark.times'(X0),sK5(X1,X0)))) | s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),sK3(X1,X0)))) | s('type.benchmark.digit'(X0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X0),X1)) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : (s('type.benchmark.digit'(X0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X0),X1) | s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),sK3(X1,X0)))) | s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),sK4(X1,X0)),s('type.benchmark.times'(X0),sK5(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5])],[f60])).
fof(f60,plain,(
  ! [X0,X1] : (s('type.benchmark.digit'(X0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X0),X1) | ? [X4] : s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X4))) | ? [X2,X3] : s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X2),s('type.benchmark.times'(X0),X3))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0] : ! [X1] : (s('type.benchmark.digit'(X0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X0),X1) | ? [X4] : s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X4))) | ? [X2,X3] : s('type.benchmark.digit'(X0),X1) = s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X2),s('type.benchmark.times'(X0),X3))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X30] : (s('type.benchmark.digit'(X6),'const.benchmark.Zero_0') = s('type.benchmark.digit'(X6),X30) | ? [X8] : s('type.benchmark.digit'(X6),X30) = s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X8))) | ? [X8,X9] : s('type.benchmark.digit'(X6),X30) = s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X8),s('type.benchmark.times'(X6),X9))))),
  file('thm.benchmark.digit_induction','thm.benchmark.digit_nchotomy')).
fof(f2747,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),X6))) | s('type.benchmark.digit'(sK0),X6) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(X6,sK0)))) | s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),X6)) ) | $spl432),
  inference(cnf_transformation,[],[f2747_D])).
fof(f2747_D,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),X6))) | s('type.benchmark.digit'(sK0),X6) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(X6,sK0)))) | s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),X6)) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f2725,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),X6))) | s('type.benchmark.digit'(sK0),X6) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(X6,sK0)))) | s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),X6)) ) | ($spl28 | $spl94)),
  inference(superposition,[],[f257,f216])).
fof(f210,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f210_D])).
fof(f210_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f142,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.benchmark.digit_induction','thm.bool.EQ_CLAUSES|split|3')).
fof(f282,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) | $spl100),
  inference(cnf_transformation,[],[f282_D])).
fof(f282_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f276,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) | ($spl1 | $spl18)),
  inference(resolution,[],[f210,f194])).
fof(f203,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f203_D])).
fof(f203_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f201,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f134,f131])).
fof(f131,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.benchmark.digit_induction',aHL_TRUTH)).
fof(f134,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f32])).
fof(f32,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.benchmark.digit_induction','thm.bool.NOT_CLAUSES|split|2')).
fof(f272,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl97),
  inference(cnf_transformation,[],[f272_D])).
fof(f272_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f265,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl11 | $spl16)),
  inference(resolution,[],[f209,f203])).
fof(f6851,plain,(
  s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),sK2) | $spl1212),
  inference(cnf_transformation,[],[f6851_D])).
fof(f6851_D,plain,(
  s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),sK2) <=> ~$spl1212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1212])])).
fof(f6853,plain,(
  s('type.benchmark.digit'(sK0),sK2) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(sK2,sK0)))) | $spl1214),
  inference(cnf_transformation,[],[f6853_D])).
fof(f6853_D,plain,(
  s('type.benchmark.digit'(sK0),sK2) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(sK2,sK0)))) <=> ~$spl1214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1214])])).
fof(f6849,plain,(
  s('type.benchmark.digit'(sK0),sK2) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(sK2,sK0)))) | s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),sK2) | ($spl97 | $spl100 | $spl432)),
  inference(subsumption_resolution,[],[f6710,f272])).
fof(f6710,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.benchmark.digit'(sK0),sK2) = s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),sK3(sK2,sK0)))) | s('type.benchmark.digit'(sK0),'const.benchmark.Zero_0') = s('type.benchmark.digit'(sK0),sK2) | ($spl100 | $spl432)),
  inference(superposition,[],[f2747,f282])).
fof(f209,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f209_D])).
fof(f209_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f139,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.benchmark.digit_induction','thm.bool.EQ_CLAUSES|split|0')).
fof(f194,plain,(
  ~p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2)))) | $spl1),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  ~p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f130,plain,(
  ~p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))))),
  inference(cnf_transformation,[],[f109])).
fof(f274,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) | $spl99),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f266,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) | ($spl1 | $spl16)),
  inference(resolution,[],[f209,f194])).
fof(f208,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f208_D])).
fof(f208_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f140,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f112])).
fof(f196,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X5))))))) ) | $spl4),
  inference(cnf_transformation,[],[f196_D])).
fof(f196_D,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X5))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f128,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X5))))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f256,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X0)))))) ) | $spl92),
  inference(cnf_transformation,[],[f256_D])).
fof(f256_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X0)))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f251,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),'const.benchmark.One_1'(s('type.benchmark.times'(sK0),X0)))))) ) | ($spl4 | $spl14)),
  inference(resolution,[],[f208,f196])).
fof(f7051,plain,(
  $false | ($spl92 | $spl99 | $spl1214)),
  inference(subsumption_resolution,[],[f6998,f274])).
fof(f6998,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.benchmark.digit'(sK0),bool),sK1),s('type.benchmark.digit'(sK0),sK2))) | ($spl92 | $spl1214)),
  inference(superposition,[],[f256,f6853])).
% SZS output end Proof for thm.benchmark
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 100
% Passive clauses: 663
% Generated clauses: 6941
% Final active clauses: 94
% Final passive clauses: 561
% Input formulas: 37
% Initial clauses: 64
% 
% Duplicate literals: 14
% Trivial inequalities: 141
% Fw subsumption resolutions: 264
% Fw demodulations: 1556
% Bw demodulations: 7
% Condensations: 23
% Global subsumptions: 5
% 
% Simple tautologies: 37
% Equational tautologies: 5
% Forward subsumptions: 3371
% 
% Binary resolution: 32
% Factoring: 1
% Forward superposition: 2469
% Backward superposition: 1583
% Self superposition: 58
% Equality factoring: 2
% Equality resolution: 43
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 919
% SAT solver unit clauses: 97
% SAT solver binary clauses: 35
% SAT solver learnt clauses: 11
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 898
% TWLsolver calls for satisfiability: 540
% 
% Memory used [KB]: 17398
% Time elapsed: 0.518 s
% ------------------------------
% ------------------------------
% Success in time 1.14 s
