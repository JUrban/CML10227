Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% (64110)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 52
% Passive clauses: 966
% Generated clauses: 7013
% Final active clauses: 50
% Final passive clauses: 867
% Input formulas: 15
% Initial clauses: 16
% 
% Duplicate literals: 622
% Trivial inequalities: 84
% Fw subsumption resolutions: 830
% Fw demodulations: 46
% 
% Simple tautologies: 182
% Equational tautologies: 92
% Forward subsumptions: 3147
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 25
% Forward superposition: 2778
% Backward superposition: 2092
% Self superposition: 328
% Equality factoring: 250
% Equality resolution: 8
% 
% Split clauses: 342
% Split components: 689
% SAT solver clauses: 1090
% SAT solver unit clauses: 244
% SAT solver binary clauses: 381
% 
% Sat splits: 342
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1086
% TWLsolver calls for satisfiability: 48
% 
% Memory used [KB]: 4861
% Time elapsed: 0.610 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closProps
% (64129)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 52
% Passive clauses: 215
% Generated clauses: 6692
% Final active clauses: 48
% Final passive clauses: 160
% Input formulas: 15
% Initial clauses: 16
% 
% Duplicate literals: 989
% Trivial inequalities: 80
% Fw subsumption resolutions: 291
% Fw demodulations: 102
% Bw demodulations: 3
% Condensations: 1685
% 
% Simple tautologies: 136
% Equational tautologies: 60
% Forward subsumptions: 2690
% Fw demodulations to eq. taut.: 9
% 
% Binary resolution: 16
% Forward superposition: 1782
% Backward superposition: 1226
% Self superposition: 245
% Equality factoring: 178
% Equality resolution: 5
% 
% Split clauses: 68
% Split components: 137
% SAT solver clauses: 519
% SAT solver unit clauses: 28
% SAT solver binary clauses: 88
% 
% Sat splits: 68
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 519
% TWLsolver calls for satisfiability: 62
% 
% Memory used [KB]: 6908
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f36794,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f36743])).
fof(f36743,plain,(
  s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK1))),s('type.semanticPrimitives.state'(sK0),sK2))) != s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK1))),s('type.semanticPrimitives.state'(sK0),sK2)))),
  inference(superposition,[],[f45,f7220])).
fof(f7220,plain,(
  ( ! [X2,X0,X1] : (s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.semanticPrimitives.state'(X0),X1))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X1)))))) )),
  inference(superposition,[],[f1675,f50])).
fof(f50,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.semanticPrimitives.state'(X0),X1)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.semanticPrimitives.state'(X0),X1)))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1] : s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.semanticPrimitives.state'(X0),X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X8] : s('type.semanticPrimitives.state'(X6),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X6),X8))) = s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.semanticPrimitives.state'(X6),X8)))),
  file('thm.closProps.dec_clock_with_clock','thm.funBigStep.dec_clock_def')).
fof(f1675,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.state'(X2),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X0))),s('type.semanticPrimitives.state'(X2),X3))) = s('type.semanticPrimitives.state'(X2),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X0))),s('type.semanticPrimitives.state'(X2),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X1),s('type.semanticPrimitives.state'(X2),X3)))))) )),
  inference(superposition,[],[f53,f58])).
fof(f58,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X1,X2),'const.combin.K_1'(s(X2,X4))) = s(fun(X1,X2),'const.combin.o_2'(s(fun(X0,X2),'const.combin.K_1'(s(X2,X4))),s(fun(X1,X0),X3)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3,X4] : s(fun(X1,X2),'const.combin.K_1'(s(X2,X4))) = s(fun(X1,X2),'const.combin.o_2'(s(fun(X0,X2),'const.combin.K_1'(s(X2,X4))),s(fun(X1,X0),X3)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s(fun(X1,X2),'const.combin.K_1'(s(X2,X4))) = s(fun(X1,X2),'const.combin.o_2'(s(fun(X0,X2),'const.combin.K_1'(s(X2,X4))),s(fun(X1,X0),X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X6,X11] : ! [X12,X13] : s(fun(X6,X11),'const.combin.K_1'(s(X11,X13))) = s(fun(X6,X11),'const.combin.o_2'(s(fun(X10,X11),'const.combin.K_1'(s(X11,X13))),s(fun(X6,X10),X12)))),
  file('thm.closProps.dec_clock_with_clock','thm.combin.K_o_THM|split|0')).
fof(f53,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X3),s(fun('type.num.num','type.num.num'),X2))),s('type.semanticPrimitives.state'(X0),X1)))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X3),s(fun('type.num.num','type.num.num'),X2))),s('type.semanticPrimitives.state'(X0),X1)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X3),s(fun('type.num.num','type.num.num'),X2))),s('type.semanticPrimitives.state'(X0),X1)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X17] : ! [X8,X18,X12] : s('type.semanticPrimitives.state'(X17),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X12),s('type.semanticPrimitives.state'(X17),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X18),s('type.semanticPrimitives.state'(X17),X8))))) = s('type.semanticPrimitives.state'(X17),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X12),s(fun('type.num.num','type.num.num'),X18))),s('type.semanticPrimitives.state'(X17),X8)))),
  file('thm.closProps.dec_clock_with_clock','thm.semanticPrimitives.semanticPrimitives_243_prove_ltb')).
fof(f45,plain,(
  s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK1))),s('type.semanticPrimitives.state'(sK0),sK2))) != s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK1))),s('type.semanticPrimitives.state'(sK0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK1))),s('type.semanticPrimitives.state'(sK0),sK2))) != s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK1))),s('type.semanticPrimitives.state'(sK0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f40])).
fof(f40,plain,(
  ? [X0,X1,X2] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X1))),s('type.semanticPrimitives.state'(X0),X2))) != s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X1))),s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1,X2] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X1))),s('type.semanticPrimitives.state'(X0),X2))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X1))),s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ~! [X0] : ! [X1,X2] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X1))),s('type.semanticPrimitives.state'(X0),X2))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X1))),s('type.semanticPrimitives.state'(X0),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.semanticPrimitives.state'(X6),X8))) = s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.semanticPrimitives.state'(X6),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.semanticPrimitives.state'(X6),X8))) = s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.semanticPrimitives.state'(X6),'const.funBigStep.dec_clock_1'(s('type.semanticPrimitives.state'(X6),X8)))))),
  file('thm.closProps.dec_clock_with_clock','thm.closProps.dec_clock_with_clock')).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 161
% Passive clauses: 1492
% Generated clauses: 38460
% Final active clauses: 82
% Final passive clauses: 552
% Input formulas: 15
% Initial clauses: 16
% 
% Duplicate literals: 3832
% Trivial inequalities: 318
% Fw subsumption resolutions: 2045
% Fw demodulations: 1388
% Bw demodulations: 571
% Condensations: 6407
% Global subsumptions: 20
% 
% Simple tautologies: 497
% Equational tautologies: 765
% Forward subsumptions: 21543
% Fw demodulations to eq. taut.: 49
% Bw demodulations to eq. taut.: 10
% 
% Unit resulting resolution: 1311
% Forward superposition: 11207
% Backward superposition: 8207
% Self superposition: 584
% Equality factoring: 307
% Equality resolution: 20
% 
% Split clauses: 243
% Split components: 506
% SAT solver clauses: 2045
% SAT solver unit clauses: 411
% SAT solver binary clauses: 158
% 
% Sat splits: 243
% Sat splitting refutations: 45
% 
% Memory used [KB]: 27504
% Time elapsed: 3.025 s
% ------------------------------
% ------------------------------
% Success in time 4.38 s
