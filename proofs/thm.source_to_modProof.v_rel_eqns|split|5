Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.source_to_modProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.source_to_modProof
% SZS output start Proof for thm.source_to_modProof
fof(f19897,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f19896,f719,f1569,f1567,f19855,f718,f1568,f1566])).
fof(f1566,plain,(
  p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100)))) | $spl0),
  inference(cnf_transformation,[],[f1566_D])).
fof(f1566_D,plain,(
  p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f1568,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),sK100) | $spl2),
  inference(cnf_transformation,[],[f1568_D])).
fof(f1568_D,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),sK100) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f718,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),sK100) | p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100))))),
  inference(cnf_transformation,[],[f343])).
fof(f343,plain,(
  (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100)))) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),sK100)) & (~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100)))) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),sK100))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK99,sK100])],[f342])).
fof(f342,plain,(
  ? [X0,X1] : ((p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),X1)))) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1)) & (~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),X1)))) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X1)))),
  inference(nnf_transformation,[],[f175])).
fof(f175,plain,(
  ? [X0,X1] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),X1)))) <~> s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),X1)))) <=> s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),X7)))) <=> s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),X7)))) <=> s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X7))),
  file('thm.source_to_modProof.v_rel_eqns|split|5','thm.source_to_modProof.v_rel_eqns|split|5')).
fof(f19855,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f19854,f780])).
fof(f780,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X64] : ! [X16,X15] : ~s('type.list.list'(X64),'const.list.NIL_0') = s('type.list.list'(X64),'const.list.CONS_2'(s(X64,X15),s('type.list.list'(X64),X16)))),
  file('thm.source_to_modProof.v_rel_eqns|split|5','thm.list.list_distinct')).
fof(f19854,plain,(
  s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',sK213('const.list.NIL_0',sK100,sK99)),s('type.list.list'('type.semanticPrimitives.v'),sK214('const.list.NIL_0',sK100,sK99)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f19851,f1569])).
fof(f19851,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),sK100) | s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',sK213('const.list.NIL_0',sK100,sK99)),s('type.list.list'('type.semanticPrimitives.v'),sK214('const.list.NIL_0',sK100,sK99)))) | $spl0),
  inference(resolution,[],[f966,f7751])).
fof(f7751,plain,(
  sP21(sK99,sK100,'const.list.NIL_0') | $spl0),
  inference(resolution,[],[f975,f1566])).
fof(f975,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.modSem.v'),X2)))) | sP21(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f456])).
fof(f456,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.modSem.v'),X2)))) | sP21(X0,X2,X1)) & (~sP21(X0,X2,X1) | p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.modSem.v'),X2))))))),
  inference(nnf_transformation,[],[f254])).
fof(f254,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.modSem.v'),X2)))) <=> sP21(X0,X2,X1))),
  inference(definition_folding,[],[f146,f253])).
fof(f253,plain,(
  ! [X0,X2,X1] : (sP21(X0,X2,X1) <=> ((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X1) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X1) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) & s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP21])])).
fof(f146,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.modSem.v'),X2)))) <=> ((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X1) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X1) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) & s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X58,X59,X60] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X58),s('type.list.list'('type.semanticPrimitives.v'),X59),s('type.list.list'('type.modSem.v'),X60)))) <=> ((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X59) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X60)) | ? [X40,X7,X41,X20] : (s('type.list.list'('type.semanticPrimitives.v'),X59) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X40),s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.list.list'('type.modSem.v'),X60) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X41),s('type.list.list'('type.modSem.v'),X20))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X58),s('type.semanticPrimitives.v',X40),s('type.modSem.v',X41)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X58),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X20)))))))),
  file('thm.source_to_modProof.v_rel_eqns|split|5','thm.source_to_modProof.v_rel_cases|split|1')).
fof(f966,plain,(
  ( ! [X2,X0,X1] : (~sP21(X0,X1,X2) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1) | s('type.list.list'('type.semanticPrimitives.v'),X2) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',sK213(X2,X1,X0)),s('type.list.list'('type.semanticPrimitives.v'),sK214(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f455])).
fof(f455,plain,(
  ! [X0,X1,X2] : ((~sP21(X0,X1,X2) | (s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X2) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1)) | (s('type.list.list'('type.semanticPrimitives.v'),X2) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',sK213(X2,X1,X0)),s('type.list.list'('type.semanticPrimitives.v'),sK214(X2,X1,X0)))) & s('type.list.list'('type.modSem.v'),X1) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK215(X2,X1,X0)),s('type.list.list'('type.modSem.v'),sK216(X2,X1,X0)))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',sK213(X2,X1,X0)),s('type.modSem.v',sK215(X2,X1,X0))))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),sK214(X2,X1,X0)),s('type.list.list'('type.modSem.v'),sK216(X2,X1,X0))))))) & (((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.v'),X2) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X1)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X2) != s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) | s('type.list.list'('type.modSem.v'),X1) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))) | sP21(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK213,sK214,sK215,sK216])],[f454])).
fof(f454,plain,(
  ! [X0,X1,X2] : ((~sP21(X0,X1,X2) | (s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X2) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1)) | ? [X7,X8,X9,X10] : (s('type.list.list'('type.semanticPrimitives.v'),X2) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X7),s('type.list.list'('type.semanticPrimitives.v'),X8))) & s('type.list.list'('type.modSem.v'),X1) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X9),s('type.list.list'('type.modSem.v'),X10))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X7),s('type.modSem.v',X9)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X8),s('type.list.list'('type.modSem.v'),X10)))))) & (((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.v'),X2) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X1)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X2) != s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) | s('type.list.list'('type.modSem.v'),X1) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))) | sP21(X0,X1,X2)))),
  inference(rectify,[],[f453])).
fof(f453,plain,(
  ! [X0,X2,X1] : ((~sP21(X0,X2,X1) | (s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X1) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X1) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) & s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))) & (((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.v'),X1) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X2)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X1) != s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) | s('type.list.list'('type.modSem.v'),X2) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))) | sP21(X0,X2,X1)))),
  inference(flattening,[],[f452])).
fof(f452,plain,(
  ! [X0,X2,X1] : ((~sP21(X0,X2,X1) | ((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.v'),X1) & s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X1) = s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) & s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6))))))) & (((s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.v'),X1) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X2)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.semanticPrimitives.v'),X1) != s('type.list.list'('type.semanticPrimitives.v'),'const.list.CONS_2'(s('type.semanticPrimitives.v',X3),s('type.list.list'('type.semanticPrimitives.v'),X4))) | s('type.list.list'('type.modSem.v'),X2) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X5),s('type.list.list'('type.modSem.v'),X6))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X5)))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),X4),s('type.list.list'('type.modSem.v'),X6)))))) | sP21(X0,X2,X1)))),
  inference(nnf_transformation,[],[f253])).
fof(f1567,plain,(
  ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100)))) | $spl1),
  inference(cnf_transformation,[],[f1567_D])).
fof(f1567_D,plain,(
  ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1569,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),sK100) | $spl3),
  inference(cnf_transformation,[],[f1569_D])).
fof(f1569_D,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),sK100) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f719,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),sK100) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),sK100))))),
  inference(cnf_transformation,[],[f343])).
fof(f19896,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f19895,f726])).
fof(f726,plain,(
  ( ! [X0] : (p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))),
  file('thm.source_to_modProof.v_rel_eqns|split|5','thm.source_to_modProof.v_rel_rules|split|7')).
fof(f19895,plain,(
  ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK99),s('type.list.list'('type.semanticPrimitives.v'),'const.list.NIL_0'),s('type.list.list'('type.modSem.v'),'const.list.NIL_0')))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1567,f1568])).
% SZS output end Proof for thm.source_to_modProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 807
% Passive clauses: 9699
% Generated clauses: 19172
% Final active clauses: 799
% Final passive clauses: 8447
% Input formulas: 69
% Initial clauses: 843
% 
% Duplicate literals: 320
% Trivial inequalities: 41
% Fw subsumption resolutions: 1078
% Fw demodulations: 494
% 
% Simple tautologies: 259
% Equational tautologies: 62
% Forward subsumptions: 7102
% 
% Binary resolution: 11719
% Factoring: 1874
% Forward superposition: 1714
% Backward superposition: 930
% Self superposition: 13
% Equality factoring: 4
% Equality resolution: 32
% 
% Split clauses: 231
% Split components: 463
% SAT solver clauses: 477
% SAT solver unit clauses: 18
% SAT solver binary clauses: 72
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 231
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 475
% TWLsolver calls for satisfiability: 415
% 
% Memory used [KB]: 9850
% Time elapsed: 0.563 s
% ------------------------------
% ------------------------------
% Success in time 0.61 s
