Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bviProps
% (90544)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 65
% Passive clauses: 822
% Generated clauses: 7082
% Final active clauses: 63
% Final passive clauses: 720
% Input formulas: 33
% Initial clauses: 34
% 
% Duplicate literals: 655
% Trivial inequalities: 103
% Fw subsumption resolutions: 871
% Fw demodulations: 68
% 
% Simple tautologies: 186
% Equational tautologies: 96
% Forward subsumptions: 2827
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 25
% Forward superposition: 2612
% Backward superposition: 2067
% Self superposition: 317
% Equality factoring: 269
% Equality resolution: 8
% 
% Split clauses: 338
% Split components: 682
% SAT solver clauses: 1129
% SAT solver unit clauses: 244
% SAT solver binary clauses: 404
% 
% Sat splits: 338
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1125
% TWLsolver calls for satisfiability: 37
% 
% Memory used [KB]: 3454
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bviProps
% (90567)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 51
% Passive clauses: 127
% Generated clauses: 3775
% Final active clauses: 48
% Final passive clauses: 74
% Input formulas: 33
% Initial clauses: 34
% 
% Duplicate literals: 744
% Trivial inequalities: 52
% Fw subsumption resolutions: 127
% Fw demodulations: 2
% Bw demodulations: 1
% Condensations: 1133
% 
% Simple tautologies: 86
% Equational tautologies: 58
% Forward subsumptions: 1202
% 
% Binary resolution: 16
% Forward superposition: 747
% Backward superposition: 534
% Self superposition: 185
% Equality factoring: 174
% Equality resolution: 5
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 324
% SAT solver unit clauses: 64
% SAT solver binary clauses: 70
% 
% Sat splits: 27
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 324
% TWLsolver calls for satisfiability: 62
% 
% Memory used [KB]: 3198
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bviProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bviProps
% SZS output start Proof for thm.bviProps
fof(f29143,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f29140])).
fof(f29140,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(sK0),sK1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(sK0),sK1)))),
  inference(superposition,[],[f99,f23238])).
fof(f23238,plain,(
  ( ! [X4,X5,X3] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X3),X5))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X3),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X3),X4),s('type.bviSem.state'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f23235,f129])).
fof(f129,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.bviSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.bviSem.state'(X1),X2)))))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.bviSem.state'(X1),X2)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X12,X9] : ! [X10,X11] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X9),X10))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X12),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X9),'type.ffi.ffi_state'(X12)),X11),s('type.bviSem.state'(X9),X10)))))),
  file('thm.bviProps.bvl_to_bvi_code','thm.bviSem.bviSem_33_prove_ltb')).
fof(f23235,plain,(
  ( ! [X4,X5,X3] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X3),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X3),X4),s('type.bviSem.state'(X3),X5))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X3),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X3),'type.ffi.ffi_state'(X3)),'const.combin.K_1'(s('type.ffi.ffi_state'(X3),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X3),X4))))),s('type.bviSem.state'(X3),X5)))))) )),
  inference(superposition,[],[f5979,f110])).
fof(f110,plain,(
  ( ! [X2,X0,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bviSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X9] : ! [X10,X11] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X9),X10))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X9),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X11),s('type.bviSem.state'(X9),X10)))))),
  file('thm.bviProps.bvl_to_bvi_code','thm.bviSem.bviSem_3|49|_prove_ltb')).
fof(f5979,plain,(
  ( ! [X4,X5,X3] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X3),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X3),X4),s('type.bviSem.state'(X3),X5))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X3),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X3),X4))))),s('type.bviSem.state'(X3),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X3),'type.ffi.ffi_state'(X3)),'const.combin.K_1'(s('type.ffi.ffi_state'(X3),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X3),X4))))),s('type.bviSem.state'(X3),X5)))))))) )),
  inference(superposition,[],[f122,f126])).
fof(f126,plain,(
  ( ! [X2,X0,X1] : (s('type.bviSem.state'(X0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X0),X1),s('type.bviSem.state'(X0),X2))) = s('type.bviSem.state'(X0),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : s('type.bviSem.state'(X0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X0),X1),s('type.bviSem.state'(X0),X2))) = s('type.bviSem.state'(X0),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),X2)))))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0] : ! [X1,X2] : s('type.bviSem.state'(X0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X0),X1),s('type.bviSem.state'(X0),X2))) = s('type.bviSem.state'(X0),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))))),s('type.bviSem.state'(X0),X2)))))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X9] : ! [X10,X13] : s('type.bviSem.state'(X9),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X9),X10),s('type.bviSem.state'(X9),X13))) = s('type.bviSem.state'(X9),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X9),X10))))),s('type.bviSem.state'(X9),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X9),X10))))),s('type.bviSem.state'(X9),'const.bviSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X9),'type.ffi.ffi_state'(X9)),'const.combin.K_1'(s('type.ffi.ffi_state'(X9),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X9),X10))))),s('type.bviSem.state'(X9),X13)))))))),
  file('thm.bviProps.bvl_to_bvi_code','thm.bviSem.bvl_to_bvi_def')).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),X2),s('type.bviSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0] : ! [X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X9] : ! [X10,X11] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X9),X10))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X9),'const.bviSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v'))),X11),s('type.bviSem.state'(X9),X10)))))),
  file('thm.bviProps.bvl_to_bvi_code','thm.bviSem.bviSem_3|48|_prove_ltb')).
fof(f99,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(sK0),sK1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(sK0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(sK0),sK2),s('type.bviSem.state'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(sK0),sK1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(sK0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(sK0),sK2),s('type.bviSem.state'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f94])).
fof(f94,plain,(
  ? [X0,X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X0),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X0),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ~! [X0] : ! [X1,X2] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X0),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),X7))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X6),X8),s('type.bviSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),X7))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),'const.bviSem.bvl_to_bvi_2'(s('type.bvlSem.state'(X6),X8),s('type.bviSem.state'(X6),X7)))))),
  file('thm.bviProps.bvl_to_bvi_code','thm.bviProps.bvl_to_bvi_code')).
% SZS output end Proof for thm.bviProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 161
% Passive clauses: 998
% Generated clauses: 30215
% Final active clauses: 84
% Final passive clauses: 266
% Input formulas: 33
% Initial clauses: 34
% 
% Duplicate literals: 3318
% Trivial inequalities: 264
% Fw subsumption resolutions: 1995
% Fw demodulations: 824
% Bw demodulations: 316
% Condensations: 5456
% Global subsumptions: 20
% 
% Simple tautologies: 424
% Equational tautologies: 747
% Forward subsumptions: 16116
% Fw demodulations to eq. taut.: 32
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 1388
% Forward superposition: 8764
% Backward superposition: 5499
% Self superposition: 387
% Equality factoring: 294
% Equality resolution: 16
% 
% Split clauses: 185
% Split components: 391
% SAT solver clauses: 1438
% SAT solver unit clauses: 135
% SAT solver binary clauses: 87
% 
% Sat splits: 185
% Sat splitting refutations: 48
% 
% Memory used [KB]: 11513
% Time elapsed: 6.121 s
% ------------------------------
% ------------------------------
% Success in time 7.46 s
