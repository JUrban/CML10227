Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvi_to_bvpProof
% (135057)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 758
% Passive clauses: 6562
% Generated clauses: 26366
% Final active clauses: 679
% Final passive clauses: 5461
% Input formulas: 133
% Initial clauses: 314
% 
% Duplicate literals: 189
% Trivial inequalities: 34
% Fw subsumption resolutions: 1152
% Fw demodulations: 3172
% Bw demodulations: 67
% 
% Simple tautologies: 227
% Equational tautologies: 26
% Forward subsumptions: 14394
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 5356
% Factoring: 838
% Forward superposition: 5856
% Backward superposition: 9130
% Self superposition: 50
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 616
% Split components: 1233
% SAT solver clauses: 799
% SAT solver unit clauses: 21
% SAT solver binary clauses: 63
% 
% Sat splits: 616
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 796
% TWLsolver calls for satisfiability: 306
% 
% Memory used [KB]: 15607
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvi_to_bvpProof
% (135081)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 395
% Passive clauses: 2633
% Generated clauses: 15704
% Final active clauses: 387
% Final passive clauses: 2182
% Input formulas: 133
% Initial clauses: 314
% 
% Duplicate literals: 89
% Trivial inequalities: 9
% Fw subsumption resolutions: 484
% Fw demodulations: 2393
% Bw demodulations: 64
% Condensations: 118
% Global subsumptions: 20
% 
% Simple tautologies: 232
% Equational tautologies: 9
% Forward subsumptions: 6647
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 2392
% Factoring: 307
% Forward superposition: 3941
% Backward superposition: 2840
% Self superposition: 76
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 3381
% SAT solver unit clauses: 363
% SAT solver binary clauses: 99
% SAT solver learnt clauses: 40
% SAT solver learnt literals: 12
% 
% Sat splits: 11
% 
% TWLsolver clauses: 3301
% TWLsolver calls for satisfiability: 2084
% 
% Memory used [KB]: 20596
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 134 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvi_to_bvpProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvi_to_bvpProof
% SZS output start Proof for thm.bvi_to_bvpProof
fof(f26812,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f688,f5548])).
fof(f5548,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X3),s('type.bviSem.state'(sK10),X4))) != s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(sK10))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',sK12),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.bviSem.state'(sK10),sK11)))))))))) )),
  inference(backward_demodulation,[],[f5428,f506])).
fof(f506,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X3),s('type.bviSem.state'(sK10),X4))) != s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(sK10))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',sK12),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK10),sK11)))))))))) )),
  inference(cnf_transformation,[],[f386])).
fof(f386,plain,(
  ! [X3,X4] : s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X3),s('type.bviSem.state'(sK10),X4))) != s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(sK10))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',sK12),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(sK10)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(sK10),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK10),sK11)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f334])).
fof(f334,plain,(
  ? [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X3),s('type.bviSem.state'(X0),X4))) != s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X0)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X0))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',X2),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X0)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1)))))))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X3),s('type.bviSem.state'(X0),X4))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X0)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X0))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',X2),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X0)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1)))))))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X3),s('type.bviSem.state'(X0),X4))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X0)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X0))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',X2),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X0)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X6)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X9),s('type.bviSem.state'(X6),X10))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X6)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X6))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',X8),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X6)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X7)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X6)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),X9),s('type.bviSem.state'(X6),X10))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.bvlSem.v'),'type.bvlSem.v'),'type.bviSem.state'(X6)),'const.bviSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X6))),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),'const.list.CONS_2'(s('type.bvi.exp',X8),s('type.list.list'('type.bvi.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.bvlSem.v'),'type.bviSem.state'(X6)),'const.pair.,_2'(s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X7)))))))))),
  file('thm.bvi_to_bvpProof.bvi_to_bvpProof_|49||48|_prove_ltb','thm.bvi_to_bvpProof.bvi_to_bvpProof_|49||48|_prove_ltb')).
fof(f5428,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f528,f516])).
fof(f516,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X16] : s('type.num.num',X16) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvi_to_bvpProof.bvi_to_bvpProof_|49||48|_prove_ltb','thm.arithmetic.ADD_|48|')).
fof(f528,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X20] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X20)))),
  file('thm.bvi_to_bvpProof.bvi_to_bvpProof_|49||48|_prove_ltb','thm.arithmetic.SUC_ONE_ADD')).
fof(f688,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK19(X2,X1,X0)),s(X1,sK20(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f460])).
fof(f460,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK19(X2,X1,X0)),s(X1,sK20(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19,sK20])],[f256])).
fof(f256,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f255])).
fof(f255,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6,X34] : ! [X12] : ? [X43,X44] : s('type.pair.prod'(X6,X34),X12) = s('type.pair.prod'(X6,X34),'const.pair.,_2'(s(X6,X43),s(X34,X44)))),
  file('thm.bvi_to_bvpProof.bvi_to_bvpProof_|49||48|_prove_ltb','thm.pair.ABS_PAIR_THM')).
% SZS output end Proof for thm.bvi_to_bvpProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 374
% Passive clauses: 1494
% Generated clauses: 26322
% Final active clauses: 365
% Final passive clauses: 1078
% Input formulas: 133
% Initial clauses: 314
% 
% Duplicate literals: 7
% Trivial inequalities: 4
% Fw subsumption resolutions: 50
% Fw demodulations: 9268
% Bw demodulations: 51
% Condensations: 17
% 
% Simple tautologies: 92
% Equational tautologies: 22
% Forward subsumptions: 9557
% Fw demodulations to eq. taut.: 5787
% 
% Unit resulting resolution: 8348
% Factoring: 2
% Forward superposition: 4533
% Backward superposition: 3674
% Self superposition: 52
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 1500
% SAT solver unit clauses: 875
% SAT solver binary clauses: 441
% 
% Sat splits: 2
% 
% Memory used [KB]: 15735
% Time elapsed: 0.686 s
% ------------------------------
% ------------------------------
% Success in time 2.31 s
