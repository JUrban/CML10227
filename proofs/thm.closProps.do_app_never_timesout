Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% (139146)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 147
% Passive clauses: 4939
% Generated clauses: 19552
% Final active clauses: 141
% Final passive clauses: 4610
% Input formulas: 21
% Initial clauses: 96
% 
% Duplicate literals: 768
% Trivial inequalities: 104
% Fw subsumption resolutions: 2125
% Fw demodulations: 1702
% Bw demodulations: 3
% 
% Simple tautologies: 269
% Equational tautologies: 75
% Forward subsumptions: 8665
% 
% Binary resolution: 319
% Factoring: 2
% Forward superposition: 8066
% Backward superposition: 5774
% Self superposition: 269
% Equality factoring: 174
% Equality resolution: 11
% 
% Split clauses: 347
% Split components: 694
% SAT solver clauses: 1034
% SAT solver unit clauses: 3
% SAT solver binary clauses: 171
% 
% Sat splits: 347
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1034
% TWLsolver calls for satisfiability: 205
% 
% Memory used [KB]: 14200
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closProps
% (139281)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 67
% Passive clauses: 665
% Generated clauses: 7703
% Final active clauses: 63
% Final passive clauses: 558
% Input formulas: 21
% Initial clauses: 96
% 
% Duplicate literals: 726
% Trivial inequalities: 40
% Fw subsumption resolutions: 352
% Fw demodulations: 191
% Bw demodulations: 41
% Condensations: 1262
% Global subsumptions: 28
% 
% Simple tautologies: 128
% Equational tautologies: 60
% Forward subsumptions: 2543
% 
% Binary resolution: 160
% Factoring: 2
% Forward superposition: 1861
% Backward superposition: 1961
% Self superposition: 190
% Equality factoring: 142
% Equality resolution: 6
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 1457
% SAT solver unit clauses: 171
% SAT solver binary clauses: 81
% SAT solver learnt clauses: 61
% SAT solver learnt literals: 55
% 
% Sat splits: 27
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1354
% TWLsolver calls for satisfiability: 1330
% 
% Memory used [KB]: 9466
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f6291,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f1572,f204,f194,f202,f200,f198,f196,f193])).
fof(f193,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP3(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP2(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP1(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP5(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP0(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | ~sP6(X0,X1,X2,X3)) )),
  inference(subsumption_resolution,[],[f116,f117])).
fof(f117,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP3(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP2(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP1(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15(X3,X2,X1,X0))))) | sP5(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP0(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | ~sP6(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3] : ((~sP6(X0,X1,X2,X3) | (s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',sK11(X3,X2,X1,X0)),s('type.list.list'('type.closSem.v'),sK12(X3,X2,X1,X0)))) & (sP0(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP5(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X2) & s('type.list.list'('type.closSem.v'),sK12(X3,X2,X1,X0)) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',sK13(X3,X2,X1,X0)),s('type.list.list'('type.closSem.v'),sK14(X3,X2,X1,X0)))) & s('type.closSem.v',sK11(X3,X2,X1,X0)) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK15(X3,X2,X1,X0)))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15(X3,X2,X1,X0))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15(X3,X2,X1,X0)))))) | sP1(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP2(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP3(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP4(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2)))) & (! [X4,X5] : (s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) | (~sP0(X4,X5,X2) & ~sP5(X4,X5,X2) & ! [X6,X7,X8] : (s('type.closLang.op','const.closLang.RefArray_0') != s('type.closLang.op',X2) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X6),s('type.list.list'('type.closSem.v'),X7))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) & ~sP1(X0,X1,X4,X5,X2) & ~sP2(X0,X1,X4,X5,X2) & ~sP3(X0,X1,X4,X5,X2) & ~sP4(X0,X1,X4,X5,X2))) | sP6(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12,sK13,sK14,sK15])],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : ((~sP6(X0,X1,X2,X3) | ? [X9,X10] : (s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X9),s('type.list.list'('type.closSem.v'),X10))) & (sP0(X9,X10,X2) | sP5(X9,X10,X2) | ? [X11,X12,X13] : (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X2) & s('type.list.list'('type.closSem.v'),X10) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X11),s('type.list.list'('type.closSem.v'),X12))) & s('type.closSem.v',X9) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X13))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X13)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X13))))) | sP1(X0,X1,X9,X10,X2) | sP2(X0,X1,X9,X10,X2) | sP3(X0,X1,X9,X10,X2) | sP4(X0,X1,X9,X10,X2)))) & (! [X4,X5] : (s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) | (~sP0(X4,X5,X2) & ~sP5(X4,X5,X2) & ! [X6,X7,X8] : (s('type.closLang.op','const.closLang.RefArray_0') != s('type.closLang.op',X2) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X6),s('type.list.list'('type.closSem.v'),X7))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) & ~sP1(X0,X1,X4,X5,X2) & ~sP2(X0,X1,X4,X5,X2) & ~sP3(X0,X1,X4,X5,X2) & ~sP4(X0,X1,X4,X5,X2))) | sP6(X0,X1,X2,X3)))),
  inference(rectify,[],[f71])).
fof(f71,plain,(
  ! [X0,X2,X3,X1] : ((~sP6(X0,X2,X3,X1) | ? [X4,X5] : (s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) & (sP0(X4,X5,X3) | sP5(X4,X5,X3) | ? [X20,X21,X22] : (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X20),s('type.list.list'('type.closSem.v'),X21))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22))))) | sP1(X0,X2,X4,X5,X3) | sP2(X0,X2,X4,X5,X3) | sP3(X0,X2,X4,X5,X3) | sP4(X0,X2,X4,X5,X3)))) & (! [X4,X5] : (s('type.list.list'('type.closSem.v'),X1) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) | (~sP0(X4,X5,X3) & ~sP5(X4,X5,X3) & ! [X20,X21,X22] : (s('type.closLang.op','const.closLang.RefArray_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X20),s('type.list.list'('type.closSem.v'),X21))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22))))) & ~sP1(X0,X2,X4,X5,X3) & ~sP2(X0,X2,X4,X5,X3) & ~sP3(X0,X2,X4,X5,X3) & ~sP4(X0,X2,X4,X5,X3))) | sP6(X0,X2,X3,X1)))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X2,X3,X1] : (sP6(X0,X2,X3,X1) <=> ? [X4,X5] : (s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) & (sP0(X4,X5,X3) | sP5(X4,X5,X3) | ? [X20,X21,X22] : (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X20),s('type.list.list'('type.closSem.v'),X21))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22))))) | sP1(X0,X2,X4,X5,X3) | sP2(X0,X2,X4,X5,X3) | sP3(X0,X2,X4,X5,X3) | sP4(X0,X2,X4,X5,X3))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f116,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP3(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP2(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP1(X0,X1,sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15(X3,X2,X1,X0))))) | sP5(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | sP0(sK11(X3,X2,X1,X0),sK12(X3,X2,X1,X0),X2) | ~sP6(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f73])).
fof(f196,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP4(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f195,f136])).
fof(f136,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK20(X4,X3,X2,X1,X0))))) | ~sP4(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP4(X0,X1,X2,X3,X4) | (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK20(X4,X3,X2,X1,X0)))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',sK19(X4,X3,X2,X1,X0)),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK18(X4,X3,X2,X1,X0)))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),sK21(X4,X3,X2,X1,X0)))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',sK18(X4,X3,X2,X1,X0)))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK20(X4,X3,X2,X1,X0))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK20(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK21(X4,X3,X2,X1,X0)))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK20(X4,X3,X2,X1,X0))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK20(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK21(X4,X3,X2,X1,X0))))))))))) & (! [X5,X6,X7,X8] : (s('type.closLang.op','const.closLang.Update_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X6),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X8))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X8))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X8))))))))) | sP4(X0,X1,X2,X3,X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19,sK20,sK21])],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP4(X0,X1,X2,X3,X4) | ? [X9,X10,X11,X12] : (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X10),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X9))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X12))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X9))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12)))))))))) & (! [X5,X6,X7,X8] : (s('type.closLang.op','const.closLang.Update_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X6),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X8))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X8))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X8))))))))) | sP4(X0,X1,X2,X3,X4)))),
  inference(rectify,[],[f77])).
fof(f77,plain,(
  ! [X0,X2,X4,X5,X3] : ((~sP4(X0,X2,X4,X5,X3) | ? [X6,X7,X8,X9] : (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X7),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X6))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X9))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X6))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9)))))))))) & (! [X6,X7,X8,X9] : (s('type.closLang.op','const.closLang.Update_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X7),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X6))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X9))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X6))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))) | sP4(X0,X2,X4,X5,X3)))),
  inference(nnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X2,X4,X5,X3] : (sP4(X0,X2,X4,X5,X3) <=> ? [X6,X7,X8,X9] : (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X7),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X6))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X9))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X6))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f195,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK20(X4,X3,X2,X1,X0))))) | ~sP4(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f135,f137])).
fof(f137,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK20(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK21(X4,X3,X2,X1,X0))))))))) | ~sP4(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f79])).
fof(f135,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK20(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK21(X4,X3,X2,X1,X0))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK20(X4,X3,X2,X1,X0))))) | ~sP4(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f79])).
fof(f198,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP3(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f197,f145])).
fof(f145,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK23(X4,X3,X2,X1,X0))))) | ~sP3(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP3(X0,X1,X2,X3,X4) | (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK23(X4,X3,X2,X1,X0)))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK22(X4,X3,X2,X1,X0)))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),sK24(X4,X3,X2,X1,X0)))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',sK22(X4,X3,X2,X1,X0)))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK23(X4,X3,X2,X1,X0))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK23(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK24(X4,X3,X2,X1,X0)))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK23(X4,X3,X2,X1,X0))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK23(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK24(X4,X3,X2,X1,X0))))))))))) & (! [X5,X6,X7] : (s('type.closLang.op','const.closLang.Deref_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X7))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X7))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X7))))))))) | sP3(X0,X1,X2,X3,X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK22,sK23,sK24])],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP3(X0,X1,X2,X3,X4) | ? [X8,X9,X10] : (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X9))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X8))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X10))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X8))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X10))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X10)))))))))) & (! [X5,X6,X7] : (s('type.closLang.op','const.closLang.Deref_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X7))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X7))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X7))))))))) | sP3(X0,X1,X2,X3,X4)))),
  inference(rectify,[],[f80])).
fof(f80,plain,(
  ! [X0,X2,X4,X5,X3] : ((~sP3(X0,X2,X4,X5,X3) | ? [X10,X11,X12] : (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X12))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X10))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12)))))))))) & (! [X10,X11,X12] : (s('type.closLang.op','const.closLang.Deref_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X12))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X10))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) | sP3(X0,X2,X4,X5,X3)))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X2,X4,X5,X3] : (sP3(X0,X2,X4,X5,X3) <=> ? [X10,X11,X12] : (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X12))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X10))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f197,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK23(X4,X3,X2,X1,X0))))) | ~sP3(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f144,f146])).
fof(f146,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK23(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK24(X4,X3,X2,X1,X0))))))))) | ~sP3(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f82])).
fof(f144,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK23(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK24(X4,X3,X2,X1,X0))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK23(X4,X3,X2,X1,X0))))) | ~sP3(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f82])).
fof(f200,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP2(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f199,f154])).
fof(f154,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK26(X4,X3,X2,X1,X0))))) | ~sP2(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP2(X0,X1,X2,X3,X4) | (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK26(X4,X3,X2,X1,X0)))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK28(X4,X3,X2,X1,X0)))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK25(X4,X3,X2,X1,X0)))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK27(X4,X3,X2,X1,X0)))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',sK25(X4,X3,X2,X1,X0)))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK26(X4,X3,X2,X1,X0))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK26(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK27(X4,X3,X2,X1,X0)))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK26(X4,X3,X2,X1,X0))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK26(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK27(X4,X3,X2,X1,X0))))))))))) & (! [X5,X6,X7,X8] : (s('type.closLang.op','const.closLang.UpdateByte_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X8))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | sP2(X0,X1,X2,X3,X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK25,sK26,sK27,sK28])],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP2(X0,X1,X2,X3,X4) | ? [X9,X10,X11,X12] : (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X10))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X9))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X9))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11)))))))))) & (! [X5,X6,X7,X8] : (s('type.closLang.op','const.closLang.UpdateByte_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X8))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | sP2(X0,X1,X2,X3,X4)))),
  inference(rectify,[],[f83])).
fof(f83,plain,(
  ! [X0,X2,X4,X5,X3] : ((~sP2(X0,X2,X4,X5,X3) | ? [X13,X14,X15,X16] : (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X14))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X13))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X13))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15)))))))))) & (! [X13,X14,X15,X16] : (s('type.closLang.op','const.closLang.UpdateByte_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X14))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X13))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X13))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) | sP2(X0,X2,X4,X5,X3)))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X2,X4,X5,X3] : (sP2(X0,X2,X4,X5,X3) <=> ? [X13,X14,X15,X16] : (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X14))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X13))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X13))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f199,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK26(X4,X3,X2,X1,X0))))) | ~sP2(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f153,f155])).
fof(f155,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK26(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK27(X4,X3,X2,X1,X0))))))))) | ~sP2(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f85])).
fof(f153,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK26(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK27(X4,X3,X2,X1,X0))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK26(X4,X3,X2,X1,X0))))) | ~sP2(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f85])).
fof(f202,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP1(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f201,f163])).
fof(f163,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK30(X4,X3,X2,X1,X0))))) | ~sP1(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP1(X0,X1,X2,X3,X4) | (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK30(X4,X3,X2,X1,X0)))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK29(X4,X3,X2,X1,X0)))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK31(X4,X3,X2,X1,X0)))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',sK29(X4,X3,X2,X1,X0)))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK30(X4,X3,X2,X1,X0))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK30(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK31(X4,X3,X2,X1,X0)))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK30(X4,X3,X2,X1,X0))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK30(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK31(X4,X3,X2,X1,X0))))))))))) & (! [X5,X6,X7] : (s('type.closLang.op','const.closLang.DerefByte_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | sP1(X0,X1,X2,X3,X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29,sK30,sK31])],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP1(X0,X1,X2,X3,X4) | ? [X8,X9,X10] : (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X4) & s('type.list.list'('type.closSem.v'),X3) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X9))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X2) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X8))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X8))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10)))))))))) & (! [X5,X6,X7] : (s('type.closLang.op','const.closLang.DerefByte_0') != s('type.closLang.op',X4) | s('type.list.list'('type.closSem.v'),X3) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X2) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))),s('type.num.num',X5))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))))) | sP1(X0,X1,X2,X3,X4)))),
  inference(rectify,[],[f86])).
fof(f86,plain,(
  ! [X0,X2,X4,X5,X3] : ((~sP1(X0,X2,X4,X5,X3) | ? [X17,X18,X19] : (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X18))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X17))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X17))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19)))))))))) & (! [X17,X18,X19] : (s('type.closLang.op','const.closLang.DerefByte_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X18))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X17))) | s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))) != s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X17))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) | sP1(X0,X2,X4,X5,X3)))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X2,X4,X5,X3] : (sP1(X0,X2,X4,X5,X3) <=> ? [X17,X18,X19] : (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X18))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X17))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X17))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f201,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK30(X4,X3,X2,X1,X0))))) | ~sP1(X0,X1,X2,X3,X4)) )),
  inference(subsumption_resolution,[],[f162,f164])).
fof(f164,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK30(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK31(X4,X3,X2,X1,X0))))))))) | ~sP1(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f88])).
fof(f162,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK30(X4,X3,X2,X1,X0)),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK31(X4,X3,X2,X1,X0))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK30(X4,X3,X2,X1,X0))))) | ~sP1(X0,X1,X2,X3,X4)) )),
  inference(cnf_transformation,[],[f88])).
fof(f194,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2)) )),
  inference(subsumption_resolution,[],[f128,f129])).
fof(f129,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK16(X2,X1,X0))))) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X2) & s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK17(X2,X1,X0)))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK16(X2,X1,X0)))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK16(X2,X1,X0))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK16(X2,X1,X0))))))) & (! [X3,X4] : (s('type.closLang.op','const.closLang.RefByte_0') != s('type.closLang.op',X2) | s('type.list.list'('type.closSem.v'),X1) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X4))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X3))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) | sP5(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17])],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | ? [X5,X6] : (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X2) & s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X6))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))))) & (! [X3,X4] : (s('type.closLang.op','const.closLang.RefByte_0') != s('type.closLang.op',X2) | s('type.list.list'('type.closSem.v'),X1) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X4))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X3))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f74])).
fof(f74,plain,(
  ! [X4,X5,X3] : ((~sP5(X4,X5,X3) | ? [X23,X24] : (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X23))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))))) & (! [X23,X24] : (s('type.closLang.op','const.closLang.RefByte_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X23))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) | sP5(X4,X5,X3)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X4,X5,X3] : (sP5(X4,X5,X3) <=> ? [X23,X24] : (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X23))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f128,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK16(X2,X1,X0))))) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f76])).
fof(f204,plain,(
  ( ! [X2,X0,X1] : (~sP0(X0,X1,X2)) )),
  inference(subsumption_resolution,[],[f203,f171])).
fof(f171,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK34(X2,X1,X0))))) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X2) & s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK34(X2,X1,X0)))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK32(X2,X1,X0)),s('type.list.list'('type.closSem.v'),sK33(X2,X1,X0)))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK34(X2,X1,X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',sK34(X2,X1,X0)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK33(X2,X1,X0)))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK34(X2,X1,X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',sK34(X2,X1,X0)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK33(X2,X1,X0))))))))) & (! [X3,X4,X5] : (s('type.closLang.op','const.closLang.El_0') != s('type.closLang.op',X2) | s('type.list.list'('type.closSem.v'),X1) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X4))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X4))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X4))))))) | sP0(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK32,sK33,sK34])],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | ? [X6,X7,X8] : (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X2) & s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X6),s('type.list.list'('type.closSem.v'),X7))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X7))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X8))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X7)))))))) & (! [X3,X4,X5] : (s('type.closLang.op','const.closLang.El_0') != s('type.closLang.op',X2) | s('type.list.list'('type.closSem.v'),X1) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X4))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X4))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X4))))))) | sP0(X0,X1,X2)))),
  inference(rectify,[],[f89])).
fof(f89,plain,(
  ! [X4,X5,X3] : ((~sP0(X4,X5,X3) | ? [X25,X26,X27] : (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X25),s('type.list.list'('type.closSem.v'),X26))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26)))))))) & (! [X25,X26,X27] : (s('type.closLang.op','const.closLang.El_0') != s('type.closLang.op',X3) | s('type.list.list'('type.closSem.v'),X5) != s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) | s('type.closSem.v',X4) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X25),s('type.list.list'('type.closSem.v'),X26))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) | sP0(X4,X5,X3)))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X4,X5,X3] : (sP0(X4,X5,X3) <=> ? [X25,X26,X27] : (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X25),s('type.list.list'('type.closSem.v'),X26))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f203,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK34(X2,X1,X0))))) | ~sP0(X0,X1,X2)) )),
  inference(subsumption_resolution,[],[f170,f172])).
fof(f172,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',sK34(X2,X1,X0)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK33(X2,X1,X0))))))) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f91])).
fof(f170,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',sK34(X2,X1,X0)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK33(X2,X1,X0))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK34(X2,X1,X0))))) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f91])).
fof(f1572,plain,(
  sP6(sK7,sK8,sK9,sK10)),
  inference(unit_resulting_resolution,[],[f97,f175])).
fof(f175,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,X2,X3,X1) | s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.closSem.v'),X1),s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3] : ((s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.closSem.v'),X1),s('type.closSem.state'(X0),X2))) | sP6(X0,X2,X3,X1)) & (~sP6(X0,X2,X3,X1) | s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.closSem.v'),X1),s('type.closSem.state'(X0),X2)))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.closSem.v'),X1),s('type.closSem.state'(X0),X2))) <=> sP6(X0,X2,X3,X1))),
  inference(definition_folding,[],[f33,f62,f61,f60,f59,f58,f57,f56])).
fof(f33,plain,(
  ! [X0,X1,X2,X3] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.closSem.v'),X1),s('type.closSem.state'(X0),X2))) <=> ? [X4,X5] : (s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) & (? [X25,X26,X27] : (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X25),s('type.list.list'('type.closSem.v'),X26))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) | ? [X23,X24] : (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X23))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) | ? [X20,X21,X22] : (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X20),s('type.list.list'('type.closSem.v'),X21))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22))))) | ? [X17,X18,X19] : (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X18))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X17))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X17))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) | ? [X13,X14,X15,X16] : (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X14))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X13))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X13))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) | ? [X10,X11,X12] : (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X12))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X10))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) | ? [X6,X7,X8,X9] : (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X7),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X6))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X9))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X6))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.closSem.v'),X1),s('type.closSem.state'(X0),X2))) <=> ? [X4,X5] : (s('type.list.list'('type.closSem.v'),X1) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X4),s('type.list.list'('type.closSem.v'),X5))) & (? [X25,X26,X27] : (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X25),s('type.list.list'('type.closSem.v'),X26))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X26))))))) | ? [X23,X24] : (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X24))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X23))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) | ? [X20,X21,X22] : (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X20),s('type.list.list'('type.closSem.v'),X21))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22))))) | ? [X17,X18,X19] : (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X18))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X17))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X17))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X18)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))))))))) | ? [X13,X14,X15,X16] : (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X14))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X16))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X13))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X13))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))))))))) | ? [X10,X11,X12] : (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X12))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X10))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))))))))) | ? [X6,X7,X8,X9] : (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X3) & s('type.list.list'('type.closSem.v'),X5) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X7),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X4) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X6))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X9))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))),s('type.num.num',X6))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X9))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X10,X7,X8] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X6)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X6)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X8),s('type.list.list'('type.closSem.v'),X10),s('type.closSem.state'(X6),X7))) <=> ? [X11,X12] : (s('type.list.list'('type.closSem.v'),X10) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X11),s('type.list.list'('type.closSem.v'),X12))) & (? [X13,X14,X15] : (s('type.closLang.op','const.closLang.El_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X13),s('type.list.list'('type.closSem.v'),X14))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X15)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X14))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X15)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.integer.Num_1'(s('type.integer.int',X15))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X14))))))) | ? [X16,X17] : (s('type.closLang.op','const.closLang.RefByte_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X17))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X16))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16))))) | ? [X18,X19,X20] : (s('type.closLang.op','const.closLang.RefArray_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X18),s('type.list.list'('type.closSem.v'),X19))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) & ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20))))) | ? [X21,X22,X23] : (s('type.closLang.op','const.closLang.DerefByte_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X23))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X7))),s('type.num.num',X21))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X23))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X23))))))))) | ? [X24,X25,X26,X17] : (s('type.closLang.op','const.closLang.UpdateByte_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X25))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.words.w2n_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X17))))))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X24))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X7))),s('type.num.num',X24))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X25)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X25)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26))))))))) | ? [X27,X28,X14] : (s('type.closLang.op','const.closLang.Deref_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X28))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X27))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X14))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X7))),s('type.num.num',X27))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X28)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X14))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X28)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X14))))))))) | ? [X29,X30,X31,X14] : (s('type.closLang.op','const.closLang.Update_0') = s('type.closLang.op',X8) & s('type.list.list'('type.closSem.v'),X12) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X31))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v',X30),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))) & s('type.closSem.v',X11) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X29))) & s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X14))))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X7))),s('type.num.num',X29))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X14))))))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X14))))))))))))),
  file('thm.closProps.do_app_never_timesout','thm.closProps.do_app_cases_timeout')).
fof(f97,plain,(
  s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(sK7)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(sK7)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',sK9),s('type.list.list'('type.closSem.v'),sK10),s('type.closSem.state'(sK7),sK8)))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(sK7)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(sK7)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',sK9),s('type.list.list'('type.closSem.v'),sK10),s('type.closSem.state'(sK7),sK8)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9,sK10])],[f51])).
fof(f51,plain,(
  ? [X0,X1,X2,X3] : s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X2),s('type.list.list'('type.closSem.v'),X3),s('type.closSem.state'(X0),X1)))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3] : s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X2),s('type.list.list'('type.closSem.v'),X3),s('type.closSem.state'(X0),X1)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3] : ~s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X0)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X2),s('type.list.list'('type.closSem.v'),X3),s('type.closSem.state'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ~s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X6)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X6)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X8),s('type.list.list'('type.closSem.v'),X9),s('type.closSem.state'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ~s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X6)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(X6)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',X8),s('type.list.list'('type.closSem.v'),X9),s('type.closSem.state'(X6),X7)))),
  file('thm.closProps.do_app_never_timesout','thm.closProps.do_app_never_timesout')).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 86
% Passive clauses: 777
% Generated clauses: 6271
% Final active clauses: 62
% Final passive clauses: 477
% Input formulas: 21
% Initial clauses: 96
% 
% Duplicate literals: 307
% Trivial inequalities: 49
% Fw subsumption resolutions: 294
% Fw demodulations: 810
% Bw demodulations: 219
% Condensations: 586
% 
% Simple tautologies: 100
% Equational tautologies: 81
% Forward subsumptions: 3248
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 266
% Factoring: 1
% Forward superposition: 1719
% Backward superposition: 1548
% Self superposition: 115
% Equality factoring: 72
% Equality resolution: 5
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 812
% SAT solver unit clauses: 158
% SAT solver binary clauses: 241
% 
% Sat splits: 14
% Sat splitting refutations: 5
% 
% Memory used [KB]: 7291
% Time elapsed: 0.326 s
% ------------------------------
% ------------------------------
% Success in time 1.67 s
