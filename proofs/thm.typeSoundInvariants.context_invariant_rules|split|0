Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.typeSoundInvariants
% (138035)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 161
% Passive clauses: 1897
% Generated clauses: 18274
% Final active clauses: 154
% Final passive clauses: 1464
% Input formulas: 21
% Initial clauses: 73
% 
% Duplicate literals: 847
% Trivial inequalities: 154
% Fw subsumption resolutions: 2770
% Fw demodulations: 3235
% Bw demodulations: 3
% 
% Simple tautologies: 323
% Equational tautologies: 25
% Forward subsumptions: 8404
% 
% Binary resolution: 22
% Forward superposition: 8114
% Backward superposition: 2655
% Self superposition: 151
% Equality factoring: 64
% Equality resolution: 73
% 
% Split clauses: 480
% Split components: 974
% SAT solver clauses: 803
% SAT solver unit clauses: 40
% SAT solver binary clauses: 123
% 
% Sat splits: 480
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 791
% TWLsolver calls for satisfiability: 167
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.typeSoundInvariants
% (138092)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 135
% Passive clauses: 853
% Generated clauses: 17286
% Final active clauses: 126
% Final passive clauses: 592
% Input formulas: 21
% Initial clauses: 73
% 
% Duplicate literals: 767
% Trivial inequalities: 114
% Fw subsumption resolutions: 1842
% Fw demodulations: 2831
% Bw demodulations: 129
% Condensations: 1671
% Global subsumptions: 2
% 
% Simple tautologies: 177
% Equational tautologies: 19
% Forward subsumptions: 7614
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 27
% Forward superposition: 5140
% Backward superposition: 3812
% Self superposition: 165
% Equality factoring: 46
% Equality resolution: 19
% 
% Split clauses: 113
% Split components: 233
% SAT solver clauses: 1463
% SAT solver unit clauses: 92
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 4
% SAT solver learnt literals: 4
% 
% Sat splits: 113
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1455
% TWLsolver calls for satisfiability: 1680
% 
% Memory used [KB]: 14967
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.typeSoundInvariants
% (138153)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 682
% Passive clauses: 8724
% Generated clauses: 191401
% Final active clauses: 245
% Final passive clauses: 1380
% Input formulas: 21
% Initial clauses: 73
% Discarded non-redundant clauses: 1544
% 
% Duplicate literals: 5363
% Trivial inequalities: 1959
% Fw subsumption resolutions: 17859
% Fw demodulations: 38568
% Bw demodulations: 4549
% Condensations: 10130
% Global subsumptions: 47
% 
% Simple tautologies: 1712
% Equational tautologies: 934
% Forward subsumptions: 105043
% Fw demodulations to eq. taut.: 137
% Bw demodulations to eq. taut.: 480
% 
% Unit resulting resolution: 6478
% Forward superposition: 52628
% Backward superposition: 42501
% Self superposition: 665
% Equality factoring: 170
% Equality resolution: 130
% 
% Split clauses: 288
% Split components: 583
% SAT solver clauses: 9470
% SAT solver unit clauses: 175
% SAT solver binary clauses: 1495
% 
% Sat splits: 288
% Sat splitting refutations: 121
% 
% Memory used [KB]: 97866
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.typeSoundInvariants
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSoundInvariants
% SZS output start Proof for thm.typeSoundInvariants
fof(f24275,plain,(
  $false),
  inference(subsumption_resolution,[],[f24220,f140])).
fof(f140,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.typeSoundInvariants.context_invariant_rules|split|0',aHL_FALSITY)).
fof(f24220,plain,(
  p(s(bool,'F_0'))),
  inference(trivial_inequality_removal,[],[f24217])).
fof(f24217,plain,(
  p(s(bool,'F_0')) | s('type.num.num',sK9) != s('type.num.num',sK9)),
  inference(superposition,[],[f19284,f3800])).
fof(f3800,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',sK9),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',sK9)))),
  inference(subsumption_resolution,[],[f3785,f141])).
fof(f141,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.typeSoundInvariants.context_invariant_rules|split|0',aHL_TRUTH)).
fof(f3785,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',sK9),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',sK9)))),
  inference(superposition,[],[f162,f144])).
fof(f144,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.typeSoundInvariants.context_invariant_rules|split|0',aHL_BOOL_CASES)).
fof(f162,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',sK9),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',sK9))))),
  inference(forward_demodulation,[],[f146,f139])).
fof(f139,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3))) = s(X0,'const.pair.pair_CASE_2'(s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))),s(fun(X1,fun(X2,X0)),X5)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3))) = s(X0,'const.pair.pair_CASE_2'(s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))),s(fun(X1,fun(X2,X0)),X5)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3))) = s(X0,'const.pair.pair_CASE_2'(s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))),s(fun(X1,fun(X2,X0)),X5)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X38,X39] : ! [X43,X26,X41] : s(X6,happ(s(fun(X39,X6),happ(s(fun(X38,fun(X39,X6)),X41),s(X38,X26))),s(X39,X43))) = s(X6,'const.pair.pair_CASE_2'(s('type.pair.prod'(X38,X39),'const.pair.,_2'(s(X38,X26),s(X39,X43))),s(fun(X38,fun(X39,X6)),X41)))),
  file('thm.typeSoundInvariants.context_invariant_rules|split|0','thm.pair.pair_case_thm')).
fof(f146,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)),s('type.num.num',sK9))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'))),s('type.num.num',sK9))))),
  inference(resolution,[],[f85,f133])).
fof(f133,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),sK44(X3,X2,X1,X0)),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) | ! [X8] : ((sP7(sK43(X8,X3,X2,X1,X0),X0,X8,sK41(X8,X3,X2,X1,X0),sK42(X8,X3,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X8),s('type.num.num',sK41(X8,X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),sK42(X8,X3,X2,X1,X0)))),s('type.num.num',sK43(X8,X3,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X8),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3)))))) & ((! [X5,X6,X7] : (~sP7(X7,X0,sK44(X3,X2,X1,X0),X5,X6) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),sK44(X3,X2,X1,X0)),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),sK44(X3,X2,X1,X0)),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))) | p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK41,sK42,sK43,sK44])],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) | ! [X8] : (? [X9,X10,X11] : (sP7(X11,X0,X8,X9,X10) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X8),s('type.num.num',X9))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X10))),s('type.num.num',X11))))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X8),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3)))))) & (? [X4] : (! [X5,X6,X7] : (~sP7(X7,X0,X4,X5,X6) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))) | p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3))))))),
  inference(rectify,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) | ! [X4] : (? [X5,X6,X7] : (sP7(X7,X0,X4,X5,X6) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3)))))) & (? [X4] : (! [X5,X6,X7] : (~sP7(X7,X0,X4,X5,X6) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))) | p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3))))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) <=> ! [X4] : (? [X5,X6,X7] : (sP7(X7,X0,X4,X5,X6) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))))),
  inference(definition_folding,[],[f37,f46,f45,f44,f43,f42,f41,f40,f39])).
fof(f39,plain,(
  ! [X7,X0,X4,X5,X6] : (sP0(X7,X0,X4,X5,X6) <=> ? [X8,X9,X10,X11,X12] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Ccon_4'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X9),s('type.list.list'('type.semanticPrimitives.v'),X10),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X11))),s(X0,X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))),s('type.num.num',X7)))) & (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.exp',bool),'const.typeSystem.is_value_0'),s('type.list.list'('type.ast.exp'),X11)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f40,plain,(
  ! [X5,X7,X0,X6] : (sP1(X5,X7,X0,X6) <=> (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) & s('type.num.num',X5) = s('type.num.num',X7) & p(s(bool,'T_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f41,plain,(
  ! [X0,X4,X5,X7,X6] : (sP2(X0,X4,X5,X7,X6) <=> ? [X37,X38] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Craise_1'(s('type.one.one','const.one.one_0'))),s(X0,X38))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))),s('type.num.num','const.num.|48|_0'))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f42,plain,(
  ! [X0,X4,X5,X7,X6] : (sP3(X0,X4,X5,X7,X6) <=> ? [X34,X35,X36] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Chandle_2'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X35))),s(X0,X36))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))),s('type.num.num','const.num.|48|_0'))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f43,plain,(
  ! [X0,X4,X5,X7,X6] : (sP4(X0,X4,X5,X7,X6) <=> ? [X29,X30,X31,X32,X33] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Capp_4'(s('type.ast.op',X30),s('type.list.list'('type.semanticPrimitives.v'),X31),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X32))),s(X0,X33))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))),s('type.num.num','const.num.|48|_0'))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f44,plain,(
  ! [X0,X4,X5,X7,X6] : (sP5(X0,X4,X5,X7,X6) <=> ? [X25,X26,X27,X28] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clog_3'(s('type.ast.lop',X26),s('type.one.one','const.one.one_0'),s('type.ast.exp',X27))),s(X0,X28))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))),s('type.num.num','const.num.|48|_0'))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f45,plain,(
  ! [X0,X4,X5,X7,X6] : (sP6(X0,X4,X5,X7,X6) <=> ? [X21,X22,X23,X24] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cif_3'(s('type.one.one','const.one.one_0'),s('type.ast.exp',X22),s('type.ast.exp',X23))),s(X0,X24))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))),s('type.num.num','const.num.|48|_0'))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f46,plain,(
  ! [X7,X0,X4,X5,X6] : (sP7(X7,X0,X4,X5,X6) <=> (sP1(X5,X7,X0,X6) | sP2(X0,X4,X5,X7,X6) | sP3(X0,X4,X5,X7,X6) | sP4(X0,X4,X5,X7,X6) | sP5(X0,X4,X5,X7,X6) | sP6(X0,X4,X5,X7,X6) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) | sP0(X7,X0,X4,X5,X6)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f37,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) <=> ! [X4] : (? [X5,X6,X7] : (((s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) & s('type.num.num',X5) = s('type.num.num',X7) & p(s(bool,'T_0'))) | ? [X37,X38] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Craise_1'(s('type.one.one','const.one.one_0'))),s(X0,X38))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))),s('type.num.num','const.num.|48|_0'))))) | ? [X34,X35,X36] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Chandle_2'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X35))),s(X0,X36))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))),s('type.num.num','const.num.|48|_0'))))) | ? [X29,X30,X31,X32,X33] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Capp_4'(s('type.ast.op',X30),s('type.list.list'('type.semanticPrimitives.v'),X31),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X32))),s(X0,X33))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))),s('type.num.num','const.num.|48|_0'))))) | ? [X25,X26,X27,X28] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clog_3'(s('type.ast.lop',X26),s('type.one.one','const.one.one_0'),s('type.ast.exp',X27))),s(X0,X28))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))),s('type.num.num','const.num.|48|_0'))))) | ? [X21,X22,X23,X24] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cif_3'(s('type.one.one','const.one.one_0'),s('type.ast.exp',X22),s('type.ast.exp',X23))),s(X0,X24))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))),s('type.num.num','const.num.|48|_0'))))) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) | ? [X8,X9,X10,X11,X12] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Ccon_4'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X9),s('type.list.list'('type.semanticPrimitives.v'),X10),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X11))),s(X0,X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))),s('type.num.num',X7)))) & (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.exp',bool),'const.typeSystem.is_value_0'),s('type.list.list'('type.ast.exp'),X11))))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) <=> ! [X4] : (! [X5,X6,X7] : (((s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) & s('type.num.num',X5) = s('type.num.num',X7) & p(s(bool,'T_0'))) | ? [X37,X38] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Craise_1'(s('type.one.one','const.one.one_0'))),s(X0,X38))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))),s('type.num.num','const.num.|48|_0'))))) | ? [X34,X35,X36] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Chandle_2'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X35))),s(X0,X36))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))),s('type.num.num','const.num.|48|_0'))))) | ? [X29,X30,X31,X32,X33] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Capp_4'(s('type.ast.op',X30),s('type.list.list'('type.semanticPrimitives.v'),X31),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X32))),s(X0,X33))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))),s('type.num.num','const.num.|48|_0'))))) | ? [X25,X26,X27,X28] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clog_3'(s('type.ast.lop',X26),s('type.one.one','const.one.one_0'),s('type.ast.exp',X27))),s(X0,X28))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))),s('type.num.num','const.num.|48|_0'))))) | ? [X21,X22,X23,X24] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cif_3'(s('type.one.one','const.one.one_0'),s('type.ast.exp',X22),s('type.ast.exp',X23))),s(X0,X24))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))),s('type.num.num','const.num.|48|_0'))))) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) | ? [X8,X9,X10,X11,X12] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Ccon_4'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X9),s('type.list.list'('type.semanticPrimitives.v'),X10),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X11))),s(X0,X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))),s('type.num.num',X7)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X7) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.exp',bool),'const.typeSystem.is_value_0'),s('type.list.list'('type.ast.exp'),X11))))))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) <=> ! [X4] : (! [X5,X6,X7] : (((s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) & s('type.num.num',X5) = s('type.num.num',X7) & p(s(bool,'T_0'))) | ? [X37,X38] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Craise_1'(s('type.one.one','const.one.one_0'))),s(X0,X38))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X37))),s('type.num.num','const.num.|48|_0'))))) | ? [X34,X35,X36] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Chandle_2'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X35))),s(X0,X36))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X34))),s('type.num.num','const.num.|48|_0'))))) | ? [X29,X30,X31,X32,X33] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Capp_4'(s('type.ast.op',X30),s('type.list.list'('type.semanticPrimitives.v'),X31),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X32))),s(X0,X33))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X29))),s('type.num.num','const.num.|48|_0'))))) | ? [X25,X26,X27,X28] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clog_3'(s('type.ast.lop',X26),s('type.one.one','const.one.one_0'),s('type.ast.exp',X27))),s(X0,X28))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X25))),s('type.num.num','const.num.|48|_0'))))) | ? [X21,X22,X23,X24] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cif_3'(s('type.one.one','const.one.one_0'),s('type.ast.exp',X22),s('type.ast.exp',X23))),s(X0,X24))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X21))),s('type.num.num','const.num.|48|_0'))))) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) | ? [X8,X9,X10,X11,X12] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Ccon_4'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X9),s('type.list.list'('type.semanticPrimitives.v'),X10),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X11))),s(X0,X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X8))),s('type.num.num',X7)))) & (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.exp',bool),'const.typeSystem.is_value_0'),s('type.list.list'('type.ast.exp'),X11))))))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7))))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X1))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2))),s('type.num.num',X3))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X5,X9,X10] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X9),s('type.num.num',X10)))) <=> ! [X11] : (! [X12,X13,X14] : (((s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) & s('type.num.num',X12) = s('type.num.num',X14) & p(s(bool,'T_0'))) | ? [X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Craise_1'(s('type.one.one','const.one.one_0'))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X17,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Chandle_2'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X17))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X18,X19,X20,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Capp_4'(s('type.ast.op',X18),s('type.list.list'('type.semanticPrimitives.v'),X19),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X20))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X21,X22,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clog_3'(s('type.ast.lop',X21),s('type.one.one','const.one.one_0'),s('type.ast.exp',X22))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X23,X24,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cif_3'(s('type.one.one','const.one.one_0'),s('type.ast.exp',X23),s('type.ast.exp',X24))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X17,X16,X25] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X17),s('type.semanticPrimitives.v',X25))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X26,X22,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X26),s('type.one.one','const.one.one_0'),s('type.ast.exp',X22))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num','const.num.|48|_0'))))) | ? [X15,X27,X19,X20,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X6),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Ccon_4'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X27),s('type.list.list'('type.semanticPrimitives.v'),X19),s('type.one.one','const.one.one_0'),s('type.list.list'('type.ast.exp'),X20))),s(X6,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X15))),s('type.num.num',X14)))) & (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X14) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.exp',bool),'const.typeSystem.is_value_0'),s('type.list.list'('type.ast.exp'),X20))))))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X12))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X13))),s('type.num.num',X14))))) => p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),fun('type.num.num',bool))),X11),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),X9))),s('type.num.num',X10))))))),
  file('thm.typeSoundInvariants.context_invariant_rules|split|0','thm.typeSoundInvariants.context_invariant_def')).
fof(f85,plain,(
  ~p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',sK9),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'),s('type.num.num',sK9))))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  p(s(bool,'T_0')) & ~p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',sK9),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'),s('type.num.num',sK9))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f36])).
fof(f36,plain,(
  ? [X0,X1] : (p(s(bool,'T_0')) & ~p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0'),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1] : (p(s(bool,'T_0')) => p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0'),s('type.num.num',X1)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'T_0')) => p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0'),s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'T_0')) => p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X7),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.NIL_0'),s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'T_0')) => p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X7),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X6)),'const.list.NIL_0'),s('type.num.num',X7)))))),
  file('thm.typeSoundInvariants.context_invariant_rules|split|0','thm.typeSoundInvariants.context_invariant_rules|split|0')).
fof(f19284,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',X0),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0'))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(equality_resolution,[],[f5834])).
fof(f5834,plain,(
  ( ! [X26,X24,X25] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X25) | s('type.num.num',X24) != s('type.num.num',X26) | p(s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',X24),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X25))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',X26))))) )),
  inference(subsumption_resolution,[],[f5818,f141])).
fof(f5818,plain,(
  ( ! [X26,X24,X25] : (p(s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',X24),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X25))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',X26)))) | ~p(s(bool,'T_0')) | s('type.num.num',X24) != s('type.num.num',X26) | s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X25)) )),
  inference(resolution,[],[f1804,f124])).
fof(f124,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(X0,X1,X2,X3) | ~p(s(bool,'T_0')) | s('type.num.num',X0) != s('type.num.num',X1) | s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X2)),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X2)),X3)) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : ((~sP1(X0,X1,X2,X3) | (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X2)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X2)),X3) & s('type.num.num',X0) = s('type.num.num',X1) & p(s(bool,'T_0')))) & (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X2)),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X2)),X3) | s('type.num.num',X0) != s('type.num.num',X1) | ~p(s(bool,'T_0')) | sP1(X0,X1,X2,X3)))),
  inference(rectify,[],[f69])).
fof(f69,plain,(
  ! [X5,X7,X0,X6] : ((~sP1(X5,X7,X0,X6) | (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) & s('type.num.num',X5) = s('type.num.num',X7) & p(s(bool,'T_0')))) & (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) | s('type.num.num',X5) != s('type.num.num',X7) | ~p(s(bool,'T_0')) | sP1(X5,X7,X0,X6)))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X5,X7,X0,X6] : ((~sP1(X5,X7,X0,X6) | (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) & s('type.num.num',X5) = s('type.num.num',X7) & p(s(bool,'T_0')))) & ((s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) | s('type.num.num',X5) != s('type.num.num',X7) | ~p(s(bool,'T_0'))) | sP1(X5,X7,X0,X6)))),
  inference(nnf_transformation,[],[f40])).
fof(f1804,plain,(
  ( ! [X2,X0,X1] : (~sP1(X0,X2,sK8,X1) | p(s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',X0),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X1))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',X2))))) )),
  inference(resolution,[],[f161,f92])).
fof(f92,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7(X0,X1,X2,X3,X4) | ~sP1(X3,X0,X1,X4)) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP7(X0,X1,X2,X3,X4) | sP1(X3,X0,X1,X4) | sP2(X1,X2,X3,X0,X4) | sP3(X1,X2,X3,X0,X4) | sP4(X1,X2,X3,X0,X4) | sP5(X1,X2,X3,X0,X4) | sP6(X1,X2,X3,X0,X4) | (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK11(X4,X3,X2,X1,X0)),s('type.semanticPrimitives.v',sK13(X4,X3,X2,X1,X0)))),s(X1,sK12(X4,X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),sK10(X4,X3,X2,X1,X0)))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),sK10(X4,X3,X2,X1,X0)))),s('type.num.num','const.num.|48|_0'))))) | (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),sK15(X4,X3,X2,X1,X0)),s('type.one.one','const.one.one_0'),s('type.ast.exp',sK16(X4,X3,X2,X1,X0)))),s(X1,sK17(X4,X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),sK14(X4,X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),sK14(X4,X3,X2,X1,X0)))),s('type.num.num','const.num.|48|_0'))))) | sP0(X0,X1,X2,X3,X4)) & ((~sP1(X3,X0,X1,X4) & ~sP2(X1,X2,X3,X0,X4) & ~sP3(X1,X2,X3,X0,X4) & ~sP4(X1,X2,X3,X0,X4) & ~sP5(X1,X2,X3,X0,X4) & ~sP6(X1,X2,X3,X0,X4) & ! [X9,X10,X11,X12] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10),s('type.semanticPrimitives.v',X12))),s(X1,X11))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X9))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X9))),s('type.num.num','const.num.|48|_0'))))) & ! [X5,X6,X7,X8] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.one.one','const.one.one_0'),s('type.ast.exp',X7))),s(X1,X8))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X5))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X5))),s('type.num.num','const.num.|48|_0'))))) & ~sP0(X0,X1,X2,X3,X4)) | sP7(X0,X1,X2,X3,X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17])],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3,X4] : ((~sP7(X0,X1,X2,X3,X4) | sP1(X3,X0,X1,X4) | sP2(X1,X2,X3,X0,X4) | sP3(X1,X2,X3,X0,X4) | sP4(X1,X2,X3,X0,X4) | sP5(X1,X2,X3,X0,X4) | sP6(X1,X2,X3,X0,X4) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X1,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X1,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X13))),s('type.num.num','const.num.|48|_0'))))) | sP0(X0,X1,X2,X3,X4)) & ((~sP1(X3,X0,X1,X4) & ~sP2(X1,X2,X3,X0,X4) & ~sP3(X1,X2,X3,X0,X4) & ~sP4(X1,X2,X3,X0,X4) & ~sP5(X1,X2,X3,X0,X4) & ~sP6(X1,X2,X3,X0,X4) & ! [X9,X10,X11,X12] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10),s('type.semanticPrimitives.v',X12))),s(X1,X11))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X9))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X9))),s('type.num.num','const.num.|48|_0'))))) & ! [X5,X6,X7,X8] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X4) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X1),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.one.one','const.one.one_0'),s('type.ast.exp',X7))),s(X1,X8))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X5))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),fun('type.num.num',bool))),X2),s('type.num.num',X3))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X1)),X5))),s('type.num.num','const.num.|48|_0'))))) & ~sP0(X0,X1,X2,X3,X4)) | sP7(X0,X1,X2,X3,X4)))),
  inference(rectify,[],[f50])).
fof(f50,plain,(
  ! [X7,X0,X4,X5,X6] : ((~sP7(X7,X0,X4,X5,X6) | sP1(X5,X7,X0,X6) | sP2(X0,X4,X5,X7,X6) | sP3(X0,X4,X5,X7,X6) | sP4(X0,X4,X5,X7,X6) | sP5(X0,X4,X5,X7,X6) | sP6(X0,X4,X5,X7,X6) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) | sP0(X7,X0,X4,X5,X6)) & ((~sP1(X5,X7,X0,X6) & ~sP2(X0,X4,X5,X7,X6) & ~sP3(X0,X4,X5,X7,X6) & ~sP4(X0,X4,X5,X7,X6) & ~sP5(X0,X4,X5,X7,X6) & ~sP6(X0,X4,X5,X7,X6) & ! [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X7) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) & ! [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) & ~sP0(X7,X0,X4,X5,X6)) | sP7(X7,X0,X4,X5,X6)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X7,X0,X4,X5,X6] : ((~sP7(X7,X0,X4,X5,X6) | (sP1(X5,X7,X0,X6) | sP2(X0,X4,X5,X7,X6) | sP3(X0,X4,X5,X7,X6) | sP4(X0,X4,X5,X7,X6) | sP5(X0,X4,X5,X7,X6) | sP6(X0,X4,X5,X7,X6) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) = s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) & p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) | sP0(X7,X0,X4,X5,X6))) & ((~sP1(X5,X7,X0,X6) & ~sP2(X0,X4,X5,X7,X6) & ~sP3(X0,X4,X5,X7,X6) & ~sP4(X0,X4,X5,X7,X6) & ~sP5(X0,X4,X5,X7,X6) & ~sP6(X0,X4,X5,X7,X6) & ! [X17,X18,X19,X20] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Cmat_3'(s('type.one.one','const.one.one_0'),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X18),s('type.semanticPrimitives.v',X20))),s(X0,X19))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X7) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X17))),s('type.num.num','const.num.|48|_0'))))) & ! [X13,X14,X15,X16] : (s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6) != s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),'const.list.CONS_2'(s('type.pair.prod'('type.smallStep.ctxt_frame',X0),'const.pair.,_2'(s('type.smallStep.ctxt_frame','const.smallStep.Clet_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.one.one','const.one.one_0'),s('type.ast.exp',X15))),s(X0,X16))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),X4),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X13))),s('type.num.num','const.num.|48|_0'))))) & ~sP0(X7,X0,X4,X5,X6)) | sP7(X7,X0,X4,X5,X6)))),
  inference(nnf_transformation,[],[f46])).
fof(f161,plain,(
  ( ! [X2,X0,X1] : (~sP7(X2,sK8,sK44(sK9,'const.list.NIL_0',sK9,sK8),X0,X1) | p(s(bool,happ(s(fun('type.num.num',bool),'const.pair.pair_CASE_2'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8))),'const.pair.,_2'(s('type.num.num',X0),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X1))),s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f145,f139])).
fof(f145,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),fun('type.num.num',bool))),sK44(sK9,'const.list.NIL_0',sK9,sK8)),s('type.num.num',X0))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',sK8)),X1))),s('type.num.num',X2)))) | ~sP7(X2,sK8,sK44(sK9,'const.list.NIL_0',sK9,sK8),X0,X1)) )),
  inference(resolution,[],[f85,f132])).
fof(f132,plain,(
  ( ! [X6,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.typeSoundInvariants.context_invariant_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X2),s('type.num.num',X3)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),fun('type.num.num',bool))),sK44(X3,X2,X1,X0)),s('type.num.num',X5))),s('type.list.list'('type.pair.prod'('type.smallStep.ctxt_frame',X0)),X6))),s('type.num.num',X7)))) | ~sP7(X7,X0,sK44(X3,X2,X1,X0),X5,X6)) )),
  inference(cnf_transformation,[],[f76])).
% SZS output end Proof for thm.typeSoundInvariants
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 739
% Passive clauses: 5587
% Generated clauses: 26296
% Final active clauses: 334
% Final passive clauses: 1724
% Input formulas: 21
% Initial clauses: 61
% 
% Selected by SInE selection: 9
% SInE iterations: 1
% 
% Duplicate literals: 214
% Trivial inequalities: 756
% Fw subsumption resolutions: 10130
% Fw demodulations: 3670
% Bw demodulations: 17
% 
% Simple tautologies: 202
% Equational tautologies: 52
% Forward subsumptions: 4817
% 
% Binary resolution: 3599
% Forward superposition: 4398
% Backward superposition: 1105
% Equality resolution: 55
% 
% Split clauses: 1109
% Split components: 2218
% SAT solver clauses: 1135
% SAT solver unit clauses: 7
% SAT solver binary clauses: 67
% 
% Sat splits: 1109
% Sat splitting refutations: 23
% 
% Memory used [KB]: 12025
% Time elapsed: 0.885 s
% ------------------------------
% ------------------------------
% Success in time 12.61 s
