Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bigClock
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bigClock
% SZS output start Proof for thm.bigClock
fof(f6992,plain,(
  $false),
  inference(subsumption_resolution,[],[f6991,f58])).
fof(f58,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X3),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X3),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X3),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X13] : ! [X8,X14,X15] : s('type.semanticPrimitives.state'(X13),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.semanticPrimitives.state'(X13),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X15),s('type.semanticPrimitives.state'(X13),X8))))) = s('type.semanticPrimitives.state'(X13),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X15),s('type.semanticPrimitives.state'(X13),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.semanticPrimitives.state'(X13),X8)))))),
  file('thm.bigClock.bigClock_|49|_prove_ltb','thm.semanticPrimitives.semanticPrimitives_25|48|_prove_ltb')).
fof(f6991,plain,(
  s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),sK3))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK1),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK4))),s('type.semanticPrimitives.state'(sK1),sK2))))))) != s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),sK3))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK1),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK4))),s('type.semanticPrimitives.state'(sK1),sK2)))))))),
  inference(forward_demodulation,[],[f51,f65])).
fof(f65,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X4),s('type.semanticPrimitives.state'(X1),X2))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X4),s('type.semanticPrimitives.state'(X1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X4),s('type.semanticPrimitives.state'(X1),X2))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X4),s('type.semanticPrimitives.state'(X1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X1),X2)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X4),s('type.semanticPrimitives.state'(X1),X2))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X4),s('type.semanticPrimitives.state'(X1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.semanticPrimitives.state'(X1),X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X16,X13] : ! [X8,X14,X15] : s('type.semanticPrimitives.state'(X16),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.semanticPrimitives.state'(X16),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X13),'type.ffi.ffi_state'(X16)),X15),s('type.semanticPrimitives.state'(X13),X8))))) = s('type.semanticPrimitives.state'(X16),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X13),'type.ffi.ffi_state'(X16)),X15),s('type.semanticPrimitives.state'(X13),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.semanticPrimitives.state'(X13),X8)))))),
  file('thm.bigClock.bigClock_|49|_prove_ltb','thm.semanticPrimitives.semanticPrimitives_25|49|_prove_ltb')).
fof(f51,plain,(
  s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),sK3))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK1),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK4))),s('type.semanticPrimitives.state'(sK1),sK2))))))) != s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),sK3))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK1),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK4))),s('type.semanticPrimitives.state'(sK1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.semanticPrimitives.state'(sK1),sK2)))))))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),sK3))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK1),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK4))),s('type.semanticPrimitives.state'(sK1),sK2))))))) != s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),sK3))),s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK1),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK4))),s('type.semanticPrimitives.state'(sK1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.semanticPrimitives.state'(sK1),sK2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f46])).
fof(f46,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X4))),s('type.semanticPrimitives.state'(X1),X2))))))) != s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X4))),s('type.semanticPrimitives.state'(X1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.semanticPrimitives.state'(X1),X2)))))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X4))),s('type.semanticPrimitives.state'(X1),X2))))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X4))),s('type.semanticPrimitives.state'(X1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.semanticPrimitives.state'(X1),X2)))))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5] : s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X4))),s('type.semanticPrimitives.state'(X1),X2))))))) = s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X4))),s('type.semanticPrimitives.state'(X1),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.semanticPrimitives.state'(X1),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11] : s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X9))),s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X10))),s('type.semanticPrimitives.state'(X7),X8))))))) = s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X9))),s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X10))),s('type.semanticPrimitives.state'(X7),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.semanticPrimitives.state'(X7),X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11] : s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X9))),s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X10))),s('type.semanticPrimitives.state'(X7),X8))))))) = s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X9))),s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X10))),s('type.semanticPrimitives.state'(X7),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.semanticPrimitives.state'(X7),X8)))))))),
  file('thm.bigClock.bigClock_|49|_prove_ltb','thm.bigClock.bigClock_|49|_prove_ltb')).
% SZS output end Proof for thm.bigClock
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 43
% Passive clauses: 778
% Generated clauses: 6697
% Final active clauses: 41
% Final passive clauses: 677
% Input formulas: 17
% Initial clauses: 18
% 
% Duplicate literals: 587
% Trivial inequalities: 99
% Fw subsumption resolutions: 947
% Fw demodulations: 16
% 
% Simple tautologies: 186
% Equational tautologies: 110
% Forward subsumptions: 2873
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 25
% Forward superposition: 2348
% Backward superposition: 1910
% Self superposition: 380
% Equality factoring: 326
% Equality resolution: 10
% 
% Split clauses: 364
% Split components: 732
% SAT solver clauses: 1155
% SAT solver unit clauses: 235
% SAT solver binary clauses: 393
% 
% Sat splits: 364
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1151
% TWLsolver calls for satisfiability: 34
% 
% Memory used [KB]: 3454
% Time elapsed: 0.492 s
% ------------------------------
% ------------------------------
% Success in time 0.491 s
