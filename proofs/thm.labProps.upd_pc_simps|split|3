Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labProps
% SZS output start Proof for thm.labProps
fof(f13308,plain,(
  $false),
  inference(subsumption_resolution,[],[f248,f12816])).
fof(f12816,plain,(
  ( ! [X10,X11,X9] : (s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X9),X11))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X9),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X9),X10),s('type.asmSem.asm_state'(X9),X11)))))) )),
  inference(superposition,[],[f283,f314])).
fof(f314,plain,(
  ( ! [X2,X0,X1] : (s('type.asmSem.asm_state'(X0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X0),X1),s('type.asmSem.asm_state'(X0),X2))) = s('type.asmSem.asm_state'(X0),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),'const.combin.K_1'(s('type.fcp.cart'(bool,X0),X1))),s('type.asmSem.asm_state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1,X2] : s('type.asmSem.asm_state'(X0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X0),X1),s('type.asmSem.asm_state'(X0),X2))) = s('type.asmSem.asm_state'(X0),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),'const.combin.K_1'(s('type.fcp.cart'(bool,X0),X1))),s('type.asmSem.asm_state'(X0),X2)))),
  inference(flattening,[],[f181])).
fof(f181,plain,(
  ! [X0] : ! [X1,X2] : s('type.asmSem.asm_state'(X0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X0),X1),s('type.asmSem.asm_state'(X0),X2))) = s('type.asmSem.asm_state'(X0),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),'const.combin.K_1'(s('type.fcp.cart'(bool,X0),X1))),s('type.asmSem.asm_state'(X0),X2)))),
  inference(rectify,[],[f71])).
fof(f71,axiom,(
  ! [X6] : ! [X11,X8] : s('type.asmSem.asm_state'(X6),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X6),X11),s('type.asmSem.asm_state'(X6),X8))) = s('type.asmSem.asm_state'(X6),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X6),'type.fcp.cart'(bool,X6)),'const.combin.K_1'(s('type.fcp.cart'(bool,X6),X11))),s('type.asmSem.asm_state'(X6),X8)))),
  file('thm.labProps.upd_pc_simps|split|3','thm.asmSem.upd_pc_def')).
fof(f283,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),X2))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),X1),s('type.asmSem.asm_state'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1,X2] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),X2))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),X1),s('type.asmSem.asm_state'(X0),X2)))))),
  inference(flattening,[],[f119])).
fof(f119,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),X2))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),X1),s('type.asmSem.asm_state'(X0),X2)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6] : ! [X9,X10] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X6),X10))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X6),'const.asmSem.asm_state_pc_fupd_2'(s(fun('type.fcp.cart'(bool,X6),'type.fcp.cart'(bool,X6)),X9),s('type.asmSem.asm_state'(X6),X10)))))),
  file('thm.labProps.upd_pc_simps|split|3','thm.asmSem.asmSem_69_prove_ltb')).
fof(f248,plain,(
  s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(sK0),sK2))) != s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(sK0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,sK0),sK1),s('type.asmSem.asm_state'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f235])).
fof(f235,plain,(
  s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(sK0),sK2))) != s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(sK0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,sK0),sK1),s('type.asmSem.asm_state'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f233])).
fof(f233,plain,(
  ? [X0,X1,X2] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),X2))) != s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X0),X1),s('type.asmSem.asm_state'(X0),X2)))))),
  inference(ennf_transformation,[],[f84])).
fof(f84,plain,(
  ~! [X0,X1,X2] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),X2))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X0),X1),s('type.asmSem.asm_state'(X0),X2)))))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ~! [X0] : ! [X1,X2] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),X2))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X0),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X0),X1),s('type.asmSem.asm_state'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X6),X8))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X6),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X6),X7),s('type.asmSem.asm_state'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X6),X8))) = s(bool,'const.asmSem.asm_state_be_1'(s('type.asmSem.asm_state'(X6),'const.asmSem.upd_pc_2'(s('type.fcp.cart'(bool,X6),X7),s('type.asmSem.asm_state'(X6),X8)))))),
  file('thm.labProps.upd_pc_simps|split|3','thm.labProps.upd_pc_simps|split|3')).
% SZS output end Proof for thm.labProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 116
% Passive clauses: 1497
% Generated clauses: 12973
% Final active clauses: 100
% Final passive clauses: 1104
% Input formulas: 81
% Initial clauses: 92
% 
% Duplicate literals: 453
% Trivial inequalities: 176
% Fw subsumption resolutions: 1043
% Fw demodulations: 1672
% Bw demodulations: 2
% 
% Simple tautologies: 153
% Equational tautologies: 21
% Forward subsumptions: 7798
% 
% Binary resolution: 4
% Forward superposition: 4976
% Backward superposition: 4261
% Self superposition: 157
% Equality factoring: 49
% Equality resolution: 11
% 
% Split clauses: 102
% Split components: 204
% SAT solver clauses: 285
% SAT solver unit clauses: 28
% SAT solver binary clauses: 72
% 
% Sat splits: 102
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 285
% TWLsolver calls for satisfiability: 74
% 
% Memory used [KB]: 11001
% Time elapsed: 0.249 s
% ------------------------------
% ------------------------------
% Success in time 0.26 s
