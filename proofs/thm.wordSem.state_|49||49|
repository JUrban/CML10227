Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (2720)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 139
% Passive clauses: 2332
% Generated clauses: 18032
% Final active clauses: 131
% Final passive clauses: 1983
% Input formulas: 69
% Initial clauses: 140
% 
% Duplicate literals: 697
% Trivial inequalities: 273
% Fw subsumption resolutions: 2395
% Fw demodulations: 3194
% Bw demodulations: 7
% 
% Simple tautologies: 340
% Equational tautologies: 81
% Forward subsumptions: 8512
% 
% Binary resolution: 234
% Factoring: 1
% Forward superposition: 6477
% Backward superposition: 4260
% Self superposition: 181
% Equality factoring: 152
% Equality resolution: 36
% 
% Split clauses: 238
% Split components: 490
% SAT solver clauses: 406
% SAT solver unit clauses: 12
% SAT solver binary clauses: 66
% 
% Sat splits: 238
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 402
% TWLsolver calls for satisfiability: 90
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% (2742)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 206
% Passive clauses: 820
% Generated clauses: 16456
% Final active clauses: 200
% Final passive clauses: 598
% Input formulas: 69
% Initial clauses: 140
% 
% Duplicate literals: 30
% Trivial inequalities: 479
% Fw subsumption resolutions: 605
% Fw demodulations: 3606
% Bw demodulations: 15
% Condensations: 37
% Global subsumptions: 4
% 
% Simple tautologies: 135
% Equational tautologies: 12
% Forward subsumptions: 9411
% 
% Binary resolution: 22
% Factoring: 1
% Forward superposition: 7468
% Backward superposition: 3209
% Self superposition: 83
% Equality factoring: 2
% Equality resolution: 85
% 
% Split clauses: 20
% Split components: 52
% SAT solver clauses: 1464
% SAT solver unit clauses: 178
% SAT solver binary clauses: 121
% SAT solver learnt clauses: 10
% SAT solver learnt literals: 2
% 
% Sat splits: 20
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1446
% TWLsolver calls for satisfiability: 2025
% 
% Memory used [KB]: 25969
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f22552,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f239,f395,f393,f391,f389,f387,f385,f383,f381,f379,f377,f375,f373,f371,f369,f238,f394,f237,f392,f236,f390,f235,f388,f234,f386,f233,f384,f232,f382,f231,f380,f230,f378,f229,f376,f228,f374,f227,f372,f226,f370,f368,f409,f441,f456,f465,f749,f754,f936,f756,f937,f2262,f2268,f2261,f2267,f2265,f2264,f3386,f3459,f3458,f11137,f11152,f9540,f11182,f9539,f11184,f9538,f11185,f9537,f11186,f9536,f11187,f9527,f11188,f9526,f11189,f9522,f11190,f9519,f11191,f9518,f11192,f9517,f11193,f9512,f11194,f9504,f11183,f11195,f11221,f11223,f11225,f11229,f11231,f11233,f11235,f11239,f11241,f11243,f11245,f11269,f11271,f11275,f11615,f11617,f11618,f11620,f11622,f11629,f11630,f11631,f11632,f11633,f11634,f11635,f11636,f12730,f12745,f13006,f13022,f13282,f13298,f13547,f13565,f13823,f13841,f14165,f14185,f14455,f14475,f12202,f1037,f14517,f14516,f14736,f14757,f15023,f15044,f15379,f15402,f15683,f15706,f15976,f16000,f16278,f16302,f16655,f16680,f16978,f17003,f17285,f17311,f17610,f17636,f17686,f17687,f17688,f17689,f17690,f17691,f17692,f17693,f17696,f17697,f17698,f17699,f17700,f17701,f17702,f17703,f18120,f18135,f18173,f464,f463,f18486,f18518,f18952,f18984,f19254,f19288,f19827,f19842,f20323,f20338,f20637,f20673,f21226,f21241,f21540,f21578,f22007,f22039,f22123,f22124,f22125,f22459,f22490,f22549,f22550,f22551])).
fof(f22551,plain,(
  $false | ($spl0 | $spl17 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f385,f22452])).
fof(f22452,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22451,f337])).
fof(f337,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X9) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(flattening,[],[f162])).
fof(f162,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X9) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.num.num',X73) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_handler')).
fof(f22451,plain,(
  s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22368,f337])).
fof(f22368,plain,(
  s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f315])).
fof(f315,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f221,plain,(
  ! [X0,X1,X2,X3] : ((s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) & s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))))) & (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) != s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),X3)))),
  inference(flattening,[],[f220])).
fof(f220,plain,(
  ! [X0,X1,X2,X3] : ((s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) & s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))))) & ((s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) != s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3)))) | s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),X3)))),
  inference(nnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2,X3] : (s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),X3) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) & s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3)))))),
  inference(flattening,[],[f156])).
fof(f156,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),X3) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) & s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : ! [X35,X34] : (s('type.wordSem.state'(X6,X7),X34) = s('type.wordSem.state'(X6,X7),X35) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),X35))) & s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X6,X7),X34))) = s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X6,X7),X35))) & s(fun('type.fcp.cart'(bool,X6),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X6,X7),X34))) = s(fun('type.fcp.cart'(bool,X6),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X6,X7),X35))) & s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X6,X7),X34))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X6,X7),X35))) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X6,X7),X34))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X6,X7),X35))) & s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X6,X7),X34))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X6,X7),X35))) & s('type.ffi.ffi_state'(X7),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X6,X7),X34))) = s('type.ffi.ffi_state'(X7),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X6,X7),X35)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_component_equality')).
fof(f22128,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22127,f22126])).
fof(f22126,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl24)),
  inference(forward_demodulation,[],[f368,f392])).
fof(f22127,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f22550,plain,(
  $false | ($spl0 | $spl24 | $spl28)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f422,f439,f441,f442,f456,f498,f757,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f9663,f10404,f10408,f10409,f11219,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f11686,f11749,f13057,f13114,f13174,f14230,f14287,f14347,f15456,f15513,f15573,f16747,f16804,f16864,f17377,f17434,f17494,f12201,f1001,f1429,f2218,f2221,f9678,f8014,f7855,f19475,f368,f392,f22126,f463,f22127,f22128,f22178,f22232,f22439,f22440,f22443,f22444,f22446,f22447,f22449,f22450,f22452,f22453,f22455,f22456,f22461,f22462,f22464,f22465,f22467,f22468,f22470,f22471,f22473,f22474,f22502,f22506,f22510,f22514,f22518,f22521,f22524,f22528,f22532,f22536,f22540,f22543,f22546,f22489,f22458])).
fof(f22458,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22457,f344])).
fof(f22457,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22366,f344])).
fof(f22366,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f313])).
fof(f22489,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22488,f344])).
fof(f22488,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22353,f344])).
fof(f22353,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f313])).
fof(f22546,plain,(
  ( ! [X47] : (s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) | s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22545,f22439])).
fof(f22545,plain,(
  ( ! [X47] : (s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) | s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22421,f340])).
fof(f22421,plain,(
  ( ! [X47] : (s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f320,f22128])).
fof(f22543,plain,(
  ( ! [X45] : (s(bool,'T_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),X45))) | s('type.wordSem.state'(sK0,sK1),X45) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22419,f339])).
fof(f22419,plain,(
  ( ! [X45] : (s('type.wordSem.state'(sK0,sK1),X45) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),X45))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f319,f22128])).
fof(f22540,plain,(
  ( ! [X43] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) | s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22539,f22443])).
fof(f22539,plain,(
  ( ! [X43] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) | s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22417,f345])).
fof(f22417,plain,(
  ( ! [X43] : (s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f318,f22128])).
fof(f22536,plain,(
  ( ! [X41] : (s('type.num.num',sK11) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) | s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22535,f22446])).
fof(f22535,plain,(
  ( ! [X41] : (s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) | s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22415,f338])).
fof(f22415,plain,(
  ( ! [X41] : (s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f317,f22128])).
fof(f22532,plain,(
  ( ! [X39] : (s('type.num.num',sK10) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) | s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22531,f22449])).
fof(f22531,plain,(
  ( ! [X39] : (s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) | s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22413,f336])).
fof(f22413,plain,(
  ( ! [X39] : (s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f316,f22128])).
fof(f22528,plain,(
  ( ! [X37] : (s('type.num.num',sK9) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) | s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22527,f22452])).
fof(f22527,plain,(
  ( ! [X37] : (s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) | s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22411,f337])).
fof(f22411,plain,(
  ( ! [X37] : (s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f315,f22128])).
fof(f22524,plain,(
  ( ! [X35] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) | s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22523,f22455])).
fof(f22523,plain,(
  ( ! [X35] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) | s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22409,f348])).
fof(f22409,plain,(
  ( ! [X35] : (s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f314,f22128])).
fof(f22521,plain,(
  ( ! [X33] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) | s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22407,f344])).
fof(f22407,plain,(
  ( ! [X33] : (s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f313,f22128])).
fof(f22518,plain,(
  ( ! [X31] : (s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) | s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22517,f22461])).
fof(f22517,plain,(
  ( ! [X31] : (s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) | s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22405,f346])).
fof(f22405,plain,(
  ( ! [X31] : (s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f312,f22128])).
fof(f22514,plain,(
  ( ! [X29] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) | s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22513,f22464])).
fof(f22513,plain,(
  ( ! [X29] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) | s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22403,f347])).
fof(f22403,plain,(
  ( ! [X29] : (s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f311,f22128])).
fof(f22510,plain,(
  ( ! [X27] : (s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) | s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22509,f22467])).
fof(f22509,plain,(
  ( ! [X27] : (s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) | s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22401,f341])).
fof(f22401,plain,(
  ( ! [X27] : (s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f310,f22128])).
fof(f22506,plain,(
  ( ! [X25] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) | s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22505,f22470])).
fof(f22505,plain,(
  ( ! [X25] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) | s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22399,f343])).
fof(f22399,plain,(
  ( ! [X25] : (s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f309,f22128])).
fof(f22502,plain,(
  ( ! [X23] : (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) | s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22501,f22473])).
fof(f22501,plain,(
  ( ! [X23] : (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) | s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22397,f342])).
fof(f22397,plain,(
  ( ! [X23] : (s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl28)),
  inference(superposition,[],[f308,f22128])).
fof(f22474,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22473,f22471])).
fof(f22473,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22472,f342])).
fof(f22472,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22361,f342])).
fof(f22361,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f308])).
fof(f22471,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22470,f22468])).
fof(f22470,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22469,f343])).
fof(f22469,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22362,f343])).
fof(f22362,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f309])).
fof(f22468,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22467,f22465])).
fof(f22467,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22466,f341])).
fof(f22466,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22363,f341])).
fof(f22363,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f310])).
fof(f22465,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22464,f22462])).
fof(f22464,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22463,f347])).
fof(f22463,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22364,f347])).
fof(f22364,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f311])).
fof(f22462,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22461,f22456])).
fof(f22461,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22460,f346])).
fof(f22460,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22365,f346])).
fof(f22365,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f312])).
fof(f22456,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22455,f22453])).
fof(f22455,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22454,f348])).
fof(f22454,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22367,f348])).
fof(f22367,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f314])).
fof(f22453,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22452,f22450])).
fof(f22450,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22449,f22447])).
fof(f22449,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22448,f336])).
fof(f22448,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22369,f336])).
fof(f22369,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f316])).
fof(f22447,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22446,f22444])).
fof(f22446,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22445,f338])).
fof(f22445,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22370,f338])).
fof(f22370,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f317])).
fof(f22444,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22443,f22440])).
fof(f22443,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22442,f345])).
fof(f22442,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22371,f345])).
fof(f22371,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f318])).
fof(f22440,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f22439,f22128])).
fof(f22439,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22438,f340])).
fof(f22438,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f22373,f340])).
fof(f22373,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f22128,f320])).
fof(f22232,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f22198,f240])).
fof(f22198,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f22178,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f22144,f240])).
fof(f22144,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f22127])).
fof(f19475,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f19441,f240])).
fof(f19441,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f7855,plain,(
  ( ! [X92,X90,X88,X91,X89] : (s(bool,'F_0') = s(bool,happ(s(fun(X90,bool),'_dst_x0x1_2'(s(fun(X88,bool),X89),s(fun(X90,X88),X91))),s(X90,X92))) | s(bool,'T_0') = s(bool,happ(s(fun(X88,bool),X89),s(X88,happ(s(fun(X90,X88),X91),s(X90,X92)))))) )),
  inference(superposition,[],[f243,f351])).
fof(f8014,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,'F_0') = s(bool,happ(s(fun(X90,bool),X91),s(X90,happ(s(fun(X89,X90),X92),s(X89,X93))))) | s(bool,'T_0') = s(bool,happ(s(fun(X89,bool),'_dst_x0x1_2'(s(fun(X90,bool),X91),s(fun(X89,X90),X92))),s(X89,X93)))) )),
  inference(superposition,[],[f243,f351])).
fof(f9678,plain,(
  ( ! [X90,X88,X89] : (s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X88),s(fun('type.num.num',bool),X89),s('type.num.num',X90))) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),happ(s(fun(bool,fun(fun('type.num.num',bool),fun('type.num.num',bool))),'const.ind_type.FCONS_0'),s(bool,X88))),s(fun('type.num.num',bool),X89))),s('type.num.num',X90)))) )),
  inference(superposition,[],[f243,f274])).
fof(f2221,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,f(s(X6,sK30(X7,X8,bool,X6)))) | s(fun(X6,bool),X7) = s(fun(X6,bool),X8) | s(bool,'T_0') = s(bool,g(s(X6,sK30(X7,X8,bool,X6))))) )),
  inference(superposition,[],[f307,f243])).
fof(f2218,plain,(
  ( ! [X6,X8,X7] : (s(X8,f(s(bool,'F_0'))) != s(X8,g(s(bool,'F_0'))) | s(fun(bool,X8),X6) = s(fun(bool,X8),X7) | s(bool,'T_0') = s(bool,sK30(X6,X7,X8,bool))) )),
  inference(superposition,[],[f307,f243])).
fof(f1429,plain,(
  ( ! [X12,X10,X11] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',X12))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X10),s(fun('type.num.num',bool),X11),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))) )),
  inference(superposition,[],[f272,f243])).
fof(f1001,plain,(
  ( ! [X8,X7] : (s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X7),X8))) | s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X7),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X7),X8)))) )),
  inference(superposition,[],[f279,f243])).
fof(f12201,plain,(
  ( ! [X4,X3] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X4)))) | s(bool,'T_0') = s(bool,sK28(X3,X4,bool))) )),
  inference(superposition,[],[f271,f243])).
fof(f17494,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f17454,f240])).
fof(f17454,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f17434,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f17394,f240])).
fof(f17394,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f17377])).
fof(f17377,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f16864,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f16824,f240])).
fof(f16824,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f16804,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f16764,f240])).
fof(f16764,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f16747])).
fof(f16747,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f15573,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f15533,f240])).
fof(f15533,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f15513,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f15473,f240])).
fof(f15473,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f15456])).
fof(f15456,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f14347,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f14307,f240])).
fof(f14307,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f14287,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f14247,f240])).
fof(f14247,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f14230])).
fof(f14230,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f13174,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f13134,f240])).
fof(f13134,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f13114,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f13074,f240])).
fof(f13074,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f13057])).
fof(f13057,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f11749,plain,(
  ( ! [X3] : (s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(subsumption_resolution,[],[f11713,f240])).
fof(f11713,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK26) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl28),
  inference(superposition,[],[f442,f463])).
fof(f11686,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f11650,f240])).
fof(f11650,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl24 | $spl28)),
  inference(superposition,[],[f442,f11219])).
fof(f242,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordSem.state_|49||49|',aHL_FALSITY)).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X79] : (s(bool,'F_0') = s(bool,X79) <=> ~p(s(bool,X79)))),
  file('thm.wordSem.state_|49||49|','thm.bool.EQ_CLAUSES|split|3')).
fof(f249,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f204])).
fof(f553,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X3),s(fun('type.num.num',bool),X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f269,f243])).
fof(f605,plain,(
  ( ! [X6,X4,X5] : (s(bool,'F_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.pair.SND_1'(s('type.pair.prod'(X4,bool),'const.pair.,_2'(s(X4,X5),s(bool,X6)))))) )),
  inference(superposition,[],[f281,f243])).
fof(f661,plain,(
  ( ! [X6,X4,X5] : (s(bool,'F_0') = s(bool,X5) | s(bool,'T_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X4),'const.pair.,_2'(s(bool,X5),s(X4,X6)))))) )),
  inference(superposition,[],[f282,f243])).
fof(f7858,plain,(
  ( ! [X103,X107,X105,X106,X104] : (s(bool,'F_0') != s(bool,happ(s(fun(X105,bool),'_dst_x0x1_2'(s(fun(X103,bool),X104),s(fun(X105,X103),X106))),s(X105,X107))) | ~p(s(bool,happ(s(fun(X103,bool),X104),s(X103,happ(s(fun(X105,X103),X106),s(X105,X107))))))) )),
  inference(superposition,[],[f248,f351])).
fof(f7859,plain,(
  ( ! [X111,X109,X112,X110,X108] : (p(s(bool,happ(s(fun(X110,bool),'_dst_x0x1_2'(s(fun(X108,bool),X109),s(fun(X110,X108),X111))),s(X110,X112)))) | s(bool,'F_0') = s(bool,happ(s(fun(X108,bool),X109),s(X108,happ(s(fun(X110,X108),X111),s(X110,X112)))))) )),
  inference(superposition,[],[f249,f351])).
fof(f8017,plain,(
  ( ! [X107,X105,X108,X106,X104] : (s(bool,'F_0') != s(bool,happ(s(fun(X105,bool),X106),s(X105,happ(s(fun(X104,X105),X107),s(X104,X108))))) | ~p(s(bool,happ(s(fun(X104,bool),'_dst_x0x1_2'(s(fun(X105,bool),X106),s(fun(X104,X105),X107))),s(X104,X108))))) )),
  inference(superposition,[],[f248,f351])).
fof(f8018,plain,(
  ( ! [X111,X109,X112,X110,X113] : (p(s(bool,happ(s(fun(X110,bool),X111),s(X110,happ(s(fun(X109,X110),X112),s(X109,X113)))))) | s(bool,'F_0') = s(bool,happ(s(fun(X109,bool),'_dst_x0x1_2'(s(fun(X110,bool),X111),s(fun(X109,X110),X112))),s(X109,X113)))) )),
  inference(superposition,[],[f249,f351])).
fof(f8148,plain,(
  ( ! [X1009,X1006,X1004,X1010,X1008,X1003,X1007,X1005] : (s('type.wordSem.state'(X1003,X1004),X1010) != s('type.wordSem.state'(X1003,X1004),happ(s(fun(X1006,'type.wordSem.state'(X1003,X1004)),X1007),s(X1006,happ(s(fun(X1005,X1006),X1008),s(X1005,X1009))))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X1003,X1004),X1010))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X1003,X1004),happ(s(fun(X1005,'type.wordSem.state'(X1003,X1004)),'_dst_x0x1_2'(s(fun(X1006,'type.wordSem.state'(X1003,X1004)),X1007),s(fun(X1005,X1006),X1008))),s(X1005,X1009)))))) )),
  inference(superposition,[],[f319,f351])).
fof(f7989,plain,(
  ( ! [X1009,X1002,X1006,X1004,X1008,X1003,X1007,X1005] : (s('type.wordSem.state'(X1002,X1003),X1009) != s('type.wordSem.state'(X1002,X1003),happ(s(fun(X1006,'type.wordSem.state'(X1002,X1003)),'_dst_x0x1_2'(s(fun(X1004,'type.wordSem.state'(X1002,X1003)),X1005),s(fun(X1006,X1004),X1007))),s(X1006,X1008))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X1002,X1003),X1009))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X1002,X1003),happ(s(fun(X1004,'type.wordSem.state'(X1002,X1003)),X1005),s(X1004,happ(s(fun(X1006,X1004),X1007),s(X1006,X1008)))))))) )),
  inference(superposition,[],[f319,f351])).
fof(f319,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f321,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),X3) | s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X2))) != s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))) | s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) != s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f7739,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f319])).
fof(f7856,plain,(
  ( ! [X94,X97,X95,X93,X96] : (p(s(bool,happ(s(fun(X95,bool),'_dst_x0x1_2'(s(fun(X93,bool),X94),s(fun(X95,X93),X96))),s(X95,X97)))) | s(bool,'T_0') != s(bool,happ(s(fun(X93,bool),X94),s(X93,happ(s(fun(X95,X93),X96),s(X95,X97)))))) )),
  inference(superposition,[],[f244,f351])).
fof(f7857,plain,(
  ( ! [X101,X99,X102,X100,X98] : (~p(s(bool,happ(s(fun(X100,bool),'_dst_x0x1_2'(s(fun(X98,bool),X99),s(fun(X100,X98),X101))),s(X100,X102)))) | s(bool,'T_0') = s(bool,happ(s(fun(X98,bool),X99),s(X98,happ(s(fun(X100,X98),X101),s(X100,X102)))))) )),
  inference(superposition,[],[f245,f351])).
fof(f7860,plain,(
  ( ! [X118,X116,X114,X117,X115,X113] : (p(s(bool,happ(s(fun(X115,bool),'_dst_x0x1_2'(s(fun(X113,bool),X114),s(fun(X115,X113),X116))),s(X115,X117)))) | p(s(bool,X118)) | s(bool,X118) = s(bool,happ(s(fun(X113,bool),X114),s(X113,happ(s(fun(X115,X113),X116),s(X115,X117)))))) )),
  inference(superposition,[],[f275,f351])).
fof(f7862,plain,(
  ( ! [X127,X125,X130,X128,X126,X129] : (~p(s(bool,happ(s(fun(X127,bool),'_dst_x0x1_2'(s(fun(X125,bool),X126),s(fun(X127,X125),X128))),s(X127,X129)))) | ~p(s(bool,X130)) | s(bool,X130) = s(bool,happ(s(fun(X125,bool),X126),s(X125,happ(s(fun(X127,X125),X128),s(X127,X129)))))) )),
  inference(superposition,[],[f278,f351])).
fof(f7863,plain,(
  ( ! [X134,X132,X136,X135,X133,X131] : (~p(s(bool,happ(s(fun(X133,bool),'_dst_x0x1_2'(s(fun(X131,bool),X132),s(fun(X133,X131),X134))),s(X133,X135)))) | s(bool,X136) != s(bool,happ(s(fun(X131,bool),X132),s(X131,happ(s(fun(X133,X131),X134),s(X133,X135))))) | s(bool,'T_0') = s(bool,X136)) )),
  inference(superposition,[],[f442,f351])).
fof(f7864,plain,(
  ( ! [X142,X140,X138,X141,X139,X137] : (p(s(bool,happ(s(fun(X139,bool),'_dst_x0x1_2'(s(fun(X137,bool),X138),s(fun(X139,X137),X140))),s(X139,X141)))) | s(bool,X142) = s(bool,happ(s(fun(X137,bool),X138),s(X137,happ(s(fun(X139,X137),X140),s(X139,X141))))) | s(bool,'T_0') = s(bool,X142)) )),
  inference(superposition,[],[f498,f351])).
fof(f8015,plain,(
  ( ! [X94,X97,X95,X98,X96] : (p(s(bool,happ(s(fun(X95,bool),X96),s(X95,happ(s(fun(X94,X95),X97),s(X94,X98)))))) | s(bool,'T_0') != s(bool,happ(s(fun(X94,bool),'_dst_x0x1_2'(s(fun(X95,bool),X96),s(fun(X94,X95),X97))),s(X94,X98)))) )),
  inference(superposition,[],[f244,f351])).
fof(f8016,plain,(
  ( ! [X103,X101,X99,X102,X100] : (~p(s(bool,happ(s(fun(X100,bool),X101),s(X100,happ(s(fun(X99,X100),X102),s(X99,X103)))))) | s(bool,'T_0') = s(bool,happ(s(fun(X99,bool),'_dst_x0x1_2'(s(fun(X100,bool),X101),s(fun(X99,X100),X102))),s(X99,X103)))) )),
  inference(superposition,[],[f245,f351])).
fof(f8019,plain,(
  ( ! [X118,X116,X114,X119,X117,X115] : (p(s(bool,happ(s(fun(X115,bool),X116),s(X115,happ(s(fun(X114,X115),X117),s(X114,X118)))))) | p(s(bool,X119)) | s(bool,X119) = s(bool,happ(s(fun(X114,bool),'_dst_x0x1_2'(s(fun(X115,bool),X116),s(fun(X114,X115),X117))),s(X114,X118)))) )),
  inference(superposition,[],[f275,f351])).
fof(f8021,plain,(
  ( ! [X127,X130,X128,X126,X131,X129] : (~p(s(bool,happ(s(fun(X127,bool),X128),s(X127,happ(s(fun(X126,X127),X129),s(X126,X130)))))) | ~p(s(bool,X131)) | s(bool,X131) = s(bool,happ(s(fun(X126,bool),'_dst_x0x1_2'(s(fun(X127,bool),X128),s(fun(X126,X127),X129))),s(X126,X130)))) )),
  inference(superposition,[],[f278,f351])).
fof(f8022,plain,(
  ( ! [X134,X132,X136,X135,X133,X137] : (~p(s(bool,happ(s(fun(X133,bool),X134),s(X133,happ(s(fun(X132,X133),X135),s(X132,X136)))))) | s(bool,X137) != s(bool,happ(s(fun(X132,bool),'_dst_x0x1_2'(s(fun(X133,bool),X134),s(fun(X132,X133),X135))),s(X132,X136))) | s(bool,'T_0') = s(bool,X137)) )),
  inference(superposition,[],[f442,f351])).
fof(f8023,plain,(
  ( ! [X142,X140,X138,X143,X141,X139] : (p(s(bool,happ(s(fun(X139,bool),X140),s(X139,happ(s(fun(X138,X139),X141),s(X138,X142)))))) | s(bool,X143) = s(bool,happ(s(fun(X138,bool),'_dst_x0x1_2'(s(fun(X139,bool),X140),s(fun(X138,X139),X141))),s(X138,X142))) | s(bool,'T_0') = s(bool,X143)) )),
  inference(superposition,[],[f498,f351])).
fof(f8011,plain,(
  ( ! [X78,X76,X79,X77,X75] : (~p(s(bool,happ(s(fun(X76,bool),X77),s(X76,happ(s(fun(X75,X76),X78),s(X75,sK28(X79,'_dst_x0x1_2'(s(fun(X76,bool),X77),s(fun(X75,X76),X78)),X75))))))) | p(s(bool,'|dollar|exists_1'(s(fun(X75,bool),'_dst_x0x1_2'(s(fun(X76,bool),X77),s(fun(X75,X76),X78))))))) )),
  inference(superposition,[],[f271,f351])).
fof(f271,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK28(X2,X1,X0))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((s(X0,X2) = s(X0,sK28(X2,X1,X0)) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK28(X2,X1,X0)))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK28])],[f195])).
fof(f195,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(ennf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : ! [X92,X79] : (! [X80] : (s(X6,X79) = s(X6,X80) => p(s(bool,happ(s(fun(X6,bool),X92),s(X6,X80))))) => p(s(bool,'|dollar|exists_1'(s(fun(X6,bool),X92)))))),
  file('thm.wordSem.state_|49||49|','thm.bool.JRH_INDUCT_UTIL')).
fof(f938,plain,(
  ( ! [X4,X2,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2)))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK28(X4,'const.ind_type.FCONS_3'(s(fun(X1,bool),X2),s(fun('type.num.num',fun(X1,bool)),X3),s('type.num.num','const.num.|48|_0')),X1)))))) )),
  inference(forward_demodulation,[],[f926,f269])).
fof(f926,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK28(X4,'const.ind_type.FCONS_3'(s(fun(X1,bool),X2),s(fun('type.num.num',fun(X1,bool)),X3),s('type.num.num','const.num.|48|_0')),X1))))) | p(s(bool,'|dollar|exists_1'(s(fun(X1,bool),'const.ind_type.FCONS_3'(s(fun(X1,bool),X2),s(fun('type.num.num',fun(X1,bool)),X3),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f271,f269])).
fof(f940,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,'|dollar|exists_1'(s(fun(X10,bool),X12)))) | ~p(s(bool,happ(s(fun(X10,bool),X12),s(X10,sK28(X14,'const.pair.FST_1'(s('type.pair.prod'(fun(X10,bool),X11),'const.pair.,_2'(s(fun(X10,bool),X12),s(X11,X13)))),X10)))))) )),
  inference(forward_demodulation,[],[f928,f282])).
fof(f928,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,happ(s(fun(X10,bool),X12),s(X10,sK28(X14,'const.pair.FST_1'(s('type.pair.prod'(fun(X10,bool),X11),'const.pair.,_2'(s(fun(X10,bool),X12),s(X11,X13)))),X10))))) | p(s(bool,'|dollar|exists_1'(s(fun(X10,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X10,bool),X11),'const.pair.,_2'(s(fun(X10,bool),X12),s(X11,X13))))))))) )),
  inference(superposition,[],[f271,f282])).
fof(f939,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(X5,bool),X8)))) | ~p(s(bool,happ(s(fun(X5,bool),X8),s(X5,sK28(X9,'const.pair.SND_1'(s('type.pair.prod'(X6,fun(X5,bool)),'const.pair.,_2'(s(X6,X7),s(fun(X5,bool),X8)))),X5)))))) )),
  inference(forward_demodulation,[],[f927,f281])).
fof(f927,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,happ(s(fun(X5,bool),X8),s(X5,sK28(X9,'const.pair.SND_1'(s('type.pair.prod'(X6,fun(X5,bool)),'const.pair.,_2'(s(X6,X7),s(fun(X5,bool),X8)))),X5))))) | p(s(bool,'|dollar|exists_1'(s(fun(X5,bool),'const.pair.SND_1'(s('type.pair.prod'(X6,fun(X5,bool)),'const.pair.,_2'(s(X6,X7),s(fun(X5,bool),X8))))))))) )),
  inference(superposition,[],[f271,f281])).
fof(f1486,plain,(
  ( ! [X103,X101,X105,X102,X104] : (p(s(bool,'|dollar|exists_1'(s(fun(X101,bool),happ(s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num',X104)))))) | ~p(s(bool,happ(s(fun(X101,bool),happ(s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num',X104))),s(X101,sK28(X105,'const.ind_type.FCONS_3'(s(fun(X101,bool),X102),s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num','const.num.SUC_1'(s('type.num.num',X104)))),X101)))))) )),
  inference(forward_demodulation,[],[f1454,f272])).
fof(f1454,plain,(
  ( ! [X103,X101,X105,X102,X104] : (~p(s(bool,happ(s(fun(X101,bool),happ(s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num',X104))),s(X101,sK28(X105,'const.ind_type.FCONS_3'(s(fun(X101,bool),X102),s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num','const.num.SUC_1'(s('type.num.num',X104)))),X101))))) | p(s(bool,'|dollar|exists_1'(s(fun(X101,bool),'const.ind_type.FCONS_3'(s(fun(X101,bool),X102),s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num','const.num.SUC_1'(s('type.num.num',X104))))))))) )),
  inference(superposition,[],[f271,f272])).
fof(f7931,plain,(
  ( ! [X540,X542,X545,X541,X543,X539,X544] : (~p(s(bool,happ(s(fun(X539,bool),happ(s(fun(X542,fun(X539,bool)),'_dst_x0x1_2'(s(fun(X540,fun(X539,bool)),X541),s(fun(X542,X540),X543))),s(X542,X544))),s(X539,sK28(X545,happ(s(fun(X540,fun(X539,bool)),X541),s(X540,happ(s(fun(X542,X540),X543),s(X542,X544)))),X539))))) | p(s(bool,'|dollar|exists_1'(s(fun(X539,bool),happ(s(fun(X540,fun(X539,bool)),X541),s(X540,happ(s(fun(X542,X540),X543),s(X542,X544))))))))) )),
  inference(superposition,[],[f271,f351])).
fof(f8090,plain,(
  ( ! [X540,X542,X546,X545,X541,X543,X544] : (~p(s(bool,happ(s(fun(X540,bool),happ(s(fun(X542,fun(X540,bool)),X543),s(X542,happ(s(fun(X541,X542),X544),s(X541,X545))))),s(X540,sK28(X546,happ(s(fun(X541,fun(X540,bool)),'_dst_x0x1_2'(s(fun(X542,fun(X540,bool)),X543),s(fun(X541,X542),X544))),s(X541,X545)),X540))))) | p(s(bool,'|dollar|exists_1'(s(fun(X540,bool),happ(s(fun(X541,fun(X540,bool)),'_dst_x0x1_2'(s(fun(X542,fun(X540,bool)),X543),s(fun(X541,X542),X544))),s(X541,X545))))))) )),
  inference(superposition,[],[f271,f351])).
fof(f9895,plain,(
  ( ! [X416,X418,X415,X417,X419] : (p(s(bool,'|dollar|exists_1'(s(fun(X415,bool),'const.ind_type.FCONS_3'(s(fun(X415,bool),X416),s(fun('type.num.num',fun(X415,bool)),X417),s('type.num.num',X418)))))) | ~p(s(bool,happ(s(fun(X415,bool),'const.ind_type.FCONS_3'(s(fun(X415,bool),X416),s(fun('type.num.num',fun(X415,bool)),X417),s('type.num.num',X418))),s(X415,sK28(X419,happ(s(fun('type.num.num',fun(X415,bool)),happ(s(fun(fun('type.num.num',fun(X415,bool)),fun('type.num.num',fun(X415,bool))),happ(s(fun(fun(X415,bool),fun(fun('type.num.num',fun(X415,bool)),fun('type.num.num',fun(X415,bool)))),'const.ind_type.FCONS_0'),s(fun(X415,bool),X416))),s(fun('type.num.num',fun(X415,bool)),X417))),s('type.num.num',X418)),X415)))))) )),
  inference(forward_demodulation,[],[f9762,f274])).
fof(f9762,plain,(
  ( ! [X416,X418,X415,X417,X419] : (~p(s(bool,happ(s(fun(X415,bool),'const.ind_type.FCONS_3'(s(fun(X415,bool),X416),s(fun('type.num.num',fun(X415,bool)),X417),s('type.num.num',X418))),s(X415,sK28(X419,happ(s(fun('type.num.num',fun(X415,bool)),happ(s(fun(fun('type.num.num',fun(X415,bool)),fun('type.num.num',fun(X415,bool))),happ(s(fun(fun(X415,bool),fun(fun('type.num.num',fun(X415,bool)),fun('type.num.num',fun(X415,bool)))),'const.ind_type.FCONS_0'),s(fun(X415,bool),X416))),s(fun('type.num.num',fun(X415,bool)),X417))),s('type.num.num',X418)),X415))))) | p(s(bool,'|dollar|exists_1'(s(fun(X415,bool),happ(s(fun('type.num.num',fun(X415,bool)),happ(s(fun(fun('type.num.num',fun(X415,bool)),fun('type.num.num',fun(X415,bool))),happ(s(fun(fun(X415,bool),fun(fun('type.num.num',fun(X415,bool)),fun('type.num.num',fun(X415,bool)))),'const.ind_type.FCONS_0'),s(fun(X415,bool),X416))),s(fun('type.num.num',fun(X415,bool)),X417))),s('type.num.num',X418))))))) )),
  inference(superposition,[],[f271,f274])).
fof(f1036,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,'|dollar|exists_1'(s(fun(X59,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X59,bool),X60),X61)))))) | ~p(s(bool,happ(s(fun(X59,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X59,bool),X60),X61))),s(X59,sK28(X62,happ(s(fun('type.pair.prod'(fun(X59,bool),X60),fun(X59,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(X59,bool),X60),X61)),X59)))))) )),
  inference(forward_demodulation,[],[f1021,f279])).
fof(f1021,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,happ(s(fun(X59,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X59,bool),X60),X61))),s(X59,sK28(X62,happ(s(fun('type.pair.prod'(fun(X59,bool),X60),fun(X59,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(X59,bool),X60),X61)),X59))))) | p(s(bool,'|dollar|exists_1'(s(fun(X59,bool),happ(s(fun('type.pair.prod'(fun(X59,bool),X60),fun(X59,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(X59,bool),X60),X61))))))) )),
  inference(superposition,[],[f271,f279])).
fof(f9677,plain,(
  ( ! [X87,X85,X86] : (~p(s(bool,'const.ind_type.FCONS_3'(s(bool,X85),s(fun('type.num.num',bool),X86),s('type.num.num',sK28(X87,happ(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),happ(s(fun(bool,fun(fun('type.num.num',bool),fun('type.num.num',bool))),'const.ind_type.FCONS_0'),s(bool,X85))),s(fun('type.num.num',bool),X86)),'type.num.num'))))) | p(s(bool,'|dollar|exists_1'(s(fun('type.num.num',bool),happ(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),happ(s(fun(bool,fun(fun('type.num.num',bool),fun('type.num.num',bool))),'const.ind_type.FCONS_0'),s(bool,X85))),s(fun('type.num.num',bool),X86))))))) )),
  inference(superposition,[],[f271,f274])).
fof(f1007,plain,(
  ( ! [X24,X25] : (~p(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X24),sK28(X25,'const.pair.FST_0','type.pair.prod'(bool,X24)))))) | p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X24),bool),'const.pair.FST_0'))))) )),
  inference(superposition,[],[f271,f279])).
fof(f270,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,sK28(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f217])).
fof(f750,plain,(
  ( ! [X4,X2,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X1,bool),X2)))) | s(X1,X4) = s(X1,sK28(X4,'const.ind_type.FCONS_3'(s(fun(X1,bool),X2),s(fun('type.num.num',fun(X1,bool)),X3),s('type.num.num','const.num.|48|_0')),X1))) )),
  inference(superposition,[],[f270,f269])).
fof(f751,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(X5,bool),X8)))) | s(X5,X9) = s(X5,sK28(X9,'const.pair.SND_1'(s('type.pair.prod'(X6,fun(X5,bool)),'const.pair.,_2'(s(X6,X7),s(fun(X5,bool),X8)))),X5))) )),
  inference(superposition,[],[f270,f281])).
fof(f752,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,'|dollar|exists_1'(s(fun(X10,bool),X12)))) | s(X10,X14) = s(X10,sK28(X14,'const.pair.FST_1'(s('type.pair.prod'(fun(X10,bool),X11),'const.pair.,_2'(s(fun(X10,bool),X12),s(X11,X13)))),X10))) )),
  inference(superposition,[],[f270,f282])).
fof(f1455,plain,(
  ( ! [X109,X107,X110,X108,X106] : (p(s(bool,'|dollar|exists_1'(s(fun(X106,bool),happ(s(fun('type.num.num',fun(X106,bool)),X108),s('type.num.num',X109)))))) | s(X106,X110) = s(X106,sK28(X110,'const.ind_type.FCONS_3'(s(fun(X106,bool),X107),s(fun('type.num.num',fun(X106,bool)),X108),s('type.num.num','const.num.SUC_1'(s('type.num.num',X109)))),X106))) )),
  inference(superposition,[],[f270,f272])).
fof(f8091,plain,(
  ( ! [X553,X549,X551,X547,X552,X548,X550] : (p(s(bool,'|dollar|exists_1'(s(fun(X547,bool),happ(s(fun(X549,fun(X547,bool)),X550),s(X549,happ(s(fun(X548,X549),X551),s(X548,X552)))))))) | s(X547,X553) = s(X547,sK28(X553,happ(s(fun(X548,fun(X547,bool)),'_dst_x0x1_2'(s(fun(X549,fun(X547,bool)),X550),s(fun(X548,X549),X551))),s(X548,X552)),X547))) )),
  inference(superposition,[],[f270,f351])).
fof(f7932,plain,(
  ( ! [X546,X549,X551,X547,X552,X548,X550] : (p(s(bool,'|dollar|exists_1'(s(fun(X546,bool),happ(s(fun(X549,fun(X546,bool)),'_dst_x0x1_2'(s(fun(X547,fun(X546,bool)),X548),s(fun(X549,X547),X550))),s(X549,X551)))))) | s(X546,X552) = s(X546,sK28(X552,happ(s(fun(X547,fun(X546,bool)),X548),s(X547,happ(s(fun(X549,X547),X550),s(X549,X551)))),X546))) )),
  inference(superposition,[],[f270,f351])).
fof(f9763,plain,(
  ( ! [X420,X422,X424,X421,X423] : (p(s(bool,'|dollar|exists_1'(s(fun(X420,bool),'const.ind_type.FCONS_3'(s(fun(X420,bool),X421),s(fun('type.num.num',fun(X420,bool)),X422),s('type.num.num',X423)))))) | s(X420,X424) = s(X420,sK28(X424,happ(s(fun('type.num.num',fun(X420,bool)),happ(s(fun(fun('type.num.num',fun(X420,bool)),fun('type.num.num',fun(X420,bool))),happ(s(fun(fun(X420,bool),fun(fun('type.num.num',fun(X420,bool)),fun('type.num.num',fun(X420,bool)))),'const.ind_type.FCONS_0'),s(fun(X420,bool),X421))),s(fun('type.num.num',fun(X420,bool)),X422))),s('type.num.num',X423)),X420))) )),
  inference(superposition,[],[f270,f274])).
fof(f1022,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,'|dollar|exists_1'(s(fun(X63,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X63,bool),X64),X65)))))) | s(X63,X66) = s(X63,sK28(X66,happ(s(fun('type.pair.prod'(fun(X63,bool),X64),fun(X63,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(X63,bool),X64),X65)),X63))) )),
  inference(superposition,[],[f270,f279])).
fof(f11219,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f463,f392])).
fof(f10409,plain,(
  ( ! [X14,X19,X17,X15,X13,X20,X18,X16] : (s('type.wordSem.state'(X13,X14),X20) != s('type.wordSem.state'(X13,X14),happ(s(fun(X16,'type.wordSem.state'(X13,X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X13)),'type.pair.prod'(fun('type.fcp.cart'(bool,X13),'type.wordSem.word_loc'(X13)),'type.pair.prod'(fun('type.fcp.cart'(bool,X13),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X13))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X13)),'type.pair.prod'(fun('type.fcp.cart'(bool,X13),'type.wordSem.word_loc'(X13)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X13)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X13,X14),X20))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X13)),'type.pair.prod'(fun('type.fcp.cart'(bool,X13),'type.wordSem.word_loc'(X13)),'type.pair.prod'(fun('type.fcp.cart'(bool,X13),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X13))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X13)),'type.pair.prod'(fun('type.fcp.cart'(bool,X13),'type.wordSem.word_loc'(X13)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X13)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X13,X14),happ(s(fun(X15,'type.wordSem.state'(X13,X14)),'_dst_x0x1_2'(s(fun(X16,'type.wordSem.state'(X13,X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))))) )),
  inference(superposition,[],[f314,f351])).
fof(f10408,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X11,X9] : (s('type.wordSem.state'(X5,X6),X12) != s('type.wordSem.state'(X5,X6),happ(s(fun(X9,'type.wordSem.state'(X5,X6)),'_dst_x0x1_2'(s(fun(X7,'type.wordSem.state'(X5,X6)),X8),s(fun(X9,X7),X10))),s(X9,X11))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X5)),'type.pair.prod'(fun('type.fcp.cart'(bool,X5),'type.wordSem.word_loc'(X5)),'type.pair.prod'(fun('type.fcp.cart'(bool,X5),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X5))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X5)),'type.pair.prod'(fun('type.fcp.cart'(bool,X5),'type.wordSem.word_loc'(X5)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X5)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X5,X6),X12))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X5)),'type.pair.prod'(fun('type.fcp.cart'(bool,X5),'type.wordSem.word_loc'(X5)),'type.pair.prod'(fun('type.fcp.cart'(bool,X5),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X5))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X5)),'type.pair.prod'(fun('type.fcp.cart'(bool,X5),'type.wordSem.word_loc'(X5)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X5)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X5,X6),happ(s(fun(X7,'type.wordSem.state'(X5,X6)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11)))))))) )),
  inference(superposition,[],[f314,f351])).
fof(f10404,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f314])).
fof(f9663,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X4,happ(s(fun(X0,X4),X5),s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))))) = s(X4,happ(s(fun('type.num.num',X4),'_dst_x0x1_2'(s(fun(X0,X4),X5),s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f351,f274])).
fof(f8150,plain,(
  ( ! [X1019,X1023,X1021,X1025,X1022,X1020,X1026,X1024] : (s('type.wordSem.state'(X1019,X1020),X1026) != s('type.wordSem.state'(X1019,X1020),happ(s(fun(X1022,'type.wordSem.state'(X1019,X1020)),X1023),s(X1022,happ(s(fun(X1021,X1022),X1024),s(X1021,X1025))))) | s('type.ffi.ffi_state'(X1020),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X1019,X1020),X1026))) = s('type.ffi.ffi_state'(X1020),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X1019,X1020),happ(s(fun(X1021,'type.wordSem.state'(X1019,X1020)),'_dst_x0x1_2'(s(fun(X1022,'type.wordSem.state'(X1019,X1020)),X1023),s(fun(X1021,X1022),X1024))),s(X1021,X1025)))))) )),
  inference(superposition,[],[f320,f351])).
fof(f8146,plain,(
  ( ! [X990,X988,X994,X992,X987,X991,X989,X993] : (s('type.wordSem.state'(X987,X988),X994) != s('type.wordSem.state'(X987,X988),happ(s(fun(X990,'type.wordSem.state'(X987,X988)),X991),s(X990,happ(s(fun(X989,X990),X992),s(X989,X993))))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X987))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X987,X988),X994))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X987))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X987,X988),happ(s(fun(X989,'type.wordSem.state'(X987,X988)),'_dst_x0x1_2'(s(fun(X990,'type.wordSem.state'(X987,X988)),X991),s(fun(X989,X990),X992))),s(X989,X993)))))) )),
  inference(superposition,[],[f318,f351])).
fof(f8144,plain,(
  ( ! [X978,X976,X971,X975,X973,X977,X974,X972] : (s('type.wordSem.state'(X971,X972),X978) != s('type.wordSem.state'(X971,X972),happ(s(fun(X974,'type.wordSem.state'(X971,X972)),X975),s(X974,happ(s(fun(X973,X974),X976),s(X973,X977))))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X971,X972),X978))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X971,X972),happ(s(fun(X973,'type.wordSem.state'(X971,X972)),'_dst_x0x1_2'(s(fun(X974,'type.wordSem.state'(X971,X972)),X975),s(fun(X973,X974),X976))),s(X973,X977)))))) )),
  inference(superposition,[],[f317,f351])).
fof(f8142,plain,(
  ( ! [X957,X961,X958,X956,X962,X960,X955,X959] : (s('type.wordSem.state'(X955,X956),X962) != s('type.wordSem.state'(X955,X956),happ(s(fun(X958,'type.wordSem.state'(X955,X956)),X959),s(X958,happ(s(fun(X957,X958),X960),s(X957,X961))))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X955,X956),X962))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X955,X956),happ(s(fun(X957,'type.wordSem.state'(X955,X956)),'_dst_x0x1_2'(s(fun(X958,'type.wordSem.state'(X955,X956)),X959),s(fun(X957,X958),X960))),s(X957,X961)))))) )),
  inference(superposition,[],[f316,f351])).
fof(f8140,plain,(
  ( ! [X945,X942,X940,X946,X944,X939,X943,X941] : (s('type.wordSem.state'(X939,X940),X946) != s('type.wordSem.state'(X939,X940),happ(s(fun(X942,'type.wordSem.state'(X939,X940)),X943),s(X942,happ(s(fun(X941,X942),X944),s(X941,X945))))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X939,X940),X946))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X939,X940),happ(s(fun(X941,'type.wordSem.state'(X939,X940)),'_dst_x0x1_2'(s(fun(X942,'type.wordSem.state'(X939,X940)),X943),s(fun(X941,X942),X944))),s(X941,X945)))))) )),
  inference(superposition,[],[f315,f351])).
fof(f8138,plain,(
  ( ! [X926,X924,X930,X928,X923,X927,X925,X929] : (s('type.wordSem.state'(X923,X924),X930) != s('type.wordSem.state'(X923,X924),happ(s(fun(X926,'type.wordSem.state'(X923,X924)),X927),s(X926,happ(s(fun(X925,X926),X928),s(X925,X929))))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X923,X924),X930))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X923,X924),happ(s(fun(X925,'type.wordSem.state'(X923,X924)),'_dst_x0x1_2'(s(fun(X926,'type.wordSem.state'(X923,X924)),X927),s(fun(X925,X926),X928))),s(X925,X929)))))) )),
  inference(superposition,[],[f313,f351])).
fof(f8136,plain,(
  ( ! [X912,X914,X907,X911,X909,X913,X910,X908] : (s('type.wordSem.state'(X907,X908),X914) != s('type.wordSem.state'(X907,X908),happ(s(fun(X910,'type.wordSem.state'(X907,X908)),X911),s(X910,happ(s(fun(X909,X910),X912),s(X909,X913))))) | s(fun('type.fcp.cart'(bool,X907),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X907,X908),X914))) = s(fun('type.fcp.cart'(bool,X907),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X907,X908),happ(s(fun(X909,'type.wordSem.state'(X907,X908)),'_dst_x0x1_2'(s(fun(X910,'type.wordSem.state'(X907,X908)),X911),s(fun(X909,X910),X912))),s(X909,X913)))))) )),
  inference(superposition,[],[f312,f351])).
fof(f8134,plain,(
  ( ! [X895,X893,X897,X894,X892,X898,X896,X891] : (s('type.wordSem.state'(X891,X892),X898) != s('type.wordSem.state'(X891,X892),happ(s(fun(X894,'type.wordSem.state'(X891,X892)),X895),s(X894,happ(s(fun(X893,X894),X896),s(X893,X897))))) | s(fun('type.fcp.cart'(bool,X891),'type.wordSem.word_loc'(X891)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X891,X892),X898))) = s(fun('type.fcp.cart'(bool,X891),'type.wordSem.word_loc'(X891)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X891,X892),happ(s(fun(X893,'type.wordSem.state'(X891,X892)),'_dst_x0x1_2'(s(fun(X894,'type.wordSem.state'(X891,X892)),X895),s(fun(X893,X894),X896))),s(X893,X897)))))) )),
  inference(superposition,[],[f311,f351])).
fof(f8132,plain,(
  ( ! [X881,X878,X876,X882,X880,X875,X879,X877] : (s('type.wordSem.state'(X875,X876),X882) != s('type.wordSem.state'(X875,X876),happ(s(fun(X878,'type.wordSem.state'(X875,X876)),X879),s(X878,happ(s(fun(X877,X878),X880),s(X877,X881))))) | s('type.list.list'('type.wordSem.stack_frame'(X875)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X875,X876),X882))) = s('type.list.list'('type.wordSem.stack_frame'(X875)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X875,X876),happ(s(fun(X877,'type.wordSem.state'(X875,X876)),'_dst_x0x1_2'(s(fun(X878,'type.wordSem.state'(X875,X876)),X879),s(fun(X877,X878),X880))),s(X877,X881)))))) )),
  inference(superposition,[],[f310,f351])).
fof(f8130,plain,(
  ( ! [X860,X866,X864,X859,X863,X861,X865,X862] : (s('type.wordSem.state'(X859,X860),X866) != s('type.wordSem.state'(X859,X860),happ(s(fun(X862,'type.wordSem.state'(X859,X860)),X863),s(X862,happ(s(fun(X861,X862),X864),s(X861,X865))))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X859)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X859,X860),X866))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X859)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X859,X860),happ(s(fun(X861,'type.wordSem.state'(X859,X860)),'_dst_x0x1_2'(s(fun(X862,'type.wordSem.state'(X859,X860)),X863),s(fun(X861,X862),X864))),s(X861,X865)))))) )),
  inference(superposition,[],[f309,f351])).
fof(f8128,plain,(
  ( ! [X850,X848,X843,X847,X845,X849,X846,X844] : (s('type.wordSem.state'(X843,X844),X850) != s('type.wordSem.state'(X843,X844),happ(s(fun(X846,'type.wordSem.state'(X843,X844)),X847),s(X846,happ(s(fun(X845,X846),X848),s(X845,X849))))) | s('type.sptree.spt'('type.wordSem.word_loc'(X843)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X843,X844),X850))) = s('type.sptree.spt'('type.wordSem.word_loc'(X843)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X843,X844),happ(s(fun(X845,'type.wordSem.state'(X843,X844)),'_dst_x0x1_2'(s(fun(X846,'type.wordSem.state'(X843,X844)),X847),s(fun(X845,X846),X848))),s(X845,X849)))))) )),
  inference(superposition,[],[f308,f351])).
fof(f7991,plain,(
  ( ! [X1019,X1023,X1021,X1025,X1018,X1022,X1020,X1024] : (s('type.wordSem.state'(X1018,X1019),X1025) != s('type.wordSem.state'(X1018,X1019),happ(s(fun(X1022,'type.wordSem.state'(X1018,X1019)),'_dst_x0x1_2'(s(fun(X1020,'type.wordSem.state'(X1018,X1019)),X1021),s(fun(X1022,X1020),X1023))),s(X1022,X1024))) | s('type.ffi.ffi_state'(X1019),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X1018,X1019),X1025))) = s('type.ffi.ffi_state'(X1019),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X1018,X1019),happ(s(fun(X1020,'type.wordSem.state'(X1018,X1019)),X1021),s(X1020,happ(s(fun(X1022,X1020),X1023),s(X1022,X1024)))))))) )),
  inference(superposition,[],[f320,f351])).
fof(f7987,plain,(
  ( ! [X990,X988,X992,X987,X991,X989,X993,X986] : (s('type.wordSem.state'(X986,X987),X993) != s('type.wordSem.state'(X986,X987),happ(s(fun(X990,'type.wordSem.state'(X986,X987)),'_dst_x0x1_2'(s(fun(X988,'type.wordSem.state'(X986,X987)),X989),s(fun(X990,X988),X991))),s(X990,X992))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X986))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X986,X987),X993))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X986))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X986,X987),happ(s(fun(X988,'type.wordSem.state'(X986,X987)),X989),s(X988,happ(s(fun(X990,X988),X991),s(X990,X992)))))))) )),
  inference(superposition,[],[f318,f351])).
fof(f7985,plain,(
  ( ! [X976,X971,X975,X973,X977,X970,X974,X972] : (s('type.wordSem.state'(X970,X971),X977) != s('type.wordSem.state'(X970,X971),happ(s(fun(X974,'type.wordSem.state'(X970,X971)),'_dst_x0x1_2'(s(fun(X972,'type.wordSem.state'(X970,X971)),X973),s(fun(X974,X972),X975))),s(X974,X976))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X970,X971),X977))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X970,X971),happ(s(fun(X972,'type.wordSem.state'(X970,X971)),X973),s(X972,happ(s(fun(X974,X972),X975),s(X974,X976)))))))) )),
  inference(superposition,[],[f317,f351])).
fof(f7983,plain,(
  ( ! [X957,X954,X961,X958,X956,X960,X955,X959] : (s('type.wordSem.state'(X954,X955),X961) != s('type.wordSem.state'(X954,X955),happ(s(fun(X958,'type.wordSem.state'(X954,X955)),'_dst_x0x1_2'(s(fun(X956,'type.wordSem.state'(X954,X955)),X957),s(fun(X958,X956),X959))),s(X958,X960))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X954,X955),X961))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X954,X955),happ(s(fun(X956,'type.wordSem.state'(X954,X955)),X957),s(X956,happ(s(fun(X958,X956),X959),s(X958,X960)))))))) )),
  inference(superposition,[],[f316,f351])).
fof(f7981,plain,(
  ( ! [X945,X938,X942,X940,X944,X939,X943,X941] : (s('type.wordSem.state'(X938,X939),X945) != s('type.wordSem.state'(X938,X939),happ(s(fun(X942,'type.wordSem.state'(X938,X939)),'_dst_x0x1_2'(s(fun(X940,'type.wordSem.state'(X938,X939)),X941),s(fun(X942,X940),X943))),s(X942,X944))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X938,X939),X945))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X938,X939),happ(s(fun(X940,'type.wordSem.state'(X938,X939)),X941),s(X940,happ(s(fun(X942,X940),X943),s(X942,X944)))))))) )),
  inference(superposition,[],[f315,f351])).
fof(f7979,plain,(
  ( ! [X922,X926,X924,X928,X923,X927,X925,X929] : (s('type.wordSem.state'(X922,X923),X929) != s('type.wordSem.state'(X922,X923),happ(s(fun(X926,'type.wordSem.state'(X922,X923)),'_dst_x0x1_2'(s(fun(X924,'type.wordSem.state'(X922,X923)),X925),s(fun(X926,X924),X927))),s(X926,X928))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X922,X923),X929))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X922,X923),happ(s(fun(X924,'type.wordSem.state'(X922,X923)),X925),s(X924,happ(s(fun(X926,X924),X927),s(X926,X928)))))))) )),
  inference(superposition,[],[f313,f351])).
fof(f7977,plain,(
  ( ! [X912,X907,X911,X909,X913,X906,X910,X908] : (s('type.wordSem.state'(X906,X907),X913) != s('type.wordSem.state'(X906,X907),happ(s(fun(X910,'type.wordSem.state'(X906,X907)),'_dst_x0x1_2'(s(fun(X908,'type.wordSem.state'(X906,X907)),X909),s(fun(X910,X908),X911))),s(X910,X912))) | s(fun('type.fcp.cart'(bool,X906),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X906,X907),X913))) = s(fun('type.fcp.cart'(bool,X906),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X906,X907),happ(s(fun(X908,'type.wordSem.state'(X906,X907)),X909),s(X908,happ(s(fun(X910,X908),X911),s(X910,X912)))))))) )),
  inference(superposition,[],[f312,f351])).
fof(f7975,plain,(
  ( ! [X895,X893,X890,X897,X894,X892,X896,X891] : (s('type.wordSem.state'(X890,X891),X897) != s('type.wordSem.state'(X890,X891),happ(s(fun(X894,'type.wordSem.state'(X890,X891)),'_dst_x0x1_2'(s(fun(X892,'type.wordSem.state'(X890,X891)),X893),s(fun(X894,X892),X895))),s(X894,X896))) | s(fun('type.fcp.cart'(bool,X890),'type.wordSem.word_loc'(X890)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X890,X891),X897))) = s(fun('type.fcp.cart'(bool,X890),'type.wordSem.word_loc'(X890)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X890,X891),happ(s(fun(X892,'type.wordSem.state'(X890,X891)),X893),s(X892,happ(s(fun(X894,X892),X895),s(X894,X896)))))))) )),
  inference(superposition,[],[f311,f351])).
fof(f7973,plain,(
  ( ! [X881,X874,X878,X876,X880,X875,X879,X877] : (s('type.wordSem.state'(X874,X875),X881) != s('type.wordSem.state'(X874,X875),happ(s(fun(X878,'type.wordSem.state'(X874,X875)),'_dst_x0x1_2'(s(fun(X876,'type.wordSem.state'(X874,X875)),X877),s(fun(X878,X876),X879))),s(X878,X880))) | s('type.list.list'('type.wordSem.stack_frame'(X874)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X874,X875),X881))) = s('type.list.list'('type.wordSem.stack_frame'(X874)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X874,X875),happ(s(fun(X876,'type.wordSem.state'(X874,X875)),X877),s(X876,happ(s(fun(X878,X876),X879),s(X878,X880)))))))) )),
  inference(superposition,[],[f310,f351])).
fof(f7971,plain,(
  ( ! [X860,X864,X859,X863,X861,X865,X858,X862] : (s('type.wordSem.state'(X858,X859),X865) != s('type.wordSem.state'(X858,X859),happ(s(fun(X862,'type.wordSem.state'(X858,X859)),'_dst_x0x1_2'(s(fun(X860,'type.wordSem.state'(X858,X859)),X861),s(fun(X862,X860),X863))),s(X862,X864))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X858)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X858,X859),X865))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X858)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X858,X859),happ(s(fun(X860,'type.wordSem.state'(X858,X859)),X861),s(X860,happ(s(fun(X862,X860),X863),s(X862,X864)))))))) )),
  inference(superposition,[],[f309,f351])).
fof(f7969,plain,(
  ( ! [X848,X843,X847,X845,X849,X842,X846,X844] : (s('type.wordSem.state'(X842,X843),X849) != s('type.wordSem.state'(X842,X843),happ(s(fun(X846,'type.wordSem.state'(X842,X843)),'_dst_x0x1_2'(s(fun(X844,'type.wordSem.state'(X842,X843)),X845),s(fun(X846,X844),X847))),s(X846,X848))) | s('type.sptree.spt'('type.wordSem.word_loc'(X842)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X842,X843),X849))) = s('type.sptree.spt'('type.wordSem.word_loc'(X842)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X842,X843),happ(s(fun(X844,'type.wordSem.state'(X842,X843)),X845),s(X844,happ(s(fun(X846,X844),X847),s(X846,X848)))))))) )),
  inference(superposition,[],[f308,f351])).
fof(f7744,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X18,X16] : (s(X11,happ(s(fun(X13,X11),X14),s(X13,happ(s(fun(X12,X13),X15),s(X12,happ(s(fun(X16,X12),X17),s(X16,X18))))))) = s(X11,happ(s(fun(X16,X11),'_dst_x0x1_2'(s(fun(X12,X11),'_dst_x0x1_2'(s(fun(X13,X11),X14),s(fun(X12,X13),X15))),s(fun(X16,X12),X17))),s(X16,X18)))) )),
  inference(superposition,[],[f351,f351])).
fof(f7743,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),happ(s(fun(X2,'type.pair.prod'(X0,X1)),X3),s(X2,X4))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s(fun(X2,'type.pair.prod'(X0,X1)),X3))),s(X2,X4)))) )),
  inference(superposition,[],[f351,f279])).
fof(f7742,plain,(
  ( ! [X14,X19,X17,X15,X13,X20,X18,X16] : (s(X19,happ(s(fun(X13,X19),X20),s(X13,happ(s(fun(X15,X13),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) = s(X19,happ(s(fun(X14,X19),'_dst_x0x1_2'(s(fun(X13,X19),X20),s(fun(X14,X13),'_dst_x0x1_2'(s(fun(X15,X13),X16),s(fun(X14,X15),X17))))),s(X14,X18)))) )),
  inference(superposition,[],[f351,f351])).
fof(f7741,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X11,X9] : (s(X11,happ(s(fun(X5,X11),X12),s(X5,happ(s(fun(X8,X5),'_dst_x0x1_2'(s(fun(X6,X5),X7),s(fun(X8,X6),X9))),s(X8,X10))))) = s(X11,happ(s(fun(X6,X11),'_dst_x0x1_2'(s(fun(X5,X11),X12),s(fun(X6,X5),X7))),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f351,f351])).
fof(f7729,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f308])).
fof(f7730,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f309])).
fof(f7731,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f310])).
fof(f7732,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f311])).
fof(f7733,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f312])).
fof(f7734,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f313])).
fof(f7735,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f315])).
fof(f7736,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f316])).
fof(f7737,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f317])).
fof(f7738,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),happ(s(fun(X4,'type.wordSem.state'(X0,X1)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X0,X1)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f318])).
fof(f7740,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X1,X0),happ(s(fun(X2,'type.wordSem.state'(X1,X0)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.ffi.ffi_state'(X0),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X1,X0),happ(s(fun(X4,'type.wordSem.state'(X1,X0)),'_dst_x0x1_2'(s(fun(X2,'type.wordSem.state'(X1,X0)),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f351,f320])).
fof(f757,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK28(X2,X1,X0)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(subsumption_resolution,[],[f753,f242])).
fof(f753,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s(X0,X2) = s(X0,sK28(X2,X1,X0)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f270,f243])).
fof(f498,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f490,f242])).
fof(f490,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f275,f243])).
fof(f442,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f248,f243])).
fof(f439,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f243,f243])).
fof(f422,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f242,f244])).
fof(f352,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : ((s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) | (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) & s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) = s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) & s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) & s(fun('type.fcp.cart'(bool,X1),bool),X7) = s(fun('type.fcp.cart'(bool,X1),bool),X20) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.num.num',X12) = s('type.num.num',X25) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) & s(bool,X14) = s(bool,X27) & s('type.ffi.ffi_state'(X2),X15) = s('type.ffi.ffi_state'(X2),X28))) & (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) != s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) | s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) != s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) | s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) != s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) | s(fun('type.fcp.cart'(bool,X1),bool),X7) != s(fun('type.fcp.cart'(bool,X1),bool),X20) | s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) != s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) | s('type.num.num',X10) != s('type.num.num',X23) | s('type.num.num',X11) != s('type.num.num',X24) | s('type.num.num',X12) != s('type.num.num',X25) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) | s(bool,X14) != s(bool,X27) | s('type.ffi.ffi_state'(X2),X15) != s('type.ffi.ffi_state'(X2),X28) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))))),
  inference(flattening,[],[f224])).
fof(f224,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : ((s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) | (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) & s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) = s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) & s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) & s(fun('type.fcp.cart'(bool,X1),bool),X7) = s(fun('type.fcp.cart'(bool,X1),bool),X20) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.num.num',X12) = s('type.num.num',X25) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) & s(bool,X14) = s(bool,X27) & s('type.ffi.ffi_state'(X2),X15) = s('type.ffi.ffi_state'(X2),X28))) & ((s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) != s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) | s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) != s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) | s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) != s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) | s(fun('type.fcp.cart'(bool,X1),bool),X7) != s(fun('type.fcp.cart'(bool,X1),bool),X20) | s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) != s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) | s('type.num.num',X10) != s('type.num.num',X23) | s('type.num.num',X11) != s('type.num.num',X24) | s('type.num.num',X12) != s('type.num.num',X25) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) | s(bool,X14) != s(bool,X27) | s('type.ffi.ffi_state'(X2),X15) != s('type.ffi.ffi_state'(X2),X28)) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) & s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) = s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) & s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) & s(fun('type.fcp.cart'(bool,X1),bool),X7) = s(fun('type.fcp.cart'(bool,X1),bool),X20) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.num.num',X12) = s('type.num.num',X25) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) & s(bool,X14) = s(bool,X27) & s('type.ffi.ffi_state'(X2),X15) = s('type.ffi.ffi_state'(X2),X28)))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28] : (s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) & s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) = s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) & s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) & s(fun('type.fcp.cart'(bool,X1),bool),X7) = s(fun('type.fcp.cart'(bool,X1),bool),X20) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.num.num',X12) = s('type.num.num',X25) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) & s(bool,X14) = s(bool,X27) & s('type.ffi.ffi_state'(X2),X15) = s('type.ffi.ffi_state'(X2),X28)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7,X6,X36] : ! [X37,X38,X39,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X50,X51,X52,X53,X54,X55,X56,X57,X58,X59,X60,X61,X62] : (s('type.wordSem.state'(X6,X36),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),'type.sptree.spt'('type.wordSem.word_loc'(X6))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X37))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X38))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X6)),X39))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X40))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.fcp.cart'(bool,X6),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X6),bool),X41))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X42))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X43))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X44))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X45))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X46))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X47))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X48))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X36)),'const.combin.K_1'(s('type.ffi.ffi_state'(X36),X49))),s('type.wordSem.state'(X6,X7),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X6,X36),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),'type.sptree.spt'('type.wordSem.word_loc'(X6))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X50))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X51))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X6)),X52))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X53))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.fcp.cart'(bool,X6),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X6),bool),X54))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X55))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X56))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X57))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X58))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X59))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X60))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X61))),s('type.wordSem.state'(X6,X36),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X36)),'const.combin.K_1'(s('type.ffi.ffi_state'(X36),X62))),s('type.wordSem.state'(X6,X7),'const.bool.ARB_0'))))))))))))))))))))))))))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X37) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X50) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X38) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X51) & s('type.list.list'('type.wordSem.stack_frame'(X6)),X39) = s('type.list.list'('type.wordSem.stack_frame'(X6)),X52) & s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X40) = s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X53) & s(fun('type.fcp.cart'(bool,X6),bool),X41) = s(fun('type.fcp.cart'(bool,X6),bool),X54) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X42) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X55) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X43) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X56) & s('type.num.num',X44) = s('type.num.num',X57) & s('type.num.num',X45) = s('type.num.num',X58) & s('type.num.num',X46) = s('type.num.num',X59) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X47) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X60) & s(bool,X48) = s(bool,X61) & s('type.ffi.ffi_state'(X36),X49) = s('type.ffi.ffi_state'(X36),X62)))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_literal_|49||49|')).
fof(f353,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f354,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) = s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f355,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f356,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s(fun('type.fcp.cart'(bool,X1),bool),X7) = s(fun('type.fcp.cart'(bool,X1),bool),X20) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f357,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f358,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f359,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.num.num',X10) = s('type.num.num',X23) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f360,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.num.num',X11) = s('type.num.num',X24) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f361,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.num.num',X12) = s('type.num.num',X25) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f362,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f363,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s(bool,X14) = s(bool,X27) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f364,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.ffi.ffi_state'(X2),X15) = s('type.ffi.ffi_state'(X2),X28) | s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0')))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f225])).
fof(f365,plain,(
  ( ! [X28,X24,X4,X0,X12,X8,X21,X17,X25,X5,X1,X13,X9,X22,X18,X26,X6,X2,X14,X10,X23,X19,X27,X7,X3,X15,X11,X20,X16] : (s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X5))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X8))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X15))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X2),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X18))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X20))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X21))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X23))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X24))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X25))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X27))),s('type.wordSem.state'(X1,X2),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X2)),'const.combin.K_1'(s('type.ffi.ffi_state'(X2),X28))),s('type.wordSem.state'(X1,X0),'const.bool.ARB_0'))))))))))))))))))))))))))) | s('type.ffi.ffi_state'(X2),X15) != s('type.ffi.ffi_state'(X2),X28) | s(bool,X14) != s(bool,X27) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X13) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X26) | s('type.num.num',X12) != s('type.num.num',X25) | s('type.num.num',X11) != s('type.num.num',X24) | s('type.num.num',X10) != s('type.num.num',X23) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X9) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X22) | s(fun('type.num.num',fun('type.num.num','type.num.num')),X8) != s(fun('type.num.num',fun('type.num.num','type.num.num')),X21) | s(fun('type.fcp.cart'(bool,X1),bool),X7) != s(fun('type.fcp.cart'(bool,X1),bool),X20) | s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X6) != s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X19) | s('type.list.list'('type.wordSem.stack_frame'(X1)),X5) != s('type.list.list'('type.wordSem.stack_frame'(X1)),X18) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X4) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X17) | s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3) != s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X16)) )),
  inference(cnf_transformation,[],[f225])).
fof(f351,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X81,X82,X83] : ! [X84,X85,X86] : s(X81,happ(s(fun(X82,X81),X84),s(X82,happ(s(fun(X83,X82),X85),s(X83,X86))))) = s(X81,happ(s(fun(X83,X81),'_dst_x0x1_2'(s(fun(X82,X81),X84),s(fun(X83,X82),X85))),s(X83,X86)))),
  file('thm.wordSem.state_|49||49|','_dst_x0x1_ax')).
fof(f350,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),X4),s('type.wordSem.state'(X1,X2),X3)))))) )),
  inference(cnf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(flattening,[],[f188])).
fof(f188,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X36,X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X36),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X36)),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_92_prove_ltb')).
fof(f349,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),X4),s('type.wordSem.state'(X1,X2),X3)))))) )),
  inference(cnf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(flattening,[],[f186])).
fof(f186,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X36,X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X36),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X7),'type.ffi.ffi_state'(X36)),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_8|48|_prove_ltb')).
fof(f348,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f184])).
fof(f184,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|6')).
fof(f347,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f182])).
fof(f182,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71) = s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|3')).
fof(f346,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.fcp.cart'(bool,X1),bool),X6) = s(fun('type.fcp.cart'(bool,X1),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),bool),X6) = s(fun('type.fcp.cart'(bool,X1),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f180])).
fof(f180,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),bool),X6) = s(fun('type.fcp.cart'(bool,X1),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s(fun('type.fcp.cart'(bool,X6),bool),X49) = s(fun('type.fcp.cart'(bool,X6),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|4')).
fof(f345,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f178])).
fof(f178,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|10')).
fof(f344,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(flattening,[],[f176])).
fof(f176,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6,X7] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s(fun('type.num.num',fun('type.num.num','type.num.num')),X62) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_permute')).
fof(f343,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f174])).
fof(f174,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|1')).
fof(f342,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f172])).
fof(f172,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X1)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|0')).
fof(f341,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f170])).
fof(f170,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X7,X6] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.list.list'('type.wordSem.stack_frame'(X6)),X70) = s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_accessors|split|2')).
fof(f340,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X7] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.ffi.ffi_state'(X7),X77) = s('type.ffi.ffi_state'(X7),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_ffi')).
fof(f339,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(bool,X13) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(bool,X13) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(flattening,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(bool,X13) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6,X7] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s(bool,X76) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_be')).
fof(f338,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X11) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X11) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X11) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6,X7] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.num.num',X46) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_termdep')).
fof(f336,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X10) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X10) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(flattening,[],[f160])).
fof(f160,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X10) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : ! [X69,X65,X70,X71,X49,X62,X72,X73,X74,X46,X75,X76,X77] : s('type.num.num',X74) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X69),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X65),s('type.list.list'('type.wordSem.stack_frame'(X6)),X70),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X71),s(fun('type.fcp.cart'(bool,X6),bool),X49),s(fun('type.num.num',fun('type.num.num','type.num.num')),X62),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X72),s('type.num.num',X73),s('type.num.num',X74),s('type.num.num',X46),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X75),s(bool,X76),s('type.ffi.ffi_state'(X7),X77)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_clock')).
fof(f308,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f309,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f310,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f311,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f312,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f313,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f314,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X2))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f316,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f317,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f318,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f320,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.wordSem.state'(X0,X1),X2) != s('type.wordSem.state'(X0,X1),X3) | s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f221])).
fof(f307,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK30(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK30(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK30(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK30(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK30])],[f198])).
fof(f198,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.wordSem.state_|49||49|',aHL_EXT)).
fof(f306,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_86_prove_ltb')).
fof(f305,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_74_prove_ltb')).
fof(f304,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_83_prove_ltb')).
fof(f303,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_7|49|_prove_ltb')).
fof(f302,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.fcp.cart'(bool,X6),bool)),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_84_prove_ltb')).
fof(f301,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0)))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0)))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0)))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6)))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_9|48|_prove_ltb')).
fof(f300,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_85_prove_ltb')).
fof(f299,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0)))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0)))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0)))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6)))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_78_prove_ltb')).
fof(f298,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.fcp.cart'(bool,X6),bool)),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_72_prove_ltb')).
fof(f297,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_73_prove_ltb')).
fof(f296,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_69_prove_ltb')).
fof(f295,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_82_prove_ltb')).
fof(f294,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_94_prove_ltb')).
fof(f293,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),'type.sptree.spt'('type.wordSem.word_loc'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_8|49|_prove_ltb')).
fof(f292,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_7|48|_prove_ltb')).
fof(f291,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),'type.sptree.spt'('type.wordSem.word_loc'(X6))),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_93_prove_ltb')).
fof(f290,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_9|49|_prove_ltb')).
fof(f289,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_89_prove_ltb')).
fof(f288,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_87_prove_ltb')).
fof(f287,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_88_prove_ltb')).
fof(f286,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_79_prove_ltb')).
fof(f285,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_76_prove_ltb')).
fof(f284,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_75_prove_ltb')).
fof(f283,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X6,X7] : ! [X69,X65] : s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),X69))) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),X65),s('type.wordSem.state'(X6,X7),X69)))))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.wordSem_77_prove_ltb')).
fof(f282,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X63,X6] : ! [X80,X93] : s(X6,X80) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X63),'const.pair.,_2'(s(X6,X80),s(X63,X93)))))),
  file('thm.wordSem.state_|49||49|','thm.pair.FST')).
fof(f281,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X6,X63] : ! [X80,X93] : s(X63,X93) = s(X63,'const.pair.SND_1'(s('type.pair.prod'(X6,X63),'const.pair.,_2'(s(X6,X80),s(X63,X93)))))),
  file('thm.wordSem.state_|49||49|','thm.pair.SND')).
fof(f280,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),sK29(X2,X1,X0)),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),sK29(X2,X1,X0)),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))) )),
  inference(cnf_transformation,[],[f218])).
fof(f218,plain,(
  ! [X0,X1,X2] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),sK29(X2,X1,X0)),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),sK29(X2,X1,X0)),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29])],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ? [X3] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),X3),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),X3),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : ! [X2] : ? [X3] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),X3),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),X3),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X63,X6] : ! [X64] : ? [X65] : ! [X66,X67,X68] : s(X63,happ(s(fun('type.ind_type.recspace'(X6),X63),X65),s('type.ind_type.recspace'(X6),'const.ind_type.CONSTR_3'(s('type.num.num',X66),s(X6,X67),s(fun('type.num.num','type.ind_type.recspace'(X6)),X68))))) = s(X63,happ(s(fun(fun('type.num.num',X63),X63),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X63),X63)),happ(s(fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X63),X63))),happ(s(fun('type.num.num',fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X63),X63)))),X64),s('type.num.num',X66))),s(X6,X67))),s(fun('type.num.num','type.ind_type.recspace'(X6)),X68))),s(fun('type.num.num',X63),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X6),X63),X65),s(fun('type.num.num','type.ind_type.recspace'(X6)),X68)))))),
  file('thm.wordSem.state_|49||49|','thm.ind_type.CONSTR_REC')).
fof(f279,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))) = s(X0,happ(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.pair.prod'(X0,X1),X2)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))) = s(X0,happ(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.pair.prod'(X0,X1),X2)))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : ! [X2] : s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))) = s(X0,happ(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.pair.prod'(X0,X1),X2)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6,X63] : ! [X89] : s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X63),X89))) = s(X6,happ(s(fun('type.pair.prod'(X6,X63),X6),'const.pair.FST_0'),s('type.pair.prod'(X6,X63),X89)))),
  file('thm.wordSem.state_|49||49|','ARITY_0_1_const.pair.FST')).
fof(f275,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f196])).
fof(f196,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X87,X88] : ((p(s(bool,X87)) => p(s(bool,X88))) => ((p(s(bool,X88)) => p(s(bool,X87))) => s(bool,X87) = s(bool,X88)))),
  file('thm.wordSem.state_|49||49|','thm.bool.IMP_ANTISYM_AX')).
fof(f278,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f197])).
fof(f274,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X89,X90,X91] : s(X6,'const.ind_type.FCONS_3'(s(X6,X89),s(fun('type.num.num',X6),X90),s('type.num.num',X91))) = s(X6,happ(s(fun('type.num.num',X6),happ(s(fun(fun('type.num.num',X6),fun('type.num.num',X6)),happ(s(fun(X6,fun(fun('type.num.num',X6),fun('type.num.num',X6))),'const.ind_type.FCONS_0'),s(X6,X89))),s(fun('type.num.num',X6),X90))),s('type.num.num',X91)))),
  file('thm.wordSem.state_|49||49|','ARITY_0_3_const.ind_type.FCONS')).
fof(f273,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3] : s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X89,X90,X91] : s('type.ind_type.recspace'(X6),'const.ind_type.CONSTR_3'(s('type.num.num',X89),s(X6,X90),s(fun('type.num.num','type.ind_type.recspace'(X6)),X91))) = s('type.ind_type.recspace'(X6),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X6)),'type.ind_type.recspace'(X6)),happ(s(fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),'type.ind_type.recspace'(X6))),'const.ind_type.CONSTR_1'(s('type.num.num',X89))),s(X6,X90))),s(fun('type.num.num','type.ind_type.recspace'(X6)),X91)))),
  file('thm.wordSem.state_|49||49|','ARITY_1_3_const.ind_type.CONSTR')).
fof(f272,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3] : s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),
  inference(flattening,[],[f91])).
fof(f91,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X78,X65,X73] : s(X6,happ(s(fun('type.num.num',X6),X65),s('type.num.num',X73))) = s(X6,'const.ind_type.FCONS_3'(s(X6,X78),s(fun('type.num.num',X6),X65),s('type.num.num','const.num.SUC_1'(s('type.num.num',X73)))))),
  file('thm.wordSem.state_|49||49|','thm.ind_type.FCONS|split|1')).
fof(f269,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X78,X65] : s(X6,X78) = s(X6,'const.ind_type.FCONS_3'(s(X6,X78),s(fun('type.num.num',X6),X65),s('type.num.num','const.num.|48|_0')))),
  file('thm.wordSem.state_|49||49|','thm.ind_type.FCONS|split|0')).
fof(f244,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X79] : (s(bool,'T_0') = s(bool,X79) <=> p(s(bool,X79)))),
  file('thm.wordSem.state_|49||49|','thm.bool.EQ_CLAUSES|split|0')).
fof(f245,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f202])).
fof(f243,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.wordSem.state_|49||49|',aHL_BOOL_CASES)).
fof(f240,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,axiom,(
  p(s(bool,'T_0'))),
  file('thm.wordSem.state_|49||49|','thm.bool.TRUTH')).
fof(f22549,plain,(
  $false | ($spl0 | $spl24 | $spl28)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f422,f439,f441,f442,f456,f498,f757,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f9663,f10404,f10408,f10409,f11219,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f11686,f11749,f13057,f13114,f13174,f14230,f14287,f14347,f15456,f15513,f15573,f16747,f16804,f16864,f17377,f17434,f17494,f12201,f1001,f1429,f2218,f2221,f9678,f8014,f7855,f19475,f368,f392,f22126,f463,f22127,f22128,f22178,f22232,f22439,f22440,f22443,f22444,f22446,f22447,f22449,f22450,f22452,f22453,f22455,f22456,f22461,f22462,f22464,f22465,f22467,f22468,f22470,f22471,f22473,f22474,f22502,f22506,f22510,f22514,f22518,f22521,f22524,f22528,f22532,f22536,f22540,f22543,f22546,f22489])).
fof(f22490,plain,(
  $false | ($spl0 | $spl13 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f22489,f381])).
fof(f22459,plain,(
  $false | ($spl0 | $spl13 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f22458,f381])).
fof(f22125,plain,(
  $false | ($spl0 | $spl13 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f381,f22009])).
fof(f22009,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22008,f344])).
fof(f22008,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21915,f344])).
fof(f21915,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f313])).
fof(f21678,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f21677,f21676])).
fof(f21676,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl30)),
  inference(backward_demodulation,[],[f465,f368])).
fof(f21677,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f392,f465])).
fof(f22124,plain,(
  $false | ($spl0 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17055,f17097,f17103,f17155,f17161,f392,f17694,f17761,f17767,f12201,f1001,f1429,f2218,f2221,f9678,f8014,f7855,f368,f465,f21676,f21677,f21678,f21714,f21720,f21760,f21766,f21990,f21991,f21994,f21995,f21997,f21998,f22000,f22001,f22003,f22004,f22009,f22010,f22012,f22013,f22015,f22016,f22018,f22019,f22021,f22022,f22024,f22025,f22062,f22076,f22080,f22084,f22088,f22092,f22096,f22099,f22102,f22106,f22110,f22114,f22117,f22120,f22038,f22006])).
fof(f22006,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22005,f348])).
fof(f22005,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21916,f348])).
fof(f21916,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f314])).
fof(f22038,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22037,f348])).
fof(f22037,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21903,f348])).
fof(f21903,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f314])).
fof(f22120,plain,(
  ( ! [X47] : (s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) | s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22119,f21990])).
fof(f22119,plain,(
  ( ! [X47] : (s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) | s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21972,f340])).
fof(f21972,plain,(
  ( ! [X47] : (s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f320,f21678])).
fof(f22117,plain,(
  ( ! [X45] : (s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),X45))) | s('type.wordSem.state'(sK0,sK1),X45) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21970,f339])).
fof(f21970,plain,(
  ( ! [X45] : (s('type.wordSem.state'(sK0,sK1),X45) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),X45))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f319,f21678])).
fof(f22114,plain,(
  ( ! [X43] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) | s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22113,f21994])).
fof(f22113,plain,(
  ( ! [X43] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) | s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21968,f345])).
fof(f21968,plain,(
  ( ! [X43] : (s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f318,f21678])).
fof(f22110,plain,(
  ( ! [X41] : (s('type.num.num',sK11) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) | s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22109,f21997])).
fof(f22109,plain,(
  ( ! [X41] : (s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) | s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21966,f338])).
fof(f21966,plain,(
  ( ! [X41] : (s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f317,f21678])).
fof(f22106,plain,(
  ( ! [X39] : (s('type.num.num',sK10) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) | s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22105,f22000])).
fof(f22105,plain,(
  ( ! [X39] : (s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) | s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21964,f336])).
fof(f21964,plain,(
  ( ! [X39] : (s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f316,f21678])).
fof(f22102,plain,(
  ( ! [X37] : (s('type.num.num',sK9) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) | s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22101,f22003])).
fof(f22101,plain,(
  ( ! [X37] : (s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) | s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21962,f337])).
fof(f21962,plain,(
  ( ! [X37] : (s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f315,f21678])).
fof(f22099,plain,(
  ( ! [X35] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) | s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21960,f348])).
fof(f21960,plain,(
  ( ! [X35] : (s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f314,f21678])).
fof(f22096,plain,(
  ( ! [X33] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) | s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22095,f22009])).
fof(f22095,plain,(
  ( ! [X33] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) | s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21958,f344])).
fof(f21958,plain,(
  ( ! [X33] : (s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f313,f21678])).
fof(f22092,plain,(
  ( ! [X31] : (s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) | s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22091,f22012])).
fof(f22091,plain,(
  ( ! [X31] : (s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) | s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21956,f346])).
fof(f21956,plain,(
  ( ! [X31] : (s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f312,f21678])).
fof(f22088,plain,(
  ( ! [X29] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) | s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22087,f22015])).
fof(f22087,plain,(
  ( ! [X29] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) | s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21954,f347])).
fof(f21954,plain,(
  ( ! [X29] : (s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f311,f21678])).
fof(f22084,plain,(
  ( ! [X27] : (s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) | s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22083,f22018])).
fof(f22083,plain,(
  ( ! [X27] : (s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) | s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21952,f341])).
fof(f21952,plain,(
  ( ! [X27] : (s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f310,f21678])).
fof(f22080,plain,(
  ( ! [X25] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) | s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22079,f22021])).
fof(f22079,plain,(
  ( ! [X25] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) | s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21950,f343])).
fof(f21950,plain,(
  ( ! [X25] : (s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f309,f21678])).
fof(f22076,plain,(
  ( ! [X23] : (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) | s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22075,f22024])).
fof(f22075,plain,(
  ( ! [X23] : (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) | s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21948,f342])).
fof(f21948,plain,(
  ( ! [X23] : (s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f308,f21678])).
fof(f22062,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22061,f22024])).
fof(f22061,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22060,f22021])).
fof(f22060,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22059,f22018])).
fof(f22059,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22058,f22015])).
fof(f22058,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22057,f22012])).
fof(f22057,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22056,f22009])).
fof(f22056,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22055,f22003])).
fof(f22055,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22054,f22000])).
fof(f22054,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22053,f21997])).
fof(f22053,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22052,f21994])).
fof(f22052,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21923,f21990])).
fof(f21923,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK27))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl24 | $spl30)),
  inference(superposition,[],[f21678,f243])).
fof(f22025,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22024,f22022])).
fof(f22024,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22023,f342])).
fof(f22023,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21910,f342])).
fof(f21910,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f308])).
fof(f22022,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22021,f22019])).
fof(f22021,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22020,f343])).
fof(f22020,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21911,f343])).
fof(f21911,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f309])).
fof(f22019,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22018,f22016])).
fof(f22018,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22017,f341])).
fof(f22017,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21912,f341])).
fof(f21912,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f310])).
fof(f22016,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22015,f22013])).
fof(f22015,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22014,f347])).
fof(f22014,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21913,f347])).
fof(f21913,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f311])).
fof(f22013,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22012,f22010])).
fof(f22012,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22011,f346])).
fof(f22011,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21914,f346])).
fof(f21914,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f312])).
fof(f22010,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22009,f22004])).
fof(f22004,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22003,f22001])).
fof(f22003,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f22002,f337])).
fof(f22002,plain,(
  s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21917,f337])).
fof(f21917,plain,(
  s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f315])).
fof(f22001,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f22000,f21998])).
fof(f22000,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21999,f336])).
fof(f21999,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21918,f336])).
fof(f21918,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f316])).
fof(f21998,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f21997,f21995])).
fof(f21997,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21996,f338])).
fof(f21996,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21919,f338])).
fof(f21919,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f317])).
fof(f21995,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f21994,f21991])).
fof(f21994,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21993,f345])).
fof(f21993,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21920,f345])).
fof(f21920,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f318])).
fof(f21991,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f21990,f21678])).
fof(f21990,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21989,f340])).
fof(f21989,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f21922,f340])).
fof(f21922,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f21678,f320])).
fof(f21766,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f21735,f242])).
fof(f21735,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f21760,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f21727,f242])).
fof(f21727,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f21720,plain,(
  ( ! [X4] : (s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f21689,f242])).
fof(f21689,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f21677])).
fof(f21714,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f21681,f242])).
fof(f21681,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f21677])).
fof(f17767,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f17730,f242])).
fof(f17730,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f17761,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f17722,f242])).
fof(f17722,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f17694,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f17161,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f17124,f242])).
fof(f17124,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f17155,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f17116,f242])).
fof(f17116,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f17103,plain,(
  ( ! [X4] : (s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f17066,f242])).
fof(f17066,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f17055])).
fof(f17097,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f17058,f242])).
fof(f17058,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f17055])).
fof(f17055,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f16158,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f16121,f242])).
fof(f16121,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f16152,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f16113,f242])).
fof(f16113,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f16100,plain,(
  ( ! [X4] : (s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f16063,f242])).
fof(f16063,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f16052])).
fof(f16094,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f16055,f242])).
fof(f16055,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f16052])).
fof(f16052,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f14905,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f14868,f242])).
fof(f14868,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f14899,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f14860,f242])).
fof(f14860,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f14847,plain,(
  ( ! [X4] : (s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f14810,f242])).
fof(f14810,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f14798])).
fof(f14841,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f14802,f242])).
fof(f14802,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f14798])).
fof(f14798,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f13707,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f13670,f242])).
fof(f13670,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f13701,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f13662,f242])).
fof(f13662,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f13649,plain,(
  ( ! [X4] : (s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f13612,f242])).
fof(f13612,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f13600])).
fof(f13643,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f13604,f242])).
fof(f13604,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f13600])).
fof(f13600,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f12890,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f12853,f242])).
fof(f12853,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f12884,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f12845,f242])).
fof(f12845,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f12832,plain,(
  ( ! [X4] : (s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f12795,f242])).
fof(f12795,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f12783])).
fof(f12826,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f12787,f242])).
fof(f12787,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f12783])).
fof(f12783,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f9892,plain,(
  ( ! [X356,X354,X353,X355] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'const.ind_type.FCONS_3'(s(fun(bool,bool),X353),s(fun('type.num.num',fun(bool,bool)),X354),s('type.num.num',X355)))))) | ~p(s(bool,happ(s(fun(bool,bool),'const.ind_type.FCONS_3'(s(fun(bool,bool),X353),s(fun('type.num.num',fun(bool,bool)),X354),s('type.num.num',X355))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK28(X356,happ(s(fun('type.num.num',fun(bool,bool)),happ(s(fun(fun('type.num.num',fun(bool,bool)),fun('type.num.num',fun(bool,bool))),happ(s(fun(fun(bool,bool),fun(fun('type.num.num',fun(bool,bool)),fun('type.num.num',fun(bool,bool)))),'const.ind_type.FCONS_0'),s(fun(bool,bool),X353))),s(fun('type.num.num',fun(bool,bool)),X354))),s('type.num.num',X355)),bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f9751,f274])).
fof(f9751,plain,(
  ( ! [X356,X354,X353,X355] : (~p(s(bool,happ(s(fun(bool,bool),'const.ind_type.FCONS_3'(s(fun(bool,bool),X353),s(fun('type.num.num',fun(bool,bool)),X354),s('type.num.num',X355))),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),happ(s(fun('type.num.num',fun(bool,bool)),happ(s(fun(fun('type.num.num',fun(bool,bool)),fun('type.num.num',fun(bool,bool))),happ(s(fun(fun(bool,bool),fun(fun('type.num.num',fun(bool,bool)),fun('type.num.num',fun(bool,bool)))),'const.ind_type.FCONS_0'),s(fun(bool,bool),X353))),s(fun('type.num.num',fun(bool,bool)),X354))),s('type.num.num',X355)))))) | s(bool,'T_0') = s(bool,sK28(X356,happ(s(fun('type.num.num',fun(bool,bool)),happ(s(fun(fun('type.num.num',fun(bool,bool)),fun('type.num.num',fun(bool,bool))),happ(s(fun(fun(bool,bool),fun(fun('type.num.num',fun(bool,bool)),fun('type.num.num',fun(bool,bool)))),'const.ind_type.FCONS_0'),s(fun(bool,bool),X353))),s(fun('type.num.num',fun(bool,bool)),X354))),s('type.num.num',X355)),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f274])).
fof(f8159,plain,(
  ( ! [X1091,X1089,X1093,X1090,X1088,X1092] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X1088),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X1088),happ(s(fun(X1090,'type.pair.prod'(bool,X1088)),X1091),s(X1090,happ(s(fun(X1089,X1090),X1092),s(X1089,X1093))))))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X1088),happ(s(fun(X1089,'type.pair.prod'(bool,X1088)),'_dst_x0x1_2'(s(fun(X1090,'type.pair.prod'(bool,X1088)),X1091),s(fun(X1089,X1090),X1092))),s(X1089,X1093)))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1023,f351])).
fof(f8155,plain,(
  ( ! [X1066,X1064,X1062,X1060,X1065,X1063,X1061] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X1065),s(fun('type.num.num',bool),X1066),s('type.num.num','const.num.SUC_1'(s('type.num.num',happ(s(fun(X1061,'type.num.num'),X1062),s(X1061,happ(s(fun(X1060,X1061),X1063),s(X1060,X1064))))))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1066),s('type.num.num',happ(s(fun(X1060,'type.num.num'),'_dst_x0x1_2'(s(fun(X1061,'type.num.num'),X1062),s(fun(X1060,X1061),X1063))),s(X1060,X1064)))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1467,f351])).
fof(f8087,plain,(
  ( ! [X520,X522,X518,X521,X523,X517,X519] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X522),s(fun('type.num.num',bool),happ(s(fun(X518,fun('type.num.num',bool)),X519),s(X518,happ(s(fun(X517,X518),X520),s(X517,X521))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X523))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun(X517,fun('type.num.num',bool)),'_dst_x0x1_2'(s(fun(X518,fun('type.num.num',bool)),X519),s(fun(X517,X518),X520))),s(X517,X521))),s('type.num.num',X523)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1467,f351])).
fof(f8079,plain,(
  ( ! [X461,X457,X459,X460,X456,X458] : (~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X457,fun(bool,bool)),X458),s(X457,happ(s(fun(X456,X457),X459),s(X456,X460))))),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),happ(s(fun(X456,fun(bool,bool)),'_dst_x0x1_2'(s(fun(X457,fun(bool,bool)),X458),s(fun(X456,X457),X459))),s(X456,X460)))))) | s(bool,'T_0') = s(bool,sK28(X461,happ(s(fun(X456,fun(bool,bool)),'_dst_x0x1_2'(s(fun(X457,fun(bool,bool)),X458),s(fun(X456,X457),X459))),s(X456,X460)),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f351])).
fof(f8037,plain,(
  ( ! [X231,X229,X235,X233,X230,X234,X232] : (~p(s(bool,happ(s(fun(X230,bool),X231),s(X230,happ(s(fun(X229,X230),X232),s(X229,X233)))))) | s(bool,happ(s(fun('type.num.num',bool),X234),s('type.num.num',X235))) = s(bool,happ(s(fun(X229,bool),'_dst_x0x1_2'(s(fun(X230,bool),X231),s(fun(X229,X230),X232))),s(X229,X233))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X234),s('type.num.num',X235)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2038,f351])).
fof(f8034,plain,(
  ( ! [X212,X210,X208,X213,X211,X209,X207] : (p(s(bool,happ(s(fun(X208,bool),X209),s(X208,happ(s(fun(X207,X208),X210),s(X207,X211)))))) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X212),sK28(X213,'const.pair.FST_0','type.pair.prod'(bool,X212))))) = s(bool,happ(s(fun(X207,bool),'_dst_x0x1_2'(s(fun(X208,bool),X209),s(fun(X207,X208),X210))),s(X207,X211))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X212),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1612,f351])).
fof(f8030,plain,(
  ( ! [X185,X182,X180,X184,X183,X181,X179] : (~p(s(bool,happ(s(fun(X180,bool),X181),s(X180,happ(s(fun(X179,X180),X182),s(X179,X183)))))) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X184),X185))) = s(bool,happ(s(fun(X179,bool),'_dst_x0x1_2'(s(fun(X180,bool),X181),s(fun(X179,X180),X182))),s(X179,X183))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X184),X185)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1307,f351])).
fof(f8012,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,happ(s(fun(X80,bool),X81),s(X80,happ(s(fun(bool,X80),X82),s(bool,'F_0')))))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'_dst_x0x1_2'(s(fun(X80,bool),X81),s(fun(bool,X80),X82)))))) | s(bool,'T_0') = s(bool,sK28(X83,'_dst_x0x1_2'(s(fun(X80,bool),X81),s(fun(bool,X80),X82)),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f351])).
fof(f8000,plain,(
  ( ! [X1087,X1091,X1089,X1090,X1088,X1092] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X1087),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X1087),happ(s(fun(X1090,'type.pair.prod'(bool,X1087)),'_dst_x0x1_2'(s(fun(X1088,'type.pair.prod'(bool,X1087)),X1089),s(fun(X1090,X1088),X1091))),s(X1090,X1092))))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X1087),happ(s(fun(X1088,'type.pair.prod'(bool,X1087)),X1089),s(X1088,happ(s(fun(X1090,X1088),X1091),s(X1090,X1092)))))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1023,f351])).
fof(f7996,plain,(
  ( ! [X1064,X1062,X1060,X1065,X1059,X1063,X1061] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X1064),s(fun('type.num.num',bool),X1065),s('type.num.num','const.num.SUC_1'(s('type.num.num',happ(s(fun(X1061,'type.num.num'),'_dst_x0x1_2'(s(fun(X1059,'type.num.num'),X1060),s(fun(X1061,X1059),X1062))),s(X1061,X1063))))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1065),s('type.num.num',happ(s(fun(X1059,'type.num.num'),X1060),s(X1059,happ(s(fun(X1061,X1059),X1062),s(X1061,X1063)))))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1467,f351])).
fof(f7928,plain,(
  ( ! [X520,X522,X516,X518,X521,X517,X519] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X521),s(fun('type.num.num',bool),happ(s(fun(X518,fun('type.num.num',bool)),'_dst_x0x1_2'(s(fun(X516,fun('type.num.num',bool)),X517),s(fun(X518,X516),X519))),s(X518,X520))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X522))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun(X516,fun('type.num.num',bool)),X517),s(X516,happ(s(fun(X518,X516),X519),s(X518,X520))))),s('type.num.num',X522)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1467,f351])).
fof(f7920,plain,(
  ( ! [X455,X457,X459,X460,X456,X458] : (~p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X457,fun(bool,bool)),'_dst_x0x1_2'(s(fun(X455,fun(bool,bool)),X456),s(fun(X457,X455),X458))),s(X457,X459))),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),happ(s(fun(X455,fun(bool,bool)),X456),s(X455,happ(s(fun(X457,X455),X458),s(X457,X459)))))))) | s(bool,'T_0') = s(bool,sK28(X460,happ(s(fun(X455,fun(bool,bool)),X456),s(X455,happ(s(fun(X457,X455),X458),s(X457,X459)))),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f351])).
fof(f7878,plain,(
  ( ! [X231,X229,X233,X230,X228,X234,X232] : (~p(s(bool,happ(s(fun(X230,bool),'_dst_x0x1_2'(s(fun(X228,bool),X229),s(fun(X230,X228),X231))),s(X230,X232)))) | s(bool,happ(s(fun('type.num.num',bool),X233),s('type.num.num',X234))) = s(bool,happ(s(fun(X228,bool),X229),s(X228,happ(s(fun(X230,X228),X231),s(X230,X232))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X233),s('type.num.num',X234)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2038,f351])).
fof(f7875,plain,(
  ( ! [X212,X210,X208,X206,X211,X209,X207] : (p(s(bool,happ(s(fun(X208,bool),'_dst_x0x1_2'(s(fun(X206,bool),X207),s(fun(X208,X206),X209))),s(X208,X210)))) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X211),sK28(X212,'const.pair.FST_0','type.pair.prod'(bool,X211))))) = s(bool,happ(s(fun(X206,bool),X207),s(X206,happ(s(fun(X208,X206),X209),s(X208,X210))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X211),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1612,f351])).
fof(f7871,plain,(
  ( ! [X182,X180,X178,X184,X183,X181,X179] : (~p(s(bool,happ(s(fun(X180,bool),'_dst_x0x1_2'(s(fun(X178,bool),X179),s(fun(X180,X178),X181))),s(X180,X182)))) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X183),X184))) = s(bool,happ(s(fun(X178,bool),X179),s(X178,happ(s(fun(X180,X178),X181),s(X180,X182))))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X183),X184)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1307,f351])).
fof(f7745,plain,(
  ( ! [X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,happ(s(fun(X20,bool),'_dst_x0x1_2'(s(fun('type.pair.prod'(bool,X19),bool),'const.pair.FST_0'),s(fun(X20,'type.pair.prod'(bool,X19)),X21))),s(X20,X22))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X19),happ(s(fun(X20,'type.pair.prod'(bool,X19)),X21),s(X20,X22)))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f351,f1023])).
fof(f2257,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(bool,X0))) != s(X1,g(s(bool,X0))) | s(fun(bool,X1),X2) = s(fun(bool,X1),X3) | s(bool,'T_0') = s(bool,sK30(X2,X3,X1,bool)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2222,f243])).
fof(f2224,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK30(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK30(X1,X2,bool,X0))))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f2219,f467])).
fof(f2219,plain,(
  ( ! [X2,X0,X1] : (s(bool,sK26) != s(bool,f(s(X0,sK30(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK30(X1,X2,bool,X0))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f307,f745])).
fof(f2222,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK30(X0,X1,X2,bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f2216,f467])).
fof(f2216,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,sK26))) != s(X2,g(s(bool,sK26))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK30(X0,X1,X2,bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f307,f745])).
fof(f2069,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num',X24))) = s(bool,'const.ind_type.FCONS_3'(s(bool,X20),s(fun('type.num.num',bool),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num',X22)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f2051,f240])).
fof(f2051,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'T_0')) | s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num',X24))) = s(bool,'const.ind_type.FCONS_3'(s(bool,X20),s(fun('type.num.num',bool),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num',X22)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2038,f1467])).
fof(f2066,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num',X15))) = s(bool,happ(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X12),X13))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num',X15))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),X13)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f2049,f240])).
fof(f2049,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'T_0')) | s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num',X15))) = s(bool,happ(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X12),X13))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num',X15))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),X13)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2038,f1023])).
fof(f2043,plain,(
  ( ! [X61,X59,X62,X60,X58] : (s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X61),X62))) = s(bool,'const.ind_type.FCONS_3'(s(bool,X58),s(fun('type.num.num',bool),X59),s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X61),X62))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X59),s('type.num.num',X60)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f2001,f240])).
fof(f2001,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'T_0')) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X61),X62))) = s(bool,'const.ind_type.FCONS_3'(s(bool,X58),s(fun('type.num.num',bool),X59),s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X61),X62))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X59),s('type.num.num',X60)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1307,f1467])).
fof(f2039,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X30) != s(bool,'const.ind_type.FCONS_3'(s(bool,X27),s(fun('type.num.num',bool),X28),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))))) | s(bool,'T_0') = s(bool,X30) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',X29)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1993,f240])).
fof(f1993,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'T_0')) | s(bool,X30) != s(bool,'const.ind_type.FCONS_3'(s(bool,X27),s(fun('type.num.num',bool),X28),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29))))) | s(bool,'T_0') = s(bool,X30) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',X29)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f442,f1467])).
fof(f2038,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X26)) | s(bool,X26) = s(bool,happ(s(fun('type.num.num',bool),X24),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X24),s('type.num.num',X25)))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f2037,f272])).
fof(f2037,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X26)) | s(bool,X26) = s(bool,'const.ind_type.FCONS_3'(s(bool,X23),s(fun('type.num.num',bool),X24),s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X24),s('type.num.num',X25)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1992,f240])).
fof(f1992,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X26)) | s(bool,X26) = s(bool,'const.ind_type.FCONS_3'(s(bool,X23),s(fun('type.num.num',bool),X24),s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X24),s('type.num.num',X25)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f278,f1467])).
fof(f1917,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X20),sK28(X21,'const.pair.FST_0','type.pair.prod'(bool,X20))))) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X22),sK28(X23,'const.pair.FST_0','type.pair.prod'(bool,X22))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X22),bool),'const.pair.FST_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X20),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1905,f242])).
fof(f1905,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,'F_0')) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X20),sK28(X21,'const.pair.FST_0','type.pair.prod'(bool,X20))))) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X22),sK28(X23,'const.pair.FST_0','type.pair.prod'(bool,X22))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X22),bool),'const.pair.FST_0'))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X20),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1612,f1316])).
fof(f1613,plain,(
  ( ! [X26,X24,X25] : (s(bool,X26) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X24),sK28(X25,'const.pair.FST_0','type.pair.prod'(bool,X24))))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X24),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1595,f242])).
fof(f1595,plain,(
  ( ! [X26,X24,X25] : (p(s(bool,'F_0')) | s(bool,X26) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X24),sK28(X25,'const.pair.FST_0','type.pair.prod'(bool,X24))))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X24),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f1316])).
fof(f1612,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X14)) | s(bool,X14) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),sK28(X13,'const.pair.FST_0','type.pair.prod'(bool,X12))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1591,f242])).
fof(f1591,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,'F_0')) | p(s(bool,X14)) | s(bool,X14) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),sK28(X13,'const.pair.FST_0','type.pair.prod'(bool,X12))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f275,f1316])).
fof(f1610,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X8),sK28(X9,'const.pair.FST_0','type.pair.prod'(bool,X8)))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X8),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(trivial_inequality_removal,[],[f1589])).
fof(f1589,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') != s(bool,'F_0') | ~p(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X8),sK28(X9,'const.pair.FST_0','type.pair.prod'(bool,X8)))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X8),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f248,f1316])).
fof(f1611,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X4),sK28(X5,'const.pair.FST_0','type.pair.prod'(bool,X4))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X4),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1587,f242])).
fof(f1587,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X4),sK28(X5,'const.pair.FST_0','type.pair.prod'(bool,X4))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X4),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f1316])).
fof(f1485,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),happ(s(fun('type.num.num',fun(bool,bool)),X93),s('type.num.num',X94)))))) | ~p(s(bool,happ(s(fun(bool,bool),happ(s(fun('type.num.num',fun(bool,bool)),X93),s('type.num.num',X94))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK28(X95,'const.ind_type.FCONS_3'(s(fun(bool,bool),X92),s(fun('type.num.num',fun(bool,bool)),X93),s('type.num.num','const.num.SUC_1'(s('type.num.num',X94)))),bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1452,f272])).
fof(f1452,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,happ(s(fun(bool,bool),happ(s(fun('type.num.num',fun(bool,bool)),X93),s('type.num.num',X94))),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'const.ind_type.FCONS_3'(s(fun(bool,bool),X92),s(fun('type.num.num',fun(bool,bool)),X93),s('type.num.num','const.num.SUC_1'(s('type.num.num',X94)))))))) | s(bool,'T_0') = s(bool,sK28(X95,'const.ind_type.FCONS_3'(s(fun(bool,bool),X92),s(fun('type.num.num',fun(bool,bool)),X93),s('type.num.num','const.num.SUC_1'(s('type.num.num',X94)))),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f272])).
fof(f1467,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X4),s(fun('type.num.num',bool),X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',X6)))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1427,f467])).
fof(f1427,plain,(
  ( ! [X6,X4,X5] : (s(bool,sK26) = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X4),s(fun('type.num.num',bool),X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f272,f745])).
fof(f1359,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X14),X15))) = s(bool,happ(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X12),X13))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X14),X15))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),X13)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1346,f240])).
fof(f1346,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'T_0')) | s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X14),X15))) = s(bool,happ(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X12),X13))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X14),X15))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),X13)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1307,f1023])).
fof(f1316,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),sK28(X1,'const.pair.FST_0','type.pair.prod'(bool,X0))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1315,f242])).
fof(f1315,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),sK28(X1,'const.pair.FST_0','type.pair.prod'(bool,X0))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1312,f467])).
fof(f1312,plain,(
  ( ! [X0,X1] : (p(s(bool,sK26)) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),sK28(X1,'const.pair.FST_0','type.pair.prod'(bool,X0))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f1305,f745])).
fof(f1308,plain,(
  ( ! [X23,X21,X22] : (s(bool,X23) != s(bool,happ(s(fun('type.pair.prod'(bool,X21),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X21),X22))) | s(bool,'T_0') = s(bool,X23) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X21),X22)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1280,f240])).
fof(f1280,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | s(bool,X23) != s(bool,happ(s(fun('type.pair.prod'(bool,X21),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X21),X22))) | s(bool,'T_0') = s(bool,X23) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X21),X22)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f442,f1023])).
fof(f1307,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,X20)) | s(bool,X20) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X18),X19))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X18),X19)))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1306,f279])).
fof(f1306,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,X20)) | s(bool,X20) = s(bool,happ(s(fun('type.pair.prod'(bool,X18),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X18),X19))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X18),X19)))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1279,f240])).
fof(f1279,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | s(bool,X20) = s(bool,happ(s(fun('type.pair.prod'(bool,X18),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X18),X19))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X18),X19)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f278,f1023])).
fof(f1305,plain,(
  ( ! [X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),sK28(X1,'const.pair.FST_0','type.pair.prod'(bool,X0)))))) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f1271,f240])).
fof(f1271,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),sK28(X1,'const.pair.FST_0','type.pair.prod'(bool,X0)))))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f271,f1023])).
fof(f1227,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,sK28(X2,X1,bool)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f243])).
fof(f1235,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X12)))) | ~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK28(X13,'const.pair.SND_1'(s('type.pair.prod'(X10,fun(bool,bool)),'const.pair.,_2'(s(X10,X11),s(fun(bool,bool),X12)))),bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1226,f281])).
fof(f1226,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'const.pair.SND_1'(s('type.pair.prod'(X10,fun(bool,bool)),'const.pair.,_2'(s(X10,X11),s(fun(bool,bool),X12)))))))) | s(bool,'T_0') = s(bool,sK28(X13,'const.pair.SND_1'(s('type.pair.prod'(X10,fun(bool,bool)),'const.pair.,_2'(s(X10,X11),s(fun(bool,bool),X12)))),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f281])).
fof(f1234,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7)))) | ~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK28(X9,'const.pair.FST_1'(s('type.pair.prod'(fun(bool,bool),X6),'const.pair.,_2'(s(fun(bool,bool),X7),s(X6,X8)))),bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1225,f282])).
fof(f1225,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(bool,bool),X6),'const.pair.,_2'(s(fun(bool,bool),X7),s(X6,X8)))))))) | s(bool,'T_0') = s(bool,sK28(X9,'const.pair.FST_1'(s('type.pair.prod'(fun(bool,bool),X6),'const.pair.,_2'(s(fun(bool,bool),X7),s(X6,X8)))),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f282])).
fof(f1233,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X3)))) | ~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK28(X5,'const.ind_type.FCONS_3'(s(fun(bool,bool),X3),s(fun('type.num.num',fun(bool,bool)),X4),s('type.num.num','const.num.|48|_0')),bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1224,f269])).
fof(f1224,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'const.ind_type.FCONS_3'(s(fun(bool,bool),X3),s(fun('type.num.num',fun(bool,bool)),X4),s('type.num.num','const.num.|48|_0')))))) | s(bool,'T_0') = s(bool,sK28(X5,'const.ind_type.FCONS_3'(s(fun(bool,bool),X3),s(fun('type.num.num',fun(bool,bool)),X4),s('type.num.num','const.num.|48|_0')),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f269])).
fof(f1232,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(bool,bool),X0),X1)))))) | ~p(s(bool,happ(s(fun(bool,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(bool,bool),X0),X1))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK28(X2,happ(s(fun('type.pair.prod'(fun(bool,bool),X0),fun(bool,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(bool,bool),X0),X1)),bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f1223,f279])).
fof(f1223,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(bool,bool),X0),X1))),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),happ(s(fun('type.pair.prod'(fun(bool,bool),X0),fun(bool,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(bool,bool),X0),X1)))))) | s(bool,'T_0') = s(bool,sK28(X2,happ(s(fun('type.pair.prod'(fun(bool,bool),X0),fun(bool,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(bool,bool),X0),X1)),bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f941,f279])).
fof(f1023,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X3),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X3),X4))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X3),X4)))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f999,f467])).
fof(f999,plain,(
  ( ! [X4,X3] : (s(bool,sK26) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X3),X4))) | s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X3),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X3),X4)))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f279,f745])).
fof(f941,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,sK28(X0,X1,bool))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f929,f467])).
fof(f929,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,sK26)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,'T_0') = s(bool,sK28(X0,X1,bool))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f271,f745])).
fof(f745,plain,(
  ( ! [X5] : (s(bool,sK26) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f739,f242])).
fof(f739,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,sK26) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f498,f467])).
fof(f744,plain,(
  ( ! [X4] : (s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(subsumption_resolution,[],[f738,f242])).
fof(f738,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,sK13) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl30),
  inference(superposition,[],[f498,f465])).
fof(f485,plain,(
  s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(subsumption_resolution,[],[f481,f242])).
fof(f481,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK13) | $spl30),
  inference(superposition,[],[f244,f465])).
fof(f476,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f472,f242])).
fof(f472,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,sK26) | ($spl24 | $spl30)),
  inference(superposition,[],[f244,f467])).
fof(f467,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f392])).
fof(f22123,plain,(
  $false | ($spl0 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17055,f17097,f17103,f17155,f17161,f392,f17694,f17761,f17767,f12201,f1001,f1429,f2218,f2221,f9678,f8014,f7855,f368,f465,f21676,f21677,f21678,f21714,f21720,f21760,f21766,f21990,f21991,f21994,f21995,f21997,f21998,f22000,f22001,f22003,f22004,f22009,f22010,f22012,f22013,f22015,f22016,f22018,f22019,f22021,f22022,f22024,f22025,f22062,f22076,f22080,f22084,f22088,f22092,f22096,f22099,f22102,f22106,f22110,f22114,f22117,f22120,f22038])).
fof(f22039,plain,(
  $false | ($spl0 | $spl15 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f22038,f383])).
fof(f22007,plain,(
  $false | ($spl0 | $spl15 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f22006,f383])).
fof(f21578,plain,(
  $false | ($spl0 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f21577,f422])).
fof(f21577,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f21576,f339])).
fof(f21576,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f21454,f339])).
fof(f21454,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f21332,f319])).
fof(f21332,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl25 | $spl31)),
  inference(backward_demodulation,[],[f21302,f21292])).
fof(f21292,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl25 | $spl31)),
  inference(backward_demodulation,[],[f21285,f368])).
fof(f21285,plain,(
  s(bool,'T_0') = s(bool,sK13) | ($spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f242,f21279,f498])).
fof(f21279,plain,(
  s(bool,'F_0') != s(bool,sK13) | ($spl25 | $spl31)),
  inference(global_subsumption,[],[f20377,f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f422,f439,f442,f498,f757,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f9663,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f18179,f18178,f18325,f12201,f1001,f1429,f2218,f2221,f9678,f8014,f7855,f464,f20383,f20382,f20488])).
fof(f20488,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl31),
  inference(subsumption_resolution,[],[f20454,f240])).
fof(f20454,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl31),
  inference(superposition,[],[f442,f20382])).
fof(f20382,plain,(
  s(bool,'T_0') = s(bool,sK13) | $spl31),
  inference(unit_resulting_resolution,[],[f242,f464,f498])).
fof(f20383,plain,(
  p(s(bool,sK13)) | $spl31),
  inference(unit_resulting_resolution,[],[f242,f464,f275])).
fof(f18325,plain,(
  ( ! [X3] : (s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl31),
  inference(subsumption_resolution,[],[f18285,f240])).
fof(f18285,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,sK13) != s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl31),
  inference(superposition,[],[f442,f18178])).
fof(f18178,plain,(
  s(bool,'T_0') = s(bool,sK13) | $spl31),
  inference(unit_resulting_resolution,[],[f242,f464,f498])).
fof(f18179,plain,(
  p(s(bool,sK13)) | $spl31),
  inference(unit_resulting_resolution,[],[f242,f464,f275])).
fof(f20377,plain,(
  s(bool,'F_0') != s(bool,sK13) | s(bool,'T_0') = s(bool,sK26) | $spl25),
  inference(superposition,[],[f393,f243])).
fof(f21302,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f242,f21291,f498])).
fof(f21291,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl25 | $spl31)),
  inference(backward_demodulation,[],[f21285,f393])).
fof(f21540,plain,(
  $false | ($spl0 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f21539,f422])).
fof(f21539,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f21538,f339])).
fof(f21538,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f21467,f339])).
fof(f21467,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f21332,f319])).
fof(f21241,plain,(
  $false | ($spl0 | $spl25 | $spl28)),
  inference(subsumption_resolution,[],[f21240,f422])).
fof(f21240,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f21239,f339])).
fof(f21239,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f21142,f339])).
fof(f21142,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20995,f319])).
fof(f20995,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20994,f20992])).
fof(f20992,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20991,f20989])).
fof(f20989,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20988,f20986])).
fof(f20986,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20985,f20983])).
fof(f20983,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20982,f20980])).
fof(f20980,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20979,f20977])).
fof(f20977,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20976,f20974])).
fof(f20974,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20973,f20971])).
fof(f20971,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20970,f20968])).
fof(f20968,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20967,f20965])).
fof(f20965,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20964,f20961])).
fof(f20961,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20960,f20805])).
fof(f20805,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20775,f20768])).
fof(f20768,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20766,f368])).
fof(f20766,plain,(
  s(bool,'T_0') = s(bool,sK26) | ($spl25 | $spl28)),
  inference(global_subsumption,[],[f20377,f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f422,f439,f442,f498,f757,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f9663,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f11749,f13174,f14347,f15573,f16864,f17494,f12201,f1001,f1429,f2218,f2221,f9678,f8014,f7855,f463,f19475])).
fof(f20775,plain,(
  s(bool,'F_0') = s(bool,sK13) | ($spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f242,f20767,f498])).
fof(f20767,plain,(
  s(bool,'T_0') != s(bool,sK13) | ($spl25 | $spl28)),
  inference(backward_demodulation,[],[f20766,f393])).
fof(f20960,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20959,f340])).
fof(f20959,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20894,f340])).
fof(f20894,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f320])).
fof(f20964,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20963,f345])).
fof(f20963,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20892,f345])).
fof(f20892,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f318])).
fof(f20967,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20966,f338])).
fof(f20966,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20891,f338])).
fof(f20891,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f317])).
fof(f20970,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20969,f336])).
fof(f20969,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20890,f336])).
fof(f20890,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f316])).
fof(f20973,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20972,f337])).
fof(f20972,plain,(
  s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20889,f337])).
fof(f20889,plain,(
  s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f315])).
fof(f20976,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20975,f348])).
fof(f20975,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20888,f348])).
fof(f20888,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f314])).
fof(f20979,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20978,f344])).
fof(f20978,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20887,f344])).
fof(f20887,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f313])).
fof(f20982,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20981,f346])).
fof(f20981,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20886,f346])).
fof(f20886,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f312])).
fof(f20985,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20984,f347])).
fof(f20984,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20885,f347])).
fof(f20885,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f311])).
fof(f20988,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20987,f341])).
fof(f20987,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20884,f341])).
fof(f20884,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f310])).
fof(f20991,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20990,f343])).
fof(f20990,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20883,f343])).
fof(f20883,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f309])).
fof(f20994,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20993,f342])).
fof(f20993,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20882,f342])).
fof(f20882,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20805,f308])).
fof(f21226,plain,(
  $false | ($spl0 | $spl25 | $spl28)),
  inference(subsumption_resolution,[],[f21225,f422])).
fof(f21225,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f21224,f339])).
fof(f21224,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f21155,f339])).
fof(f21155,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20995,f319])).
fof(f20673,plain,(
  $false | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f20672,f422])).
fof(f20672,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f20671,f339])).
fof(f20671,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f20551,f339])).
fof(f20551,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f20429,f319])).
fof(f20429,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(backward_demodulation,[],[f20399,f20389])).
fof(f20389,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl31)),
  inference(backward_demodulation,[],[f20382,f20376])).
fof(f20376,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12)),
  inference(forward_demodulation,[],[f368,f380])).
fof(f20399,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f242,f20388,f498])).
fof(f20388,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl25 | $spl31)),
  inference(backward_demodulation,[],[f20382,f393])).
fof(f20637,plain,(
  $false | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f20636,f422])).
fof(f20636,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f20635,f339])).
fof(f20635,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f20564,f339])).
fof(f20564,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f20429,f319])).
fof(f20338,plain,(
  $false | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(subsumption_resolution,[],[f20337,f422])).
fof(f20337,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20336,f339])).
fof(f20336,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20239,f339])).
fof(f20239,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20095,f319])).
fof(f20095,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20094,f20092])).
fof(f20092,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20091,f20089])).
fof(f20089,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20088,f20086])).
fof(f20086,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20085,f20083])).
fof(f20083,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20082,f20079])).
fof(f20079,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20078,f20076])).
fof(f20076,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20075,f20073])).
fof(f20073,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20072,f20070])).
fof(f20070,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20069,f20067])).
fof(f20067,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20066,f20063])).
fof(f20063,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f20062,f19882])).
fof(f19882,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19881,f19386])).
fof(f19386,plain,(
  s(bool,'F_0') = s(bool,sK13) | ($spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f242,f19378,f498])).
fof(f19378,plain,(
  s(bool,'T_0') != s(bool,sK13) | ($spl25 | $spl28)),
  inference(backward_demodulation,[],[f463,f393])).
fof(f19881,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl28)),
  inference(forward_demodulation,[],[f19880,f380])).
fof(f19880,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl28)),
  inference(forward_demodulation,[],[f368,f463])).
fof(f20062,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20061,f340])).
fof(f20061,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19996,f340])).
fof(f19996,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f320])).
fof(f20066,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20065,f345])).
fof(f20065,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19994,f345])).
fof(f19994,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f318])).
fof(f20069,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20068,f338])).
fof(f20068,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19993,f338])).
fof(f19993,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f317])).
fof(f20072,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20071,f336])).
fof(f20071,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19992,f336])).
fof(f19992,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f316])).
fof(f20075,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20074,f337])).
fof(f20074,plain,(
  s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19991,f337])).
fof(f19991,plain,(
  s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f315])).
fof(f20078,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20077,f348])).
fof(f20077,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19990,f348])).
fof(f19990,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f314])).
fof(f20082,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20081,f346])).
fof(f20081,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19988,f346])).
fof(f19988,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f312])).
fof(f20085,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20084,f347])).
fof(f20084,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19987,f347])).
fof(f19987,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f311])).
fof(f20088,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20087,f341])).
fof(f20087,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19986,f341])).
fof(f19986,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f310])).
fof(f20091,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20090,f343])).
fof(f20090,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19985,f343])).
fof(f19985,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f309])).
fof(f20094,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20093,f342])).
fof(f20093,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19984,f342])).
fof(f19984,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19882,f308])).
fof(f20323,plain,(
  $false | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(subsumption_resolution,[],[f20322,f422])).
fof(f20322,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20321,f339])).
fof(f20321,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f20252,f339])).
fof(f20252,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f20095,f319])).
fof(f19842,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(subsumption_resolution,[],[f19841,f422])).
fof(f19841,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19840,f339])).
fof(f19840,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19743,f339])).
fof(f19743,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19602,f319])).
fof(f19602,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19601,f19599])).
fof(f19599,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19598,f19596])).
fof(f19596,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19595,f19593])).
fof(f19593,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19592,f19590])).
fof(f19590,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19589,f19585])).
fof(f19585,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19584,f19582])).
fof(f19582,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19581,f19579])).
fof(f19579,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19578,f19576])).
fof(f19576,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19575,f19572])).
fof(f19572,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19571,f19416])).
fof(f19416,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(backward_demodulation,[],[f19386,f19379])).
fof(f19379,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl28)),
  inference(backward_demodulation,[],[f463,f19377])).
fof(f19377,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14)),
  inference(forward_demodulation,[],[f19376,f380])).
fof(f19376,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14)),
  inference(forward_demodulation,[],[f368,f382])).
fof(f19571,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19570,f340])).
fof(f19570,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19505,f340])).
fof(f19505,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f320])).
fof(f19575,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19574,f345])).
fof(f19574,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19503,f345])).
fof(f19503,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f318])).
fof(f19578,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19577,f338])).
fof(f19577,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19502,f338])).
fof(f19502,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f317])).
fof(f19581,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19580,f336])).
fof(f19580,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19501,f336])).
fof(f19501,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f316])).
fof(f19584,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19583,f337])).
fof(f19583,plain,(
  s('type.num.num',sK22) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19500,f337])).
fof(f19500,plain,(
  s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f315])).
fof(f19589,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19588,f346])).
fof(f19588,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19497,f346])).
fof(f19497,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f312])).
fof(f19592,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19591,f347])).
fof(f19591,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19496,f347])).
fof(f19496,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f311])).
fof(f19595,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19594,f341])).
fof(f19594,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19495,f341])).
fof(f19495,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f310])).
fof(f19598,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19597,f343])).
fof(f19597,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19494,f343])).
fof(f19494,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f309])).
fof(f19601,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19600,f342])).
fof(f19600,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19493,f342])).
fof(f19493,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19416,f308])).
fof(f19827,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(subsumption_resolution,[],[f19826,f422])).
fof(f19826,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19825,f339])).
fof(f19825,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(forward_demodulation,[],[f19756,f339])).
fof(f19756,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl28)),
  inference(unit_resulting_resolution,[],[f19602,f319])).
fof(f19288,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f19287,f422])).
fof(f19287,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19286,f339])).
fof(f19286,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19168,f339])).
fof(f19168,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f19070,f319])).
fof(f19070,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19069,f18178])).
fof(f19069,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19068,f380])).
fof(f19068,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19067,f382])).
fof(f19067,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f368,f18189])).
fof(f18189,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f18185,f243])).
fof(f18185,plain,(
  s(bool,'T_0') != s(bool,sK26) | ($spl25 | $spl31)),
  inference(backward_demodulation,[],[f18178,f393])).
fof(f19254,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f19253,f422])).
fof(f19253,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19252,f339])).
fof(f19252,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f19181,f339])).
fof(f19181,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f19070,f319])).
fof(f18984,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f18983,f422])).
fof(f18983,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f18982,f339])).
fof(f18982,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f18866,f339])).
fof(f18866,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f18620,f319])).
fof(f18620,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f18184,f18189])).
fof(f18184,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl31)),
  inference(backward_demodulation,[],[f18178,f17052])).
fof(f17052,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16)),
  inference(forward_demodulation,[],[f17051,f380])).
fof(f17051,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14 | $spl16)),
  inference(forward_demodulation,[],[f17050,f382])).
fof(f17050,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl16)),
  inference(forward_demodulation,[],[f368,f384])).
fof(f18952,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(subsumption_resolution,[],[f18951,f422])).
fof(f18951,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f18950,f339])).
fof(f18950,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(forward_demodulation,[],[f18879,f339])).
fof(f18879,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31)),
  inference(unit_resulting_resolution,[],[f18620,f319])).
fof(f18518,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(subsumption_resolution,[],[f18517,f422])).
fof(f18517,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(forward_demodulation,[],[f18516,f339])).
fof(f18516,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(forward_demodulation,[],[f18400,f339])).
fof(f18400,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(unit_resulting_resolution,[],[f18230,f319])).
fof(f18230,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(backward_demodulation,[],[f18227,f18184])).
fof(f18227,plain,(
  s(bool,'F_0') = s(bool,sK26) | ($spl25 | $spl31 | $spl42)),
  inference(forward_demodulation,[],[f18226,f2266])).
fof(f2266,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl42),
  inference(cnf_transformation,[],[f2266_D])).
fof(f2266_D,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f18226,plain,(
  s(bool,sK26) = s(bool,f(s(bool,'F_0'))) | ($spl25 | $spl31 | $spl42)),
  inference(forward_demodulation,[],[f18220,f2266])).
fof(f18220,plain,(
  s(bool,sK26) = s(bool,f(s(bool,f(s(bool,'F_0'))))) | ($spl25 | $spl31 | $spl42)),
  inference(unit_resulting_resolution,[],[f3609,f18185,f4154])).
fof(f4154,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl42),
  inference(superposition,[],[f3615,f243])).
fof(f3615,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl42),
  inference(subsumption_resolution,[],[f3585,f242])).
fof(f3585,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl42),
  inference(superposition,[],[f498,f2266])).
fof(f3609,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl42),
  inference(subsumption_resolution,[],[f3577,f242])).
fof(f3577,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl42),
  inference(superposition,[],[f244,f2266])).
fof(f18486,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(subsumption_resolution,[],[f18485,f422])).
fof(f18485,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(forward_demodulation,[],[f18484,f339])).
fof(f18484,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(forward_demodulation,[],[f18413,f339])).
fof(f18413,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl31 | $spl42)),
  inference(unit_resulting_resolution,[],[f18230,f319])).
fof(f463,plain,(
  s(bool,'T_0') = s(bool,sK26) | $spl28),
  inference(cnf_transformation,[],[f463_D])).
fof(f463_D,plain,(
  s(bool,'T_0') = s(bool,sK26) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f464,plain,(
  s(bool,'F_0') != s(bool,sK13) | $spl31),
  inference(cnf_transformation,[],[f464_D])).
fof(f464_D,plain,(
  s(bool,'F_0') != s(bool,sK13) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f18173,plain,(
  s(bool,'F_0') != s(bool,sK13) | s(bool,'T_0') = s(bool,sK26) | $spl25),
  inference(superposition,[],[f393,f243])).
fof(f18135,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(subsumption_resolution,[],[f18134,f422])).
fof(f18134,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f18133,f339])).
fof(f18133,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f18036,f339])).
fof(f18036,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17898,f319])).
fof(f17898,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17897,f17895])).
fof(f17895,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17894,f17892])).
fof(f17892,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17891,f17889])).
fof(f17889,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17888,f17886])).
fof(f17886,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17885,f17880])).
fof(f17880,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17879,f17877])).
fof(f17877,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17876,f17874])).
fof(f17874,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17873,f17870])).
fof(f17870,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17869,f17716])).
fof(f17716,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(backward_demodulation,[],[f17710,f17704])).
fof(f17704,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl30)),
  inference(forward_demodulation,[],[f17052,f465])).
fof(f17710,plain,(
  s(bool,'T_0') = s(bool,sK26) | ($spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f242,f17705,f498])).
fof(f17705,plain,(
  s(bool,'F_0') != s(bool,sK26) | ($spl25 | $spl30)),
  inference(forward_demodulation,[],[f393,f465])).
fof(f17869,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17868,f340])).
fof(f17868,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17803,f340])).
fof(f17803,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f320])).
fof(f17873,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17872,f345])).
fof(f17872,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17801,f345])).
fof(f17801,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f318])).
fof(f17876,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17875,f338])).
fof(f17875,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17800,f338])).
fof(f17800,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f317])).
fof(f17879,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17878,f336])).
fof(f17878,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17799,f336])).
fof(f17799,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f316])).
fof(f17885,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17884,f346])).
fof(f17884,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17795,f346])).
fof(f17795,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f312])).
fof(f17888,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17887,f347])).
fof(f17887,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17794,f347])).
fof(f17794,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f311])).
fof(f17891,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17890,f341])).
fof(f17890,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17793,f341])).
fof(f17793,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f310])).
fof(f17894,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17893,f343])).
fof(f17893,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17792,f343])).
fof(f17792,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f309])).
fof(f17897,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17896,f342])).
fof(f17896,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f17791,f342])).
fof(f17791,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17716,f308])).
fof(f18120,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(subsumption_resolution,[],[f18119,f422])).
fof(f18119,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f18118,f339])).
fof(f18118,plain,(
  s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(forward_demodulation,[],[f18049,f339])).
fof(f18049,plain,(
  s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl25 | $spl30)),
  inference(unit_resulting_resolution,[],[f17898,f319])).
fof(f17703,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl19 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f387])).
fof(f17695,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f17053])).
fof(f17053,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24)),
  inference(backward_demodulation,[],[f392,f17052])).
fof(f17374,plain,(
  ( ! [X47] : (s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) | s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17373,f17265])).
fof(f17373,plain,(
  ( ! [X47] : (s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) | s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17247,f340])).
fof(f17247,plain,(
  ( ! [X47] : (s('type.wordSem.state'(sK0,sK1),X47) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),X47))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f320,f17054])).
fof(f17371,plain,(
  ( ! [X45] : (s(bool,'F_0') = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),X45))) | s('type.wordSem.state'(sK0,sK1),X45) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17245,f339])).
fof(f17245,plain,(
  ( ! [X45] : (s('type.wordSem.state'(sK0,sK1),X45) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),X45))) = s(bool,'const.wordSem.state_be_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f319,f17054])).
fof(f17368,plain,(
  ( ! [X43] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) | s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17367,f17269])).
fof(f17367,plain,(
  ( ! [X43] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) | s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17243,f345])).
fof(f17243,plain,(
  ( ! [X43] : (s('type.wordSem.state'(sK0,sK1),X43) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),X43))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f318,f17054])).
fof(f17364,plain,(
  ( ! [X41] : (s('type.num.num',sK11) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) | s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17363,f17272])).
fof(f17363,plain,(
  ( ! [X41] : (s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) | s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17241,f338])).
fof(f17241,plain,(
  ( ! [X41] : (s('type.wordSem.state'(sK0,sK1),X41) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),X41))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f317,f17054])).
fof(f17360,plain,(
  ( ! [X39] : (s('type.num.num',sK10) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) | s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17359,f17275])).
fof(f17359,plain,(
  ( ! [X39] : (s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) | s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17239,f336])).
fof(f17239,plain,(
  ( ! [X39] : (s('type.wordSem.state'(sK0,sK1),X39) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),X39))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f316,f17054])).
fof(f17357,plain,(
  ( ! [X37] : (s('type.num.num',sK9) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) | s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17237,f337])).
fof(f17237,plain,(
  ( ! [X37] : (s('type.wordSem.state'(sK0,sK1),X37) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),X37))) = s('type.num.num','const.wordSem.state_handler_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f315,f17054])).
fof(f17355,plain,(
  ( ! [X35] : (s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) | s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17235,f348])).
fof(f17235,plain,(
  ( ! [X35] : (s('type.wordSem.state'(sK0,sK1),X35) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),X35))) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),'const.wordSem.state_gc_fun_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f314,f17054])).
fof(f17353,plain,(
  ( ! [X33] : (s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) | s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17233,f344])).
fof(f17233,plain,(
  ( ! [X33] : (s('type.wordSem.state'(sK0,sK1),X33) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),X33))) = s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.wordSem.state_permute_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f313,f17054])).
fof(f17350,plain,(
  ( ! [X31] : (s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) | s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17349,f17281])).
fof(f17349,plain,(
  ( ! [X31] : (s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) | s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17231,f346])).
fof(f17231,plain,(
  ( ! [X31] : (s('type.wordSem.state'(sK0,sK1),X31) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),X31))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f312,f17054])).
fof(f17347,plain,(
  ( ! [X29] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) | s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17229,f347])).
fof(f17229,plain,(
  ( ! [X29] : (s('type.wordSem.state'(sK0,sK1),X29) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),X29))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f311,f17054])).
fof(f17344,plain,(
  ( ! [X27] : (s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) | s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17343,f17287])).
fof(f17343,plain,(
  ( ! [X27] : (s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) | s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17227,f341])).
fof(f17227,plain,(
  ( ! [X27] : (s('type.wordSem.state'(sK0,sK1),X27) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),X27))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f310,f17054])).
fof(f17340,plain,(
  ( ! [X25] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) | s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17339,f17290])).
fof(f17339,plain,(
  ( ! [X25] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) | s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17225,f343])).
fof(f17225,plain,(
  ( ! [X25] : (s('type.wordSem.state'(sK0,sK1),X25) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),X25))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f309,f17054])).
fof(f17336,plain,(
  ( ! [X23] : (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) | s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17335,f17293])).
fof(f17335,plain,(
  ( ! [X23] : (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) | s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14)))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17223,f342])).
fof(f17223,plain,(
  ( ! [X23] : (s('type.wordSem.state'(sK0,sK1),X23) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),X23))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27)))))) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f308,f17054])).
fof(f17325,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17324,f17293])).
fof(f17324,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17323,f17290])).
fof(f17323,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17322,f17287])).
fof(f17322,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17321,f17281])).
fof(f17321,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17320,f17275])).
fof(f17320,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17319,f17272])).
fof(f17319,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17318,f17269])).
fof(f17318,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17198,f17265])).
fof(f17198,plain,(
  ( ! [X0] : (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,X0),s('type.ffi.ffi_state'(sK1),sK27))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(superposition,[],[f17054,f243])).
fof(f17294,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17293,f17291])).
fof(f17293,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17292,f342])).
fof(f17292,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17185,f342])).
fof(f17185,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f308])).
fof(f17291,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17290,f17288])).
fof(f17290,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17289,f343])).
fof(f17289,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17186,f343])).
fof(f17186,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f309])).
fof(f17288,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17287,f17282])).
fof(f17287,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17286,f341])).
fof(f17286,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17187,f341])).
fof(f17187,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f310])).
fof(f17282,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17281,f17276])).
fof(f17281,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17280,f346])).
fof(f17280,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17189,f346])).
fof(f17189,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f312])).
fof(f17276,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17275,f17273])).
fof(f17275,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17274,f336])).
fof(f17274,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17193,f336])).
fof(f17193,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f316])).
fof(f17273,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17272,f17270])).
fof(f17272,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17271,f338])).
fof(f17271,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17194,f338])).
fof(f17194,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f317])).
fof(f17270,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17269,f17266])).
fof(f17269,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17268,f345])).
fof(f17268,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17195,f345])).
fof(f17195,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f318])).
fof(f17266,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f17265,f17054])).
fof(f17265,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17264,f340])).
fof(f17264,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17197,f340])).
fof(f17197,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f320])).
fof(f17054,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f17053])).
fof(f17702,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl23 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f391])).
fof(f17701,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl27 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f395])).
fof(f17700,plain,(
  $false | ($spl0 | $spl7 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f375])).
fof(f17699,plain,(
  $false | ($spl0 | $spl11 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f379])).
fof(f17698,plain,(
  $false | ($spl0 | $spl5 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f373])).
fof(f17697,plain,(
  $false | ($spl0 | $spl3 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f371])).
fof(f17696,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl21 | $spl24 | $spl30)),
  inference(global_subsumption,[],[f239,f238,f237,f236,f235,f234,f233,f232,f231,f230,f229,f228,f227,f226,f240,f243,f245,f244,f269,f272,f273,f274,f278,f275,f279,f280,f281,f282,f283,f284,f285,f286,f287,f288,f289,f290,f291,f292,f293,f294,f295,f296,f297,f298,f299,f300,f301,f302,f303,f304,f305,f306,f307,f320,f318,f317,f316,f315,f314,f313,f312,f311,f310,f309,f308,f336,f337,f338,f339,f340,f341,f342,f343,f344,f345,f346,f347,f348,f349,f350,f351,f365,f364,f363,f362,f361,f360,f359,f358,f357,f356,f355,f354,f353,f352,f384,f382,f380,f422,f439,f441,f442,f456,f467,f476,f485,f498,f744,f745,f757,f941,f1023,f1232,f1233,f1234,f1235,f1227,f1305,f1307,f1308,f1316,f1359,f1467,f1485,f1611,f1610,f1612,f1613,f1917,f2038,f2039,f2043,f2066,f2069,f2222,f2224,f2257,f2262,f2268,f2261,f7740,f7738,f7737,f7736,f7735,f7734,f7733,f7732,f7731,f7730,f7729,f7741,f7742,f7743,f7744,f7745,f7871,f7875,f7878,f7920,f7928,f7969,f7971,f7973,f7975,f7977,f7979,f7981,f7983,f7985,f7987,f7991,f7996,f8000,f8012,f8030,f8034,f8037,f8079,f8087,f8128,f8130,f8132,f8134,f8136,f8138,f8140,f8142,f8144,f8146,f8150,f8155,f8159,f9663,f9892,f10404,f10408,f10409,f1022,f9763,f7932,f8091,f1455,f752,f751,f750,f270,f1007,f9677,f1036,f9895,f8090,f7931,f1486,f939,f940,f938,f271,f8011,f8023,f8022,f8021,f8019,f8016,f8015,f7864,f7863,f7862,f7860,f7857,f7856,f7739,f321,f319,f7989,f8148,f8018,f8017,f7859,f7858,f661,f605,f553,f249,f248,f242,f12783,f12826,f12832,f12884,f12890,f13600,f13643,f13649,f13701,f13707,f14798,f14841,f14847,f14899,f14905,f16052,f16094,f16100,f16152,f16158,f17052,f17054,f17055,f17097,f17103,f17155,f17161,f17265,f17266,f17269,f17270,f17272,f17273,f17275,f17276,f17281,f17282,f17287,f17288,f17290,f17291,f17293,f17294,f17325,f17336,f17340,f17344,f17347,f17350,f17353,f17355,f17357,f17360,f17364,f17368,f17371,f17374,f17053,f392,f465,f17694,f17695,f389])).
fof(f17693,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl27 | $spl28)),
  inference(subsumption_resolution,[],[f395,f17590])).
fof(f17590,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17589,f340])).
fof(f17589,plain,(
  s('type.ffi.ffi_state'(sK1),sK27) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17524,f340])).
fof(f17524,plain,(
  s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.ffi.ffi_state'(sK1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f320])).
fof(f17378,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f17377,f17053])).
fof(f17692,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl23 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f391,f17594])).
fof(f17594,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17593,f345])).
fof(f17593,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17522,f345])).
fof(f17522,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),'const.wordSem.state_code_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f318])).
fof(f17691,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl21 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f389,f17597])).
fof(f17597,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17596,f338])).
fof(f17596,plain,(
  s('type.num.num',sK24) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17521,f338])).
fof(f17521,plain,(
  s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_termdep_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f317])).
fof(f17690,plain,(
  $false | ($spl0 | $spl12 | $spl14 | $spl16 | $spl19 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f387,f17600])).
fof(f17600,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17599,f336])).
fof(f17599,plain,(
  s('type.num.num',sK23) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17520,f336])).
fof(f17520,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f316])).
fof(f17689,plain,(
  $false | ($spl0 | $spl11 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f379,f17606])).
fof(f17606,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17605,f346])).
fof(f17605,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK19) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17516,f346])).
fof(f17516,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),bool),'const.wordSem.state_mdomain_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f312])).
fof(f17688,plain,(
  $false | ($spl0 | $spl7 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f375,f17612])).
fof(f17612,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17611,f341])).
fof(f17611,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17514,f341])).
fof(f17514,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f310])).
fof(f17687,plain,(
  $false | ($spl0 | $spl5 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f373,f17615])).
fof(f17615,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17614,f343])).
fof(f17614,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17513,f343])).
fof(f17513,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f309])).
fof(f17686,plain,(
  $false | ($spl0 | $spl3 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f371,f17618])).
fof(f17618,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17617,f342])).
fof(f17617,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17512,f342])).
fof(f17512,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),'const.wordSem.state_locals_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f308])).
fof(f17636,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f17635,f377])).
fof(f17635,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17634,f347])).
fof(f17634,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17502,f347])).
fof(f17502,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f311])).
fof(f17610,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f17609,f377])).
fof(f17609,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17608,f347])).
fof(f17608,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17515,f347])).
fof(f17515,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f17378,f311])).
fof(f17311,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f17310,f377])).
fof(f17310,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17309,f347])).
fof(f17309,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17175,f347])).
fof(f17175,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f311])).
fof(f17285,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f17284,f377])).
fof(f17284,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17283,f347])).
fof(f17283,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f17188,f347])).
fof(f17188,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f17054,f311])).
fof(f17003,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f17002,f377])).
fof(f17002,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f17001,f347])).
fof(f17001,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f16872,f347])).
fof(f16872,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f16748,f311])).
fof(f16748,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(backward_demodulation,[],[f16747,f16746])).
fof(f16746,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24)),
  inference(backward_demodulation,[],[f392,f16745])).
fof(f16745,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18)),
  inference(forward_demodulation,[],[f16744,f380])).
fof(f16744,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14 | $spl16 | $spl18)),
  inference(forward_demodulation,[],[f16743,f382])).
fof(f16743,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl16 | $spl18)),
  inference(forward_demodulation,[],[f16742,f384])).
fof(f16742,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl18)),
  inference(forward_demodulation,[],[f368,f386])).
fof(f16978,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f16977,f377])).
fof(f16977,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f16976,f347])).
fof(f16976,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f16885,f347])).
fof(f16885,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f16748,f311])).
fof(f16680,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f16679,f377])).
fof(f16679,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16678,f347])).
fof(f16678,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16547,f347])).
fof(f16547,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f16365,f311])).
fof(f16365,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16364,f465])).
fof(f16364,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16363,f380])).
fof(f16363,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16362,f382])).
fof(f16362,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16361,f384])).
fof(f16361,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16360,f386])).
fof(f16360,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f368,f16052])).
fof(f16655,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f16654,f377])).
fof(f16654,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16653,f347])).
fof(f16653,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16560,f347])).
fof(f16560,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f16365,f311])).
fof(f16302,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f16301,f377])).
fof(f16301,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16300,f347])).
fof(f16300,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16172,f347])).
fof(f16172,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f16051,f311])).
fof(f16051,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(backward_demodulation,[],[f465,f16050])).
fof(f16050,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24)),
  inference(backward_demodulation,[],[f392,f16049])).
fof(f16049,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22)),
  inference(forward_demodulation,[],[f16048,f380])).
fof(f16048,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14 | $spl16 | $spl18 | $spl22)),
  inference(forward_demodulation,[],[f16047,f382])).
fof(f16047,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl16 | $spl18 | $spl22)),
  inference(forward_demodulation,[],[f16046,f384])).
fof(f16046,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl18 | $spl22)),
  inference(forward_demodulation,[],[f16045,f386])).
fof(f16045,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl22)),
  inference(forward_demodulation,[],[f368,f390])).
fof(f16278,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(subsumption_resolution,[],[f16277,f377])).
fof(f16277,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16276,f347])).
fof(f16276,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(forward_demodulation,[],[f16185,f347])).
fof(f16185,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl30)),
  inference(unit_resulting_resolution,[],[f16051,f311])).
fof(f16000,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f15999,f377])).
fof(f15999,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f15998,f347])).
fof(f15998,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f15872,f347])).
fof(f15872,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f15755,f311])).
fof(f15755,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f15754,f15456])).
fof(f15754,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl28)),
  inference(forward_demodulation,[],[f15753,f380])).
fof(f15753,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl14 | $spl16 | $spl18 | $spl22 | $spl28)),
  inference(forward_demodulation,[],[f15752,f382])).
fof(f15752,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl16 | $spl18 | $spl22 | $spl28)),
  inference(forward_demodulation,[],[f15751,f384])).
fof(f15751,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl18 | $spl22 | $spl28)),
  inference(forward_demodulation,[],[f15750,f386])).
fof(f15750,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl22 | $spl28)),
  inference(forward_demodulation,[],[f15749,f390])).
fof(f15749,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))) | ($spl0 | $spl28)),
  inference(forward_demodulation,[],[f368,f463])).
fof(f15976,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f15975,f377])).
fof(f15975,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f15974,f347])).
fof(f15974,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(forward_demodulation,[],[f15885,f347])).
fof(f15885,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK27))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl28)),
  inference(unit_resulting_resolution,[],[f15755,f311])).
fof(f15706,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f15705,f377])).
fof(f15705,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f15704,f347])).
fof(f15704,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f15581,f347])).
fof(f15581,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f15457,f311])).
fof(f15457,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f15456,f12778])).
fof(f12778,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12777,f380])).
fof(f12777,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12776,f382])).
fof(f12776,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12775,f384])).
fof(f12775,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f412,f386])).
fof(f412,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f411,f390])).
fof(f411,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f410,f392])).
fof(f410,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl26)),
  inference(forward_demodulation,[],[f368,f394])).
fof(f15683,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f15682,f377])).
fof(f15682,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f15681,f347])).
fof(f15681,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f15594,f347])).
fof(f15594,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f15457,f311])).
fof(f15402,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f15401,f377])).
fof(f15401,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f15400,f347])).
fof(f15400,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f15275,f347])).
fof(f15275,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f15093,f311])).
fof(f15093,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f12778,f465])).
fof(f15379,plain,(
  $false | ($spl0 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f15378,f377])).
fof(f15378,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f15377,f347])).
fof(f15377,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f15288,f347])).
fof(f15288,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f15093,f311])).
fof(f15044,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f15043,f377])).
fof(f15043,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f15042,f347])).
fof(f15042,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f14919,f347])).
fof(f14919,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f14799,f311])).
fof(f14799,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(backward_demodulation,[],[f465,f14797])).
fof(f14797,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12778,f374])).
fof(f15023,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f15022,f377])).
fof(f15022,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f15021,f347])).
fof(f15021,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f14932,f347])).
fof(f14932,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f14799,f311])).
fof(f14757,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f14756,f377])).
fof(f14756,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14755,f347])).
fof(f14755,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14634,f347])).
fof(f14634,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f14514,f311])).
fof(f14514,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14513,f374])).
fof(f14513,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f12778,f14230])).
fof(f14736,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f14735,f377])).
fof(f14735,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14734,f347])).
fof(f14734,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14647,f347])).
fof(f14647,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f14514,f311])).
fof(f14516,plain,(
  p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK19)))) | $spl76),
  inference(cnf_transformation,[],[f14516_D])).
fof(f14516_D,plain,(
  p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK19)))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f14517,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s('type.fcp.cart'(bool,sK0),X5))))) ) | $spl78),
  inference(cnf_transformation,[],[f14517_D])).
fof(f14517_D,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s('type.fcp.cart'(bool,sK0),X5))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f1037,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s('type.fcp.cart'(bool,sK0),X0)))) | p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK19))))) ) | $spl32),
  inference(superposition,[],[f271,f754])).
fof(f12202,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s('type.fcp.cart'(bool,sK0),X5)))) | p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK19))))) ) | $spl32),
  inference(superposition,[],[f271,f754])).
fof(f14475,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f14474,f377])).
fof(f14474,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14473,f347])).
fof(f14473,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14355,f347])).
fof(f14355,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f14231,f311])).
fof(f14231,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f14230,f12780])).
fof(f12780,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12779,f374])).
fof(f12779,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12778,f378])).
fof(f14455,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f14454,f377])).
fof(f14454,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14453,f347])).
fof(f14453,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f14368,f347])).
fof(f14368,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f14231,f311])).
fof(f14185,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f14184,f377])).
fof(f14184,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f14183,f347])).
fof(f14183,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f14063,f347])).
fof(f14063,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f13881,f311])).
fof(f13881,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f12780,f465])).
fof(f14165,plain,(
  $false | ($spl0 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f14164,f377])).
fof(f14164,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f14163,f347])).
fof(f14163,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f14076,f347])).
fof(f14076,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f13881,f311])).
fof(f13841,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f13840,f377])).
fof(f13840,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f13839,f347])).
fof(f13839,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f13721,f347])).
fof(f13721,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f13601,f311])).
fof(f13601,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(backward_demodulation,[],[f465,f12781])).
fof(f12781,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12780,f372])).
fof(f13823,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f13822,f377])).
fof(f13822,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f13821,f347])).
fof(f13821,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f13734,f347])).
fof(f13734,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f13601,f311])).
fof(f13565,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f13564,f377])).
fof(f13564,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13563,f347])).
fof(f13563,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13447,f347])).
fof(f13447,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f13330,f311])).
fof(f13330,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f12781,f13057])).
fof(f13547,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f13546,f377])).
fof(f13546,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13545,f347])).
fof(f13545,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13460,f347])).
fof(f13460,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f13330,f311])).
fof(f13298,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f13297,f377])).
fof(f13297,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13296,f347])).
fof(f13296,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13182,f347])).
fof(f13182,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f13058,f311])).
fof(f13058,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f13057,f12782])).
fof(f12782,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f12781,f370])).
fof(f13282,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f13281,f377])).
fof(f13281,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13280,f347])).
fof(f13280,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f13195,f347])).
fof(f13195,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f13058,f311])).
fof(f13022,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f13021,f377])).
fof(f13021,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f13020,f347])).
fof(f13020,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f12904,f347])).
fof(f12904,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f12784,f311])).
fof(f12784,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(backward_demodulation,[],[f465,f12782])).
fof(f13006,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f13005,f377])).
fof(f13005,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f13004,f347])).
fof(f13004,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f12917,f347])).
fof(f12917,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f12784,f311])).
fof(f12745,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f12744,f377])).
fof(f12744,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f12743,f347])).
fof(f12743,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f12632,f347])).
fof(f12632,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f11220,f311])).
fof(f11220,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f11219,f421])).
fof(f421,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f420,f370])).
fof(f420,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f419,f372])).
fof(f419,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f418,f374])).
fof(f418,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f417,f378])).
fof(f417,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f416,f380])).
fof(f416,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f415,f382])).
fof(f415,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f414,f384])).
fof(f414,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f413,f386])).
fof(f413,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f412,f388])).
fof(f12730,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f12729,f377])).
fof(f12729,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f12728,f347])).
fof(f12728,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f12645,f347])).
fof(f12645,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'T_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl28)),
  inference(unit_resulting_resolution,[],[f11220,f311])).
fof(f11636,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f11228,f240])).
fof(f11228,plain,(
  ~p(s(bool,'T_0')) | $spl50),
  inference(unit_resulting_resolution,[],[f422,f11183,f278])).
fof(f11635,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11230,f240])).
fof(f11230,plain,(
  ~p(s(bool,'T_0')) | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f3609,f11183,f278])).
fof(f11634,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f11232,f11183])).
fof(f11232,plain,(
  ~p(s(bool,'F_0')) | $spl50),
  inference(unit_resulting_resolution,[],[f422,f11183,f278])).
fof(f11633,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11234,f11183])).
fof(f11234,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f3609,f11183,f278])).
fof(f11632,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f11238,f240])).
fof(f11238,plain,(
  ~p(s(bool,'T_0')) | $spl50),
  inference(unit_resulting_resolution,[],[f422,f11183,f278])).
fof(f11631,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11240,f240])).
fof(f11240,plain,(
  ~p(s(bool,'T_0')) | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f3609,f11183,f278])).
fof(f11630,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f11242,f11183])).
fof(f11242,plain,(
  ~p(s(bool,'F_0')) | $spl50),
  inference(unit_resulting_resolution,[],[f422,f11183,f278])).
fof(f11629,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11244,f11183])).
fof(f11244,plain,(
  ~p(s(bool,f(s(bool,'F_0')))) | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f3609,f11183,f278])).
fof(f11622,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11621,f11183])).
fof(f11621,plain,(
  ( ! [X107,X105,X108,X106,X104] : (~p(s(bool,happ(s(fun(X104,bool),'_dst_x0x1_2'(s(fun(X105,bool),X106),s(fun(X104,X105),X107))),s(X104,X108))))) ) | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11325,f11274])).
fof(f11274,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f11183,f3921])).
fof(f3921,plain,(
  ( ! [X3] : (~p(s(bool,f(s(bool,X3)))) | s(bool,'T_0') = s(bool,X3)) ) | $spl42),
  inference(subsumption_resolution,[],[f3879,f243])).
fof(f3879,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,f(s(bool,X3)))) | s(bool,'T_0') = s(bool,X3)) ) | $spl42),
  inference(superposition,[],[f248,f3573])).
fof(f3573,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl42),
  inference(superposition,[],[f2266,f243])).
fof(f11325,plain,(
  ( ! [X107,X105,X108,X106,X104] : (s(bool,'T_0') != s(bool,happ(s(fun(X105,bool),X106),s(X105,happ(s(fun(X104,X105),X107),s(X104,X108))))) | ~p(s(bool,happ(s(fun(X104,bool),'_dst_x0x1_2'(s(fun(X105,bool),X106),s(fun(X104,X105),X107))),s(X104,X108))))) ) | ($spl42 | $spl50)),
  inference(backward_demodulation,[],[f11274,f8017])).
fof(f11620,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11619,f11183])).
fof(f11619,plain,(
  ( ! [X103,X107,X105,X106,X104] : (~p(s(bool,happ(s(fun(X103,bool),X104),s(X103,happ(s(fun(X105,X103),X106),s(X105,X107))))))) ) | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11319,f11274])).
fof(f11319,plain,(
  ( ! [X103,X107,X105,X106,X104] : (s(bool,'T_0') != s(bool,happ(s(fun(X105,bool),'_dst_x0x1_2'(s(fun(X103,bool),X104),s(fun(X105,X103),X106))),s(X105,X107))) | ~p(s(bool,happ(s(fun(X103,bool),X104),s(X103,happ(s(fun(X105,X103),X106),s(X105,X107))))))) ) | ($spl42 | $spl50)),
  inference(backward_demodulation,[],[f11274,f7858])).
fof(f11618,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11308,f11274])).
fof(f11308,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | ($spl42 | $spl50)),
  inference(backward_demodulation,[],[f11274,f3609])).
fof(f11617,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11616,f11183])).
fof(f11616,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11300,f11274])).
fof(f11300,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl42 | $spl50)),
  inference(backward_demodulation,[],[f11274,f248])).
fof(f11615,plain,(
  $false | ($spl42 | $spl50)),
  inference(subsumption_resolution,[],[f11299,f240])).
fof(f11299,plain,(
  ~p(s(bool,'T_0')) | ($spl42 | $spl50)),
  inference(backward_demodulation,[],[f11274,f242])).
fof(f11275,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f422,f11183,f3921])).
fof(f11271,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f2266,f3609,f11183,f442])).
fof(f11269,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f2266,f422,f11183,f442])).
fof(f11245,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f11183,f3609,f11183,f278])).
fof(f11243,plain,(
  $false | $spl50),
  inference(unit_resulting_resolution,[],[f11183,f422,f11183,f278])).
fof(f11241,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f240,f3609,f11183,f278])).
fof(f11239,plain,(
  $false | $spl50),
  inference(unit_resulting_resolution,[],[f240,f422,f11183,f278])).
fof(f11235,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f11183,f3609,f11183,f278])).
fof(f11233,plain,(
  $false | $spl50),
  inference(unit_resulting_resolution,[],[f11183,f422,f11183,f278])).
fof(f11231,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f240,f3609,f11183,f278])).
fof(f11229,plain,(
  $false | $spl50),
  inference(unit_resulting_resolution,[],[f240,f422,f11183,f278])).
fof(f11225,plain,(
  $false | ($spl42 | $spl50)),
  inference(unit_resulting_resolution,[],[f2266,f11183,f248])).
fof(f11223,plain,(
  $false | $spl50),
  inference(unit_resulting_resolution,[],[f422,f11183,f245])).
fof(f11221,plain,(
  $false | $spl50),
  inference(unit_resulting_resolution,[],[f242,f11183])).
fof(f11195,plain,(
  ( ! [X72] : (s(bool,'F_0') = s(bool,f(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl74),
  inference(cnf_transformation,[],[f11195_D])).
fof(f11195_D,plain,(
  ( ! [X72] : (s(bool,'F_0') = s(bool,f(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f11183,plain,(
  ( ! [X225] : (p(s(bool,X225))) ) | $spl50),
  inference(cnf_transformation,[],[f11183_D])).
fof(f11183_D,plain,(
  ( ! [X225] : (p(s(bool,X225))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f9504,plain,(
  ( ! [X72,X73] : (p(s(bool,X73)) | s(bool,'F_0') = s(bool,f(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl42),
  inference(subsumption_resolution,[],[f9202,f244])).
fof(f9202,plain,(
  ( ! [X72,X73] : (p(s(bool,X73)) | s(bool,'F_0') = s(bool,f(s(bool,X72))) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X72)) ) | $spl42),
  inference(superposition,[],[f249,f4154])).
fof(f11194,plain,(
  ( ! [X164] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X164))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl72),
  inference(cnf_transformation,[],[f11194_D])).
fof(f11194_D,plain,(
  ( ! [X164] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X164))))) | s(bool,'T_0') = s(bool,X164)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f9512,plain,(
  ( ! [X165,X164] : (p(s(bool,X165)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X164))))) | s(bool,'T_0') = s(bool,X164)) ) | $spl42),
  inference(subsumption_resolution,[],[f9233,f244])).
fof(f9233,plain,(
  ( ! [X165,X164] : (p(s(bool,X165)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X164))))) | s(bool,'T_0') = s(bool,X165) | s(bool,'T_0') = s(bool,X164)) ) | $spl42),
  inference(superposition,[],[f3922,f4154])).
fof(f3922,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'F_0') = s(bool,f(s(bool,X4)))) ) | $spl42),
  inference(subsumption_resolution,[],[f3880,f244])).
fof(f3880,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'F_0') = s(bool,f(s(bool,X4))) | s(bool,'T_0') = s(bool,X4)) ) | $spl42),
  inference(superposition,[],[f249,f3573])).
fof(f11193,plain,(
  ( ! [X174,X172] : (s(bool,X174) = s(bool,f(s(bool,f(s(bool,X172))))) | s(bool,'T_0') = s(bool,X172) | s(bool,'T_0') = s(bool,X174)) ) | $spl70),
  inference(cnf_transformation,[],[f11193_D])).
fof(f11193_D,plain,(
  ( ! [X174,X172] : (s(bool,X174) = s(bool,f(s(bool,f(s(bool,X172))))) | s(bool,'T_0') = s(bool,X172) | s(bool,'T_0') = s(bool,X174)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f9517,plain,(
  ( ! [X173,X174,X172] : (p(s(bool,X173)) | s(bool,X174) = s(bool,f(s(bool,f(s(bool,X172))))) | s(bool,'T_0') = s(bool,X174) | s(bool,'T_0') = s(bool,X172)) ) | $spl42),
  inference(subsumption_resolution,[],[f9236,f244])).
fof(f9236,plain,(
  ( ! [X173,X174,X172] : (p(s(bool,X173)) | s(bool,X174) = s(bool,f(s(bool,f(s(bool,X172))))) | s(bool,'T_0') = s(bool,X174) | s(bool,'T_0') = s(bool,X173) | s(bool,'T_0') = s(bool,X172)) ) | $spl42),
  inference(superposition,[],[f3924,f4154])).
fof(f3924,plain,(
  ( ! [X14,X13] : (p(s(bool,X13)) | s(bool,X14) = s(bool,f(s(bool,X13))) | s(bool,'T_0') = s(bool,X14)) ) | $spl42),
  inference(subsumption_resolution,[],[f3885,f244])).
fof(f3885,plain,(
  ( ! [X14,X13] : (p(s(bool,X13)) | s(bool,X14) = s(bool,f(s(bool,X13))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X13)) ) | $spl42),
  inference(superposition,[],[f498,f3573])).
fof(f11192,plain,(
  ( ! [X175] : (s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,X175))))))) | s(bool,'T_0') = s(bool,X175)) ) | $spl68),
  inference(cnf_transformation,[],[f11192_D])).
fof(f11192_D,plain,(
  ( ! [X175] : (s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,X175))))))) | s(bool,'T_0') = s(bool,X175)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f9518,plain,(
  ( ! [X175,X176] : (p(s(bool,X176)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,X175))))))) | s(bool,'T_0') = s(bool,X175)) ) | $spl42),
  inference(subsumption_resolution,[],[f9237,f244])).
fof(f9237,plain,(
  ( ! [X175,X176] : (p(s(bool,X176)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,X175))))))) | s(bool,'T_0') = s(bool,X176) | s(bool,'T_0') = s(bool,X175)) ) | $spl42),
  inference(superposition,[],[f3951,f4154])).
fof(f3951,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,X4)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f3932,f244])).
fof(f3932,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,X4))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl42),
  inference(superposition,[],[f3920,f3573])).
fof(f3920,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') != s(bool,f(s(bool,X1)))) ) | $spl42),
  inference(subsumption_resolution,[],[f3877,f244])).
fof(f3877,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') != s(bool,f(s(bool,X1))) | s(bool,'T_0') = s(bool,X1)) ) | $spl42),
  inference(superposition,[],[f244,f3573])).
fof(f11191,plain,(
  ( ! [X179] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X179))))))) | s(bool,'T_0') = s(bool,X179)) ) | $spl66),
  inference(cnf_transformation,[],[f11191_D])).
fof(f11191_D,plain,(
  ( ! [X179] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X179))))))) | s(bool,'T_0') = s(bool,X179)) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f9519,plain,(
  ( ! [X180,X179] : (p(s(bool,X180)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X179))))))) | s(bool,'T_0') = s(bool,X179)) ) | $spl42),
  inference(subsumption_resolution,[],[f9239,f244])).
fof(f9239,plain,(
  ( ! [X180,X179] : (p(s(bool,X180)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X179))))))) | s(bool,'T_0') = s(bool,X180) | s(bool,'T_0') = s(bool,X179)) ) | $spl42),
  inference(superposition,[],[f4086,f4154])).
fof(f4086,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X4)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4065,f244])).
fof(f4065,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,X4))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl42),
  inference(superposition,[],[f3922,f3573])).
fof(f11190,plain,(
  ( ! [X183] : (s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X183))))))))) | s(bool,'T_0') = s(bool,X183)) ) | $spl64),
  inference(cnf_transformation,[],[f11190_D])).
fof(f11190_D,plain,(
  ( ! [X183] : (s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X183))))))))) | s(bool,'T_0') = s(bool,X183)) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f9522,plain,(
  ( ! [X184,X183] : (p(s(bool,X184)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X183))))))))) | s(bool,'T_0') = s(bool,X183)) ) | $spl42),
  inference(subsumption_resolution,[],[f9241,f244])).
fof(f9241,plain,(
  ( ! [X184,X183] : (p(s(bool,X184)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X183))))))))) | s(bool,'T_0') = s(bool,X184) | s(bool,'T_0') = s(bool,X183)) ) | $spl42),
  inference(superposition,[],[f4539,f4154])).
fof(f4539,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,X6)))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4511,f244])).
fof(f4511,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,X6))))))) | s(bool,'T_0') = s(bool,X6)) ) | $spl42),
  inference(superposition,[],[f3951,f3573])).
fof(f11189,plain,(
  ( ! [X194] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X194))))))))) | s(bool,'T_0') = s(bool,X194)) ) | $spl62),
  inference(cnf_transformation,[],[f11189_D])).
fof(f11189_D,plain,(
  ( ! [X194] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X194))))))))) | s(bool,'T_0') = s(bool,X194)) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f9526,plain,(
  ( ! [X194,X195] : (p(s(bool,X195)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X194))))))))) | s(bool,'T_0') = s(bool,X194)) ) | $spl42),
  inference(subsumption_resolution,[],[f9246,f244])).
fof(f9246,plain,(
  ( ! [X194,X195] : (p(s(bool,X195)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X194))))))))) | s(bool,'T_0') = s(bool,X195) | s(bool,'T_0') = s(bool,X194)) ) | $spl42),
  inference(superposition,[],[f4735,f4154])).
fof(f4735,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X7)))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4708,f244])).
fof(f4708,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,X7))))))) | s(bool,'T_0') = s(bool,X7)) ) | $spl42),
  inference(superposition,[],[f4086,f3573])).
fof(f11188,plain,(
  ( ! [X196] : (s(bool,f(s(bool,X196))) = s(bool,f(s(bool,f(s(bool,X196))))) | s(bool,'T_0') = s(bool,X196)) ) | $spl60),
  inference(cnf_transformation,[],[f11188_D])).
fof(f11188_D,plain,(
  ( ! [X196] : (s(bool,f(s(bool,X196))) = s(bool,f(s(bool,f(s(bool,X196))))) | s(bool,'T_0') = s(bool,X196)) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f9527,plain,(
  ( ! [X196,X197] : (p(s(bool,X197)) | s(bool,f(s(bool,X196))) = s(bool,f(s(bool,f(s(bool,X196))))) | s(bool,'T_0') = s(bool,X196)) ) | $spl42),
  inference(subsumption_resolution,[],[f9247,f244])).
fof(f9247,plain,(
  ( ! [X196,X197] : (p(s(bool,X197)) | s(bool,f(s(bool,X196))) = s(bool,f(s(bool,f(s(bool,X196))))) | s(bool,'T_0') = s(bool,X197) | s(bool,'T_0') = s(bool,X196)) ) | $spl42),
  inference(superposition,[],[f4776,f4154])).
fof(f4776,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,X0)))) ) | $spl42),
  inference(factoring,[],[f3923])).
fof(f3923,plain,(
  ( ! [X6,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X6) = s(bool,f(s(bool,X5)))) ) | $spl42),
  inference(subsumption_resolution,[],[f3881,f244])).
fof(f3881,plain,(
  ( ! [X6,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X6) = s(bool,f(s(bool,X5))) | s(bool,'T_0') = s(bool,X5)) ) | $spl42),
  inference(superposition,[],[f275,f3573])).
fof(f11187,plain,(
  ( ! [X212] : (s(bool,f(s(bool,f(s(bool,X212))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X212))))))) | s(bool,'T_0') = s(bool,X212)) ) | $spl58),
  inference(cnf_transformation,[],[f11187_D])).
fof(f11187_D,plain,(
  ( ! [X212] : (s(bool,f(s(bool,f(s(bool,X212))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X212))))))) | s(bool,'T_0') = s(bool,X212)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f9536,plain,(
  ( ! [X212,X213] : (p(s(bool,X213)) | s(bool,f(s(bool,f(s(bool,X212))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X212))))))) | s(bool,'T_0') = s(bool,X212)) ) | $spl42),
  inference(subsumption_resolution,[],[f9253,f244])).
fof(f9253,plain,(
  ( ! [X212,X213] : (p(s(bool,X213)) | s(bool,f(s(bool,f(s(bool,X212))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X212))))))) | s(bool,'T_0') = s(bool,X213) | s(bool,'T_0') = s(bool,X212)) ) | $spl42),
  inference(superposition,[],[f4912,f4154])).
fof(f4912,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,f(s(bool,X7))) = s(bool,f(s(bool,f(s(bool,X7)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4890,f244])).
fof(f4890,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,f(s(bool,X7))) = s(bool,f(s(bool,f(s(bool,X7))))) | s(bool,'T_0') = s(bool,X7)) ) | $spl42),
  inference(superposition,[],[f4776,f3573])).
fof(f11186,plain,(
  ( ! [X214] : (s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X214))))))))))) | s(bool,'T_0') = s(bool,X214)) ) | $spl56),
  inference(cnf_transformation,[],[f11186_D])).
fof(f11186_D,plain,(
  ( ! [X214] : (s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X214))))))))))) | s(bool,'T_0') = s(bool,X214)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f9537,plain,(
  ( ! [X215,X214] : (p(s(bool,X215)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X214))))))))))) | s(bool,'T_0') = s(bool,X214)) ) | $spl42),
  inference(subsumption_resolution,[],[f9254,f244])).
fof(f9254,plain,(
  ( ! [X215,X214] : (p(s(bool,X215)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X214))))))))))) | s(bool,'T_0') = s(bool,X215) | s(bool,'T_0') = s(bool,X214)) ) | $spl42),
  inference(superposition,[],[f5064,f4154])).
fof(f5064,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X7)))))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f5033,f244])).
fof(f5033,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'T_0') != s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X7))))))))) | s(bool,'T_0') = s(bool,X7)) ) | $spl42),
  inference(superposition,[],[f4539,f3573])).
fof(f11185,plain,(
  ( ! [X220] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X220))))))))))) | s(bool,'T_0') = s(bool,X220)) ) | $spl54),
  inference(cnf_transformation,[],[f11185_D])).
fof(f11185_D,plain,(
  ( ! [X220] : (s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X220))))))))))) | s(bool,'T_0') = s(bool,X220)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f9538,plain,(
  ( ! [X220,X221] : (p(s(bool,X221)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X220))))))))))) | s(bool,'T_0') = s(bool,X220)) ) | $spl42),
  inference(subsumption_resolution,[],[f9257,f244])).
fof(f9257,plain,(
  ( ! [X220,X221] : (p(s(bool,X221)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X220))))))))))) | s(bool,'T_0') = s(bool,X221) | s(bool,'T_0') = s(bool,X220)) ) | $spl42),
  inference(superposition,[],[f5459,f4154])).
fof(f5459,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X7)))))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f5428,f244])).
fof(f5428,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X7))))))))) | s(bool,'T_0') = s(bool,X7)) ) | $spl42),
  inference(superposition,[],[f4735,f3573])).
fof(f11184,plain,(
  ( ! [X222] : (s(bool,f(s(bool,X222))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X222))))))) | s(bool,'T_0') = s(bool,X222)) ) | $spl52),
  inference(cnf_transformation,[],[f11184_D])).
fof(f11184_D,plain,(
  ( ! [X222] : (s(bool,f(s(bool,X222))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X222))))))) | s(bool,'T_0') = s(bool,X222)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f9539,plain,(
  ( ! [X222,X223] : (p(s(bool,X223)) | s(bool,f(s(bool,X222))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X222))))))) | s(bool,'T_0') = s(bool,X222)) ) | $spl42),
  inference(subsumption_resolution,[],[f9258,f244])).
fof(f9258,plain,(
  ( ! [X222,X223] : (p(s(bool,X223)) | s(bool,f(s(bool,X222))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X222))))))) | s(bool,'T_0') = s(bool,X223) | s(bool,'T_0') = s(bool,X222)) ) | $spl42),
  inference(superposition,[],[f5853,f4154])).
fof(f5853,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,X0) = s(bool,f(s(bool,f(s(bool,X0)))))) ) | $spl42),
  inference(factoring,[],[f4838])).
fof(f4838,plain,(
  ( ! [X15,X16] : (p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) = s(bool,f(s(bool,f(s(bool,X15)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4785,f244])).
fof(f4785,plain,(
  ( ! [X15,X16] : (p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) = s(bool,f(s(bool,f(s(bool,X15))))) | s(bool,'T_0') = s(bool,X15)) ) | $spl42),
  inference(superposition,[],[f3923,f3573])).
fof(f11182,plain,(
  ( ! [X224] : (s(bool,f(s(bool,f(s(bool,X224))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X224))))))))) | s(bool,'T_0') = s(bool,X224)) ) | $spl48),
  inference(cnf_transformation,[],[f11182_D])).
fof(f11182_D,plain,(
  ( ! [X224] : (s(bool,f(s(bool,f(s(bool,X224))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X224))))))))) | s(bool,'T_0') = s(bool,X224)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f9540,plain,(
  ( ! [X225,X224] : (p(s(bool,X225)) | s(bool,f(s(bool,f(s(bool,X224))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X224))))))))) | s(bool,'T_0') = s(bool,X224)) ) | $spl42),
  inference(subsumption_resolution,[],[f9259,f244])).
fof(f9259,plain,(
  ( ! [X225,X224] : (p(s(bool,X225)) | s(bool,f(s(bool,f(s(bool,X224))))) = s(bool,f(s(bool,f(s(bool,f(s(bool,f(s(bool,X224))))))))) | s(bool,'T_0') = s(bool,X225) | s(bool,'T_0') = s(bool,X224)) ) | $spl42),
  inference(superposition,[],[f6023,f4154])).
fof(f6023,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,f(s(bool,X7))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X7)))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f5994,f244])).
fof(f5994,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,f(s(bool,X7))) = s(bool,f(s(bool,f(s(bool,f(s(bool,X7))))))) | s(bool,'T_0') = s(bool,X7)) ) | $spl42),
  inference(superposition,[],[f5853,f3573])).
fof(f11152,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f11151,f377])).
fof(f11151,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f11150,f347])).
fof(f11150,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f11037,f347])).
fof(f11037,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f466,f311])).
fof(f466,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(backward_demodulation,[],[f465,f421])).
fof(f11137,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f11136,f377])).
fof(f11136,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f11135,f347])).
fof(f11135,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f11050,f347])).
fof(f11050,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.wordSem.state_memory_1'(s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,'F_0'),s('type.ffi.ffi_state'(sK1),sK14))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26 | $spl30)),
  inference(unit_resulting_resolution,[],[f466,f311])).
fof(f3458,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,f(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X30),sK28(X31,'const.pair.FST_0','type.pair.prod'(bool,X30))))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X30),bool),'const.pair.FST_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f3458_D])).
fof(f3458_D,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,f(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X30),sK28(X31,'const.pair.FST_0','type.pair.prod'(bool,X30))))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X30),bool),'const.pair.FST_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f3459,plain,(
  ( ! [X32] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X32),s('type.num.num','const.num.|48|_0')))) ) | $spl46),
  inference(cnf_transformation,[],[f3459_D])).
fof(f3459_D,plain,(
  ( ! [X32] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X32),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f3386,plain,(
  ( ! [X30,X31,X32] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X32),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,f(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X30),sK28(X31,'const.pair.FST_0','type.pair.prod'(bool,X30))))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X30),bool),'const.pair.FST_0')))) ) | ($spl24 | $spl30 | $spl43)),
  inference(superposition,[],[f2462,f1316])).
fof(f2462,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X18),s(fun('type.num.num',bool),X19),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,f(s(bool,X18)))) ) | $spl43),
  inference(superposition,[],[f2323,f269])).
fof(f2323,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl43),
  inference(superposition,[],[f2273,f243])).
fof(f2273,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f242,f2267,f498])).
fof(f2264,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl38),
  inference(cnf_transformation,[],[f2264_D])).
fof(f2264_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2265,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK30(X0,X1,bool,bool))) ) | $spl40),
  inference(cnf_transformation,[],[f2265_D])).
fof(f2265_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK30(X0,X1,bool,bool))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2267,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl43),
  inference(cnf_transformation,[],[f2267_D])).
fof(f2267_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f2261,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'T_0') = s(bool,sK30(X4,X5,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2222,f243])).
fof(f2268,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK30(X2,X3,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f2260,f465])).
fof(f2260,plain,(
  ( ! [X2,X3] : (s(bool,sK13) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK30(X2,X3,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2222,f744])).
fof(f2262,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK30(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | ($spl24 | $spl30)),
  inference(forward_demodulation,[],[f2259,f467])).
fof(f2259,plain,(
  ( ! [X0,X1] : (s(bool,sK26) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK30(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | ($spl24 | $spl30)),
  inference(superposition,[],[f2222,f745])).
fof(f937,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s('type.fcp.cart'(bool,sK0),X0))))) ) | $spl36),
  inference(cnf_transformation,[],[f937_D])).
fof(f937_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s('type.fcp.cart'(bool,sK0),X0))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f756,plain,(
  p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK6)))) | $spl34),
  inference(cnf_transformation,[],[f756_D])).
fof(f756_D,plain,(
  p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK6)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f936,plain,(
  ( ! [X0] : (p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK6)))) | ~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s('type.fcp.cart'(bool,sK0),X0))))) ) | ($spl10 | $spl32)),
  inference(forward_demodulation,[],[f935,f378])).
fof(f935,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s('type.fcp.cart'(bool,sK0),X0)))) | p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK19))))) ) | ($spl10 | $spl32)),
  inference(forward_demodulation,[],[f925,f754])).
fof(f925,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s('type.fcp.cart'(bool,sK0),sK28(X0,sK19,'type.fcp.cart'(bool,sK0)))))) | p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK19))))) ) | $spl10),
  inference(superposition,[],[f271,f378])).
fof(f754,plain,(
  ( ! [X0] : (s('type.fcp.cart'(bool,sK0),X0) = s('type.fcp.cart'(bool,sK0),sK28(X0,sK19,'type.fcp.cart'(bool,sK0)))) ) | $spl32),
  inference(cnf_transformation,[],[f754_D])).
fof(f754_D,plain,(
  ( ! [X0] : (s('type.fcp.cart'(bool,sK0),X0) = s('type.fcp.cart'(bool,sK0),sK28(X0,sK19,'type.fcp.cart'(bool,sK0)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f749,plain,(
  ( ! [X0] : (p(s(bool,'|dollar|exists_1'(s(fun('type.fcp.cart'(bool,sK0),bool),sK6)))) | s('type.fcp.cart'(bool,sK0),X0) = s('type.fcp.cart'(bool,sK0),sK28(X0,sK19,'type.fcp.cart'(bool,sK0)))) ) | $spl10),
  inference(superposition,[],[f270,f378])).
fof(f465,plain,(
  s(bool,'F_0') = s(bool,sK13) | $spl30),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  s(bool,'F_0') = s(bool,sK13) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f456,plain,(
  s(bool,'F_0') = s(bool,sK13) | s(bool,'T_0') = s(bool,sK26) | $spl24),
  inference(superposition,[],[f392,f243])).
fof(f441,plain,(
  s(bool,'F_0') = s(bool,sK13) | s(bool,'T_0') = s(bool,sK26) | $spl24),
  inference(superposition,[],[f243,f392])).
fof(f409,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(trivial_inequality_removal,[],[f408])).
fof(f408,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f407,f370])).
fof(f407,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl4 | $spl6 | $spl8 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f406,f372])).
fof(f406,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl6 | $spl8 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f405,f374])).
fof(f405,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl8 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f404,f376])).
fof(f404,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl10 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f403,f378])).
fof(f403,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl12 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f402,f380])).
fof(f402,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl14 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f401,f382])).
fof(f401,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl16 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f400,f384])).
fof(f400,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl18 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f399,f386])).
fof(f399,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl20 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f398,f388])).
fof(f398,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl22 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f397,f390])).
fof(f397,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl24 | $spl26)),
  inference(forward_demodulation,[],[f396,f392])).
fof(f396,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK14))) | ($spl1 | $spl26)),
  inference(forward_demodulation,[],[f369,f394])).
fof(f368,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | $spl0),
  inference(cnf_transformation,[],[f368_D])).
fof(f368_D,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f370,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | $spl2),
  inference(cnf_transformation,[],[f370_D])).
fof(f370_D,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f226,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | (s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) = s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) & s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) & s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) & s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) & s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) & s('type.num.num',sK9) = s('type.num.num',sK22) & s('type.num.num',sK10) = s('type.num.num',sK23) & s('type.num.num',sK11) = s('type.num.num',sK24) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) & s(bool,sK13) = s(bool,sK26) & s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27))) & (s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) != s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | s(fun('type.fcp.cart'(bool,sK0),bool),sK6) != s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) != s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | s('type.num.num',sK9) != s('type.num.num',sK22) | s('type.num.num',sK10) != s('type.num.num',sK23) | s('type.num.num',sK11) != s('type.num.num',sK24) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | s(bool,sK13) != s(bool,sK26) | s('type.ffi.ffi_state'(sK1),sK14) != s('type.ffi.ffi_state'(sK1),sK27))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27])],[f200])).
fof(f200,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : ((s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) | (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) & s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) & s(fun('type.fcp.cart'(bool,X0),bool),X6) = s(fun('type.fcp.cart'(bool,X0),bool),X19) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) & s('type.num.num',X9) = s('type.num.num',X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) & s(bool,X13) = s(bool,X26) & s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),X27))) & (s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) != s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) | s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) != s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) | s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) != s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) | s(fun('type.fcp.cart'(bool,X0),bool),X6) != s(fun('type.fcp.cart'(bool,X0),bool),X19) | s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) != s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) | s('type.num.num',X9) != s('type.num.num',X22) | s('type.num.num',X10) != s('type.num.num',X23) | s('type.num.num',X11) != s('type.num.num',X24) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) | s(bool,X13) != s(bool,X26) | s('type.ffi.ffi_state'(X1),X14) != s('type.ffi.ffi_state'(X1),X27)))),
  inference(flattening,[],[f199])).
fof(f199,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : ((s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) | (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) & s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) & s(fun('type.fcp.cart'(bool,X0),bool),X6) = s(fun('type.fcp.cart'(bool,X0),bool),X19) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) & s('type.num.num',X9) = s('type.num.num',X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) & s(bool,X13) = s(bool,X26) & s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),X27))) & (s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) != s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) | (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) != s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) | s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) != s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) | s(fun('type.fcp.cart'(bool,X0),bool),X6) != s(fun('type.fcp.cart'(bool,X0),bool),X19) | s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) != s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) | s('type.num.num',X9) != s('type.num.num',X22) | s('type.num.num',X10) != s('type.num.num',X23) | s('type.num.num',X11) != s('type.num.num',X24) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) | s(bool,X13) != s(bool,X26) | s('type.ffi.ffi_state'(X1),X14) != s('type.ffi.ffi_state'(X1),X27))))),
  inference(nnf_transformation,[],[f194])).
fof(f194,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : (s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) <~> (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) & s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) & s(fun('type.fcp.cart'(bool,X0),bool),X6) = s(fun('type.fcp.cart'(bool,X0),bool),X19) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) & s('type.num.num',X9) = s('type.num.num',X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) & s(bool,X13) = s(bool,X26) & s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),X27)))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : (s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) & s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) & s(fun('type.fcp.cart'(bool,X0),bool),X6) = s(fun('type.fcp.cart'(bool,X0),bool),X19) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) & s('type.num.num',X9) = s('type.num.num',X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) & s(bool,X13) = s(bool,X26) & s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),X27)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27] : (s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s('type.list.list'('type.wordSem.stack_frame'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12),s(bool,X13),s('type.ffi.ffi_state'(X1),X14))) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18),s(fun('type.fcp.cart'(bool,X0),bool),X19),s(fun('type.num.num',fun('type.num.num','type.num.num')),X20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21),s('type.num.num',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25),s(bool,X26),s('type.ffi.ffi_state'(X1),X27))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2) = s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X15) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X16) & s('type.list.list'('type.wordSem.stack_frame'(X0)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X0)),X17) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X5) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X18) & s(fun('type.fcp.cart'(bool,X0),bool),X6) = s(fun('type.fcp.cart'(bool,X0),bool),X19) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X20) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X21) & s('type.num.num',X9) = s('type.num.num',X22) & s('type.num.num',X10) = s('type.num.num',X23) & s('type.num.num',X11) = s('type.num.num',X24) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X25) & s(bool,X13) = s(bool,X26) & s('type.ffi.ffi_state'(X1),X14) = s('type.ffi.ffi_state'(X1),X27)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33] : (s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X9),s('type.list.list'('type.wordSem.stack_frame'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X11),s(fun('type.fcp.cart'(bool,X6),bool),X12),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X14),s('type.num.num',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X18),s(bool,X19),s('type.ffi.ffi_state'(X7),X20))) = s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X21),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X22),s('type.list.list'('type.wordSem.stack_frame'(X6)),X23),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X24),s(fun('type.fcp.cart'(bool,X6),bool),X25),s(fun('type.num.num',fun('type.num.num','type.num.num')),X26),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X27),s('type.num.num',X28),s('type.num.num',X29),s('type.num.num',X30),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X31),s(bool,X32),s('type.ffi.ffi_state'(X7),X33))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X21) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X9) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X22) & s('type.list.list'('type.wordSem.stack_frame'(X6)),X10) = s('type.list.list'('type.wordSem.stack_frame'(X6)),X23) & s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X11) = s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X24) & s(fun('type.fcp.cart'(bool,X6),bool),X12) = s(fun('type.fcp.cart'(bool,X6),bool),X25) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X13) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X26) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X14) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X27) & s('type.num.num',X15) = s('type.num.num',X28) & s('type.num.num',X16) = s('type.num.num',X29) & s('type.num.num',X17) = s('type.num.num',X30) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X18) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X31) & s(bool,X19) = s(bool,X32) & s('type.ffi.ffi_state'(X7),X20) = s('type.ffi.ffi_state'(X7),X33)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33] : (s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X9),s('type.list.list'('type.wordSem.stack_frame'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X11),s(fun('type.fcp.cart'(bool,X6),bool),X12),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X14),s('type.num.num',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X18),s(bool,X19),s('type.ffi.ffi_state'(X7),X20))) = s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X21),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X22),s('type.list.list'('type.wordSem.stack_frame'(X6)),X23),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X24),s(fun('type.fcp.cart'(bool,X6),bool),X25),s(fun('type.num.num',fun('type.num.num','type.num.num')),X26),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X27),s('type.num.num',X28),s('type.num.num',X29),s('type.num.num',X30),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X31),s(bool,X32),s('type.ffi.ffi_state'(X7),X33))) <=> (s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8) = s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X21) & s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X9) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X22) & s('type.list.list'('type.wordSem.stack_frame'(X6)),X10) = s('type.list.list'('type.wordSem.stack_frame'(X6)),X23) & s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X11) = s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X24) & s(fun('type.fcp.cart'(bool,X6),bool),X12) = s(fun('type.fcp.cart'(bool,X6),bool),X25) & s(fun('type.num.num',fun('type.num.num','type.num.num')),X13) = s(fun('type.num.num',fun('type.num.num','type.num.num')),X26) & s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X14) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X27) & s('type.num.num',X15) = s('type.num.num',X28) & s('type.num.num',X16) = s('type.num.num',X29) & s('type.num.num',X17) = s('type.num.num',X30) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X18) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X31) & s(bool,X19) = s(bool,X32) & s('type.ffi.ffi_state'(X7),X20) = s('type.ffi.ffi_state'(X7),X33)))),
  file('thm.wordSem.state_|49||49|','thm.wordSem.state_|49||49|')).
fof(f372,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | $spl4),
  inference(cnf_transformation,[],[f372_D])).
fof(f372_D,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f227,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f374,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | $spl6),
  inference(cnf_transformation,[],[f374_D])).
fof(f374_D,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f228,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) = s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f376,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | $spl8),
  inference(cnf_transformation,[],[f376_D])).
fof(f376_D,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f229,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) = s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f378,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | $spl10),
  inference(cnf_transformation,[],[f378_D])).
fof(f378_D,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f230,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) = s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f380,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | $spl12),
  inference(cnf_transformation,[],[f380_D])).
fof(f380_D,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f231,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) = s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f382,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | $spl14),
  inference(cnf_transformation,[],[f382_D])).
fof(f382_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f232,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) = s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f384,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | $spl16),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f233,plain,(
  s('type.num.num',sK9) = s('type.num.num',sK22) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f386,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | $spl18),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f234,plain,(
  s('type.num.num',sK10) = s('type.num.num',sK23) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f388,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | $spl20),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f235,plain,(
  s('type.num.num',sK11) = s('type.num.num',sK24) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f390,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | $spl22),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f236,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f392,plain,(
  s(bool,sK13) = s(bool,sK26) | $spl24),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  s(bool,sK13) = s(bool,sK26) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f237,plain,(
  s(bool,sK13) = s(bool,sK26) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f394,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | $spl26),
  inference(cnf_transformation,[],[f394_D])).
fof(f394_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f238,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) = s('type.ffi.ffi_state'(sK1),sK27) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) = s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
fof(f369,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) | $spl1),
  inference(cnf_transformation,[],[f369_D])).
fof(f369_D,plain,(
  s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f371,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) != s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | $spl3),
  inference(cnf_transformation,[],[f371_D])).
fof(f371_D,plain,(
  s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) != s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f373,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | $spl5),
  inference(cnf_transformation,[],[f373_D])).
fof(f373_D,plain,(
  s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f375,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | $spl7),
  inference(cnf_transformation,[],[f375_D])).
fof(f375_D,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f377,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | $spl9),
  inference(cnf_transformation,[],[f377_D])).
fof(f377_D,plain,(
  s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f379,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) != s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | $spl11),
  inference(cnf_transformation,[],[f379_D])).
fof(f379_D,plain,(
  s(fun('type.fcp.cart'(bool,sK0),bool),sK6) != s(fun('type.fcp.cart'(bool,sK0),bool),sK19) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f381,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) != s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | $spl13),
  inference(cnf_transformation,[],[f381_D])).
fof(f381_D,plain,(
  s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) != s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f383,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | $spl15),
  inference(cnf_transformation,[],[f383_D])).
fof(f383_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f385,plain,(
  s('type.num.num',sK9) != s('type.num.num',sK22) | $spl17),
  inference(cnf_transformation,[],[f385_D])).
fof(f385_D,plain,(
  s('type.num.num',sK9) != s('type.num.num',sK22) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f387,plain,(
  s('type.num.num',sK10) != s('type.num.num',sK23) | $spl19),
  inference(cnf_transformation,[],[f387_D])).
fof(f387_D,plain,(
  s('type.num.num',sK10) != s('type.num.num',sK23) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f389,plain,(
  s('type.num.num',sK11) != s('type.num.num',sK24) | $spl21),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  s('type.num.num',sK11) != s('type.num.num',sK24) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f391,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | $spl23),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f393,plain,(
  s(bool,sK13) != s(bool,sK26) | $spl25),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  s(bool,sK13) != s(bool,sK26) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f395,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) != s('type.ffi.ffi_state'(sK1),sK27) | $spl27),
  inference(cnf_transformation,[],[f395_D])).
fof(f395_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) != s('type.ffi.ffi_state'(sK1),sK27) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f239,plain,(
  s('type.ffi.ffi_state'(sK1),sK14) != s('type.ffi.ffi_state'(sK1),sK27) | s(bool,sK13) != s(bool,sK26) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25) | s('type.num.num',sK11) != s('type.num.num',sK24) | s('type.num.num',sK10) != s('type.num.num',sK23) | s('type.num.num',sK9) != s('type.num.num',sK22) | s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8) != s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21) | s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7) != s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20) | s(fun('type.fcp.cart'(bool,sK0),bool),sK6) != s(fun('type.fcp.cart'(bool,sK0),bool),sK19) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18) | s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17) | s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3) != s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16) | s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2) != s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15) | s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK5),s(fun('type.fcp.cart'(bool,sK0),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK1),sK14))) != s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK15),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK17),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK18),s(fun('type.fcp.cart'(bool,sK0),bool),sK19),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK20),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK21),s('type.num.num',sK22),s('type.num.num',sK23),s('type.num.num',sK24),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK25),s(bool,sK26),s('type.ffi.ffi_state'(sK1),sK27)))),
  inference(cnf_transformation,[],[f201])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 302
% Passive clauses: 2074
% Generated clauses: 22793
% Final active clauses: 81
% Final passive clauses: 240
% Input formulas: 69
% Initial clauses: 140
% 
% Duplicate literals: 423
% Trivial inequalities: 205
% Fw subsumption resolutions: 1159
% Fw demodulations: 6531
% Bw demodulations: 520
% Condensations: 487
% Global subsumptions: 14
% 
% Simple tautologies: 157
% Equational tautologies: 82
% Forward subsumptions: 11330
% Fw demodulations to eq. taut.: 185
% Bw demodulations to eq. taut.: 8
% 
% Unit resulting resolution: 2288
% Factoring: 4
% Forward superposition: 4162
% Backward superposition: 6210
% Self superposition: 68
% Equality factoring: 14
% Equality resolution: 39
% 
% Split clauses: 38
% Split components: 91
% SAT solver clauses: 2274
% SAT solver unit clauses: 81
% SAT solver binary clauses: 275
% 
% Sat splits: 38
% Sat splitting refutations: 108
% 
% Memory used [KB]: 15479
% Time elapsed: 1.141 s
% ------------------------------
% ------------------------------
% Success in time 2.49 s
