Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f2478,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2470])).
fof(f2470,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.NIL_0')),
  inference(superposition,[],[f103,f2451])).
fof(f2451,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f2450,f108])).
fof(f108,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.misc.LASTN_ALT|split|0','thm.list.REVERSE_DEF|split|0')).
fof(f2450,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f2429,f120])).
fof(f120,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.misc.LASTN_ALT|split|0','thm.list.TAKE_def|split|0')).
fof(f2429,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f125,f108])).
fof(f125,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X2)))))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X7,X23] : s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X23))) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X23)))))))),
  file('thm.misc.LASTN_ALT|split|0','thm.rich_list.LASTN_def')).
fof(f103,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.rich_list.LASTN_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.rich_list.LASTN_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f78])).
fof(f78,plain,(
  ? [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ~! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ~! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.misc.LASTN_ALT|split|0','thm.misc.LASTN_ALT|split|0')).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 440
% Generated clauses: 2283
% Final active clauses: 52
% Final passive clauses: 349
% Input formulas: 30
% Initial clauses: 50
% 
% Duplicate literals: 161
% Trivial inequalities: 47
% Fw subsumption resolutions: 253
% Fw demodulations: 145
% Bw demodulations: 2
% 
% Simple tautologies: 95
% Equational tautologies: 33
% Forward subsumptions: 1092
% 
% Binary resolution: 78
% Factoring: 1
% Forward superposition: 691
% Backward superposition: 734
% Self superposition: 62
% Equality factoring: 54
% Equality resolution: 12
% 
% Split clauses: 23
% Split components: 46
% SAT solver clauses: 46
% SAT solver unit clauses: 9
% SAT solver binary clauses: 37
% 
% Sat splits: 23
% 
% TWLsolver clauses: 46
% TWLsolver calls for satisfiability: 20
% 
% Memory used [KB]: 1918
% Time elapsed: 0.057 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
