Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closSem
% (51321)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 97
% Passive clauses: 2117
% Generated clauses: 8174
% Final active clauses: 95
% Final passive clauses: 1923
% Input formulas: 36
% Initial clauses: 47
% 
% Duplicate literals: 222
% Trivial inequalities: 133
% Fw subsumption resolutions: 699
% Fw demodulations: 882
% Bw demodulations: 1
% 
% Simple tautologies: 111
% Equational tautologies: 33
% Forward subsumptions: 3632
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 418
% Factoring: 2
% Forward superposition: 3130
% Backward superposition: 2403
% Self superposition: 128
% Equality factoring: 54
% Equality resolution: 16
% 
% Split clauses: 101
% Split components: 202
% SAT solver clauses: 224
% SAT solver unit clauses: 33
% SAT solver binary clauses: 102
% 
% Sat splits: 101
% 
% TWLsolver clauses: 224
% TWLsolver calls for satisfiability: 91
% 
% Memory used [KB]: 10490
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closSem
% (51358)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 91
% Passive clauses: 1162
% Generated clauses: 8672
% Final active clauses: 82
% Final passive clauses: 926
% Input formulas: 36
% Initial clauses: 47
% 
% Duplicate literals: 247
% Trivial inequalities: 139
% Fw subsumption resolutions: 226
% Fw demodulations: 509
% Bw demodulations: 32
% Condensations: 492
% 
% Simple tautologies: 119
% Equational tautologies: 31
% Forward subsumptions: 4061
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 119
% 
% Binary resolution: 136
% Factoring: 1
% Forward superposition: 2974
% Backward superposition: 2508
% Self superposition: 127
% Equality factoring: 50
% Equality resolution: 17
% 
% Split clauses: 44
% Split components: 88
% SAT solver clauses: 1718
% SAT solver unit clauses: 69
% SAT solver binary clauses: 54
% 
% Sat splits: 44
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1718
% TWLsolver calls for satisfiability: 211
% 
% Memory used [KB]: 19957
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closSem
% SZS output start Proof for thm.closSem
fof(f6353,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f119,f169,f167,f118,f168,f166,f171,f1081,f1083,f1120,f1124,f1128,f1130,f1134,f1136,f1138,f1140,f1145,f1208,f1209,f1210,f1211,f1852,f1855,f1854,f1853,f1936,f1938,f5972,f5973,f5976,f1084,f5977,f6314,f6348])).
fof(f6348,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f6347,f1056])).
fof(f1056,plain,(
  s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) != s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | $spl3),
  inference(unit_resulting_resolution,[],[f169,f141])).
fof(f141,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) != s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2] : ((s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) != s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2)) & (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2)))))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : (s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) <=> s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : ! [X1,X2] : (s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) <=> s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X7))) = s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),X7) = s('type.list.list'(X6),X8))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_|49||49||split|0')).
fof(f6347,plain,(
  s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | $spl0),
  inference(forward_demodulation,[],[f6292,f131])).
fof(f131,plain,(
  ( ! [X0,X1] : (s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),happ(s(fun('type.list.list'(X0),'type.closSem.ref'(X0)),'const.closSem.ValueArray_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),happ(s(fun('type.list.list'(X0),'type.closSem.ref'(X0)),'const.closSem.ValueArray_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1] : s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),happ(s(fun('type.list.list'(X0),'type.closSem.ref'(X0)),'const.closSem.ValueArray_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X9] : s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X9))) = s('type.closSem.ref'(X6),happ(s(fun('type.list.list'(X6),'type.closSem.ref'(X6)),'const.closSem.ValueArray_0'),s('type.list.list'(X6),X9)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_0_1_const.closSem.ValueArray')).
fof(f6292,plain,(
  s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) = s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.closSem.ValueArray_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) | $spl0),
  inference(superposition,[],[f131,f6134])).
fof(f6134,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s(X0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2)))) ) | $spl0),
  inference(forward_demodulation,[],[f5998,f159])).
fof(f159,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4] : s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X11] : ! [X7,X10,X12] : s(X11,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X12),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))) = s(X11,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))),s(fun('type.list.list'(X6),X11),X10),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X12)))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_case_def|split|1')).
fof(f5998,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))),s(fun('type.list.list'(sK0),X0),X2),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1)))) ) | $spl0),
  inference(superposition,[],[f159,f166])).
fof(f6314,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f6313,f1056])).
fof(f6313,plain,(
  s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | $spl0),
  inference(forward_demodulation,[],[f6198,f131])).
fof(f6198,plain,(
  s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.closSem.ValueArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) = s('type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.closSem.ValueArray_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) | $spl0),
  inference(superposition,[],[f6134,f131])).
fof(f5977,plain,(
  ( ! [X75,X73] : (s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun('type.pair.prod'(bool,X73),bool),'const.pair.FST_0')),X75,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X75)))) ) | $spl14),
  inference(cnf_transformation,[],[f5977_D])).
fof(f5977_D,plain,(
  ( ! [X75,X73] : (s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun('type.pair.prod'(bool,X73),bool),'const.pair.FST_0')),X75,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X75)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1084,plain,(
  ( ! [X15] : (~p(s(bool,X15))) ) | $spl6),
  inference(cnf_transformation,[],[f1084_D])).
fof(f1084_D,plain,(
  ( ! [X15] : (~p(s(bool,X15))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f5976,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X74)) | s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun('type.pair.prod'(bool,X73),bool),'const.pair.FST_0')),X75,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X75)))) ) | $spl4),
  inference(subsumption_resolution,[],[f5943,f127])).
fof(f127,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X31] : (s(bool,'F_0') = s(bool,X31) <=> ~p(s(bool,X31)))),
  file('thm.closSem.ref_|49||49||split|1','thm.bool.EQ_CLAUSES|split|3')).
fof(f5943,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X74)) | s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun('type.pair.prod'(bool,X73),bool),'const.pair.FST_0')),X75,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X75))) | s(bool,'F_0') = s(bool,X74)) ) | $spl4),
  inference(superposition,[],[f782,f1802])).
fof(f1802,plain,(
  ( ! [X31,X32] : (s(bool,X32) = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X31),bool),'const.pair.FST_0'))) | s(bool,'F_0') = s(bool,X32)) ) | $spl4),
  inference(subsumption_resolution,[],[f1784,f120])).
fof(f120,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.closSem.ref_|49||49||split|1',aHL_TRUTH)).
fof(f1784,plain,(
  ( ! [X31,X32] : (~p(s(bool,'T_0')) | s(bool,X32) = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X31),bool),'const.pair.FST_0'))) | s(bool,'F_0') = s(bool,X32)) ) | $spl4),
  inference(superposition,[],[f1737,f1223])).
fof(f1223,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1083,f124])).
fof(f124,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X31] : (s(bool,'T_0') = s(bool,X31) <=> p(s(bool,X31)))),
  file('thm.closSem.ref_|49||49||split|1','thm.bool.EQ_CLAUSES|split|0')).
fof(f1737,plain,(
  ( ! [X18,X16] : (~p(s(bool,X18)) | s(bool,X16) = s(bool,X18) | s(bool,'F_0') = s(bool,X16)) )),
  inference(forward_demodulation,[],[f1736,f135])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X7,X10] : s(X6,X7) = s(X6,'const.ind_type.FCONS_3'(s(X6,X7),s(fun('type.num.num',X6),X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.closSem.ref_|49||49||split|1','thm.ind_type.FCONS|split|0')).
fof(f1736,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.ind_type.FCONS_3'(s(bool,X16),s(fun('type.num.num',bool),X17),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f1709,f120])).
fof(f1709,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.ind_type.FCONS_3'(s(bool,X16),s(fun('type.num.num',bool),X17),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(superposition,[],[f150,f225])).
fof(f225,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X0),s(fun('type.num.num',bool),X1),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f135,f122])).
fof(f122,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.closSem.ref_|49||49||split|1',aHL_BOOL_CASES)).
fof(f150,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X19,X20] : ((p(s(bool,X19)) => p(s(bool,X20))) => ((p(s(bool,X20)) => p(s(bool,X19))) => s(bool,X19) = s(bool,X20)))),
  file('thm.closSem.ref_|49||49||split|1','thm.bool.IMP_ANTISYM_AX')).
fof(f782,plain,(
  ( ! [X39,X38] : (~p(s(bool,X38)) | s(bool,'T_0') = s(bool,sK3(X38,X39,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X39)))) )),
  inference(superposition,[],[f124,f356])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK3(X2,X1,X0)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(subsumption_resolution,[],[f355,f121])).
fof(f121,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closSem.ref_|49||49||split|1',aHL_FALSITY)).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | s(X0,X2) = s(X0,sK3(X2,X1,X0)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f139,f122])).
fof(f139,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(X0,X2) = s(X0,sK3(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2] : ((s(X0,X2) = s(X0,sK3(X2,X1,X0)) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK3(X2,X1,X0)))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(ennf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) => p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X30,X31] : (! [X27] : (s(X6,X27) = s(X6,X31) => p(s(bool,happ(s(fun(X6,bool),X30),s(X6,X27))))) => p(s(bool,'|dollar|exists_1'(s(fun(X6,bool),X30)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.bool.JRH_INDUCT_UTIL')).
fof(f5973,plain,(
  ( ! [X67,X65] : (s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun(X65,bool),'_dst_x0_1'(s(bool,'T_0')))),X67,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67)))) ) | $spl12),
  inference(cnf_transformation,[],[f5973_D])).
fof(f5973_D,plain,(
  ( ! [X67,X65] : (s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun(X65,bool),'_dst_x0_1'(s(bool,'T_0')))),X67,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5972,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,X66)) | s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun(X65,bool),'_dst_x0_1'(s(bool,'T_0')))),X67,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67)))) )),
  inference(subsumption_resolution,[],[f5940,f127])).
fof(f5940,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,X66)) | s(bool,'T_0') = s(bool,sK3('|dollar|exists_1'(s(fun(X65,bool),'_dst_x0_1'(s(bool,'T_0')))),X67,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X67))) | s(bool,'F_0') = s(bool,X66)) )),
  inference(superposition,[],[f782,f1801])).
fof(f1801,plain,(
  ( ! [X30,X29] : (s(bool,X30) = s(bool,'|dollar|exists_1'(s(fun(X29,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'F_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f1783,f120])).
fof(f1783,plain,(
  ( ! [X30,X29] : (~p(s(bool,'T_0')) | s(bool,X30) = s(bool,'|dollar|exists_1'(s(fun(X29,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'F_0') = s(bool,X30)) )),
  inference(superposition,[],[f1737,f883])).
fof(f883,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0')))))) )),
  inference(unit_resulting_resolution,[],[f851,f124])).
fof(f851,plain,(
  ( ! [X0] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))))))) )),
  inference(unit_resulting_resolution,[],[f120,f844])).
fof(f844,plain,(
  ( ! [X19,X20] : (~p(s(bool,X20)) | p(s(bool,'|dollar|exists_1'(s(fun(X19,bool),'_dst_x0_1'(s(bool,X20))))))) )),
  inference(superposition,[],[f140,f154])).
fof(f154,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X15,X13] : ! [X16,X18] : s(X13,X16) = s(X13,happ(s(fun(X15,X13),'_dst_x0_1'(s(X13,X16))),s(X15,X18)))),
  file('thm.closSem.ref_|49||49||split|1','_dst_x0_ax')).
fof(f140,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK3(X2,X1,X0))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f1938,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1937,f1854])).
fof(f1937,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl10),
  inference(subsumption_resolution,[],[f1869,f1867])).
fof(f1867,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,X3)) ) | $spl10),
  inference(global_subsumption,[],[f119,f118,f120,f121,f122,f124,f123,f128,f127,f131,f132,f135,f136,f137,f138,f140,f142,f141,f143,f144,f145,f150,f147,f151,f152,f153,f154,f155,f156,f157,f158,f159,f160,f161,f162,f163,f164,f172,f181,f183,f210,f225,f255,f289,f327,f356,f416,f417,f418,f419,f432,f442,f443,f444,f445,f752,f753,f760,f762,f764,f827,f845,f846,f847,f848,f832,f833,f835,f837,f850,f851,f883,f931,f965,f1010,f1057,f1058,f1059,f1060,f1061,f1062,f1081,f146,f949,f844,f866,f769,f768,f767,f766,f765,f919,f921,f923,f1044,f1082,f1212,f849,f1054,f1102,f1019,f865,f793,f792,f787,f785,f784,f783,f782,f781,f795,f354,f353,f352,f950,f351,f867,f826,f139,f1366,f1368,f1370,f1394,f1395,f1398,f1544,f1546,f1548,f1558,f1578,f1579,f1582,f1621,f1624,f1626,f1627,f1628,f1629,f1682,f1683,f1684,f1685,f1686,f1687,f1688,f1689,f1737,f1738,f1740,f1794,f1799,f1800,f1801,f1792,f1830,f1852,f1855,f1856,f1854,f1857])).
fof(f1857,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'T_0'))) != s(X2,g(s(bool,'T_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,X3) = s(bool,sK6(X0,X1,X2,bool)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f157,f181])).
fof(f1856,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X16,bool),'_dst_x0_1'(s(bool,X17))))) | s(bool,'F_0') = s(bool,X17)) )),
  inference(subsumption_resolution,[],[f1837,f121])).
fof(f1837,plain,(
  ( ! [X17,X16] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,X17) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X16,bool),'_dst_x0_1'(s(bool,X17)))))) )),
  inference(superposition,[],[f1740,f122])).
fof(f1830,plain,(
  ( ! [X61,X59,X60] : (p(s(bool,'|dollar|exists_1'(s(fun(X61,bool),'_dst_x0_1'(s(bool,X59)))))) | s(bool,'F_0') = s(bool,sK3(X59,X60,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) )),
  inference(superposition,[],[f1740,f356])).
fof(f1792,plain,(
  ( ! [X61,X59,X60] : (~p(s(bool,X59)) | s(bool,X61) = s(bool,sK3(X59,X60,bool)) | s(bool,'F_0') = s(bool,X61) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) )),
  inference(superposition,[],[f1737,f356])).
fof(f1800,plain,(
  ( ! [X28,X26,X27,X25] : (s(bool,X27) = s(bool,'|dollar|exists_1'(s(fun(X25,bool),X26))) | s(bool,'F_0') = s(bool,X27) | s(X25,X28) = s(X25,sK3(X28,X26,X25))) )),
  inference(subsumption_resolution,[],[f1782,f120])).
fof(f1782,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'T_0')) | s(bool,X27) = s(bool,'|dollar|exists_1'(s(fun(X25,bool),X26))) | s(bool,'F_0') = s(bool,X27) | s(X25,X28) = s(X25,sK3(X28,X26,X25))) )),
  inference(superposition,[],[f1737,f356])).
fof(f1799,plain,(
  ( ! [X24,X23,X22] : (s(bool,X24) = s(bool,'const.ind_type.FCONS_3'(s(bool,X22),s(fun('type.num.num',bool),X23),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X24) | s(bool,'F_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f1781,f120])).
fof(f1781,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | s(bool,X24) = s(bool,'const.ind_type.FCONS_3'(s(bool,X22),s(fun('type.num.num',bool),X23),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X24) | s(bool,'F_0') = s(bool,X22)) )),
  inference(superposition,[],[f1737,f225])).
fof(f1794,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f1773,f120])).
fof(f1773,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1737,f181])).
fof(f1740,plain,(
  ( ! [X37,X35] : (p(s(bool,'|dollar|exists_1'(s(fun(X37,bool),'_dst_x0_1'(s(bool,X35)))))) | s(bool,'F_0') = s(bool,X35)) )),
  inference(forward_demodulation,[],[f1739,f135])).
fof(f1739,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,'|dollar|exists_1'(s(fun(X37,bool),'_dst_x0_1'(s(bool,'const.ind_type.FCONS_3'(s(bool,X35),s(fun('type.num.num',bool),X36),s('type.num.num','const.num.|48|_0')))))))) | s(bool,'F_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f1714,f120])).
fof(f1714,plain,(
  ( ! [X37,X35,X36] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X37,bool),'_dst_x0_1'(s(bool,'const.ind_type.FCONS_3'(s(bool,X35),s(fun('type.num.num',bool),X36),s('type.num.num','const.num.|48|_0')))))))) | s(bool,'F_0') = s(bool,X35)) )),
  inference(superposition,[],[f844,f225])).
fof(f1738,plain,(
  ( ! [X30,X31,X29] : (s(bool,X31) != s(bool,'const.ind_type.FCONS_3'(s(bool,X29),s(fun('type.num.num',bool),X30),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X31) | s(bool,'F_0') = s(bool,X29)) )),
  inference(subsumption_resolution,[],[f1712,f120])).
fof(f1712,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'T_0')) | s(bool,X31) != s(bool,'const.ind_type.FCONS_3'(s(bool,X29),s(fun('type.num.num',bool),X30),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X31) | s(bool,'F_0') = s(bool,X29)) )),
  inference(superposition,[],[f183,f225])).
fof(f1689,plain,(
  ( ! [X61,X59,X60] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X59),s(fun('type.num.num',bool),X61),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,sK3(X59,X60,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X60)))) )),
  inference(superposition,[],[f225,f356])).
fof(f1688,plain,(
  ( ! [X57,X58,X56,X55] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X57),s(fun('type.num.num',bool),X58),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.pair.SND_1'(s('type.pair.prod'(X55,bool),'const.pair.,_2'(s(X55,X56),s(bool,X57)))))) )),
  inference(superposition,[],[f225,f155])).
fof(f1687,plain,(
  ( ! [X54,X52,X53,X51] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X52),s(fun('type.num.num',bool),X54),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X51),'const.pair.,_2'(s(bool,X52),s(X51,X53)))))) )),
  inference(superposition,[],[f225,f153])).
fof(f1686,plain,(
  ( ! [X47,X50,X48,X49] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num',X49))),s(fun('type.num.num',bool),X50),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X47),s(fun('type.num.num',bool),X48),s('type.num.num','const.num.SUC_1'(s('type.num.num',X49)))))) )),
  inference(superposition,[],[f225,f143])).
fof(f1685,plain,(
  ( ! [X45,X46,X44] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X46),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X44),s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f225,f135])).
fof(f1684,plain,(
  ( ! [X43,X41,X42,X40] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,happ(s(fun(X40,bool),X42),s(X40,X41))),s(fun('type.num.num',bool),X43),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,happ(s(fun(fun(X40,bool),bool),'_dstsel_0_x0_1'(s(X40,X41))),s(fun(X40,bool),X42)))) )),
  inference(superposition,[],[f225,f156])).
fof(f1683,plain,(
  ( ! [X39,X37,X38] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X37),X38))),s(fun('type.num.num',bool),X39),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X37),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X37),X38)))) )),
  inference(superposition,[],[f225,f151])).
fof(f1682,plain,(
  ( ! [X35,X33,X36,X34] : (s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X34),s(fun('type.num.num',bool),X36),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,happ(s(fun(X33,bool),'_dst_x0_1'(s(bool,X34))),s(X33,X35)))) )),
  inference(superposition,[],[f225,f154])).
fof(f1629,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) != s(bool,'|dollar|exists_1'(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1010,f181])).
fof(f1628,plain,(
  ( ! [X54,X56,X55] : (s(bool,X54) != s(bool,'|dollar|exists_1'(s(fun(X56,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,sK3(X54,X55,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X55)))) )),
  inference(superposition,[],[f1010,f356])).
fof(f1627,plain,(
  ( ! [X52,X50,X53,X51] : (s(bool,X52) != s(bool,'|dollar|exists_1'(s(fun(X53,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.pair.SND_1'(s('type.pair.prod'(X50,bool),'const.pair.,_2'(s(X50,X51),s(bool,X52)))))) )),
  inference(superposition,[],[f1010,f155])).
fof(f1626,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,X47) != s(bool,'|dollar|exists_1'(s(fun(X49,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X46),'const.pair.,_2'(s(bool,X47),s(X46,X48)))))) )),
  inference(superposition,[],[f1010,f153])).
fof(f1624,plain,(
  ( ! [X39,X41,X40] : (s(bool,X39) != s(bool,'|dollar|exists_1'(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X39),s(fun('type.num.num',bool),X40),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1010,f135])).
fof(f1621,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X29) != s(bool,'|dollar|exists_1'(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,X29))),s(X28,X30)))) )),
  inference(superposition,[],[f1010,f154])).
fof(f1582,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s('type.closSem.ref'(X150),'const.closSem.ValueArray_1'(s('type.list.list'(X150),X154))) != s('type.closSem.ref'(X150),'const.closSem.ValueArray_1'(s('type.list.list'(X150),happ(s(fun(X151,'type.list.list'(X150)),X153),s(X151,X152))))) | s('type.list.list'(X150),X154) = s('type.list.list'(X150),happ(s(fun(fun(X151,'type.list.list'(X150)),'type.list.list'(X150)),'_dstsel_0_x0_1'(s(X151,X152))),s(fun(X151,'type.list.list'(X150)),X153)))) )),
  inference(superposition,[],[f141,f156])).
fof(f1579,plain,(
  ( ! [X138,X136,X135,X139,X137] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X135,bool),happ(s(fun(X136,fun(X135,bool)),X138),s(X136,X137))))) | s(X135,X139) = s(X135,sK3(X139,happ(s(fun(fun(X136,fun(X135,bool)),fun(X135,bool)),'_dstsel_0_x0_1'(s(X136,X137))),s(fun(X136,fun(X135,bool)),X138)),X135))) )),
  inference(superposition,[],[f356,f156])).
fof(f1578,plain,(
  ( ! [X134,X132,X130,X133,X131] : (p(s(bool,'|dollar|exists_1'(s(fun(X130,bool),happ(s(fun(X131,fun(X130,bool)),X133),s(X131,X132)))))) | s(X130,X134) = s(X130,sK3(X134,happ(s(fun(fun(X131,fun(X130,bool)),fun(X130,bool)),'_dstsel_0_x0_1'(s(X131,X132))),s(fun(X131,fun(X130,bool)),X133)),X130))) )),
  inference(superposition,[],[f139,f156])).
fof(f1558,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,happ(s(fun(X52,bool),X54),s(X52,X53)))) | p(s(bool,'|dollar|exists_1'(s(fun(fun(X52,bool),bool),'_dstsel_0_x0_1'(s(X52,X53))))))) )),
  inference(superposition,[],[f849,f156])).
fof(f1548,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') = s(bool,happ(s(fun(X16,bool),X18),s(X16,X17))) | s(bool,'T_0') = s(bool,happ(s(fun(fun(X16,bool),bool),'_dstsel_0_x0_1'(s(X16,X17))),s(fun(X16,bool),X18)))) )),
  inference(superposition,[],[f156,f122])).
fof(f1546,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X11) = s(bool,happ(s(fun(X8,bool),X10),s(X8,X9))) | s(bool,'T_0') = s(bool,happ(s(fun(fun(X8,bool),bool),'_dstsel_0_x0_1'(s(X8,X9))),s(fun(X8,bool),X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f156,f181])).
fof(f1544,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X2),s(X0,X1))) | s(bool,X3) = s(bool,happ(s(fun(fun(X0,bool),bool),'_dstsel_0_x0_1'(s(X0,X1))),s(fun(X0,bool),X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f156,f181])).
fof(f1398,plain,(
  ( ! [X125,X123,X121,X124,X122] : (s('type.closSem.ref'(X121),'const.closSem.ValueArray_1'(s('type.list.list'(X121),X125))) != s('type.closSem.ref'(X121),'const.closSem.ValueArray_1'(s('type.list.list'(X121),happ(s(fun('type.num.num','type.list.list'(X121)),X123),s('type.num.num',X124))))) | s('type.list.list'(X121),X125) = s('type.list.list'(X121),'const.ind_type.FCONS_3'(s('type.list.list'(X121),X122),s(fun('type.num.num','type.list.list'(X121)),X123),s('type.num.num','const.num.SUC_1'(s('type.num.num',X124)))))) )),
  inference(superposition,[],[f141,f143])).
fof(f1395,plain,(
  ( ! [X109,X107,X110,X108,X106] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X106,bool),happ(s(fun('type.num.num',fun(X106,bool)),X108),s('type.num.num',X109))))) | s(X106,X110) = s(X106,sK3(X110,'const.ind_type.FCONS_3'(s(fun(X106,bool),X107),s(fun('type.num.num',fun(X106,bool)),X108),s('type.num.num','const.num.SUC_1'(s('type.num.num',X109)))),X106))) )),
  inference(superposition,[],[f356,f143])).
fof(f1394,plain,(
  ( ! [X103,X101,X105,X102,X104] : (p(s(bool,'|dollar|exists_1'(s(fun(X101,bool),happ(s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num',X104)))))) | s(X101,X105) = s(X101,sK3(X105,'const.ind_type.FCONS_3'(s(fun(X101,bool),X102),s(fun('type.num.num',fun(X101,bool)),X103),s('type.num.num','const.num.SUC_1'(s('type.num.num',X104)))),X101))) )),
  inference(superposition,[],[f139,f143])).
fof(f1370,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X16),s(fun('type.num.num',bool),X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))) )),
  inference(superposition,[],[f143,f122])).
fof(f1368,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X11) = s(bool,happ(s(fun('type.num.num',bool),X9),s('type.num.num',X10))) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X8),s(fun('type.num.num',bool),X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f143,f181])).
fof(f1366,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',X2))) | s(bool,X3) = s(bool,'const.ind_type.FCONS_3'(s(bool,X0),s(fun('type.num.num',bool),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f143,f181])).
fof(f826,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,X29)) | s(bool,X29) = s(bool,'|dollar|exists_1'(s(fun(X27,bool),X28))) | s(X27,X30) = s(X27,sK3(X30,X28,X27))) )),
  inference(subsumption_resolution,[],[f805,f120])).
fof(f805,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X29)) | s(bool,X29) = s(bool,'|dollar|exists_1'(s(fun(X27,bool),X28))) | s(X27,X30) = s(X27,sK3(X30,X28,X27))) )),
  inference(superposition,[],[f150,f356])).
fof(f867,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'|dollar|exists_1'(s(fun(X24,bool),'_dst_x0_1'(s(bool,'|dollar|exists_1'(s(fun(X22,bool),X23)))))))) | s(X22,X25) = s(X22,sK3(X25,X23,X22))) )),
  inference(subsumption_resolution,[],[f860,f120])).
fof(f860,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X24,bool),'_dst_x0_1'(s(bool,'|dollar|exists_1'(s(fun(X22,bool),X23)))))))) | s(X22,X25) = s(X22,sK3(X25,X23,X22))) )),
  inference(superposition,[],[f844,f356])).
fof(f351,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X2)))) | s(X0,X4) = s(X0,sK3(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))) )),
  inference(superposition,[],[f139,f154])).
fof(f950,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'|dollar|exists_1'(s(fun(X88,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X88,bool),X89),X90)))))) | s(X88,X91) = s(X88,sK3(X91,happ(s(fun('type.pair.prod'(fun(X88,bool),X89),fun(X88,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(X88,bool),X89),X90)),X88))) )),
  inference(superposition,[],[f139,f151])).
fof(f352,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'|dollar|exists_1'(s(fun(X5,bool),X6)))) | s(X5,X8) = s(X5,sK3(X8,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.|48|_0')),X5))) )),
  inference(superposition,[],[f139,f135])).
fof(f353,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(X9,bool),X11)))) | s(X9,X13) = s(X9,sK3(X13,'const.pair.FST_1'(s('type.pair.prod'(fun(X9,bool),X10),'const.pair.,_2'(s(fun(X9,bool),X11),s(X10,X12)))),X9))) )),
  inference(superposition,[],[f139,f153])).
fof(f354,plain,(
  ( ! [X14,X17,X15,X18,X16] : (p(s(bool,'|dollar|exists_1'(s(fun(X14,bool),X17)))) | s(X14,X18) = s(X14,sK3(X18,'const.pair.SND_1'(s('type.pair.prod'(X15,fun(X14,bool)),'const.pair.,_2'(s(X15,X16),s(fun(X14,bool),X17)))),X14))) )),
  inference(superposition,[],[f139,f155])).
fof(f795,plain,(
  ( ! [X78,X76,X77,X75] : (p(s(bool,'|dollar|exists_1'(s(fun(X75,bool),X76)))) | s(X75,X78) = s(X75,sK3(X78,sK3(X76,X77,fun(X75,bool)),X75)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(fun(X75,bool),bool),X77)))) )),
  inference(superposition,[],[f139,f356])).
fof(f781,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,sK3(X36,X37,bool)) | p(s(bool,X36)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X37)))) )),
  inference(superposition,[],[f123,f356])).
fof(f783,plain,(
  ( ! [X41,X40] : (s(bool,'F_0') != s(bool,X40) | ~p(s(bool,sK3(X40,X41,bool))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X41)))) )),
  inference(superposition,[],[f127,f356])).
fof(f784,plain,(
  ( ! [X43,X42] : (p(s(bool,X42)) | s(bool,'F_0') = s(bool,sK3(X42,X43,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X43)))) )),
  inference(superposition,[],[f128,f356])).
fof(f785,plain,(
  ( ! [X45,X46,X44] : (p(s(bool,X44)) | p(s(bool,X46)) | s(bool,X46) = s(bool,sK3(X44,X45,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X45)))) )),
  inference(superposition,[],[f147,f356])).
fof(f787,plain,(
  ( ! [X52,X50,X51] : (~p(s(bool,X50)) | ~p(s(bool,X52)) | s(bool,X52) = s(bool,sK3(X50,X51,bool)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X51)))) )),
  inference(superposition,[],[f150,f356])).
fof(f792,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,X65)) | s(bool,X67) != s(bool,sK3(X65,X66,bool)) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X66)))) )),
  inference(superposition,[],[f183,f356])).
fof(f793,plain,(
  ( ! [X70,X68,X69] : (p(s(bool,X68)) | s(bool,X70) = s(bool,sK3(X68,X69,bool)) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X69)))) )),
  inference(superposition,[],[f210,f356])).
fof(f865,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,'|dollar|exists_1'(s(fun(X43,bool),'_dst_x0_1'(s(bool,sK3(X41,X42,bool))))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X42)))) )),
  inference(superposition,[],[f844,f356])).
fof(f1019,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,happ(s(fun(X23,bool),X24),s(X23,X26)))) | p(s(bool,'|dollar|exists_1'(s(fun(X23,bool),sK3(X24,X25,fun(X23,bool)))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(fun(X23,bool),bool),X25)))) )),
  inference(superposition,[],[f849,f356])).
fof(f1102,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.list.list'(X23),X24) != s('type.list.list'(X23),X26) | s('type.closSem.ref'(X23),'const.closSem.ValueArray_1'(s('type.list.list'(X23),X26))) = s('type.closSem.ref'(X23),'const.closSem.ValueArray_1'(s('type.list.list'(X23),sK3(X24,X25,'type.list.list'(X23))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.list.list'(X23),bool),X25)))) )),
  inference(superposition,[],[f142,f356])).
fof(f1054,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f1038,f120])).
fof(f1038,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f849,f181])).
fof(f849,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,happ(s(fun(X14,bool),X16),s(X14,X15)))) | p(s(bool,'|dollar|exists_1'(s(fun(X14,bool),X16))))) )),
  inference(subsumption_resolution,[],[f838,f123])).
fof(f838,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,happ(s(fun(X14,bool),X16),s(X14,X15)))) | p(s(bool,'|dollar|exists_1'(s(fun(X14,bool),X16)))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X14,bool),X16)))) )),
  inference(superposition,[],[f140,f356])).
fof(f1212,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) | s(bool,X2) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),X1)))) )),
  inference(global_subsumption,[],[f119,f118,f120,f121,f122,f124,f123,f128,f127,f131,f132,f135,f136,f137,f138,f140,f139,f142,f141,f143,f144,f145,f150,f147,f151,f152,f153,f154,f155,f156,f157,f158,f159,f160,f161,f162,f163,f164,f172,f181,f183,f210,f225,f255,f289,f327,f351,f352,f353,f354,f356,f416,f417,f418,f419,f432,f442,f443,f444,f445,f752,f753,f760,f762,f764,f781,f782,f783,f784,f785,f787,f792,f793,f795,f826,f827,f845,f846,f847,f848,f832,f833,f835,f837,f849,f850,f851,f867,f865,f883,f931,f950,f965,f1010,f1019,f1054,f1057,f1058,f1059,f1060,f1061,f1062,f1081,f1102,f146,f949,f844,f866,f769,f768,f767,f766,f765,f919,f921,f923,f1044,f1082])).
fof(f1082,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) | s(bool,X2) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f1076,f120])).
fof(f1076,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0')))) | s(bool,X2) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1044,f181])).
fof(f1044,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X22),X23)))) | p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X22),bool),'const.pair.FST_0'))))) )),
  inference(superposition,[],[f849,f151])).
fof(f923,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X12),X13))) | s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X12),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X12),X13)))) )),
  inference(superposition,[],[f151,f122])).
fof(f921,plain,(
  ( ! [X6,X8,X7] : (s(bool,X8) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X6),X7))) | s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(bool,X6),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X6),X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f151,f181])).
fof(f919,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),X1))) | s(bool,X2) = s(bool,happ(s(fun('type.pair.prod'(bool,X0),bool),'const.pair.FST_0'),s('type.pair.prod'(bool,X0),X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f151,f181])).
fof(f765,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X0,bool),X2))) | s(X0,X4) = s(X0,sK3(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))) )),
  inference(superposition,[],[f356,f154])).
fof(f766,plain,(
  ( ! [X6,X8,X7,X5] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X5,bool),X6))) | s(X5,X8) = s(X5,sK3(X8,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.|48|_0')),X5))) )),
  inference(superposition,[],[f356,f135])).
fof(f767,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X9,bool),X11))) | s(X9,X13) = s(X9,sK3(X13,'const.pair.FST_1'(s('type.pair.prod'(fun(X9,bool),X10),'const.pair.,_2'(s(fun(X9,bool),X11),s(X10,X12)))),X9))) )),
  inference(superposition,[],[f356,f153])).
fof(f768,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X14,bool),X17))) | s(X14,X18) = s(X14,sK3(X18,'const.pair.SND_1'(s('type.pair.prod'(X15,fun(X14,bool)),'const.pair.,_2'(s(X15,X16),s(fun(X14,bool),X17)))),X14))) )),
  inference(superposition,[],[f356,f155])).
fof(f769,plain,(
  ( ! [X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X19,bool),X20))) | s(X19,X22) = s(X19,sK3(X22,sK3(X20,X21,fun(X19,bool)),X19)) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(fun(X19,bool),bool),X21)))) )),
  inference(superposition,[],[f356,f356])).
fof(f866,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f852,f120])).
fof(f852,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f844,f181])).
fof(f949,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X84,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X84,bool),X85),X86))))) | s(X84,X87) = s(X84,sK3(X87,happ(s(fun('type.pair.prod'(fun(X84,bool),X85),fun(X84,bool)),'const.pair.FST_0'),s('type.pair.prod'(fun(X84,bool),X85),X86)),X84))) )),
  inference(superposition,[],[f356,f151])).
fof(f146,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),sK4(X0)))))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),sK4(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f71])).
fof(f71,plain,(
  ! [X0] : ? [X1] : p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),X1))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ? [X32] : p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X6),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X6),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X6),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X6),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X6),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X6),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X6),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X6),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),X32))))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_TY_DEF')).
fof(f1062,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.closSem.ref'(X23),'const.closSem.ValueArray_1'(s('type.list.list'(X23),X24))) != s('type.closSem.ref'(X23),'const.closSem.ValueArray_1'(s('type.list.list'(X23),X26))) | s('type.list.list'(X23),X26) = s('type.list.list'(X23),sK3(X24,X25,'type.list.list'(X23))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun('type.list.list'(X23),bool),X25)))) )),
  inference(superposition,[],[f141,f356])).
fof(f1061,plain,(
  ( ! [X21,X19,X22,X20,X18] : (s('type.closSem.ref'(X18),'const.closSem.ValueArray_1'(s('type.list.list'(X18),X21))) != s('type.closSem.ref'(X18),'const.closSem.ValueArray_1'(s('type.list.list'(X18),X22))) | s('type.list.list'(X18),X22) = s('type.list.list'(X18),'const.pair.SND_1'(s('type.pair.prod'(X19,'type.list.list'(X18)),'const.pair.,_2'(s(X19,X20),s('type.list.list'(X18),X21)))))) )),
  inference(superposition,[],[f141,f155])).
fof(f1060,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.closSem.ref'(X13),'const.closSem.ValueArray_1'(s('type.list.list'(X13),X15))) != s('type.closSem.ref'(X13),'const.closSem.ValueArray_1'(s('type.list.list'(X13),X17))) | s('type.list.list'(X13),X17) = s('type.list.list'(X13),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'(X13),X14),'const.pair.,_2'(s('type.list.list'(X13),X15),s(X14,X16)))))) )),
  inference(superposition,[],[f141,f153])).
fof(f1059,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.closSem.ref'(X9),'const.closSem.ValueArray_1'(s('type.list.list'(X9),X10))) != s('type.closSem.ref'(X9),'const.closSem.ValueArray_1'(s('type.list.list'(X9),X12))) | s('type.list.list'(X9),X12) = s('type.list.list'(X9),'const.ind_type.FCONS_3'(s('type.list.list'(X9),X10),s(fun('type.num.num','type.list.list'(X9)),X11),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f141,f135])).
fof(f1058,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.closSem.ref'(X5),'const.closSem.ValueArray_1'(s('type.list.list'(X5),X8))) != s('type.closSem.ref'(X5),'const.closSem.ValueArray_1'(s('type.list.list'(X5),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'(X5),X6),X7))))) | s('type.list.list'(X5),X8) = s('type.list.list'(X5),happ(s(fun('type.pair.prod'('type.list.list'(X5),X6),'type.list.list'(X5)),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'(X5),X6),X7)))) )),
  inference(superposition,[],[f141,f151])).
fof(f1057,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) != s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X4) = s('type.list.list'(X0),happ(s(fun(X1,'type.list.list'(X0)),'_dst_x0_1'(s('type.list.list'(X0),X2))),s(X1,X3)))) )),
  inference(superposition,[],[f141,f154])).
fof(f1010,plain,(
  ( ! [X21,X20] : (s(bool,X21) != s(bool,'|dollar|exists_1'(s(fun(X20,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f985,f120])).
fof(f985,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s(bool,X21) != s(bool,'|dollar|exists_1'(s(fun(X20,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f183,f883])).
fof(f965,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,'|dollar|exists_1'(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f883,f181])).
fof(f931,plain,(
  ( ! [X35,X34] : (~p(s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X34),sK3(X35,'const.pair.FST_0','type.pair.prod'(bool,X34)))))) | p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X34),bool),'const.pair.FST_0'))))) )),
  inference(superposition,[],[f140,f151])).
fof(f850,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK3(X2,X1,X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f839,f120])).
fof(f839,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X1)))) | s(bool,X3) = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK3(X2,X1,X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f140,f181])).
fof(f837,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'F_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X13)))) | s(bool,'T_0') = s(bool,sK3(X12,X13,bool))) )),
  inference(superposition,[],[f140,f122])).
fof(f835,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,X8)))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7)))) | s(bool,'T_0') = s(bool,sK3(X6,X7,bool)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f140,f181])).
fof(f833,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) | p(s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1)))) | s(bool,X2) = s(bool,sK3(X0,X1,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f140,f181])).
fof(f832,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,happ(s(fun(X19,bool),X20),s(X19,sK3(X22,sK3(X20,X21,fun(X19,bool)),X19))))) | p(s(bool,'|dollar|exists_1'(s(fun(X19,bool),sK3(X20,X21,fun(X19,bool)))))) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(fun(X19,bool),bool),X21)))) )),
  inference(superposition,[],[f140,f356])).
fof(f848,plain,(
  ( ! [X14,X17,X15,X18,X16] : (p(s(bool,'|dollar|exists_1'(s(fun(X14,bool),X17)))) | ~p(s(bool,happ(s(fun(X14,bool),X17),s(X14,sK3(X18,'const.pair.SND_1'(s('type.pair.prod'(X15,fun(X14,bool)),'const.pair.,_2'(s(X15,X16),s(fun(X14,bool),X17)))),X14)))))) )),
  inference(forward_demodulation,[],[f831,f155])).
fof(f831,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,happ(s(fun(X14,bool),X17),s(X14,sK3(X18,'const.pair.SND_1'(s('type.pair.prod'(X15,fun(X14,bool)),'const.pair.,_2'(s(X15,X16),s(fun(X14,bool),X17)))),X14))))) | p(s(bool,'|dollar|exists_1'(s(fun(X14,bool),'const.pair.SND_1'(s('type.pair.prod'(X15,fun(X14,bool)),'const.pair.,_2'(s(X15,X16),s(fun(X14,bool),X17))))))))) )),
  inference(superposition,[],[f140,f155])).
fof(f847,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,'|dollar|exists_1'(s(fun(X9,bool),X11)))) | ~p(s(bool,happ(s(fun(X9,bool),X11),s(X9,sK3(X13,'const.pair.FST_1'(s('type.pair.prod'(fun(X9,bool),X10),'const.pair.,_2'(s(fun(X9,bool),X11),s(X10,X12)))),X9)))))) )),
  inference(forward_demodulation,[],[f830,f153])).
fof(f830,plain,(
  ( ! [X12,X10,X13,X11,X9] : (~p(s(bool,happ(s(fun(X9,bool),X11),s(X9,sK3(X13,'const.pair.FST_1'(s('type.pair.prod'(fun(X9,bool),X10),'const.pair.,_2'(s(fun(X9,bool),X11),s(X10,X12)))),X9))))) | p(s(bool,'|dollar|exists_1'(s(fun(X9,bool),'const.pair.FST_1'(s('type.pair.prod'(fun(X9,bool),X10),'const.pair.,_2'(s(fun(X9,bool),X11),s(X10,X12))))))))) )),
  inference(superposition,[],[f140,f153])).
fof(f846,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'|dollar|exists_1'(s(fun(X5,bool),X6)))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK3(X8,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.|48|_0')),X5)))))) )),
  inference(forward_demodulation,[],[f829,f135])).
fof(f829,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK3(X8,'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.|48|_0')),X5))))) | p(s(bool,'|dollar|exists_1'(s(fun(X5,bool),'const.ind_type.FCONS_3'(s(fun(X5,bool),X6),s(fun('type.num.num',fun(X5,bool)),X7),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f140,f135])).
fof(f845,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK3(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(forward_demodulation,[],[f828,f154])).
fof(f828,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK3(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,'|dollar|exists_1'(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))))))) )),
  inference(superposition,[],[f140,f154])).
fof(f827,plain,(
  ( ! [X45,X43,X46,X44] : (s(bool,X45) != s(bool,'|dollar|exists_1'(s(fun(X43,bool),X44))) | s(bool,'T_0') = s(bool,X45) | s(X43,X46) = s(X43,sK3(X46,X44,X43))) )),
  inference(subsumption_resolution,[],[f808,f120])).
fof(f808,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | s(bool,X45) != s(bool,'|dollar|exists_1'(s(fun(X43,bool),X44))) | s(bool,'T_0') = s(bool,X45) | s(X43,X46) = s(X43,sK3(X46,X44,X43))) )),
  inference(superposition,[],[f183,f356])).
fof(f764,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') = s(bool,X12) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X13))) | s(bool,'T_0') = s(bool,sK3(X12,X13,bool))) )),
  inference(superposition,[],[f356,f122])).
fof(f762,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) = s(bool,X8) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,sK3(X6,X7,bool)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f356,f181])).
fof(f760,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(bool,bool),X1))) | s(bool,X2) = s(bool,sK3(X0,X1,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f356,f181])).
fof(f753,plain,(
  ( ! [X21,X19,X20] : (s(bool,X19) != s(bool,X20) | s(bool,'T_0') = s(bool,X20) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f538,f120])).
fof(f538,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | s(bool,X19) != s(bool,X20) | s(bool,'T_0') = s(bool,X20) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f183,f181])).
fof(f752,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f537,f120])).
fof(f537,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f150,f181])).
fof(f445,plain,(
  ( ! [X28,X26,X27,X25] : (s(bool,'T_0') = s(bool,X27) | s(bool,X28) = s(bool,'const.pair.SND_1'(s('type.pair.prod'(X25,bool),'const.pair.,_2'(s(X25,X26),s(bool,X27))))) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f181,f155])).
fof(f444,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,'T_0') = s(bool,X22) | s(bool,X24) = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X21),'const.pair.,_2'(s(bool,X22),s(X21,X23))))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f181,f153])).
fof(f443,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,X18) | s(bool,X20) = s(bool,'const.ind_type.FCONS_3'(s(bool,X18),s(fun('type.num.num',bool),X19),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f181,f135])).
fof(f442,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,'T_0') = s(bool,X15) | s(bool,X17) = s(bool,happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,X15))),s(X14,X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f181,f154])).
fof(f432,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f181,f181])).
fof(f419,plain,(
  ( ! [X33,X31,X34,X32] : (s(bool,X33) = s(bool,X34) | s(bool,'T_0') = s(bool,X34) | s(bool,'T_0') = s(bool,'const.pair.SND_1'(s('type.pair.prod'(X31,bool),'const.pair.,_2'(s(X31,X32),s(bool,X33)))))) )),
  inference(superposition,[],[f181,f155])).
fof(f418,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X27),'const.pair.,_2'(s(bool,X28),s(X27,X29)))))) )),
  inference(superposition,[],[f181,f153])).
fof(f417,plain,(
  ( ! [X26,X24,X25] : (s(bool,X24) = s(bool,X26) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'const.ind_type.FCONS_3'(s(bool,X24),s(fun('type.num.num',bool),X25),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f181,f135])).
fof(f416,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,X21) = s(bool,X23) | s(bool,'T_0') = s(bool,X23) | s(bool,'T_0') = s(bool,happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X21))),s(X20,X22)))) )),
  inference(superposition,[],[f181,f154])).
fof(f327,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.pair.SND_1'(s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X1),s(bool,X2))))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f155,f122])).
fof(f289,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f154,f122])).
fof(f255,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.pair.FST_1'(s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,X1),s(X0,X2))))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f153,f122])).
fof(f210,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f207,f121])).
fof(f207,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f147,f122])).
fof(f183,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f127,f122])).
fof(f181,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f122,f122])).
fof(f172,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f121,f123])).
fof(f164,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),X6),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8))))) = s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x01x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8)))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),X6),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8))))) = s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x01x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8)))),
  inference(flattening,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3,X4] : ! [X5,X6,X7,X8] : s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),X6),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8))))) = s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x01x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X13,X33,X14,X35,X15] : ! [X16,X17,X34,X18] : s(fun(X14,X13),'_dst_x0x1x1_3'(s(fun(X33,fun(X35,X13)),X16),s(fun(X14,X33),X17),s(fun(X14,X35),happ(s(fun(X15,fun(X14,X35)),X34),s(X15,X18))))) = s(fun(X14,X13),happ(s(fun(X15,fun(X14,X13)),'_dst_x00x01x11_3'(s(fun(X33,fun(X35,X13)),X16),s(fun(X14,X33),X17),s(fun(X15,fun(X14,X35)),X34))),s(X15,X18)))),
  file('thm.closSem.ref_|49||49||split|1','_dst_x00x01x11_ax')).
fof(f163,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X2,X0)),X4),s(X1,X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,X5))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X2,X0)),X4),s(X1,X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,X5))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X2,X0)),X4),s(X1,X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,X5))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X13,X14,X33,X15] : ! [X16,X17,X34,X18] : s(X13,happ(s(fun(X15,X13),'_dst_x0x0x1_3'(s(fun(X14,fun(X33,X13)),X16),s(X14,X17),s(fun(X15,X33),X34))),s(X15,X18))) = s(X13,happ(s(fun(X33,X13),happ(s(fun(X14,fun(X33,X13)),X16),s(X14,X17))),s(X33,happ(s(fun(X15,X33),X34),s(X15,X18)))))),
  file('thm.closSem.ref_|49||49||split|1','_dst_x0x0x1_ax')).
fof(f162,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X13,X14,X15,X33] : ! [X16,X17,X34,X18] : s(X13,happ(s(fun(X15,X13),'_dst_x0x1x0_3'(s(fun(X14,fun(X33,X13)),X16),s(fun(X15,X14),X17),s(X33,X34))),s(X15,X18))) = s(X13,happ(s(fun(X33,X13),happ(s(fun(X14,fun(X33,X13)),X16),s(X14,happ(s(fun(X15,X14),X17),s(X15,X18))))),s(X33,X34)))),
  file('thm.closSem.ref_|49||49||split|1','_dst_x0x1x0_ax')).
fof(f161,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X13,X14,X15] : ! [X16,X17,X18] : s(X13,happ(s(fun(X14,X13),X16),s(X14,happ(s(fun(X15,X14),X17),s(X15,X18))))) = s(X13,happ(s(fun(X15,X13),'_dst_x0x1_2'(s(fun(X14,X13),X16),s(fun(X15,X14),X17))),s(X15,X18)))),
  file('thm.closSem.ref_|49||49||split|1','_dst_x0x1_ax')).
fof(f160,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),X2),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4))) = s(X1,happ(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1),happ(s(fun(fun('type.list.list'(X0),X1),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1)),happ(s(fun('type.closSem.ref'(X0),fun(fun('type.list.list'(X0),X1),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1))),'const.closSem.ref_CASE_0'),s('type.closSem.ref'(X0),X2))),s(fun('type.list.list'(X0),X1),X3))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3,X4] : s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),X2),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4))) = s(X1,happ(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1),happ(s(fun(fun('type.list.list'(X0),X1),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1)),happ(s(fun('type.closSem.ref'(X0),fun(fun('type.list.list'(X0),X1),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1))),'const.closSem.ref_CASE_0'),s('type.closSem.ref'(X0),X2))),s(fun('type.list.list'(X0),X1),X3))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))),
  inference(flattening,[],[f91])).
fof(f91,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),X2),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4))) = s(X1,happ(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1),happ(s(fun(fun('type.list.list'(X0),X1),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1)),happ(s(fun('type.closSem.ref'(X0),fun(fun('type.list.list'(X0),X1),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X1))),'const.closSem.ref_CASE_0'),s('type.closSem.ref'(X0),X2))),s(fun('type.list.list'(X0),X1),X3))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X11] : ! [X9,X25,X26] : s(X11,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X6),X9),s(fun('type.list.list'(X6),X11),X25),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X26))) = s(X11,happ(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X11),happ(s(fun(fun('type.list.list'(X6),X11),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X11)),happ(s(fun('type.closSem.ref'(X6),fun(fun('type.list.list'(X6),X11),fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X11))),'const.closSem.ref_CASE_0'),s('type.closSem.ref'(X6),X9))),s(fun('type.list.list'(X6),X11),X25))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X26)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_0_3_const.closSem.ref_CASE')).
fof(f158,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X11,X6] : ! [X7,X10,X12] : s(X11,happ(s(fun('type.list.list'(X6),X11),X10),s('type.list.list'(X6),X7))) = s(X11,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X7))),s(fun('type.list.list'(X6),X11),X10),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),X12)))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_case_def|split|0')).
fof(f157,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.closSem.ref_|49||49||split|1',aHL_EXT)).
fof(f156,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,happ(s(fun(fun(X1,X0),X0),'_dstsel_0_x0_1'(s(X1,X2))),s(fun(X1,X0),X3)))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2,X3] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,happ(s(fun(fun(X1,X0),X0),'_dstsel_0_x0_1'(s(X1,X2))),s(fun(X1,X0),X3)))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,happ(s(fun(fun(X1,X0),X0),'_dstsel_0_x0_1'(s(X1,X2))),s(fun(X1,X0),X3)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X13,X15] : ! [X17,X18] : s(X13,happ(s(fun(X15,X13),X18),s(X15,X17))) = s(X13,happ(s(fun(fun(X15,X13),X13),'_dstsel_0_x0_1'(s(X15,X17))),s(fun(X15,X13),X18)))),
  file('thm.closSem.ref_|49||49||split|1','_dstsel_0_x0_ax')).
fof(f155,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X11] : ! [X27,X28] : s(X11,X28) = s(X11,'const.pair.SND_1'(s('type.pair.prod'(X6,X11),'const.pair.,_2'(s(X6,X27),s(X11,X28)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.pair.SND')).
fof(f153,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11,X6] : ! [X27,X28] : s(X6,X27) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X11),'const.pair.,_2'(s(X6,X27),s(X11,X28)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.pair.FST')).
fof(f152,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),sK5(X2,X1,X0)),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),sK5(X2,X1,X0)),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))) )),
  inference(cnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),sK5(X2,X1,X0)),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),sK5(X2,X1,X0)),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : ? [X3] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),X3),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),X3),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ! [X2] : ? [X3] : ! [X4,X5,X6] : s(X0,happ(s(fun('type.ind_type.recspace'(X1),X0),X3),s('type.ind_type.recspace'(X1),'const.ind_type.CONSTR_3'(s('type.num.num',X4),s(X1,X5),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))))) = s(X0,happ(s(fun(fun('type.num.num',X0),X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)),happ(s(fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0))),happ(s(fun('type.num.num',fun(X1,fun(fun('type.num.num','type.ind_type.recspace'(X1)),fun(fun('type.num.num',X0),X0)))),X2),s('type.num.num',X4))),s(X1,X5))),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6))),s(fun('type.num.num',X0),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X1),X0),X3),s(fun('type.num.num','type.ind_type.recspace'(X1)),X6)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11,X6] : ! [X21] : ? [X10] : ! [X22,X23,X24] : s(X11,happ(s(fun('type.ind_type.recspace'(X6),X11),X10),s('type.ind_type.recspace'(X6),'const.ind_type.CONSTR_3'(s('type.num.num',X22),s(X6,X23),s(fun('type.num.num','type.ind_type.recspace'(X6)),X24))))) = s(X11,happ(s(fun(fun('type.num.num',X11),X11),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X11),X11)),happ(s(fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X11),X11))),happ(s(fun('type.num.num',fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),fun(fun('type.num.num',X11),X11)))),X21),s('type.num.num',X22))),s(X6,X23))),s(fun('type.num.num','type.ind_type.recspace'(X6)),X24))),s(fun('type.num.num',X11),'_dst_x0x1_2'(s(fun('type.ind_type.recspace'(X6),X11),X10),s(fun('type.num.num','type.ind_type.recspace'(X6)),X24)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.ind_type.CONSTR_REC')).
fof(f151,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))) = s(X0,happ(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.pair.prod'(X0,X1),X2)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))) = s(X0,happ(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.pair.prod'(X0,X1),X2)))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ! [X2] : s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))) = s(X0,happ(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.pair.prod'(X0,X1),X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X11] : ! [X9] : s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X11),X9))) = s(X6,happ(s(fun('type.pair.prod'(X6,X11),X6),'const.pair.FST_0'),s('type.pair.prod'(X6,X11),X9)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_0_1_const.pair.FST')).
fof(f147,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f104])).
fof(f145,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X9,X25,X26] : s(X6,'const.ind_type.FCONS_3'(s(X6,X9),s(fun('type.num.num',X6),X25),s('type.num.num',X26))) = s(X6,happ(s(fun('type.num.num',X6),happ(s(fun(fun('type.num.num',X6),fun('type.num.num',X6)),happ(s(fun(X6,fun(fun('type.num.num',X6),fun('type.num.num',X6))),'const.ind_type.FCONS_0'),s(X6,X9))),s(fun('type.num.num',X6),X25))),s('type.num.num',X26)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_0_3_const.ind_type.FCONS')).
fof(f144,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2,X3] : s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.ind_type.recspace'(X0),'const.ind_type.CONSTR_3'(s('type.num.num',X1),s(X0,X2),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3))) = s('type.ind_type.recspace'(X0),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0)),happ(s(fun(X0,fun(fun('type.num.num','type.ind_type.recspace'(X0)),'type.ind_type.recspace'(X0))),'const.ind_type.CONSTR_1'(s('type.num.num',X1))),s(X0,X2))),s(fun('type.num.num','type.ind_type.recspace'(X0)),X3)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X9,X25,X26] : s('type.ind_type.recspace'(X6),'const.ind_type.CONSTR_3'(s('type.num.num',X9),s(X6,X25),s(fun('type.num.num','type.ind_type.recspace'(X6)),X26))) = s('type.ind_type.recspace'(X6),happ(s(fun(fun('type.num.num','type.ind_type.recspace'(X6)),'type.ind_type.recspace'(X6)),happ(s(fun(X6,fun(fun('type.num.num','type.ind_type.recspace'(X6)),'type.ind_type.recspace'(X6))),'const.ind_type.CONSTR_1'(s('type.num.num',X9))),s(X6,X25))),s(fun('type.num.num','type.ind_type.recspace'(X6)),X26)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_1_3_const.ind_type.CONSTR')).
fof(f143,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X7,X10,X29] : s(X6,happ(s(fun('type.num.num',X6),X10),s('type.num.num',X29))) = s(X6,'const.ind_type.FCONS_3'(s(X6,X7),s(fun('type.num.num',X6),X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X29)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.ind_type.FCONS|split|1')).
fof(f142,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X1))) = s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f114])).
fof(f138,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.num.num'),'_dst_x0_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.num.num'),'_dst_x0_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.num.num'),'_dst_x0_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X10,X7] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X6,'type.num.num'),X10),s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),'type.num.num'),'_dst_x0_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_size_def|split|1')).
fof(f137,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun(X0,'type.num.num'),X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun(X0,'type.num.num'),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun(X0,'type.num.num'),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X10,X7] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X6,'type.num.num'),X10),s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s(fun(X6,'type.num.num'),X10),s('type.list.list'(X6),X7)))))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_size_def|split|0')).
fof(f136,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),X2))) = s('type.num.num',happ(s(fun('type.closSem.ref'(X0),'type.num.num'),'const.closSem.ref_size_1'(s(fun(X0,'type.num.num'),X1))),s('type.closSem.ref'(X0),X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),X2))) = s('type.num.num',happ(s(fun('type.closSem.ref'(X0),'type.num.num'),'const.closSem.ref_size_1'(s(fun(X0,'type.num.num'),X1))),s('type.closSem.ref'(X0),X2)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X0,'type.num.num'),X1),s('type.closSem.ref'(X0),X2))) = s('type.num.num',happ(s(fun('type.closSem.ref'(X0),'type.num.num'),'const.closSem.ref_size_1'(s(fun(X0,'type.num.num'),X1))),s('type.closSem.ref'(X0),X2)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X9,X25] : s('type.num.num','const.closSem.ref_size_2'(s(fun(X6,'type.num.num'),X9),s('type.closSem.ref'(X6),X25))) = s('type.num.num',happ(s(fun('type.closSem.ref'(X6),'type.num.num'),'const.closSem.ref_size_1'(s(fun(X6,'type.num.num'),X9))),s('type.closSem.ref'(X6),X25)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_1_2_const.closSem.ref_size')).
fof(f132,plain,(
  ( ! [X0,X1] : (s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'(X0)),'const.closSem.ByteArray_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'(X0)),'const.closSem.ByteArray_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'(X0)),'const.closSem.ByteArray_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9] : s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) = s('type.closSem.ref'(X6),happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.closSem.ref'(X6)),'const.closSem.ByteArray_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))),
  file('thm.closSem.ref_|49||49||split|1','ARITY_0_1_const.closSem.ByteArray')).
fof(f128,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f110])).
fof(f123,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f108])).
fof(f1869,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl10),
  inference(backward_demodulation,[],[f1867,f127])).
fof(f1936,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1868,f120])).
fof(f1868,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(backward_demodulation,[],[f1867,f121])).
fof(f1853,plain,(
  ( ! [X10,X11] : (s(bool,'F_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X10,bool),'_dst_x0_1'(s(bool,X11)))))) ) | $spl8),
  inference(cnf_transformation,[],[f1853_D])).
fof(f1853_D,plain,(
  ( ! [X10,X11] : (s(bool,'F_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X10,bool),'_dst_x0_1'(s(bool,X11)))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1854,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) | $spl10),
  inference(cnf_transformation,[],[f1854_D])).
fof(f1854_D,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1855,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X15)) | s(bool,'F_0') = s(bool,X14) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X13,bool),'_dst_x0_1'(s(bool,X14)))))) )),
  inference(subsumption_resolution,[],[f1836,f123])).
fof(f1836,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X15)) | s(bool,'F_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X13,bool),'_dst_x0_1'(s(bool,X14)))))) )),
  inference(superposition,[],[f1740,f181])).
fof(f1852,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X12)) | s(bool,'F_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X10,bool),'_dst_x0_1'(s(bool,X11)))))) )),
  inference(subsumption_resolution,[],[f1835,f123])).
fof(f1835,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X12)) | s(bool,'F_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'|dollar|exists_1'(s(fun(X10,bool),'_dst_x0_1'(s(bool,X11))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1740,f181])).
fof(f1211,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1129,f121])).
fof(f1129,plain,(
  p(s(bool,'F_0')) | $spl6),
  inference(unit_resulting_resolution,[],[f172,f1084,f147])).
fof(f1210,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1135,f121])).
fof(f1135,plain,(
  p(s(bool,'F_0')) | $spl6),
  inference(unit_resulting_resolution,[],[f172,f1084,f147])).
fof(f1209,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1205,f121])).
fof(f1205,plain,(
  p(s(bool,'F_0')) | $spl6),
  inference(backward_demodulation,[],[f1137,f146])).
fof(f1137,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(unit_resulting_resolution,[],[f1084,f128])).
fof(f1208,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1207,f1139])).
fof(f1139,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0)) ) | $spl6),
  inference(unit_resulting_resolution,[],[f1084,f123])).
fof(f1207,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(subsumption_resolution,[],[f1206,f121])).
fof(f1206,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,'F_0'))) ) | $spl6),
  inference(condensation,[],[f1202])).
fof(f1202,plain,(
  ( ! [X2,X0] : (p(s(bool,'F_0')) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl6),
  inference(backward_demodulation,[],[f1137,f866])).
fof(f1145,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f120,f1084,f844])).
fof(f1140,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f883,f1084,f123])).
fof(f1138,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f172,f1084,f128])).
fof(f1136,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f121,f172,f1084,f147])).
fof(f1134,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f1084,f172,f1084,f147])).
fof(f1130,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f121,f172,f1084,f147])).
fof(f1128,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f1084,f172,f1084,f147])).
fof(f1124,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f172,f172,f1084,f210])).
fof(f1120,plain,(
  $false | $spl6),
  inference(unit_resulting_resolution,[],[f120,f1084])).
fof(f1083,plain,(
  ( ! [X14] : (p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X14),bool),'const.pair.FST_0'))))) ) | $spl4),
  inference(cnf_transformation,[],[f1083_D])).
fof(f1083_D,plain,(
  ( ! [X14] : (p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X14),bool),'const.pair.FST_0'))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1081,plain,(
  ( ! [X14,X15] : (~p(s(bool,X15)) | p(s(bool,'|dollar|exists_1'(s(fun('type.pair.prod'(bool,X14),bool),'const.pair.FST_0'))))) )),
  inference(superposition,[],[f1044,f153])).
fof(f171,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f170])).
fof(f170,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) != s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f167,f168])).
fof(f166,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | $spl0),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f168,plain,(
  s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2) | $spl2),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f118,plain,(
  s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2) | s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2)))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  (s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2)) & (s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) != s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f106])).
fof(f106,plain,(
  ? [X0,X1,X2] : ((s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)) & (s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) != s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(nnf_transformation,[],[f101])).
fof(f101,plain,(
  ? [X0,X1,X2] : (s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) <~> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : (s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))) = s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))) = s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8))),
  file('thm.closSem.ref_|49||49||split|1','thm.closSem.ref_|49||49||split|1')).
fof(f167,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) != s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) | $spl1),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) != s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f169,plain,(
  s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2) | $spl3),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f119,plain,(
  s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2) | s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) != s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2)))),
  inference(cnf_transformation,[],[f107])).
% SZS output end Proof for thm.closSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 81
% Passive clauses: 816
% Generated clauses: 6295
% Final active clauses: 64
% Final passive clauses: 617
% Input formulas: 36
% Initial clauses: 47
% 
% Duplicate literals: 242
% Trivial inequalities: 31
% Fw subsumption resolutions: 233
% Fw demodulations: 531
% Bw demodulations: 99
% Condensations: 445
% Global subsumptions: 2
% 
% Simple tautologies: 66
% Equational tautologies: 63
% Forward subsumptions: 3819
% Fw demodulations to eq. taut.: 22
% Bw demodulations to eq. taut.: 28
% 
% Unit resulting resolution: 208
% Factoring: 1
% Forward superposition: 2206
% Backward superposition: 1928
% Self superposition: 119
% Equality factoring: 54
% Equality resolution: 8
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 852
% SAT solver unit clauses: 123
% SAT solver binary clauses: 341
% 
% Sat splits: 7
% Sat splitting refutations: 18
% 
% Memory used [KB]: 11385
% Time elapsed: 0.350 s
% ------------------------------
% ------------------------------
% Success in time 1.721 s
