Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pat_to_closProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pat_to_closProof
% SZS output start Proof for thm.pat_to_closProof
fof(f14435,plain,(
  $false),
  inference(equality_resolution,[],[f3105])).
fof(f3105,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.patSem.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK0),X0),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X1))) != s('type.pair.prod'('type.patSem.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK0),sK5(sK2,sK3,sK1,sK0)),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),sK6(sK2,sK3,sK1,sK0))))) )),
  inference(superposition,[],[f71,f90])).
fof(f90,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),sK5(X3,X2,X1,X0)),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),sK6(X3,X2,X1,X0)))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X3),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X2),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),sK5(X3,X2,X1,X0)),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),sK6(X3,X2,X1,X0)))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X3),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X2),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X3),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X2),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X3),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X2),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X16,X17,X18] : ? [X14,X15] : s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X6),X14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X15))) = s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X18),s('type.patSem.state'(X6),X16),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X17),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|5_prove_ltb','thm.exh_to_patProof.exh_to_patProof_|49|5|48|_prove_ltb')).
fof(f71,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.patSem.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) != s('type.pair.prod'('type.patSem.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),sK2),s('type.patSem.state'(sK0),sK1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK3),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.patSem.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) != s('type.pair.prod'('type.patSem.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),sK2),s('type.patSem.state'(sK0),sK1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK3),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) != s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X2),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X3),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X2),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X3),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X5))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X2),s('type.patSem.state'(X0),X1),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X3),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X11))) = s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X8),s('type.patSem.state'(X6),X7),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X9),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),X11))) = s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X8),s('type.patSem.state'(X6),X7),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X9),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|5_prove_ltb','thm.pat_to_closProof.pat_to_closProof_|49|5_prove_ltb')).
% SZS output end Proof for thm.pat_to_closProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 137
% Passive clauses: 1283
% Generated clauses: 14138
% Final active clauses: 135
% Final passive clauses: 1025
% Input formulas: 21
% Initial clauses: 29
% 
% Duplicate literals: 595
% Trivial inequalities: 651
% Fw subsumption resolutions: 1604
% Fw demodulations: 2463
% Bw demodulations: 2
% 
% Simple tautologies: 217
% Equational tautologies: 25
% Forward subsumptions: 6672
% 
% Binary resolution: 67
% Forward superposition: 4620
% Backward superposition: 3847
% Self superposition: 101
% Equality factoring: 56
% Equality resolution: 26
% 
% Split clauses: 292
% Split components: 595
% SAT solver clauses: 748
% SAT solver unit clauses: 11
% SAT solver binary clauses: 206
% 
% Sat splits: 292
% 
% TWLsolver clauses: 748
% TWLsolver calls for satisfiability: 102
% 
% Memory used [KB]: 6268
% Time elapsed: 0.275 s
% ------------------------------
% ------------------------------
% Success in time 0.301 s
