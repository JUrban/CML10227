Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.conSem
% (24859)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 177
% Passive clauses: 3587
% Generated clauses: 19550
% Final active clauses: 143
% Final passive clauses: 3167
% Input formulas: 68
% Initial clauses: 100
% 
% Duplicate literals: 545
% Trivial inequalities: 407
% Fw subsumption resolutions: 1390
% Fw demodulations: 2709
% Bw demodulations: 32
% 
% Simple tautologies: 278
% Equational tautologies: 45
% Forward subsumptions: 10339
% 
% Binary resolution: 448
% Factoring: 1
% Forward superposition: 6860
% Backward superposition: 6903
% Self superposition: 188
% Equality factoring: 70
% Equality resolution: 35
% 
% Split clauses: 175
% Split components: 352
% SAT solver clauses: 485
% SAT solver unit clauses: 18
% SAT solver binary clauses: 122
% 
% Sat splits: 175
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 483
% TWLsolver calls for satisfiability: 172
% 
% Memory used [KB]: 20084
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.conSem
% (24883)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 154
% Passive clauses: 1386
% Generated clauses: 17491
% Final active clauses: 115
% Final passive clauses: 822
% Input formulas: 68
% Initial clauses: 100
% 
% Duplicate literals: 541
% Trivial inequalities: 191
% Fw subsumption resolutions: 987
% Fw demodulations: 2142
% Bw demodulations: 419
% Condensations: 1009
% Global subsumptions: 4
% 
% Simple tautologies: 213
% Equational tautologies: 42
% Forward subsumptions: 8875
% Bw demodulations to eq. taut.: 29
% 
% Binary resolution: 401
% Factoring: 1
% Forward superposition: 5383
% Backward superposition: 4665
% Self superposition: 143
% Equality factoring: 66
% Equality resolution: 22
% 
% Split clauses: 93
% Split components: 186
% SAT solver clauses: 1884
% SAT solver unit clauses: 147
% SAT solver binary clauses: 48
% SAT solver learnt clauses: 8
% 
% Sat splits: 93
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1868
% TWLsolver calls for satisfiability: 396
% 
% Memory used [KB]: 17142
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.conSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.conSem
% SZS output start Proof for thm.conSem
fof(f62013,plain,(
  $false),
  inference(subsumption_resolution,[],[f62012,f314])).
fof(f314,plain,(
  s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1))) != s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4)))),
  inference(backward_demodulation,[],[f211,f213])).
fof(f213,plain,(
  s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4))) != s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1)))),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  s('type.conSem.environment',sK2) = s('type.conSem.environment',sK3) & ! [X5,X6] : (s('type.conSem.environment',sK3) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)))) & s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4))) != s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f169])).
fof(f169,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.conSem.environment',X2) = s('type.conSem.environment',X3) & ! [X5,X6] : (s('type.conSem.environment',X3) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)))) & s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4))) != s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1))))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.conSem.environment',X2) = s('type.conSem.environment',X3) & ! [X5,X6] : (s('type.conSem.environment',X3) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))))) & s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4))) != s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2,X3,X4] : ((s('type.conSem.environment',X2) = s('type.conSem.environment',X3) & ! [X5,X6] : (s('type.conSem.environment',X3) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) => s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))))) => s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4))) = s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((s('type.conSem.environment',X2) = s('type.conSem.environment',X3) & ! [X5,X6] : (s('type.conSem.environment',X3) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) => s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))))) => s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X4))) = s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((s('type.conSem.environment',X8) = s('type.conSem.environment',X9) & ! [X11,X12] : (s('type.conSem.environment',X9) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))) => s(X6,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))) = s(X6,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))))) => s(X6,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X8),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X10))) = s(X6,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X9),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((s('type.conSem.environment',X8) = s('type.conSem.environment',X9) & ! [X11,X12] : (s('type.conSem.environment',X9) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))) => s(X6,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))) = s(X6,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))))) => s(X6,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X8),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X10))) = s(X6,'const.conSem.environment_CASE_2'(s('type.conSem.environment',X9),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X7))))),
  file('thm.conSem.environment_case_cong','thm.conSem.environment_case_cong')).
fof(f211,plain,(
  s('type.conSem.environment',sK2) = s('type.conSem.environment',sK3)),
  inference(cnf_transformation,[],[f175])).
fof(f62012,plain,(
  s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1))) = s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment',sK2),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4)))),
  inference(forward_demodulation,[],[f61925,f14474])).
fof(f14474,plain,(
  ( ! [X0] : (s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(X0))))) )),
  inference(backward_demodulation,[],[f14470,f11344])).
fof(f11344,plain,(
  ( ! [X0] : (s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0)))))) )),
  inference(backward_demodulation,[],[f11340,f7122])).
fof(f7122,plain,(
  ( ! [X0] : (s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0)))))) )),
  inference(unit_resulting_resolution,[],[f257,f258,f270])).
fof(f270,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) | s('type.conSem.environment',X0) = s('type.conSem.environment',X1) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))) )),
  inference(cnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0,X1] : ((s('type.conSem.environment',X0) != s('type.conSem.environment',X1) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))))) & (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) | s('type.conSem.environment',X0) = s('type.conSem.environment',X1)))),
  inference(flattening,[],[f193])).
fof(f193,plain,(
  ! [X0,X1] : ((s('type.conSem.environment',X0) != s('type.conSem.environment',X1) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))))) & ((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1)))) | s('type.conSem.environment',X0) = s('type.conSem.environment',X1)))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : (s('type.conSem.environment',X0) = s('type.conSem.environment',X1) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X49,X50] : (s('type.conSem.environment',X49) = s('type.conSem.environment',X50) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X49))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X50))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X49))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X50)))))),
  file('thm.conSem.environment_case_cong','thm.conSem.environment_component_equality')).
fof(f258,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X39,X10] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X39),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10)))))),
  file('thm.conSem.environment_case_cong','thm.conSem.environment_exh')).
fof(f257,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X39,X10] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X39) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X39),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10)))))),
  file('thm.conSem.environment_case_cong','thm.conSem.environment_v')).
fof(f11340,plain,(
  ( ! [X0] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(X0)) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0)))) )),
  inference(forward_demodulation,[],[f11295,f11108])).
fof(f11108,plain,(
  ( ! [X6,X5] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.conSem.environment',X6)))))) )),
  inference(superposition,[],[f261,f319])).
fof(f319,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f284,f280])).
fof(f280,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X29,X6] : ! [X17,X30] : s(X6,X17) = s(X6,'const.combin.K_2'(s(X6,X17),s(X29,X30)))),
  file('thm.conSem.environment_case_cong','thm.combin.K_THM')).
fof(f284,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X29] : ! [X26,X27] : s(X6,'const.combin.K_2'(s(X6,X26),s(X29,X27))) = s(X6,happ(s(fun(X29,X6),'const.combin.K_1'(s(X6,X26))),s(X29,X27)))),
  file('thm.conSem.environment_case_cong','ARITY_1_2_const.combin.K')).
fof(f261,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X10,X40] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X10),s('type.conSem.environment',X40))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X40)))))),
  file('thm.conSem.environment_case_cong','thm.conSem.conSem_53_prove_ltb')).
fof(f11295,plain,(
  ( ! [X0] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(X0)))),s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(X0)))),s('type.conSem.environment','const.bool.ARB_0')))))))) )),
  inference(unit_resulting_resolution,[],[f255,f268])).
fof(f268,plain,(
  ( ! [X0,X1] : (s('type.conSem.environment',X0) != s('type.conSem.environment',X1) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))) )),
  inference(cnf_transformation,[],[f194])).
fof(f255,plain,(
  ( ! [X0] : (s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(X0)))),s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(X0)))),s('type.conSem.environment','const.bool.ARB_0')))))) )),
  inference(cnf_transformation,[],[f192])).
fof(f192,plain,(
  ! [X0] : s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(X0)))),s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(X0)))),s('type.conSem.environment','const.bool.ARB_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7])],[f107])).
fof(f107,plain,(
  ! [X0] : ? [X1,X2] : s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2))),s('type.conSem.environment','const.bool.ARB_0')))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X40] : ? [X39,X10] : s('type.conSem.environment',X40) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X39))),s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10))),s('type.conSem.environment','const.bool.ARB_0')))))),
  file('thm.conSem.environment_case_cong','thm.conSem.conSem_66_prove_ltb')).
fof(f14470,plain,(
  ( ! [X0] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(X0)) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0)))) )),
  inference(backward_demodulation,[],[f14410,f11297])).
fof(f11297,plain,(
  ( ! [X0] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(X0)))),s('type.conSem.environment','const.bool.ARB_0')))))) )),
  inference(superposition,[],[f259,f255])).
fof(f259,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X10,X40] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X40))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X10),s('type.conSem.environment',X40)))))),
  file('thm.conSem.environment_case_cong','thm.conSem.conSem_52_prove_ltb')).
fof(f14410,plain,(
  ( ! [X6,X5] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5))),s('type.conSem.environment',X6)))))) )),
  inference(superposition,[],[f262,f319])).
fof(f262,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.conSem.environment',X1))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.conSem.environment',X1))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X10,X40] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X10),s('type.conSem.environment',X40))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X40)))))),
  file('thm.conSem.environment_case_cong','thm.conSem.conSem_54_prove_ltb')).
fof(f61925,plain,(
  s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(sK2)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(sK2)))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1))) = s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK6(sK2)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK7(sK2)))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4)))),
  inference(unit_resulting_resolution,[],[f14474,f316])).
fof(f316,plain,(
  ( ! [X6,X5] : (s('type.conSem.environment',sK2) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1))) = s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4)))) )),
  inference(forward_demodulation,[],[f315,f254])).
fof(f254,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X3))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2)))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X3))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2)))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X3))) = s(X0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0)),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11,X12,X10] : s(X6,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X10))) = s(X6,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X11))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X12)))),
  file('thm.conSem.environment_case_cong','thm.conSem.environment_case_def')).
fof(f315,plain,(
  ( ! [X6,X5] : (s(sK0,'const.conSem.environment_CASE_2'(s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4))) = s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s('type.conSem.environment',sK2) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)))) )),
  inference(backward_demodulation,[],[f254,f313])).
fof(f313,plain,(
  ( ! [X6,X5] : (s('type.conSem.environment',sK2) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)))) )),
  inference(backward_demodulation,[],[f211,f212])).
fof(f212,plain,(
  ( ! [X6,X5] : (s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) = s(sK0,happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK0)),sK4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))) | s('type.conSem.environment',sK3) != s('type.conSem.environment','const.conSem.recordtype|46|environment_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6)))) )),
  inference(cnf_transformation,[],[f175])).
% SZS output end Proof for thm.conSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 314
% Passive clauses: 5511
% Generated clauses: 64446
% Final active clauses: 189
% Final passive clauses: 2308
% Input formulas: 68
% Initial clauses: 100
% 
% Duplicate literals: 871
% Trivial inequalities: 235
% Fw subsumption resolutions: 2752
% Fw demodulations: 15024
% Bw demodulations: 2735
% Condensations: 1231
% Global subsumptions: 62
% 
% Simple tautologies: 347
% Equational tautologies: 250
% Forward subsumptions: 34661
% Fw demodulations to eq. taut.: 3170
% Bw demodulations to eq. taut.: 71
% 
% Unit resulting resolution: 7641
% Factoring: 1
% Forward superposition: 16707
% Backward superposition: 13987
% Self superposition: 231
% Equality factoring: 64
% Equality resolution: 45
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 5840
% SAT solver unit clauses: 1453
% SAT solver binary clauses: 3010
% 
% Sat splits: 12
% Sat splitting refutations: 241
% 
% Memory used [KB]: 60894
% Time elapsed: 3.543 s
% ------------------------------
% ------------------------------
% Success in time 4.88 s
