Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.typeSysProps
% (34561)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 101
% Passive clauses: 3548
% Generated clauses: 19120
% Final active clauses: 90
% Final passive clauses: 3268
% Input formulas: 21
% Initial clauses: 52
% 
% Duplicate literals: 802
% Trivial inequalities: 270
% Fw subsumption resolutions: 2548
% Fw demodulations: 2760
% Bw demodulations: 7
% 
% Simple tautologies: 278
% Equational tautologies: 47
% Forward subsumptions: 7866
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 210
% Factoring: 3
% Forward superposition: 6607
% Backward superposition: 5782
% Self superposition: 290
% Equality factoring: 129
% Equality resolution: 19
% 
% Split clauses: 482
% Split components: 967
% SAT solver clauses: 1155
% SAT solver unit clauses: 2
% SAT solver binary clauses: 71
% 
% Sat splits: 482
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1155
% TWLsolver calls for satisfiability: 130
% 
% Memory used [KB]: 14328
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.typeSysProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSysProps
% SZS output start Proof for thm.typeSysProps
fof(f7327,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7310,f79,f136,f82,f140,f83,f142,f167,f169,f78,f138,f85,f143,f170,f172,f80,f134,f240,f244,f81,f132,f211,f218,f117,f153,f474,f484,f122,f155])).
fof(f155,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X3))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X4),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))),s('type.list.list'('type.ast.t'),X3))),s('type.ast.t',X2)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2))))) ) | $spl20),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X3))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X4),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))),s('type.list.list'('type.ast.t'),X3))),s('type.ast.t',X2)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f122,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X4),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))),s('type.list.list'('type.ast.t'),X3))),s('type.ast.t',X2)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X3)))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X3))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2)))) | ! [X3,X4,X5] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X3))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X4),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))),s('type.list.list'('type.ast.t'),X3))),s('type.ast.t',X2))))))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2)))) | ! [X3,X4,X5] : ((s('type.num.num',X0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X3))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X3))))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X4),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))),s('type.list.list'('type.ast.t'),X3))),s('type.ast.t',X2))))))))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2)))) => ! [X3,X4,X5] : ((s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X3))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X3))))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X4),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4))),s('type.list.list'('type.ast.t'),X3))),s('type.ast.t',X2))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X12,X9,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X12),s('type.list.list'('type.list.list'('type.string.char')),X9))),s('type.ast.t',X8)))) => ! [X10,X13,X6] : ((s('type.num.num',X12) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X10))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X6),s('type.list.list'('type.list.list'('type.string.char')),X9))),s('type.list.list'('type.ast.t'),X10))))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X6))),s('type.list.list'('type.list.list'('type.string.char')),X9))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X13),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13))),s('type.list.list'('type.ast.t'),X10))),s('type.ast.t',X8))))))))),
  file('thm.typeSysProps.type_e_subst_lem3','thm.typeSysProps.typeSysProps_2|48|_prove_ltb')).
fof(f484,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X3),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))),s('type.list.list'('type.ast.t'),X2))),s('type.ast.t',X4)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X2)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X2))))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X4))))) ) | $spl126),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X3),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))),s('type.list.list'('type.ast.t'),X2))),s('type.ast.t',X4)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X2)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X2))))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X4))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f474,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X3),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3))),s('type.list.list'('type.ast.t'),X2))),s('type.ast.t',X4)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X2))))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X4))))) ) | $spl20),
  inference(equality_resolution,[],[f155])).
fof(f153,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1)) ) | $spl16),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f117,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X22,X23] : ((p(s(bool,X22)) => p(s(bool,X23))) => ((p(s(bool,X23)) => p(s(bool,X22))) => s(bool,X22) = s(bool,X23)))),
  file('thm.typeSysProps.type_e_subst_lem3','thm.bool.IMP_ANTISYM_AX')).
fof(f218,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl36),
  inference(cnf_transformation,[],[f218_D])).
fof(f218_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f211,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | ($spl11 | $spl16)),
  inference(resolution,[],[f153,f142])).
fof(f132,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2)))))) | $spl1),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f81,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2))))))),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) & (s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2)))) & ? [X3,X4,X5] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X4))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X3),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X4)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X3))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.list.list'('type.ast.t'),X4))),s('type.ast.t',X2))))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ? [X0,X1,X2] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2)))) & ? [X3,X4,X5] : ((s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X4))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X3),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X4))))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X3))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.list.list'('type.ast.t'),X4))),s('type.ast.t',X2))))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X0),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t',X2)))) => ! [X3,X4,X5] : ((s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X4))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X3),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.list.list'('type.ast.t'),X4))))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X3))),s('type.list.list'('type.list.list'('type.string.char')),X1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))),s('type.list.list'('type.ast.t'),X4))),s('type.ast.t',X2))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X6),s('type.list.list'('type.list.list'('type.string.char')),X7))),s('type.ast.t',X8)))) => ! [X9,X10,X11] : ((s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X10))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X7))),s('type.list.list'('type.ast.t'),X10))))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X9))),s('type.list.list'('type.list.list'('type.string.char')),X7))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X11),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))),s('type.list.list'('type.ast.t'),X10))),s('type.ast.t',X8))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X6),s('type.list.list'('type.list.list'('type.string.char')),X7))),s('type.ast.t',X8)))) => ! [X9,X10,X11] : ((s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),X10))))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X7))),s('type.list.list'('type.ast.t'),X10))))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X9))),s('type.list.list'('type.list.list'('type.string.char')),X7))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',X11),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))),s('type.list.list'('type.ast.t'),X10))),s('type.ast.t',X8))))))))),
  file('thm.typeSysProps.type_e_subst_lem3','thm.typeSysProps.type_e_subst_lem3')).
fof(f244,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2))))) | $spl46),
  inference(cnf_transformation,[],[f244_D])).
fof(f244_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f240,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num',sK3))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t','const.typeSystem.deBruijn_subst_3'(s('type.num.num',sK5),s('type.list.list'('type.ast.t'),'const.list.MAP_2'(s(fun('type.ast.t','type.ast.t'),'const.typeSystem.deBruijn_inc_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK5))),s('type.list.list'('type.ast.t'),sK4))),s('type.ast.t',sK2))))) | ($spl1 | $spl36)),
  inference(resolution,[],[f132,f218])).
fof(f134,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4)))) | $spl2),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f80,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4))))),
  inference(cnf_transformation,[],[f53])).
fof(f172,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4))) | $spl30),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f170,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4))) | ($spl2 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f162,f142])).
fof(f162,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4))) | ($spl2 | $spl12)),
  inference(superposition,[],[f134,f143])).
fof(f143,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f85,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.typeSysProps.type_e_subst_lem3',aHL_BOOL_CASES)).
fof(f138,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) | $spl6),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f78,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2))))),
  inference(cnf_transformation,[],[f53])).
fof(f169,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2))) | $spl28),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f167,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2))) | ($spl6 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f161,f142])).
fof(f161,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2))) | ($spl6 | $spl12)),
  inference(superposition,[],[f138,f143])).
fof(f142,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f83,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.typeSysProps.type_e_subst_lem3',aHL_FALSITY)).
fof(f140,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f82,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.typeSysProps.type_e_subst_lem3',aHL_TRUTH)).
fof(f136,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))) | $spl4),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f79,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4)))))),
  inference(cnf_transformation,[],[f53])).
fof(f7310,plain,(
  $false | ($spl4 | $spl8 | $spl11 | $spl28 | $spl30 | $spl46 | $spl126)),
  inference(subsumption_resolution,[],[f7309,f140])).
fof(f7309,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl8 | $spl11 | $spl28 | $spl30 | $spl46 | $spl126)),
  inference(forward_demodulation,[],[f7308,f169])).
fof(f7308,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK0),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) | ($spl4 | $spl8 | $spl11 | $spl30 | $spl46 | $spl126)),
  inference(forward_demodulation,[],[f7307,f136])).
fof(f7307,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) | ($spl8 | $spl11 | $spl30 | $spl46 | $spl126)),
  inference(subsumption_resolution,[],[f7306,f140])).
fof(f7306,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) | ($spl11 | $spl30 | $spl46 | $spl126)),
  inference(forward_demodulation,[],[f7305,f172])).
fof(f7305,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) | ($spl11 | $spl46 | $spl126)),
  inference(subsumption_resolution,[],[f7244,f142])).
fof(f7244,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK3),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.list.list'('type.ast.t'),sK4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.t'),sK4))))),s('type.list.list'('type.list.list'('type.string.char')),sK1))),s('type.ast.t',sK2)))) | ($spl46 | $spl126)),
  inference(superposition,[],[f484,f244])).
% SZS output end Proof for thm.typeSysProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 65
% Passive clauses: 639
% Generated clauses: 7170
% Final active clauses: 58
% Final passive clauses: 519
% Input formulas: 21
% Initial clauses: 52
% 
% Duplicate literals: 176
% Trivial inequalities: 13
% Fw subsumption resolutions: 267
% Fw demodulations: 669
% Bw demodulations: 59
% Condensations: 254
% Global subsumptions: 8
% 
% Simple tautologies: 57
% Equational tautologies: 23
% Forward subsumptions: 3819
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 68
% Factoring: 3
% Forward superposition: 2677
% Backward superposition: 2040
% Self superposition: 162
% Equality factoring: 41
% Equality resolution: 2
% 
% Split clauses: 68
% Split components: 137
% SAT solver clauses: 1295
% SAT solver unit clauses: 51
% SAT solver binary clauses: 51
% SAT solver learnt clauses: 17
% 
% Sat splits: 68
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1262
% TWLsolver calls for satisfiability: 168
% 
% Memory used [KB]: 13944
% Time elapsed: 0.516 s
% ------------------------------
% ------------------------------
% Success in time 1.14 s
