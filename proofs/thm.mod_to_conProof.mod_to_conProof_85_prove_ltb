Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.mod_to_conProof
% (27256)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 810
% Passive clauses: 5701
% Generated clauses: 22314
% Final active clauses: 636
% Final passive clauses: 4579
% Input formulas: 133
% Initial clauses: 288
% 
% Duplicate literals: 167
% Trivial inequalities: 84
% Fw subsumption resolutions: 1594
% Fw demodulations: 1379
% Bw demodulations: 172
% 
% Simple tautologies: 227
% Equational tautologies: 31
% Forward subsumptions: 13092
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 4982
% Factoring: 495
% Forward superposition: 6544
% Backward superposition: 7119
% Self superposition: 61
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 242
% Split components: 485
% SAT solver clauses: 354
% SAT solver unit clauses: 9
% SAT solver binary clauses: 59
% 
% Sat splits: 242
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 354
% TWLsolver calls for satisfiability: 295
% 
% Memory used [KB]: 14967
% Time elapsed: 0.625 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.mod_to_conProof
% (27271)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 431
% Passive clauses: 2237
% Generated clauses: 15055
% Final active clauses: 417
% Final passive clauses: 1754
% Input formulas: 133
% Initial clauses: 288
% 
% Duplicate literals: 95
% Trivial inequalities: 28
% Fw subsumption resolutions: 498
% Fw demodulations: 1181
% Bw demodulations: 66
% Condensations: 98
% Global subsumptions: 22
% 
% Simple tautologies: 212
% Equational tautologies: 16
% Forward subsumptions: 7957
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 1629
% Factoring: 253
% Forward superposition: 4726
% Backward superposition: 3762
% Self superposition: 96
% Equality factoring: 2
% Equality resolution: 15
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 2998
% SAT solver unit clauses: 362
% SAT solver binary clauses: 110
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 4
% 
% TWLsolver clauses: 2910
% TWLsolver calls for satisfiability: 1932
% 
% Memory used [KB]: 27249
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.mod_to_conProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.mod_to_conProof
% SZS output start Proof for thm.mod_to_conProof
fof(f5772,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f494,f677])).
fof(f677,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(flattening,[],[f268])).
fof(f268,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(rectify,[],[f132])).
fof(f132,axiom,(
  ! [X12,X23] : ! [X21] : s('type.pair.prod'(X12,X23),X21) = s('type.pair.prod'(X12,X23),'const.pair.,_2'(s(X12,'const.pair.FST_1'(s('type.pair.prod'(X12,X23),X21))),s(X23,'const.pair.SND_1'(s('type.pair.prod'(X12,X23),X21)))))),
  file('thm.mod_to_conProof.mod_to_conProof_85_prove_ltb','thm.pair.PAIR')).
fof(f494,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.modSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(sK12),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) != s('type.pair.prod'('type.modSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',sK14),s('type.modSem.state'(sK12),sK13),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',sK15),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f379])).
fof(f379,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.modSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(sK12),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) != s('type.pair.prod'('type.modSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',sK14),s('type.modSem.state'(sK12),sK13),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',sK15),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f323])).
fof(f323,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) != s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X2),s('type.modSem.state'(X0),X1),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X3),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) = s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X2),s('type.modSem.state'(X0),X1),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X3),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) = s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X2),s('type.modSem.state'(X0),X1),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X3),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X11))) = s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X8),s('type.modSem.state'(X6),X7),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X9),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X11))) = s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X8),s('type.modSem.state'(X6),X7),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X9),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  file('thm.mod_to_conProof.mod_to_conProof_85_prove_ltb','thm.mod_to_conProof.mod_to_conProof_85_prove_ltb')).
% SZS output end Proof for thm.mod_to_conProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 368
% Passive clauses: 751
% Generated clauses: 5286
% Final active clauses: 364
% Final passive clauses: 381
% Input formulas: 133
% Initial clauses: 288
% 
% Duplicate literals: 7
% Trivial inequalities: 14
% Fw subsumption resolutions: 60
% Fw demodulations: 470
% Bw demodulations: 6
% Condensations: 5
% 
% Simple tautologies: 62
% Equational tautologies: 19
% Forward subsumptions: 3834
% Fw demodulations to eq. taut.: 46
% 
% Unit resulting resolution: 1199
% Factoring: 1
% Forward superposition: 1552
% Backward superposition: 1646
% Self superposition: 29
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 757
% SAT solver unit clauses: 415
% SAT solver binary clauses: 172
% 
% Sat splits: 2
% 
% Memory used [KB]: 4733
% Time elapsed: 0.226 s
% ------------------------------
% ------------------------------
% Success in time 1.57 s
