Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f4291,plain,(
  $false),
  inference(subsumption_resolution,[],[f4285,f243])).
fof(f243,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X7] : ~s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7)))),
  file('thm.misc.find_index_is_MEM','thm.option.NOT_SOME_NONE')).
fof(f4285,plain,(
  s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK16)))),
  inference(backward_demodulation,[],[f3945,f200])).
fof(f200,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK16))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK12,sK13),s('type.list.list'(sK12),sK14),s('type.num.num',sK15)))),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK16))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK12,sK13),s('type.list.list'(sK12),sK14),s('type.num.num',sK15))) & ~p(s(bool,'const.bool.IN_2'(s(sK12,sK13),s(fun(sK12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK12),sK14))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16])],[f91])).
fof(f91,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X4))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X1),s('type.list.list'(X0),X2),s('type.num.num',X3))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X4))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X1),s('type.list.list'(X0),X2),s('type.num.num',X3))) => p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X4))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X1),s('type.list.list'(X0),X2),s('type.num.num',X3))) => p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X10))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X6,X7),s('type.list.list'(X6),X8),s('type.num.num',X9))) => p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X10))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X6,X7),s('type.list.list'(X6),X8),s('type.num.num',X9))) => p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8)))))))),
  file('thm.misc.find_index_is_MEM','thm.misc.find_index_is_MEM')).
fof(f3945,plain,(
  ( ! [X0] : (s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK12,sK13),s('type.list.list'(sK12),sK14),s('type.num.num',X0)))) )),
  inference(resolution,[],[f244,f201])).
fof(f201,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK12,sK13),s(fun(sK12,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK12),sK14))))))),
  inference(cnf_transformation,[],[f134])).
fof(f244,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3)))) & (s('type.option.option'('type.num.num'),'const.option.NONE_0') != s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) <=> s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1,X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) <=> s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X8)))))) <=> s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X6,X7),s('type.list.list'(X6),X8),s('type.num.num',X9))))),
  file('thm.misc.find_index_is_MEM','thm.misc.find_index_NOT_MEM')).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 327
% Passive clauses: 1303
% Generated clauses: 4086
% Final active clauses: 325
% Final passive clauses: 829
% Input formulas: 35
% Initial clauses: 150
% 
% Duplicate literals: 150
% Trivial inequalities: 20
% Fw subsumption resolutions: 287
% Fw demodulations: 11
% Bw demodulations: 2
% 
% Simple tautologies: 138
% Equational tautologies: 23
% Forward subsumptions: 2154
% 
% Binary resolution: 2446
% Factoring: 719
% Forward superposition: 119
% Backward superposition: 143
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 78
% Split components: 157
% SAT solver clauses: 151
% SAT solver unit clauses: 6
% SAT solver binary clauses: 28
% 
% Sat splits: 78
% 
% TWLsolver clauses: 151
% TWLsolver calls for satisfiability: 134
% 
% Memory used [KB]: 2046
% Time elapsed: 0.189 s
% ------------------------------
% ------------------------------
% Success in time 0.21 s
