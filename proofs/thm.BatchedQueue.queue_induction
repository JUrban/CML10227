Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.BatchedQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.BatchedQueue
% SZS output start Proof for thm.BatchedQueue
fof(f443,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f441,f135,f198])).
fof(f198,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f135,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.BatchedQueue.queue_induction',aHL_FALSITY)).
fof(f441,plain,(
  $false | $spl5),
  inference(subsumption_resolution,[],[f439,f198])).
fof(f439,plain,(
  p(s(bool,'F_0'))),
  inference(superposition,[],[f428,f206])).
fof(f206,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.BatchedQueue.queue'(sK0),bool),sK1),s('type.BatchedQueue.queue'(sK0),sK2)))),
  inference(resolution,[],[f133,f142])).
fof(f142,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.BatchedQueue.queue_induction','thm.bool.EQ_CLAUSES|split|3')).
fof(f133,plain,(
  ~p(s(bool,happ(s(fun('type.BatchedQueue.queue'(sK0),bool),sK1),s('type.BatchedQueue.queue'(sK0),sK2))))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X3,X4] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(sK0),bool),sK1),s('type.BatchedQueue.queue'(sK0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4)))))) & ~p(s(bool,happ(s(fun('type.BatchedQueue.queue'(sK0),bool),sK1),s('type.BatchedQueue.queue'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f106])).
fof(f106,plain,(
  ? [X0,X1] : (! [X3,X4] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),X2)))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ? [X0,X1] : (! [X2,X3] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) & ? [X4] : ~p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),X4)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : (! [X2,X3] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) => ! [X4] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),X4)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : (! [X2,X3] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))) => ! [X4] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X0),bool),X1),s('type.BatchedQueue.queue'(X0),X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8,X9] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X6),bool),X7),s('type.BatchedQueue.queue'(X6),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))))) => ! [X10] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X6),bool),X7),s('type.BatchedQueue.queue'(X6),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8,X9] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X6),bool),X7),s('type.BatchedQueue.queue'(X6),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))))) => ! [X10] : p(s(bool,happ(s(fun('type.BatchedQueue.queue'(X6),bool),X7),s('type.BatchedQueue.queue'(X6),X10)))))),
  file('thm.BatchedQueue.queue_induction','thm.BatchedQueue.queue_induction')).
fof(f428,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.BatchedQueue.queue'(sK0),bool),sK1),s('type.BatchedQueue.queue'(sK0),X0))))) )),
  inference(superposition,[],[f132,f162])).
fof(f162,plain,(
  ( ! [X0,X1] : (s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),sK3(X1,X0)),s('type.list.list'(X0),sK4(X1,X0))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),sK3(X1,X0)),s('type.list.list'(X0),sK4(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f56])).
fof(f56,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X39] : ? [X8,X9] : s('type.BatchedQueue.queue'(X6),X39) = s('type.BatchedQueue.queue'(X6),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))),
  file('thm.BatchedQueue.queue_induction','thm.BatchedQueue.queue_nchotomy')).
fof(f132,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.BatchedQueue.queue'(sK0),bool),sK1),s('type.BatchedQueue.queue'(sK0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4))))))) )),
  inference(cnf_transformation,[],[f107])).
% SZS output end Proof for thm.BatchedQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 24
% Passive clauses: 99
% Generated clauses: 306
% Final active clauses: 23
% Final passive clauses: 64
% Input formulas: 37
% Initial clauses: 60
% 
% Duplicate literals: 3
% Trivial inequalities: 4
% Fw subsumption resolutions: 12
% Fw demodulations: 36
% Bw demodulations: 1
% 
% Simple tautologies: 19
% Equational tautologies: 5
% Forward subsumptions: 131
% 
% Binary resolution: 45
% Factoring: 1
% Forward superposition: 74
% Backward superposition: 56
% Self superposition: 8
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 9
% SAT solver unit clauses: 4
% SAT solver binary clauses: 4
% SAT solver learnt clauses: 1
% 
% Sat splits: 4
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 8
% TWLsolver calls for satisfiability: 3
% 
% Memory used [KB]: 895
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.023 s
