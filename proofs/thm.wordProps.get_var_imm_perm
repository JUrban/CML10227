Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.wordProps
% (35616)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 129
% Passive clauses: 1551
% Generated clauses: 18036
% Final active clauses: 107
% Final passive clauses: 1189
% Input formulas: 14
% Initial clauses: 19
% 
% Duplicate literals: 1112
% Trivial inequalities: 255
% Fw subsumption resolutions: 2534
% Fw demodulations: 2094
% Bw demodulations: 15
% 
% Simple tautologies: 328
% Equational tautologies: 70
% Forward subsumptions: 8835
% Fw demodulations to eq. taut.: 29
% 
% Binary resolution: 38
% Forward superposition: 5380
% Backward superposition: 5971
% Self superposition: 276
% Equality factoring: 176
% Equality resolution: 43
% 
% Split clauses: 569
% Split components: 1157
% SAT solver clauses: 1371
% SAT solver unit clauses: 10
% SAT solver binary clauses: 129
% 
% Sat splits: 569
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1350
% TWLsolver calls for satisfiability: 112
% 
% Memory used [KB]: 7547
% Time elapsed: 0.640 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordProps
% (35640)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 131
% Passive clauses: 709
% Generated clauses: 8313
% Final active clauses: 111
% Final passive clauses: 539
% Input formulas: 14
% Initial clauses: 19
% 
% Duplicate literals: 792
% Trivial inequalities: 226
% Fw subsumption resolutions: 617
% Fw demodulations: 469
% Bw demodulations: 39
% Condensations: 1267
% 
% Simple tautologies: 134
% Equational tautologies: 43
% Forward subsumptions: 2421
% Fw demodulations to eq. taut.: 46
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 4
% Forward superposition: 2114
% Backward superposition: 1781
% Self superposition: 133
% Equality factoring: 108
% Equality resolution: 67
% 
% Split clauses: 130
% Split components: 265
% SAT solver clauses: 1489
% SAT solver unit clauses: 27
% SAT solver binary clauses: 94
% 
% Sat splits: 130
% Sat splitting refutations: 23
% 
% TWLsolver clauses: 1489
% TWLsolver calls for satisfiability: 178
% 
% Memory used [KB]: 8315
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f908,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f907])).
fof(f907,plain,(
  s('type.option.option'('type.option.option'('type.wordSem.word_loc'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),sK2))))) != s('type.option.option'('type.option.option'('type.wordSem.word_loc'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),sK2)))))),
  inference(forward_demodulation,[],[f308,f890])).
fof(f890,plain,(
  ( ! [X4,X2,X3] : (s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,X2),X4))) = s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(sK0,X2),X4)))))) )),
  inference(forward_demodulation,[],[f884,f866])).
fof(f866,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,X0),X1))) = s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_2'(s('type.num.num',sK5(sK4,sK0)),s('type.wordSem.state'(sK0,X0),X1)))) )),
  inference(superposition,[],[f62,f863])).
fof(f863,plain,(
  s('type.asm.reg_imm'(sK0),sK4) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK5(sK4,sK0))))),
  inference(subsumption_resolution,[],[f845,f686])).
fof(f686,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X1),s('type.wordSem.state'(X0,X2),X3))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK6(X1,X0)))))) | s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',sK5(X1,X0))))) )),
  inference(superposition,[],[f63,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),sK6(X1,X0)))) | s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',sK5(X1,X0))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : (s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',sK5(X1,X0)))) | s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),sK6(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (? [X3] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X3))) | ? [X2] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X2))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ! [X1] : (? [X3] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X3))) | ? [X2] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X2))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11] : (? [X10] : s('type.asm.reg_imm'(X6),X11) = s('type.asm.reg_imm'(X6),'const.asm.Reg_1'(s('type.num.num',X10))) | ? [X12] : s('type.asm.reg_imm'(X6),X11) = s('type.asm.reg_imm'(X6),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X6),X12))))),
  file('thm.wordProps.get_var_imm_perm','thm.asm.reg_imm_nchotomy')).
fof(f63,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'('type.wordSem.word_loc'(X1)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X2))))) = s('type.option.option'('type.wordSem.word_loc'(X1)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X1),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X1),X2))),s('type.wordSem.state'(X1,X0),X3)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'('type.wordSem.word_loc'(X1)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X2))))) = s('type.option.option'('type.wordSem.word_loc'(X1)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X1),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X1),X2))),s('type.wordSem.state'(X1,X0),X3)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'('type.wordSem.word_loc'(X1)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X2))))) = s('type.option.option'('type.wordSem.word_loc'(X1)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X1),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X1),X2))),s('type.wordSem.state'(X1,X0),X3)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : ! [X22,X21] : s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X22))))) = s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X6),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X6),X22))),s('type.wordSem.state'(X6,X7),X21)))),
  file('thm.wordProps.get_var_imm_perm','thm.wordSem.get_var_imm_def|split|1')).
fof(f845,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),sK2))) != s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK6(sK4,sK0)))))) | s('type.asm.reg_imm'(sK0),sK4) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK5(sK4,sK0))))),
  inference(superposition,[],[f47,f686])).
fof(f47,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),sK2))) != s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK3))),s('type.wordSem.state'(sK0,sK1),sK2)))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),sK2))) != s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK3))),s('type.wordSem.state'(sK0,sK1),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f37])).
fof(f37,plain,(
  ? [X0,X1,X2,X3,X4] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X4),s('type.wordSem.state'(X0,X1),X2))) != s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1,X2,X3,X4] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X6),X10),s('type.wordSem.state'(X6,X7),X8))) = s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X6),X10),s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X6,X7),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X6),X10),s('type.wordSem.state'(X6,X7),X8))) = s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X6),X10),s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X6,X7),X8)))))),
  file('thm.wordProps.get_var_imm_perm','thm.wordProps.get_var_imm_perm')).
fof(f62,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X2),s('type.wordSem.state'(X0,X1),X3))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X2))),s('type.wordSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X2),s('type.wordSem.state'(X0,X1),X3))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X2))),s('type.wordSem.state'(X0,X1),X3)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X2),s('type.wordSem.state'(X0,X1),X3))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X2))),s('type.wordSem.state'(X0,X1),X3)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7] : ! [X10,X21] : s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_2'(s('type.num.num',X10),s('type.wordSem.state'(X6,X7),X21))) = s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(X6),'const.asm.Reg_1'(s('type.num.num',X10))),s('type.wordSem.state'(X6,X7),X21)))),
  file('thm.wordProps.get_var_imm_perm','thm.wordSem.get_var_imm_def|split|0')).
fof(f884,plain,(
  ( ! [X4,X2,X3] : (s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_2'(s('type.num.num',sK5(sK4,sK0)),s('type.wordSem.state'(sK0,X2),X4))) = s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,X2),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(sK0,X2),X4)))))) )),
  inference(superposition,[],[f866,f65])).
fof(f65,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.wordSem.word_loc'(X0)),'const.wordSem.get_var_2'(s('type.num.num',X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : ! [X8,X9,X10] : s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_2'(s('type.num.num',X10),s('type.wordSem.state'(X6,X7),X8))) = s('type.option.option'('type.wordSem.word_loc'(X6)),'const.wordSem.get_var_2'(s('type.num.num',X10),s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X6,X7),X8)))))),
  file('thm.wordProps.get_var_imm_perm','thm.wordProps.get_var_perm')).
fof(f308,plain,(
  s('type.option.option'('type.option.option'('type.wordSem.word_loc'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),sK2))))) != s('type.option.option'('type.option.option'('type.wordSem.word_loc'(sK0))),'const.option.SOME_1'(s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.wordSem.get_var_imm_2'(s('type.asm.reg_imm'(sK0),sK4),s('type.wordSem.state'(sK0,sK1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK3))),s('type.wordSem.state'(sK0,sK1),sK2)))))))),
  inference(unit_resulting_resolution,[],[f47,f55])).
fof(f55,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X13,X14] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X13))) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X14))) <=> s(X6,X13) = s(X6,X14))),
  file('thm.wordProps.get_var_imm_perm','thm.option.SOME_|49||49|')).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 41
% Passive clauses: 82
% Generated clauses: 812
% Final active clauses: 38
% Final passive clauses: 37
% Input formulas: 14
% Initial clauses: 19
% 
% Duplicate literals: 91
% Trivial inequalities: 21
% Fw subsumption resolutions: 24
% Fw demodulations: 35
% Bw demodulations: 4
% Condensations: 100
% 
% Simple tautologies: 22
% Equational tautologies: 35
% Forward subsumptions: 374
% Fw demodulations to eq. taut.: 12
% 
% Unit resulting resolution: 67
% Forward superposition: 205
% Backward superposition: 168
% Self superposition: 29
% Equality factoring: 26
% Equality resolution: 15
% 
% Split clauses: 11
% Split components: 27
% SAT solver clauses: 108
% SAT solver unit clauses: 13
% SAT solver binary clauses: 36
% 
% Sat splits: 11
% Sat splitting refutations: 2
% 
% Memory used [KB]: 1407
% Time elapsed: 0.053 s
% ------------------------------
% ------------------------------
% Success in time 1.431 s
