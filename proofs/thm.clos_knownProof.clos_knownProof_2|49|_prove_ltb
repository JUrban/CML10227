Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% (39111)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 178
% Passive clauses: 3739
% Generated clauses: 27675
% Final active clauses: 168
% Final passive clauses: 3223
% Input formulas: 37
% Initial clauses: 75
% 
% Duplicate literals: 779
% Trivial inequalities: 923
% Fw subsumption resolutions: 2933
% Fw demodulations: 6784
% Bw demodulations: 7
% 
% Simple tautologies: 561
% Equational tautologies: 40
% Forward subsumptions: 10845
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 346
% Factoring: 3
% Forward superposition: 8636
% Backward superposition: 6875
% Self superposition: 127
% Equality factoring: 74
% Equality resolution: 38
% 
% Split clauses: 323
% Split components: 687
% SAT solver clauses: 813
% SAT solver unit clauses: 17
% SAT solver binary clauses: 182
% 
% Sat splits: 323
% Sat splitting refutations: 39
% 
% TWLsolver clauses: 782
% TWLsolver calls for satisfiability: 99
% 
% Memory used [KB]: 11641
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_knownProof
% (39131)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 98
% Passive clauses: 894
% Generated clauses: 11380
% Final active clauses: 50
% Final passive clauses: 220
% Input formulas: 37
% Initial clauses: 75
% 
% Duplicate literals: 443
% Trivial inequalities: 317
% Fw subsumption resolutions: 939
% Fw demodulations: 1491
% Bw demodulations: 618
% Condensations: 791
% Global subsumptions: 10
% 
% Simple tautologies: 250
% Equational tautologies: 33
% Forward subsumptions: 4404
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 168
% Factoring: 2
% Forward superposition: 3018
% Backward superposition: 2419
% Self superposition: 104
% Equality factoring: 71
% Equality resolution: 19
% 
% Split clauses: 73
% Split components: 161
% SAT solver clauses: 1732
% SAT solver unit clauses: 81
% SAT solver binary clauses: 61
% SAT solver learnt clauses: 20
% 
% Sat splits: 73
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1692
% TWLsolver calls for satisfiability: 253
% 
% Memory used [KB]: 11257
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_knownProof
% (39152)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 613
% Passive clauses: 8307
% Generated clauses: 232362
% Final active clauses: 268
% Final passive clauses: 1255
% Input formulas: 37
% Initial clauses: 75
% Discarded non-redundant clauses: 9795
% 
% Duplicate literals: 4262
% Trivial inequalities: 3805
% Fw subsumption resolutions: 15376
% Fw demodulations: 82087
% Bw demodulations: 4259
% Condensations: 6226
% Global subsumptions: 387
% 
% Simple tautologies: 1721
% Equational tautologies: 676
% Forward subsumptions: 107861
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 207
% 
% Unit resulting resolution: 10431
% Factoring: 10
% Forward superposition: 58211
% Backward superposition: 40282
% Self superposition: 410
% Equality factoring: 159
% Equality resolution: 106
% 
% Split clauses: 85
% Split components: 180
% SAT solver clauses: 9411
% SAT solver unit clauses: 409
% SAT solver binary clauses: 3484
% 
% Sat splits: 85
% Sat splitting refutations: 545
% 
% Memory used [KB]: 95947
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.clos_knownProof
% Refutation not found, incomplete strategy
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation not found, incomplete strategy

% Active clauses: 32
% Passive clauses: 3
% Generated clauses: 14
% Final active clauses: 32
% Input formulas: 37
% Initial clauses: 66
% 
% Selected by SInE selection: 29
% SInE iterations: 1
% 
% Duplicate literals: 2
% 
% Simple tautologies: 36
% Forward subsumptions: 11
% 
% Forward superposition: 13
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 895
% Time elapsed: 0.003 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.clos_knownProof
% (39666)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 122
% Passive clauses: 1302
% Generated clauses: 23693
% Final active clauses: 116
% Final passive clauses: 1163
% Input formulas: 37
% Initial clauses: 75
% 
% Duplicate literals: 522
% Trivial inequalities: 288
% Fw subsumption resolutions: 2714
% Fw demodulations: 7778
% Bw demodulations: 19
% Global subsumptions: 14
% 
% Simple tautologies: 533
% Equational tautologies: 92
% Forward subsumptions: 10262
% 
% Unit resulting resolution: 1302
% Factoring: 2
% Forward superposition: 6784
% Backward superposition: 4003
% Self superposition: 94
% Equality factoring: 29
% Equality resolution: 11
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 1405
% SAT solver unit clauses: 157
% SAT solver binary clauses: 167
% 
% Sat splits: 2
% Sat splitting refutations: 85
% 
% Memory used [KB]: 12153
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 24 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.clos_knownProof
% (39691)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 195
% Passive clauses: 2123
% Generated clauses: 21162
% Final active clauses: 24
% Final passive clauses: 22
% Input formulas: 37
% Initial clauses: 75
% 
% Duplicate literals: 338
% Trivial inequalities: 570
% Fw subsumption resolutions: 2408
% Bw subsumption resolutions: 164
% Fw demodulations: 5884
% Bw demodulations: 1284
% Condensations: 464
% Global subsumptions: 780
% 
% Simple tautologies: 394
% Equational tautologies: 12
% Forward subsumptions: 7229
% Backward subsumptions: 665
% 
% Binary resolution: 714
% Forward superposition: 5342
% Backward superposition: 3133
% Self superposition: 12
% Equality factoring: 24
% Equality resolution: 45
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 3842
% SAT solver unit clauses: 981
% SAT solver binary clauses: 1491
% 
% Sat splits: 2
% Sat splitting refutations: 935
% 
% Memory used [KB]: 45159
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 8 next slice time: 8
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f362,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f173,f322,f192])).
fof(f192,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X39,X40,X41] : (p(s(bool,happ(s(fun(X39,bool),happ(s(fun(X39,fun(X39,bool)),'=_0'),s(X39,X40))),s(X39,X41)))) <=> s(X39,X40) = s(X39,X41))),
  file('thm.clos_knownProof.clos_knownProof_2|49|_prove_ltb',arity_0_HL_EQ)).
fof(f322,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),bool),happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),bool)),'=_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),sK1))),s('type.sptree.spt'('type.clos_known.val_approx'),sK2))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),X0))))) )),
  inference(unit_resulting_resolution,[],[f205,f186])).
fof(f186,plain,(
  ( ! [X2,X0,X8,X1] : (~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X8)))) | p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK4(X2,X1,X0)),s(X1,sK5(X2,X1,X0)))))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2] : ((! [X8] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X8)))) | p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK4(X2,X1,X0)),s(X1,sK5(X2,X1,X0)))))))) & (! [X4,X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))) | p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),sK6(X2,X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6])],[f120])).
fof(f120,plain,(
  ! [X0,X1,X2] : ((! [X8] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X8)))) | ? [X6,X7] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X6),s(X1,X7))))))) & (! [X4,X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))) | ? [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3))))))),
  inference(rectify,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2] : ((! [X3] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) | ? [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))))))) & (! [X4,X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))) | ? [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3))))))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2] : (? [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <=> ? [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ! [X2] : (? [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <=> ? [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X17,X21] : ! [X22] : (? [X23] : p(s(bool,happ(s(fun('type.pair.prod'(X17,X21),bool),X22),s('type.pair.prod'(X17,X21),X23)))) <=> ? [X24,X25] : p(s(bool,happ(s(fun('type.pair.prod'(X17,X21),bool),X22),s('type.pair.prod'(X17,X21),'const.pair.,_2'(s(X17,X24),s(X21,X25)))))))),
  file('thm.clos_knownProof.clos_knownProof_2|49|_prove_ltb','thm.pair.EXISTS_PROD')).
fof(f205,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),bool),happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),bool)),'=_0'),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),sK1))),s('type.sptree.spt'('type.clos_known.val_approx'),sK2))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X0),s('type.sptree.spt'('type.clos_known.val_approx'),X1))))))) )),
  inference(unit_resulting_resolution,[],[f127,f191])).
fof(f191,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f123])).
fof(f127,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) != s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),sK1))),s('type.sptree.spt'('type.clos_known.val_approx'),sK2)))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X3,X4] : s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) != s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),sK1))),s('type.sptree.spt'('type.clos_known.val_approx'),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f84])).
fof(f84,plain,(
  ? [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) != s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.sptree.spt'('type.clos_known.val_approx'),X2)))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.sptree.spt'('type.clos_known.val_approx'),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X9),s('type.sptree.spt'('type.clos_known.val_approx'),X10))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),X7))),s('type.sptree.spt'('type.clos_known.val_approx'),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X9),s('type.sptree.spt'('type.clos_known.val_approx'),X10))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),X7))),s('type.sptree.spt'('type.clos_known.val_approx'),X8)))),
  file('thm.clos_knownProof.clos_knownProof_2|49|_prove_ltb','thm.clos_knownProof.clos_knownProof_2|49|_prove_ltb')).
fof(f173,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,sK3(X1,X0))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,sK3(X1,X0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f62])).
fof(f62,plain,(
  ! [X0,X1] : ? [X2] : s(X0,X1) = s(X0,X2)),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ! [X1] : ? [X2] : s(X0,X1) = s(X0,X2)),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X17] : ! [X20] : ? [X18] : s(X17,X18) = s(X17,X20)),
  file('thm.clos_knownProof.clos_knownProof_2|49|_prove_ltb','thm.bool.EXISTS_REFL')).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 44
% Passive clauses: 16
% Generated clauses: 176
% Final active clauses: 42
% Final passive clauses: 6
% Input formulas: 37
% Initial clauses: 75
% 
% Duplicate literals: 2
% Fw demodulations: 18
% Bw demodulations: 4
% 
% Simple tautologies: 36
% Forward subsumptions: 122
% Backward subsumptions: 2
% 
% Binary resolution: 12
% Unit resulting resolution: 47
% Forward superposition: 106
% 
% SAT solver clauses: 18
% SAT solver unit clauses: 16
% 
% Memory used [KB]: 1535
% Time elapsed: 0.011 s
% ------------------------------
% ------------------------------
% Success in time 14.144 s
