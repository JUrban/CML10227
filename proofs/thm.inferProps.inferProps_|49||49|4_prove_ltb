Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.inferProps
% (92382)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 96
% Passive clauses: 2562
% Generated clauses: 20567
% Final active clauses: 91
% Final passive clauses: 2257
% Input formulas: 7
% Initial clauses: 23
% 
% Duplicate literals: 1266
% Trivial inequalities: 246
% Fw subsumption resolutions: 3001
% Fw demodulations: 1343
% Bw demodulations: 1
% 
% Simple tautologies: 436
% Equational tautologies: 101
% Forward subsumptions: 9039
% 
% Binary resolution: 82
% Forward superposition: 8560
% Backward superposition: 5151
% Self superposition: 394
% Equality factoring: 286
% Equality resolution: 19
% 
% Split clauses: 1178
% Split components: 2419
% SAT solver clauses: 2607
% SAT solver unit clauses: 278
% SAT solver binary clauses: 679
% 
% Sat splits: 1178
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2588
% TWLsolver calls for satisfiability: 154
% 
% Memory used [KB]: 8827
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f2611,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f44,f35,f1154,f1163,f1466,f1215,f33,f64,f2113,f1618,f1628,f2417,f36,f60,f58,f83,f67,f84,f68,f95,f102,f47,f90,f48,f91,f45,f88,f86,f70,f34,f62,f66,f56,f54,f85,f69,f2607,f103,f105,f43,f78,f76,f882,f667,f676,f41,f80,f1113,f317,f318,f93,f101,f577,f79,f371,f396,f42,f82,f74,f72,f61])).
fof(f61,plain,(
  ~sP0 | $spl9),
  inference(cnf_transformation,[],[f61_D])).
fof(f61_D,plain,(
  ~sP0 <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f72,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9)))) | $spl23),
  inference(cnf_transformation,[],[f72_D])).
fof(f72_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9)))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f74,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.ast.t',sK9)))) | $spl25),
  inference(cnf_transformation,[],[f74_D])).
fof(f74_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.ast.t',sK9)))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f82,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) | $spl32),
  inference(cnf_transformation,[],[f82_D])).
fof(f82_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f42,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.ast.t',sK9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  (sP0 | (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))) & (~sP0 | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.ast.t',sK9)))))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK16),s('type.list.list'('type.list.list'('type.string.char')),sK15))))),s('type.list.list'('type.ast.t'),sK13)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK15),s('type.list.list'('type.list.list'('type.string.char')),sK16))))),s('type.list.list'('type.ast.t'),sK13)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16])],[f25])).
fof(f25,plain,(
  (sP0 | (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))) & (~sP0 | ? [X4,X5,X6,X7] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) | ? [X0,X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0)))))))),
  inference(rectify,[],[f24])).
fof(f24,plain,(
  (sP0 | (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))) & (~sP0 | ? [X12,X13,X14,X15] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) | ? [X8,X9,X10,X11] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  (sP0 | (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))) & (~sP0 | (? [X12,X13,X14,X15] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) | ? [X8,X9,X10,X11] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8))))))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  sP0 <~> (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))),
  inference(definition_folding,[],[f15,f17])).
fof(f17,plain,(
  sP0 <=> (! [X4,X5,X6,X7] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) & ! [X0,X1,X2,X3] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f15,plain,(
  (! [X4,X5,X6,X7] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) & ! [X0,X1,X2,X3] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0))))))) <~> (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~((! [X4,X5,X6,X7] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) => (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) & ! [X0,X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) => (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0))))))) <=> (! [X12,X13,X14,X15] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) => (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) => (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~((! [X6,X7,X8,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.ast.t',X6)))))) & ! [X10,X7,X8,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X10)))) => (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X10)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.list.list'('type.ast.t'),X10))))))) <=> (! [X6,X7,X8,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.ast.t',X6)))))) & ! [X10,X7,X8,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X10)))) => (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X10)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.list.list'('type.ast.t'),X10))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  (! [X6,X7,X8,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.ast.t',X6)))))) & ! [X10,X7,X8,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X10)))) => (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X10)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.list.list'('type.ast.t'),X10))))))) <=> (! [X6,X7,X8,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.ast.t',X6)))))) & ! [X10,X7,X8,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X10)))) => (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X9),s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X10)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X8),s('type.list.list'('type.list.list'('type.string.char')),X9))))),s('type.list.list'('type.ast.t'),X10)))))))),
  file('thm.inferProps.inferProps_|49||49|4_prove_ltb','thm.inferProps.inferProps_|49||49|4_prove_ltb')).
fof(f396,plain,(
  $false | ($spl34 | $spl37 | $spl70)),
  inference(subsumption_resolution,[],[f388,f88])).
fof(f388,plain,(
  ~p(s(bool,'T_0')) | ($spl37 | $spl70)),
  inference(backward_demodulation,[],[f371,f90])).
fof(f371,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl70),
  inference(cnf_transformation,[],[f371_D])).
fof(f371_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f79,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | $spl31),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f577,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl20 | $spl44 | $spl64)),
  inference(subsumption_resolution,[],[f568,f102])).
fof(f568,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl20 | $spl64)),
  inference(superposition,[],[f70,f318])).
fof(f101,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl42),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f93,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl38),
  inference(superposition,[],[f91,f91])).
fof(f318,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl64),
  inference(cnf_transformation,[],[f318_D])).
fof(f318_D,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f317,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl23 | $spl34 | $spl42)),
  inference(subsumption_resolution,[],[f205,f88])).
fof(f205,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl23 | $spl42)),
  inference(superposition,[],[f72,f101])).
fof(f1113,plain,(
  $false | ($spl16 | $spl27 | $spl34 | $spl136)),
  inference(subsumption_resolution,[],[f1112,f88])).
fof(f1112,plain,(
  ~p(s(bool,'T_0')) | ($spl16 | $spl27 | $spl136)),
  inference(forward_demodulation,[],[f1102,f676])).
fof(f1102,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) | ($spl16 | $spl27)),
  inference(resolution,[],[f68,f76])).
fof(f80,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | $spl30),
  inference(cnf_transformation,[],[f80_D])).
fof(f80_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f41,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f676,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13))) | $spl136),
  inference(cnf_transformation,[],[f676_D])).
fof(f676_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f667,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13))) | ($spl32 | $spl44)),
  inference(resolution,[],[f82,f102])).
fof(f882,plain,(
  $false | ($spl14 | $spl29 | $spl34 | $spl136)),
  inference(subsumption_resolution,[],[f881,f88])).
fof(f881,plain,(
  ~p(s(bool,'T_0')) | ($spl14 | $spl29 | $spl136)),
  inference(forward_demodulation,[],[f872,f676])).
fof(f872,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),sK15))),s('type.list.list'('type.ast.t'),sK13)))) | ($spl14 | $spl29)),
  inference(resolution,[],[f67,f78])).
fof(f76,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK16),s('type.list.list'('type.list.list'('type.string.char')),sK15))))),s('type.list.list'('type.ast.t'),sK13)))) | $spl27),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK16),s('type.list.list'('type.list.list'('type.string.char')),sK15))))),s('type.list.list'('type.ast.t'),sK13)))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f78,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK15),s('type.list.list'('type.list.list'('type.string.char')),sK16))))),s('type.list.list'('type.ast.t'),sK13)))) | $spl29),
  inference(cnf_transformation,[],[f78_D])).
fof(f78_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK15),s('type.list.list'('type.list.list'('type.string.char')),sK16))))),s('type.list.list'('type.ast.t'),sK13)))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f43,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK15),s('type.list.list'('type.list.list'('type.string.char')),sK16))))),s('type.list.list'('type.ast.t'),sK13)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK16),s('type.list.list'('type.list.list'('type.string.char')),sK15))))),s('type.list.list'('type.ast.t'),sK13)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f105,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9))) | $spl46),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f103,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9))) | ($spl30 | $spl37 | $spl38)),
  inference(subsumption_resolution,[],[f97,f90])).
fof(f97,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9))) | ($spl30 | $spl38)),
  inference(superposition,[],[f80,f91])).
fof(f2607,plain,(
  $false | ($spl18 | $spl25 | $spl34 | $spl46)),
  inference(subsumption_resolution,[],[f2606,f88])).
fof(f2606,plain,(
  ~p(s(bool,'T_0')) | ($spl18 | $spl25 | $spl46)),
  inference(forward_demodulation,[],[f2598,f105])).
fof(f2598,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),sK11))),s('type.ast.t',sK9)))) | ($spl18 | $spl25)),
  inference(resolution,[],[f74,f69])).
fof(f69,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12))))) ) | $spl18),
  inference(cnf_transformation,[],[f69_D])).
fof(f69_D,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f85,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12))))) )),
  inference(global_subsumption,[],[f38,f30])).
fof(f30,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | ~sP0) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  (~sP0 | (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))) & ((p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK4),s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK3),s('type.list.list'('type.list.list'('type.string.char')),sK4))))),s('type.ast.t',sK1)))))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK8),s('type.list.list'('type.list.list'('type.string.char')),sK7))))),s('type.list.list'('type.ast.t'),sK5)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK7),s('type.list.list'('type.list.list'('type.string.char')),sK8))))),s('type.list.list'('type.ast.t'),sK5)))))) | sP0)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f21])).
fof(f21,plain,(
  (~sP0 | (! [X12,X13,X14,X15] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))))) & ! [X8,X9,X10,X11] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))))))) & (? [X4,X5,X6,X7] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) | ? [X0,X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0)))))) | sP0)),
  inference(rectify,[],[f20])).
fof(f20,plain,(
  (~sP0 | (! [X4,X5,X6,X7] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) & ! [X0,X1,X2,X3] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0)))))))) & (? [X4,X5,X6,X7] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) | ? [X0,X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0)))))) | sP0)),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  (~sP0 | (! [X4,X5,X6,X7] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) & p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) & ! [X0,X1,X2,X3] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) & p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0)))))))) & ((? [X4,X5,X6,X7] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),X6))),s('type.ast.t',X4)))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X7),s('type.list.list'('type.list.list'('type.string.char')),X6))))),s('type.ast.t',X4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.list.list'('type.string.char')),X7))))),s('type.ast.t',X4)))))) | ? [X0,X1,X2,X3] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X3),s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X2),s('type.list.list'('type.list.list'('type.string.char')),X3))))),s('type.list.list'('type.ast.t'),X0))))))) | sP0)),
  inference(nnf_transformation,[],[f17])).
fof(f38,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X14),s('type.list.list'('type.list.list'('type.string.char')),X15))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f54,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK4),s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK4),s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f56,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK3),s('type.list.list'('type.list.list'('type.string.char')),sK4))))),s('type.ast.t',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK3),s('type.list.list'('type.list.list'('type.string.char')),sK4))))),s('type.ast.t',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f66,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) | $spl12),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f62,plain,(
  sP0 | $spl8),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  sP0 <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f34,plain,(
  sP0 | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK3),s('type.list.list'('type.list.list'('type.string.char')),sK4))))),s('type.ast.t',sK1)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK4),s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f70,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12))))) ) | $spl20),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f86,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12))))) )),
  inference(global_subsumption,[],[f37,f29])).
fof(f29,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | ~sP0) )),
  inference(cnf_transformation,[],[f22])).
fof(f37,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X15),s('type.list.list'('type.list.list'('type.string.char')),X14))))),s('type.ast.t',X12)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X13),s('type.list.list'('type.list.list'('type.string.char')),X14))),s('type.ast.t',X12)))) | sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f88,plain,(
  p(s(bool,'T_0')) | $spl34),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f45,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.inferProps_|49||49|4_prove_ltb','thm.bool.TRUTH')).
fof(f91,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl38),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f48,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferProps.inferProps_|49||49|4_prove_ltb',aHL_BOOL_CASES)).
fof(f90,plain,(
  ~p(s(bool,'F_0')) | $spl37),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f47,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.inferProps_|49||49|4_prove_ltb',aHL_FALSITY)).
fof(f102,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f95,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl37 | $spl38)),
  inference(superposition,[],[f90,f91])).
fof(f68,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8))))) ) | $spl16),
  inference(cnf_transformation,[],[f68_D])).
fof(f68_D,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f84,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8))))) )),
  inference(global_subsumption,[],[f39,f31])).
fof(f31,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | ~sP0) )),
  inference(cnf_transformation,[],[f22])).
fof(f39,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X11),s('type.list.list'('type.list.list'('type.string.char')),X10))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f67,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8))))) ) | $spl14),
  inference(cnf_transformation,[],[f67_D])).
fof(f67_D,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f83,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8))))) )),
  inference(global_subsumption,[],[f40,f32])).
fof(f32,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | ~sP0) )),
  inference(cnf_transformation,[],[f22])).
fof(f40,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),X10),s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.list.list'('type.ast.t'),X8)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X9),s('type.list.list'('type.list.list'('type.string.char')),X10))),s('type.list.list'('type.ast.t'),X8)))) | sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f58,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK8),s('type.list.list'('type.list.list'('type.string.char')),sK7))))),s('type.list.list'('type.ast.t'),sK5)))) | $spl5),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK8),s('type.list.list'('type.list.list'('type.string.char')),sK7))))),s('type.list.list'('type.ast.t'),sK5)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f60,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK7),s('type.list.list'('type.list.list'('type.string.char')),sK8))))),s('type.list.list'('type.ast.t'),sK5)))) | $spl7),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK7),s('type.list.list'('type.list.list'('type.string.char')),sK8))))),s('type.list.list'('type.ast.t'),sK5)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f36,plain,(
  sP0 | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK7),s('type.list.list'('type.list.list'('type.string.char')),sK8))))),s('type.list.list'('type.ast.t'),sK5)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK8),s('type.list.list'('type.list.list'('type.string.char')),sK7))))),s('type.list.list'('type.ast.t'),sK5)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK3),s('type.list.list'('type.list.list'('type.string.char')),sK4))))),s('type.ast.t',sK1)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK4),s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f2417,plain,(
  $false | ($spl7 | $spl14 | $spl34 | $spl230)),
  inference(subsumption_resolution,[],[f2416,f88])).
fof(f2416,plain,(
  ~p(s(bool,'T_0')) | ($spl7 | $spl14 | $spl230)),
  inference(forward_demodulation,[],[f2404,f1628])).
fof(f2404,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) | ($spl7 | $spl14)),
  inference(resolution,[],[f60,f67])).
fof(f1628,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5))) | $spl230),
  inference(cnf_transformation,[],[f1628_D])).
fof(f1628_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5))) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f1618,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5))) | ($spl12 | $spl44)),
  inference(resolution,[],[f66,f102])).
fof(f2113,plain,(
  $false | ($spl5 | $spl16 | $spl34 | $spl230)),
  inference(subsumption_resolution,[],[f2112,f88])).
fof(f2112,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl16 | $spl230)),
  inference(forward_demodulation,[],[f2101,f1628])).
fof(f2101,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) | ($spl5 | $spl16)),
  inference(resolution,[],[f58,f68])).
fof(f64,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) | $spl10),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f33,plain,(
  sP0 | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),sK7))),s('type.list.list'('type.ast.t'),sK5)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f1215,plain,(
  $false | ($spl1 | $spl20 | $spl34 | $spl196)),
  inference(subsumption_resolution,[],[f1214,f88])).
fof(f1214,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl20 | $spl196)),
  inference(forward_demodulation,[],[f1205,f1163])).
fof(f1205,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) | ($spl1 | $spl20)),
  inference(resolution,[],[f54,f70])).
fof(f1466,plain,(
  $false | ($spl3 | $spl18 | $spl34 | $spl196)),
  inference(subsumption_resolution,[],[f1465,f88])).
fof(f1465,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl18 | $spl196)),
  inference(forward_demodulation,[],[f1454,f1163])).
fof(f1454,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) | ($spl3 | $spl18)),
  inference(resolution,[],[f56,f69])).
fof(f1163,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) | $spl196),
  inference(cnf_transformation,[],[f1163_D])).
fof(f1163_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f1154,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) | ($spl10 | $spl44)),
  inference(resolution,[],[f64,f102])).
fof(f35,plain,(
  sP0 | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK7),s('type.list.list'('type.list.list'('type.string.char')),sK8))))),s('type.list.list'('type.ast.t'),sK5)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK8),s('type.list.list'('type.list.list'('type.string.char')),sK7))))),s('type.list.list'('type.ast.t'),sK5)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f44,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK15),s('type.list.list'('type.list.list'('type.string.char')),sK16))))),s('type.list.list'('type.ast.t'),sK13)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK14),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK16),s('type.list.list'('type.list.list'('type.string.char')),sK15))))),s('type.list.list'('type.ast.t'),sK13)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.ast.t',sK9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.APPEND_2'(s('type.list.list'('type.list.list'('type.string.char')),sK12),s('type.list.list'('type.list.list'('type.string.char')),sK11))))),s('type.ast.t',sK9)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 68
% Passive clauses: 163
% Generated clauses: 2614
% Final active clauses: 39
% Final passive clauses: 55
% Input formulas: 7
% Initial clauses: 23
% 
% Duplicate literals: 266
% Trivial inequalities: 16
% Fw subsumption resolutions: 207
% Fw demodulations: 211
% Bw demodulations: 46
% Condensations: 216
% Global subsumptions: 4
% 
% Simple tautologies: 50
% Equational tautologies: 19
% Forward subsumptions: 1136
% 
% Binary resolution: 28
% Forward superposition: 825
% Backward superposition: 433
% Self superposition: 59
% Equality factoring: 34
% 
% Split clauses: 58
% Split components: 132
% SAT solver clauses: 331
% SAT solver unit clauses: 16
% SAT solver binary clauses: 30
% SAT solver learnt clauses: 17
% SAT solver learnt literals: 34
% 
% Sat splits: 58
% Sat splitting refutations: 33
% 
% TWLsolver clauses: 314
% TWLsolver calls for satisfiability: 431
% 
% Memory used [KB]: 2302
% Time elapsed: 0.111 s
% ------------------------------
% ------------------------------
% Success in time 0.74 s
