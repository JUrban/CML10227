Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pat_to_closProof
% (100885)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 815
% Passive clauses: 4566
% Generated clauses: 25728
% Final active clauses: 657
% Final passive clauses: 3171
% Input formulas: 137
% Initial clauses: 297
% 
% Duplicate literals: 209
% Trivial inequalities: 37
% Fw subsumption resolutions: 1353
% Fw demodulations: 2432
% Bw demodulations: 153
% 
% Simple tautologies: 182
% Equational tautologies: 30
% Forward subsumptions: 16936
% Fw demodulations to eq. taut.: 15
% 
% Binary resolution: 4987
% Factoring: 1187
% Forward superposition: 7380
% Backward superposition: 7520
% Self superposition: 54
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 199
% Split components: 398
% SAT solver clauses: 378
% SAT solver unit clauses: 13
% SAT solver binary clauses: 69
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 2
% 
% Sat splits: 199
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 377
% TWLsolver calls for satisfiability: 332
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pat_to_closProof
% (100904)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 616
% Passive clauses: 2899
% Generated clauses: 25686
% Final active clauses: 494
% Final passive clauses: 1913
% Input formulas: 137
% Initial clauses: 297
% 
% Duplicate literals: 106
% Trivial inequalities: 56
% Fw subsumption resolutions: 1008
% Fw demodulations: 3223
% Bw demodulations: 1061
% Condensations: 102
% Global subsumptions: 32
% 
% Simple tautologies: 229
% Equational tautologies: 14
% Forward subsumptions: 14574
% Fw demodulations to eq. taut.: 13
% Bw demodulations to eq. taut.: 7
% 
% Binary resolution: 2664
% Factoring: 272
% Forward superposition: 8320
% Backward superposition: 6057
% Self superposition: 67
% Equality factoring: 2
% Equality resolution: 22
% 
% Split clauses: 34
% Split components: 68
% SAT solver clauses: 3751
% SAT solver unit clauses: 401
% SAT solver binary clauses: 113
% SAT solver learnt clauses: 65
% SAT solver learnt literals: 15
% 
% Sat splits: 34
% Sat splitting refutations: 35
% 
% TWLsolver clauses: 3622
% TWLsolver calls for satisfiability: 1898
% 
% Memory used [KB]: 21236
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.pat_to_closProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pat_to_closProof
% SZS output start Proof for thm.pat_to_closProof
fof(f41460,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f444,f748,f747,f443,f750,f746,f2883,f2901,f2887,f2905,f2888,f2906,f2895,f2908,f2896,f2909,f2898,f2912,f2910,f2899,f2914,f8082,f8219,f8217,f8848,f5551,f8860,f3413,f2903,f8862,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f37083,f37117,f37062,f37119,f37066,f37121,f37069,f37123,f37072,f37125,f37075,f37127,f37078,f37129,f37081,f37131,f37063,f37084,f37646,f37647,f37649,f37650,f37651,f37652,f37654,f37656,f37658,f37660,f37664,f37667,f37669,f37671,f37673,f37675,f37677,f37679,f37681,f37683,f37685,f37687,f37689,f37691,f37693,f37695,f37697,f37699,f37701,f37703,f37705,f37707,f37709,f37711,f37713,f37715,f37717,f37719,f37721,f37723,f37725,f37727,f37729,f37731,f37733,f37735,f37737,f37739,f37741,f37743,f37745,f37747,f37751,f37755,f37759,f37781,f37783,f37785,f37787,f37789,f37791,f37793,f37795,f37796,f37800,f37802,f37804,f37806,f37808,f37810,f37812,f37814,f37816,f37818,f37820,f37822,f37824,f37826,f37828,f37830,f37832,f37834,f37836,f37838,f37840,f37842,f37844,f37846,f37848,f37850,f37852,f37854,f37856,f37858,f37860,f37862,f37864,f37866,f37868,f37870,f37872,f37874,f37882,f37884,f37886,f37888,f37890,f37892,f37894,f37896,f37898,f37900,f37902,f37904,f37906,f37908,f37910,f37912,f37914,f37916,f37918,f37920,f37922,f37924,f37926,f37928,f37930,f37932,f37934,f37936,f37938,f37940,f37942,f37944,f37946,f37947,f37950,f37951,f37952,f37954,f37955,f37957,f37959,f37961,f37963,f37965,f37979,f37981,f37983,f37985,f37987,f37989,f37991,f37993,f37995,f37997,f37999,f38001,f38003,f38005,f38007,f38009,f38011,f38013,f38015,f38017,f38019,f38021,f38023,f38025,f38027,f38029,f38031,f38033,f38035,f38037,f38039,f38041,f38043,f38045,f38047,f38049,f38051,f38053,f38055,f38057,f38059,f38061,f38063,f38065,f38067,f38069,f38071,f38073,f38075,f38077,f38079,f38081,f38083,f38085,f38087,f38089,f38091,f38093,f38095,f38097,f38099,f38101,f38103,f38105,f38107,f38109,f38111,f38113,f38115,f38117,f38119,f38121,f38123,f38125,f38127,f38129,f38131,f38133,f38135,f38137,f38139,f38141,f38143,f38145,f38147,f38149,f38151,f38153,f38155,f38157,f38159,f38161,f38163,f38165,f38167,f38169,f38171,f38173,f38175,f38177,f38179,f38180,f38181,f38183,f38185,f38187,f38189,f38191,f38193,f38195,f38197,f38199,f38201,f38203,f38205,f38207,f38209,f38211,f38213,f38215,f38217,f38219,f38221,f38223,f38225,f38227,f38229,f38231,f38233,f38235,f38237,f41404])).
fof(f41404,plain,(
  $false | ($spl0 | $spl2 | $spl22)),
  inference(subsumption_resolution,[],[f41398,f748])).
fof(f41398,plain,(
  s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),'const.list.NIL_0'))) | ($spl0 | $spl22)),
  inference(backward_demodulation,[],[f41093,f15010])).
fof(f15010,plain,(
  s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),sK14(sK11,sK10)))) | $spl0),
  inference(unit_resulting_resolution,[],[f8383,f562])).
fof(f562,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X0)),s('type.list.list'(X0),sK14(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f372])).
fof(f372,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X0)),s('type.list.list'(X0),sK14(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f219])).
fof(f219,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f218])).
fof(f218,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X6] : ! [X22] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X22) | ? [X21,X14] : s('type.list.list'(X6),X22) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),X14))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.list.list_CASES')).
fof(f8383,plain,(
  s('type.list.list'(sK10),'const.list.NIL_0') != s('type.list.list'(sK10),sK11) | $spl0),
  inference(unit_resulting_resolution,[],[f8364,f566])).
fof(f566,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f222])).
fof(f222,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X6] : ! [X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X22))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X22))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.list.LENGTH_NIL')).
fof(f8364,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl0),
  inference(subsumption_resolution,[],[f8264,f3057])).
fof(f3057,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(unit_resulting_resolution,[],[f932,f522])).
fof(f522,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f347])).
fof(f347,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f91])).
fof(f91,axiom,(
  ! [X10] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X10))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|30')).
fof(f932,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f561,f449])).
fof(f449,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f58])).
fof(f58,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_suc|split|0')).
fof(f561,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(flattening,[],[f216])).
fof(f216,plain,(
  ! [X0] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X10] : ~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.num.NOT_SUC')).
fof(f8264,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl0),
  inference(superposition,[],[f523,f8212])).
fof(f8212,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl0),
  inference(forward_demodulation,[],[f746,f4185])).
fof(f4185,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(backward_demodulation,[],[f4184,f450])).
fof(f450,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f74])).
fof(f74,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|13')).
fof(f4184,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f4092,f449])).
fof(f4092,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f483,f462])).
fof(f462,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|1')).
fof(f483,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X10] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|6')).
fof(f523,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f347])).
fof(f41093,plain,(
  s('type.list.list'(sK10),'const.list.NIL_0') = s('type.list.list'(sK10),sK14(sK11,sK10)) | ($spl0 | $spl22)),
  inference(unit_resulting_resolution,[],[f35926,f8893])).
fof(f8893,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f565])).
fof(f565,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f374])).
fof(f8871,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl22),
  inference(backward_demodulation,[],[f2914,f448])).
fof(f448,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f76])).
fof(f76,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.prim_rec.PRE|split|0')).
fof(f35926,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10)))) | ($spl0 | $spl22)),
  inference(subsumption_resolution,[],[f35816,f751])).
fof(f751,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f452,f445])).
fof(f445,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0',aHL_TRUTH)).
fof(f452,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f335])).
fof(f335,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f141])).
fof(f141,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f37])).
fof(f37,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.bool.NOT_CLAUSES|split|2')).
fof(f35816,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10)))) | ($spl0 | $spl22)),
  inference(superposition,[],[f18250,f17772])).
fof(f17772,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10)))))) | $spl0),
  inference(unit_resulting_resolution,[],[f751,f17732,f606])).
fof(f606,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f305])).
fof(f305,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f304])).
fof(f304,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f261])).
fof(f261,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12,X13] : ((p(s(bool,X12)) => p(s(bool,X13))) => ((p(s(bool,X13)) => p(s(bool,X12))) => s(bool,X12) = s(bool,X13)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.bool.IMP_ANTISYM_AX')).
fof(f17732,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10))))))) | $spl0),
  inference(forward_demodulation,[],[f17541,f16256])).
fof(f16256,plain,(
  ( ! [X8,X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f16153,f4189])).
fof(f4189,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f4184,f756])).
fof(f756,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f492,f450])).
fof(f492,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X10] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.SUC_ONE_ADD')).
fof(f16153,plain,(
  ( ! [X8,X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))))) )),
  inference(superposition,[],[f669,f4189])).
fof(f669,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f287])).
fof(f287,plain,(
  ! [X0,X1,X2] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X9,X10,X11] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X11)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.ADD_MONO_LESS_EQ')).
fof(f17541,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f17533,f658])).
fof(f658,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f406])).
fof(f406,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) = s('type.num.num',X1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(flattening,[],[f405])).
fof(f405,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) = s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f279])).
fof(f279,plain,(
  ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(flattening,[],[f278])).
fof(f278,plain,(
  ! [X0,X1] : (~s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9,X10] : (~s('type.num.num',X9) = s('type.num.num',X10) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num',X10)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num',X9))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.NOT_NUM_EQ')).
fof(f17533,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10)))))) | $spl0),
  inference(forward_demodulation,[],[f17515,f8212])).
fof(f17515,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10)))))) | $spl0),
  inference(superposition,[],[f571,f15010])).
fof(f571,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f226])).
fof(f226,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X6] : ! [X21,X14] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X14))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),X14)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.list.LENGTH|split|1')).
fof(f18250,plain,(
  ( ! [X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X5)) ) | $spl22),
  inference(forward_demodulation,[],[f18249,f8872])).
fof(f8872,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f458])).
fof(f458,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.list.LENGTH|split|0')).
fof(f18249,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(subsumption_resolution,[],[f18248,f8846])).
fof(f8846,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(backward_demodulation,[],[f8790,f3850])).
fof(f3850,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))))))) )),
  inference(subsumption_resolution,[],[f3781,f561])).
fof(f3781,plain,(
  ( ! [X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f522,f481])).
fof(f481,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|14')).
fof(f8790,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f584,f2960])).
fof(f2960,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f2940,f466])).
fof(f466,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|7')).
fof(f2940,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f466,f519])).
fof(f519,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f345])).
fof(f345,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f78])).
fof(f78,axiom,(
  ! [X10] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X10))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|17')).
fof(f584,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f239])).
fof(f239,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f92])).
fof(f92,axiom,(
  ! [X10,X9] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|31')).
fof(f18248,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(forward_demodulation,[],[f18247,f8872])).
fof(f18247,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(forward_demodulation,[],[f18093,f449])).
fof(f18093,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(superposition,[],[f656,f8872])).
fof(f656,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f406])).
fof(f38237,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38236,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224,f38226,f38228,f38234])).
fof(f38234,plain,(
  ( ! [X74,X72,X73] : (p(s(bool,X73)) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74)),X73)) ) | $spl30),
  inference(subsumption_resolution,[],[f37606,f445])).
fof(f37606,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'T_0')) | p(s(bool,X73)) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74)),X73)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27959])).
fof(f38228,plain,(
  ( ! [X74,X72,X73] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X74)) ) | $spl30),
  inference(subsumption_resolution,[],[f37603,f445])).
fof(f37603,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X74)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24562])).
fof(f38226,plain,(
  ( ! [X70,X72,X71] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71)),X72,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37602,f445])).
fof(f37602,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71)),X72,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24444])).
fof(f38224,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,X35)) | p(s(bool,X36)) | ~sP5(X35,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34)))),X36)) ) | $spl30),
  inference(subsumption_resolution,[],[f37601,f445])).
fof(f37601,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X35)) | p(s(bool,X36)) | ~sP5(X35,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34)))),X36)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f2111])).
fof(f38222,plain,(
  ( ! [X28,X29,X27] : (~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) ) | $spl30),
  inference(subsumption_resolution,[],[f37600,f445])).
fof(f37600,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1831])).
fof(f38220,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X25,X26)) ) | $spl30),
  inference(subsumption_resolution,[],[f37599,f445])).
fof(f37599,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X25)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X25,X26)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1830])).
fof(f38218,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X22)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23,X22)) ) | $spl30),
  inference(subsumption_resolution,[],[f37598,f445])).
fof(f37598,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23,X22)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1829])).
fof(f38216,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20))) ) | $spl30),
  inference(subsumption_resolution,[],[f37597,f445])).
fof(f37597,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | sP1(X20,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1828])).
fof(f38214,plain,(
  ( ! [X17,X18] : (sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18))) ) | $spl30),
  inference(subsumption_resolution,[],[f37596,f445])).
fof(f37596,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1827])).
fof(f38212,plain,(
  ( ! [X15,X16] : (sP0('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) ) | $spl30),
  inference(subsumption_resolution,[],[f37595,f445])).
fof(f37595,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1826])).
fof(f38210,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37594,f445])).
fof(f37594,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | sP0(X14,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1825])).
fof(f38206,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,X68)) | ~sP5('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X69)),X68)) ) | $spl30),
  inference(subsumption_resolution,[],[f37590,f445])).
fof(f37590,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | ~sP5('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X69)),X68)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27957])).
fof(f38200,plain,(
  ( ! [X68,X69,X67] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X69)) ) | $spl30),
  inference(subsumption_resolution,[],[f37587,f445])).
fof(f37587,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X69)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24560])).
fof(f38198,plain,(
  ( ! [X66,X67,X65] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66)),X67,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37586,f445])).
fof(f37586,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66)),X67,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24442])).
fof(f38196,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP5(X30,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31)) ) | $spl30),
  inference(subsumption_resolution,[],[f37585,f445])).
fof(f37585,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP5(X30,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f2109])).
fof(f38194,plain,(
  ( ! [X28,X29,X27] : (~sP8('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) ) | $spl30),
  inference(subsumption_resolution,[],[f37584,f445])).
fof(f37584,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1998])).
fof(f38192,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X25,X26)) ) | $spl30),
  inference(subsumption_resolution,[],[f37583,f445])).
fof(f37583,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X25)) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X25,X26)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1997])).
fof(f38190,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X22)) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23,X22)) ) | $spl30),
  inference(subsumption_resolution,[],[f37582,f445])).
fof(f37582,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23,X22)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1996])).
fof(f38188,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20))) ) | $spl30),
  inference(subsumption_resolution,[],[f37581,f445])).
fof(f37581,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | sP1(X20,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1995])).
fof(f38186,plain,(
  ( ! [X17,X18] : (sP1('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18))) ) | $spl30),
  inference(subsumption_resolution,[],[f37580,f445])).
fof(f37580,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | sP1('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1994])).
fof(f38184,plain,(
  ( ! [X15,X16] : (sP0('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) ) | $spl30),
  inference(subsumption_resolution,[],[f37579,f445])).
fof(f37579,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1993])).
fof(f38182,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37578,f445])).
fof(f37578,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | sP0(X14,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f1992])).
fof(f38116,plain,(
  ( ! [X57,X54,X56,X55] : (p(s(bool,X56)) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X57)),X56)) ) | $spl30),
  inference(subsumption_resolution,[],[f37526,f445])).
fof(f37526,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X56)) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X57)),X56)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27953])).
fof(f38114,plain,(
  ( ! [X43,X41,X44,X42] : (p(s(bool,X43)) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X44)),X43)) ) | $spl30),
  inference(subsumption_resolution,[],[f37525,f445])).
fof(f37525,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | p(s(bool,X43)) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X44)),X43)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27949])).
fof(f38104,plain,(
  ( ! [X57,X54,X56,X55] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57)) ) | $spl30),
  inference(subsumption_resolution,[],[f37520,f445])).
fof(f37520,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24556])).
fof(f38102,plain,(
  ( ! [X43,X41,X44,X42] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44)) ) | $spl30),
  inference(subsumption_resolution,[],[f37519,f445])).
fof(f37519,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24552])).
fof(f38100,plain,(
  ( ! [X54,X52,X55,X53] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X54)),X55,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37518,f445])).
fof(f37518,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X54)),X55,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24438])).
fof(f38098,plain,(
  ( ! [X39,X41,X42,X40] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41)),X42,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37517,f445])).
fof(f37517,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41)),X42,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24434])).
fof(f38096,plain,(
  ( ! [X47,X48,X46,X49] : (~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) ) | $spl30),
  inference(subsumption_resolution,[],[f37516,f445])).
fof(f37516,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11844])).
fof(f38094,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X44)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) ) | $spl30),
  inference(subsumption_resolution,[],[f37515,f445])).
fof(f37515,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11843])).
fof(f38092,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X40)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) ) | $spl30),
  inference(subsumption_resolution,[],[f37514,f445])).
fof(f37514,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11842])).
fof(f38090,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) ) | $spl30),
  inference(subsumption_resolution,[],[f37513,f445])).
fof(f37513,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11841])).
fof(f38088,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X33)) | sP1(X33,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37512,f445])).
fof(f37512,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X33)) | sP1(X33,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11840])).
fof(f38086,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) ) | $spl30),
  inference(subsumption_resolution,[],[f37511,f445])).
fof(f37511,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11839])).
fof(f38084,plain,(
  ( ! [X26,X27,X25] : (sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) ) | $spl30),
  inference(subsumption_resolution,[],[f37510,f445])).
fof(f37510,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11838])).
fof(f38082,plain,(
  ( ! [X24,X23,X22] : (sP0(X24,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37509,f445])).
fof(f37509,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X24,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11837])).
fof(f38080,plain,(
  ( ! [X47,X48,X46,X49] : (~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) ) | $spl30),
  inference(subsumption_resolution,[],[f37508,f445])).
fof(f37508,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'T_0')) | ~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8592])).
fof(f38078,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X44)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) ) | $spl30),
  inference(subsumption_resolution,[],[f37507,f445])).
fof(f37507,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8591])).
fof(f38076,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X40)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) ) | $spl30),
  inference(subsumption_resolution,[],[f37506,f445])).
fof(f37506,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8590])).
fof(f38074,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) ) | $spl30),
  inference(subsumption_resolution,[],[f37505,f445])).
fof(f37505,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8589])).
fof(f38072,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X33)) | sP1(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37504,f445])).
fof(f37504,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X33)) | sP1(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8588])).
fof(f38070,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) ) | $spl30),
  inference(subsumption_resolution,[],[f37503,f445])).
fof(f37503,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8587])).
fof(f38068,plain,(
  ( ! [X26,X27,X25] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) ) | $spl30),
  inference(subsumption_resolution,[],[f37502,f445])).
fof(f37502,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8586])).
fof(f38066,plain,(
  ( ! [X24,X23,X22] : (sP0(X24,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37501,f445])).
fof(f37501,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X24,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8585])).
fof(f38062,plain,(
  ( ! [X19,X17,X18] : (s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK13(X18,X17)),s('type.list.list'(X17),sK14(X18,X17)))) = s('type.list.list'(X17),sK15('const.list.CONS_2'(s(X17,sK13(X18,X17)),s('type.list.list'(X17),sK14(X18,X17))),X19,'type.list.list'(X17))) | s('type.list.list'(X17),'const.list.NIL_0') = s('type.list.list'(X17),X18)) ) | $spl30),
  inference(subsumption_resolution,[],[f37497,f445])).
fof(f37497,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK13(X18,X17)),s('type.list.list'(X17),sK14(X18,X17)))) = s('type.list.list'(X17),sK15('const.list.CONS_2'(s(X17,sK13(X18,X17)),s('type.list.list'(X17),sK14(X18,X17))),X19,'type.list.list'(X17))) | s('type.list.list'(X17),'const.list.NIL_0') = s('type.list.list'(X17),X18)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f15020])).
fof(f38060,plain,(
  ( ! [X474,X475,X473] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X473),s('type.num.num',X474))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X473))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X474)))))),X475,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37495,f445])).
fof(f37495,plain,(
  ( ! [X474,X475,X473] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X473),s('type.num.num',X474))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X473))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X474)))))),X475,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f20068])).
fof(f38056,plain,(
  ( ! [X149] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X149,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37493,f445])).
fof(f37493,plain,(
  ( ! [X149] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X149,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f25518])).
fof(f38054,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))),X21,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37492,f445])).
fof(f37492,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))),X21,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7844])).
fof(f38052,plain,(
  ( ! [X412,X414,X413,X411] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X411),X413))))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X411),'const.list.CONS_2'(s(X411,X412),s('type.list.list'(X411),X413)))),X414,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37491,f445])).
fof(f37491,plain,(
  ( ! [X412,X414,X413,X411] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X411),X413))))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X411),'const.list.CONS_2'(s(X411,X412),s('type.list.list'(X411),X413)))),X414,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8093])).
fof(f38050,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X9)),X10,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37490,f445])).
fof(f37490,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X9)),X10,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7838])).
fof(f38048,plain,(
  ( ! [X438,X437] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X437))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X437),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X438,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37489,f445])).
fof(f37489,plain,(
  ( ! [X438,X437] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X437))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X437),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X438,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f30907])).
fof(f38046,plain,(
  ( ! [X325,X327,X326] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num','const.num.SUC_1'(s('type.num.num',X326))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X325),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num',X326)))),X327,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37488,f445])).
fof(f37488,plain,(
  ( ! [X325,X327,X326] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num','const.num.SUC_1'(s('type.num.num',X326))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X325),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num',X326)))),X327,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f13642])).
fof(f38044,plain,(
  ( ! [X315,X316,X314] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X314))),s('type.num.num',X315))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X314),s('type.num.num',X315))),s('type.num.num',X315)),X316,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37487,f445])).
fof(f37487,plain,(
  ( ! [X315,X316,X314] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X314))),s('type.num.num',X315))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X314),s('type.num.num',X315))),s('type.num.num',X315)),X316,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f13342])).
fof(f38036,plain,(
  ( ! [X588,X586,X589,X587] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X587),s('type.num.num',X588))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num',X587))),s('type.num.num',X588)),X589,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37483,f445])).
fof(f37483,plain,(
  ( ! [X588,X586,X589,X587] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X587),s('type.num.num',X588))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num',X587))),s('type.num.num',X588)),X589,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16071])).
fof(f38034,plain,(
  ( ! [X47,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X46))))) = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46)))),X47,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37482,f445])).
fof(f37482,plain,(
  ( ! [X47,X46] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X46))))) = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46)))),X47,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7858])).
fof(f38032,plain,(
  ( ! [X360,X359,X361] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X359),s('type.num.num',X360))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X359))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X360)))),X361,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37481,f445])).
fof(f37481,plain,(
  ( ! [X360,X359,X361] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X359),s('type.num.num',X360))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X359))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X360)))),X361,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f14604])).
fof(f38030,plain,(
  ( ! [X346,X345,X347] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X345),s('type.num.num',X346))))) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X345))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X346)))),X347,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37480,f445])).
fof(f37480,plain,(
  ( ! [X346,X345,X347] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X345),s('type.num.num',X346))))) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X345))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X346)))),X347,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f14274])).
fof(f38028,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37479,f445])).
fof(f37479,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7845])).
fof(f38026,plain,(
  ( ! [X339,X340,X338] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X338),s('type.num.num',X339))))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X338))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X339)))),X340,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37478,f445])).
fof(f37478,plain,(
  ( ! [X339,X340,X338] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X338),s('type.num.num',X339))))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X338))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X339)))),X340,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f13959])).
fof(f38022,plain,(
  ( ! [X480,X482,X481] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X480),s('type.num.num',X481))))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X480))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481)))))),X482,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37476,f445])).
fof(f37476,plain,(
  ( ! [X480,X482,X481] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X480),s('type.num.num',X481))))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X480))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481)))))),X482,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f19362])).
fof(f38018,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37474,f445])).
fof(f37474,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7848])).
fof(f38016,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37473,f445])).
fof(f37473,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7835])).
fof(f38014,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X19,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37472,f445])).
fof(f37472,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X19,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7843])).
fof(f37980,plain,(
  ( ! [X17,X18] : (s('type.num.num',X17) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X17)),X18,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37455,f445])).
fof(f37455,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | s('type.num.num',X17) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X17)),X18,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7842])).
fof(f37978,plain,(
  ( ! [X15,X16] : (s('type.num.num',X15) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X16,'type.num.num'))) ) | $spl30),
  inference(subsumption_resolution,[],[f37454,f445])).
fof(f37454,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | s('type.num.num',X15) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X16,'type.num.num'))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7841])).
fof(f37964,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK15(X2,X1,X0))) ) | $spl30),
  inference(subsumption_resolution,[],[f37434,f445])).
fof(f37434,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X2) = s(X0,sK15(X2,X1,X0))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f575])).
fof(f37962,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37431,f445])).
fof(f37431,plain,(
  ( ! [X42] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f35067])).
fof(f37960,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37429,f445])).
fof(f37429,plain,(
  ( ! [X41,X40] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f35065])).
fof(f37958,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37427,f445])).
fof(f37427,plain,(
  ( ! [X35,X36] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f35057])).
fof(f37956,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37423,f445])).
fof(f37423,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f35048])).
fof(f37893,plain,(
  ( ! [X2,X1] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37351,f445])).
fof(f37351,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.num.num',X2) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7078])).
fof(f37891,plain,(
  ( ! [X28,X27] : (s('type.num.num',X28) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37349,f445])).
fof(f37349,plain,(
  ( ! [X28,X27] : (~p(s(bool,'T_0')) | s('type.num.num',X28) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7197])).
fof(f37889,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl30),
  inference(subsumption_resolution,[],[f37347,f445])).
fof(f37347,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f658])).
fof(f37887,plain,(
  ( ! [X4,X3] : (s('type.num.num',X4) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37343,f445])).
fof(f37343,plain,(
  ( ! [X4,X3] : (~p(s(bool,'T_0')) | s('type.num.num',X4) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7079])).
fof(f37885,plain,(
  ( ! [X45,X46] : (s('type.num.num',X46) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X45)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37341,f445])).
fof(f37341,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s('type.num.num',X46) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X45)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7214])).
fof(f37883,plain,(
  ( ! [X21,X22] : (s('type.num.num',X22) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37339,f445])).
fof(f37339,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.num.num',X22) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7193])).
fof(f37881,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37337,f445])).
fof(f37337,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7191])).
fof(f37873,plain,(
  ( ! [X127,X126] : (s('type.num.num',X127) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X126)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37319,f445])).
fof(f37319,plain,(
  ( ! [X127,X126] : (~p(s(bool,'T_0')) | s('type.num.num',X127) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X126)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f30891])).
fof(f37859,plain,(
  ( ! [X61,X59,X60,X58] : (p(s(bool,X60)) | ~sP5('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X61)),X60)) ) | $spl30),
  inference(subsumption_resolution,[],[f37311,f445])).
fof(f37311,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'T_0')) | p(s(bool,X60)) | ~sP5('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X61)),X60)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27954])).
fof(f37857,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X39)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)),X39)) ) | $spl30),
  inference(subsumption_resolution,[],[f37310,f445])).
fof(f37310,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X39)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)),X39)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27948])).
fof(f37855,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,X35)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36)),X35)) ) | $spl30),
  inference(subsumption_resolution,[],[f37309,f445])).
fof(f37309,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36)),X35)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27947])).
fof(f37853,plain,(
  ( ! [X30,X28,X31,X29,X32] : (p(s(bool,X31)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)),X31)) ) | $spl30),
  inference(subsumption_resolution,[],[f37308,f445])).
fof(f37308,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'T_0')) | p(s(bool,X31)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)),X31)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27946])).
fof(f37851,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,X26)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)),X26)) ) | $spl30),
  inference(subsumption_resolution,[],[f37307,f445])).
fof(f37307,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)),X26)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27945])).
fof(f37849,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,X22)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X22)) ) | $spl30),
  inference(subsumption_resolution,[],[f37306,f445])).
fof(f37306,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | p(s(bool,X22)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X22)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f27944])).
fof(f37823,plain,(
  ( ! [X61,X59,X60,X58] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61)) ) | $spl30),
  inference(subsumption_resolution,[],[f37293,f445])).
fof(f37293,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24557])).
fof(f37821,plain,(
  ( ! [X39,X37,X38,X40] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40)) ) | $spl30),
  inference(subsumption_resolution,[],[f37292,f445])).
fof(f37292,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24551])).
fof(f37819,plain,(
  ( ! [X35,X33,X36,X34] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X36)) ) | $spl30),
  inference(subsumption_resolution,[],[f37291,f445])).
fof(f37291,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X36)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24550])).
fof(f37817,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),X32)) ) | $spl30),
  inference(subsumption_resolution,[],[f37290,f445])).
fof(f37290,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),X32)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24549])).
fof(f37815,plain,(
  ( ! [X26,X24,X27,X25] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),X27)) ) | $spl30),
  inference(subsumption_resolution,[],[f37289,f445])).
fof(f37289,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),X27)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24548])).
fof(f37813,plain,(
  ( ! [X23,X21,X22,X20] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X22)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),X23)) ) | $spl30),
  inference(subsumption_resolution,[],[f37288,f445])).
fof(f37288,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X22)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),X23)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24547])).
fof(f37811,plain,(
  ( ! [X59,X57,X58,X56] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)),X59,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37287,f445])).
fof(f37287,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)),X59,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24439])).
fof(f37809,plain,(
  ( ! [X37,X35,X38,X36] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37286,f445])).
fof(f37286,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24433])).
fof(f37807,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X33)),X34,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37285,f445])).
fof(f37285,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X33)),X34,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24432])).
fof(f37805,plain,(
  ( ! [X30,X28,X26,X29,X27] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29)),X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X28)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37284,f445])).
fof(f37284,plain,(
  ( ! [X30,X28,X26,X29,X27] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29)),X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X28)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24431])).
fof(f37803,plain,(
  ( ! [X24,X23,X25,X22] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)),X25,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37283,f445])).
fof(f37283,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)),X25,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24430])).
fof(f37801,plain,(
  ( ! [X21,X19,X20,X18] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20)),X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37282,f445])).
fof(f37282,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20)),X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f24429])).
fof(f37799,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37798,f445])).
fof(f37798,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6)))) ) | $spl30),
  inference(forward_demodulation,[],[f37797,f37063])).
fof(f37797,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37279,f445])).
fof(f37279,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16260])).
fof(f37276,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X87))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X85),s('type.list.list'(bool),X86))) | s(bool,X85) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num',X83))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num',X84)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16250])).
fof(f37794,plain,(
  ( ! [X76,X74,X72,X75,X73] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X74)))),X75,X76) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X74)))),X75,X76)) ) | $spl30),
  inference(subsumption_resolution,[],[f37275,f445])).
fof(f37275,plain,(
  ( ! [X76,X74,X72,X75,X73] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X74)))),X75,X76) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X74)))),X75,X76)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16248])).
fof(f37792,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,X70)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X68))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X69)))),X70,X71)) ) | $spl30),
  inference(subsumption_resolution,[],[f37274,f445])).
fof(f37274,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X70)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X68))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X69)))),X70,X71)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16247])).
fof(f37790,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X65)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X64)))),X66,X65)) ) | $spl30),
  inference(subsumption_resolution,[],[f37273,f445])).
fof(f37273,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X65)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X64)))),X66,X65)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16246])).
fof(f37788,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X60)) | p(s(bool,X61)) | ~sP5(X60,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X58))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X59)))),X61)) ) | $spl30),
  inference(subsumption_resolution,[],[f37272,f445])).
fof(f37272,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X60)) | p(s(bool,X61)) | ~sP5(X60,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X58))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X59)))),X61)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16245])).
fof(f37786,plain,(
  ( ! [X54,X56,X55,X53] : (p(s(bool,X56)) | sP1(X56,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X54))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X55)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37271,f445])).
fof(f37271,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X56)) | sP1(X56,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X54))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X55)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16244])).
fof(f37784,plain,(
  ( ! [X52,X50,X51,X49] : (p(s(bool,X52)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X50))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X51)))),X52)) ) | $spl30),
  inference(subsumption_resolution,[],[f37270,f445])).
fof(f37270,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,X52)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X50))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X51)))),X52)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16243])).
fof(f37782,plain,(
  ( ! [X47,X45,X48,X46] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X47)))),X48)) ) | $spl30),
  inference(subsumption_resolution,[],[f37269,f445])).
fof(f37269,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X47)))),X48)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16242])).
fof(f37780,plain,(
  ( ! [X43,X41,X44,X42] : (sP0(X44,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X43)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37268,f445])).
fof(f37268,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | sP0(X44,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X43)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f16241])).
fof(f37758,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37757,f445])).
fof(f37757,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl30),
  inference(forward_demodulation,[],[f37756,f37063])).
fof(f37756,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11)))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37259,f445])).
fof(f37259,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11)))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f13053])).
fof(f37754,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37753,f445])).
fof(f37753,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) ) | $spl30),
  inference(forward_demodulation,[],[f37752,f37063])).
fof(f37752,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37258,f445])).
fof(f37258,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f13052])).
fof(f37750,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37749,f445])).
fof(f37749,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) ) | $spl30),
  inference(forward_demodulation,[],[f37748,f37063])).
fof(f37748,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) ) | $spl30),
  inference(subsumption_resolution,[],[f37257,f445])).
fof(f37257,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f13051])).
fof(f37746,plain,(
  ( ! [X50,X48,X51,X49] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(subsumption_resolution,[],[f37254,f445])).
fof(f37254,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12113])).
fof(f37744,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(subsumption_resolution,[],[f37253,f445])).
fof(f37253,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12112])).
fof(f37742,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(subsumption_resolution,[],[f37252,f445])).
fof(f37252,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12111])).
fof(f37740,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(subsumption_resolution,[],[f37251,f445])).
fof(f37251,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12110])).
fof(f37738,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37250,f445])).
fof(f37250,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12109])).
fof(f37736,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(subsumption_resolution,[],[f37249,f445])).
fof(f37249,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12108])).
fof(f37734,plain,(
  ( ! [X28,X29,X27] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(subsumption_resolution,[],[f37248,f445])).
fof(f37248,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12107])).
fof(f37732,plain,(
  ( ! [X26,X24,X25] : (sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37247,f445])).
fof(f37247,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f12106])).
fof(f37730,plain,(
  ( ! [X50,X48,X51,X49] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(subsumption_resolution,[],[f37244,f445])).
fof(f37244,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11978])).
fof(f37728,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(subsumption_resolution,[],[f37243,f445])).
fof(f37243,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11977])).
fof(f37726,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(subsumption_resolution,[],[f37242,f445])).
fof(f37242,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11976])).
fof(f37724,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(subsumption_resolution,[],[f37241,f445])).
fof(f37241,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11975])).
fof(f37722,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37240,f445])).
fof(f37240,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11974])).
fof(f37720,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(subsumption_resolution,[],[f37239,f445])).
fof(f37239,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11973])).
fof(f37718,plain,(
  ( ! [X28,X29,X27] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(subsumption_resolution,[],[f37238,f445])).
fof(f37238,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11972])).
fof(f37716,plain,(
  ( ! [X26,X24,X25] : (sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37237,f445])).
fof(f37237,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f11971])).
fof(f37714,plain,(
  ( ! [X47,X48,X46,X49] : (~sP8('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) ) | $spl30),
  inference(subsumption_resolution,[],[f37235,f445])).
fof(f37235,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8841])).
fof(f37712,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X44)) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) ) | $spl30),
  inference(subsumption_resolution,[],[f37234,f445])).
fof(f37234,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8840])).
fof(f37710,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X40)) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) ) | $spl30),
  inference(subsumption_resolution,[],[f37233,f445])).
fof(f37233,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8839])).
fof(f37708,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) ) | $spl30),
  inference(subsumption_resolution,[],[f37232,f445])).
fof(f37232,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8838])).
fof(f37706,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X33)) | sP1(X33,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37231,f445])).
fof(f37231,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X33)) | sP1(X33,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8837])).
fof(f37704,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) ) | $spl30),
  inference(subsumption_resolution,[],[f37230,f445])).
fof(f37230,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8836])).
fof(f37702,plain,(
  ( ! [X26,X27,X25] : (sP0('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) ) | $spl30),
  inference(subsumption_resolution,[],[f37229,f445])).
fof(f37229,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8835])).
fof(f37700,plain,(
  ( ! [X24,X23,X22] : (sP0(X24,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37228,f445])).
fof(f37228,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X24,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8834])).
fof(f37698,plain,(
  ( ! [X50,X48,X51,X49] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(subsumption_resolution,[],[f37226,f445])).
fof(f37226,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8698])).
fof(f37696,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(subsumption_resolution,[],[f37225,f445])).
fof(f37225,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8697])).
fof(f37694,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(subsumption_resolution,[],[f37224,f445])).
fof(f37224,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8696])).
fof(f37692,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(subsumption_resolution,[],[f37223,f445])).
fof(f37223,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8695])).
fof(f37690,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37222,f445])).
fof(f37222,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8694])).
fof(f37688,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(subsumption_resolution,[],[f37221,f445])).
fof(f37221,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8693])).
fof(f37686,plain,(
  ( ! [X28,X29,X27] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(subsumption_resolution,[],[f37220,f445])).
fof(f37220,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8692])).
fof(f37684,plain,(
  ( ! [X26,X24,X25] : (sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37219,f445])).
fof(f37219,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8691])).
fof(f37682,plain,(
  ( ! [X50,X48,X51,X49] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(subsumption_resolution,[],[f37216,f445])).
fof(f37216,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))),X50,X51)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8487])).
fof(f37680,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(subsumption_resolution,[],[f37215,f445])).
fof(f37215,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X46,X47)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8486])).
fof(f37678,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(subsumption_resolution,[],[f37214,f445])).
fof(f37214,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X43,X42)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8485])).
fof(f37676,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(subsumption_resolution,[],[f37213,f445])).
fof(f37213,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37)))),X39)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8484])).
fof(f37674,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37212,f445])).
fof(f37212,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'T_0')) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8483])).
fof(f37672,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(subsumption_resolution,[],[f37211,f445])).
fof(f37211,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31)))),X32)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8482])).
fof(f37670,plain,(
  ( ! [X28,X29,X27] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(subsumption_resolution,[],[f37210,f445])).
fof(f37210,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X29)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8481])).
fof(f37668,plain,(
  ( ! [X26,X24,X25] : (sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37209,f445])).
fof(f37209,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f8480])).
fof(f37663,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl30),
  inference(subsumption_resolution,[],[f37662,f445])).
fof(f37662,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl30),
  inference(forward_demodulation,[],[f37661,f37063])).
fof(f37661,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl30),
  inference(subsumption_resolution,[],[f37203,f445])).
fof(f37203,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f612])).
fof(f37659,plain,(
  ( ! [X3] : (s('type.num.num',X3) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl30),
  inference(subsumption_resolution,[],[f37190,f445])).
fof(f37190,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.num.num',X3) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7178])).
fof(f37657,plain,(
  ( ! [X75] : (s('type.num.num',X75) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl30),
  inference(subsumption_resolution,[],[f37187,f445])).
fof(f37187,plain,(
  ( ! [X75] : (~p(s(bool,'T_0')) | s('type.num.num',X75) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f25514])).
fof(f37655,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl30),
  inference(subsumption_resolution,[],[f37182,f445])).
fof(f37182,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f7077])).
fof(f37653,plain,(
  ( ! [X43,X42] : (s('type.num.num',X42) != s('type.num.num',X43)) ) | $spl30),
  inference(subsumption_resolution,[],[f37179,f3365])).
fof(f37179,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.num.num',X42) != s('type.num.num',X43)) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f34895])).
fof(f37165,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X17))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X18),s('type.list.list'(bool),X19))) | s(bool,X18) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f15118])).
fof(f37164,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X13))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X14),s('type.list.list'(bool),X15))) | s(bool,X14) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f15117])).
fof(f37645,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl30),
  inference(subsumption_resolution,[],[f37134,f37063])).
fof(f37134,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f506])).
fof(f36739,plain,(
  ( ! [X235,X233,X236,X234] : (s(X235,f(s(bool,'T_0'))) != s(X235,g(s(bool,'T_0'))) | s(fun(bool,X235),X233) = s(fun(bool,X235),X234) | s(bool,X236) = s(bool,sK16(X233,X234,X235,bool)) | s(bool,'T_0') = s(bool,X236)) )),
  inference(superposition,[],[f667,f1259])).
fof(f36738,plain,(
  ( ! [X231,X230,X232] : (p(s(bool,happ(s(fun(bool,bool),X231),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X231),s(bool,X230)))) | s(bool,X232) = s(bool,sK15(X230,X231,bool)) | s(bool,'T_0') = s(bool,X232)) )),
  inference(superposition,[],[f576,f1259])).
fof(f36737,plain,(
  ( ! [X229,X228] : (s('type.list.list'(bool),X228) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),sK14(X228,bool)))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X228) | s(bool,X229) = s(bool,sK13(X228,bool)) | s(bool,'T_0') = s(bool,X229)) )),
  inference(superposition,[],[f562,f1259])).
fof(f36736,plain,(
  ( ! [X227,X225,X226,X224] : (s(bool,'T_0') != s(bool,f(s(X224,sK16(X225,X226,bool,X224)))) | s(fun(X224,bool),X225) = s(fun(X224,bool),X226) | s(bool,X227) = s(bool,g(s(X224,sK16(X225,X226,bool,X224)))) | s(bool,'T_0') = s(bool,X227)) )),
  inference(superposition,[],[f667,f1259])).
fof(f36731,plain,(
  ( ! [X198,X202,X200,X199,X201] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X199))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X200),s('type.list.list'(bool),X201))) | s(bool,X198) = s(bool,X200) | s(bool,X198) = s(bool,X202) | s(bool,'T_0') = s(bool,X202)) )),
  inference(superposition,[],[f578,f1259])).
fof(f36729,plain,(
  ( ! [X194,X192,X193] : (~p(s(bool,happ(s(fun(bool,bool),X193),s(bool,'T_0')))) | s(bool,X192) = s(bool,sK15(X192,X193,bool)) | s(bool,X192) = s(bool,X194) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f575,f1259])).
fof(f36728,plain,(
  ( ! [X191,X189,X190,X188] : (~p(s(bool,happ(s(fun(bool,bool),X189),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X189),s(bool,X190)))) | s(bool,X188) != s(bool,X190) | s(bool,X188) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) )),
  inference(superposition,[],[f574,f1259])).
fof(f37109,plain,(
  ( ! [X154,X152,X151,X153] : (s(X151,X153) = s(X151,sK15(X153,X152,X151)) | s(bool,X154) = s(bool,happ(s(fun(X151,bool),X152),s(X151,X153))) | s(bool,'T_0') = s(bool,X154)) )),
  inference(subsumption_resolution,[],[f36713,f445])).
fof(f36713,plain,(
  ( ! [X154,X152,X151,X153] : (~p(s(bool,'T_0')) | s(X151,X153) = s(X151,sK15(X153,X152,X151)) | s(bool,X154) = s(bool,happ(s(fun(X151,bool),X152),s(X151,X153))) | s(bool,'T_0') = s(bool,X154)) )),
  inference(superposition,[],[f575,f1259])).
fof(f37108,plain,(
  ( ! [X146,X149,X147,X150,X148] : (p(s(bool,happ(s(fun(X146,bool),X147),s(X146,X149)))) | s(X146,X148) != s(X146,X149) | s(bool,X150) = s(bool,happ(s(fun(X146,bool),X147),s(X146,X148))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(subsumption_resolution,[],[f36712,f445])).
fof(f36712,plain,(
  ( ! [X146,X149,X147,X150,X148] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X146,bool),X147),s(X146,X149)))) | s(X146,X148) != s(X146,X149) | s(bool,X150) = s(bool,happ(s(fun(X146,bool),X147),s(X146,X148))) | s(bool,'T_0') = s(bool,X150)) )),
  inference(superposition,[],[f574,f1259])).
fof(f37107,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X127),s('type.num.num',X126)))) | s(bool,X128) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))))) | s(bool,'T_0') = s(bool,X128)) )),
  inference(subsumption_resolution,[],[f36706,f445])).
fof(f36706,plain,(
  ( ! [X127,X128,X126] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X127),s('type.num.num',X126)))) | s(bool,X128) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X126))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X127))))) | s(bool,'T_0') = s(bool,X128)) )),
  inference(superposition,[],[f629,f1259])).
fof(f37104,plain,(
  ( ! [X109,X107,X108] : (s('type.num.num',X107) != s('type.num.num',X108) | s(bool,X109) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X107))),s('type.num.num',X108))) | s(bool,'T_0') = s(bool,X109)) )),
  inference(subsumption_resolution,[],[f36698,f445])).
fof(f36698,plain,(
  ( ! [X109,X107,X108] : (~p(s(bool,'T_0')) | s('type.num.num',X107) != s('type.num.num',X108) | s(bool,X109) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X107))),s('type.num.num',X108))) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f658,f1259])).
fof(f37103,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X96),s('type.num.num',X95)))) | s('type.num.num',X95) = s('type.num.num',X96) | s(bool,X97) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X95),s('type.num.num',X96))) | s(bool,'T_0') = s(bool,X97)) )),
  inference(subsumption_resolution,[],[f36694,f445])).
fof(f36694,plain,(
  ( ! [X97,X95,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X96),s('type.num.num',X95)))) | s('type.num.num',X95) = s('type.num.num',X96) | s(bool,X97) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X95),s('type.num.num',X96))) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f612,f1259])).
fof(f37102,plain,(
  ( ! [X94,X92,X93,X91] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X92),s('type.num.num',X93)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X91),s('type.num.num',X93)))) | s(bool,X94) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X91),s('type.num.num',X92))) | s(bool,'T_0') = s(bool,X94)) )),
  inference(subsumption_resolution,[],[f36693,f445])).
fof(f36693,plain,(
  ( ! [X94,X92,X93,X91] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X92),s('type.num.num',X93)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X91),s('type.num.num',X93)))) | s(bool,X94) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X91),s('type.num.num',X92))) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f670,f1259])).
fof(f37101,plain,(
  ( ! [X88,X87] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X87) | s(bool,X88) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87))) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f36692,f445])).
fof(f36692,plain,(
  ( ! [X88,X87] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X87) | s(bool,X88) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X87))) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f7077,f1259])).
fof(f37097,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,X62)) | ~sP5(X61,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X63)),X62) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f36682,f445])).
fof(f36682,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,X62)) | ~sP5(X61,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X63)),X62) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f2119,f1259])).
fof(f37096,plain,(
  ( ! [X57,X54,X56,X55] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X55)),X54,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f36680,f445])).
fof(f36680,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X55)),X54,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f966,f1259])).
fof(f37095,plain,(
  ( ! [X52,X50,X53,X51] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)),X52,X50) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f36679,f445])).
fof(f36679,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)),X52,X50) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f965,f1259])).
fof(f37094,plain,(
  ( ! [X47,X48,X46,X49] : (~sP8(X46,X47,X48) | sP9(X46,X47,X48) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f36678,f445])).
fof(f36678,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'T_0')) | ~sP8(X46,X47,X48) | sP9(X46,X47,X48) | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f740,f1259])).
fof(f37093,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X43)) | sP9(X42,X43,X44) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f36677,f445])).
fof(f36677,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X43)) | sP9(X42,X43,X44) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f736,f1259])).
fof(f37092,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X39)) | sP9(X38,X40,X39) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f36676,f445])).
fof(f36676,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X39)) | sP9(X38,X40,X39) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f735,f1259])).
fof(f37091,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,X35)) | p(s(bool,X36)) | ~sP5(X35,X34,X36) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f36675,f445])).
fof(f36675,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X35)) | p(s(bool,X36)) | ~sP5(X35,X34,X36) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f686,f1259])).
fof(f37090,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X32)) | sP1(X32,X31) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f36674,f445])).
fof(f36674,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | p(s(bool,X32)) | sP1(X32,X31) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f651,f1259])).
fof(f37089,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X28,X29) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f36673,f445])).
fof(f36673,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X28,X29) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f648,f1259])).
fof(f37088,plain,(
  ( ! [X26,X27,X25] : (sP0(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f36672,f445])).
fof(f36672,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | sP0(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f633,f1259])).
fof(f37087,plain,(
  ( ! [X24,X23,X22] : (sP0(X23,X22) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f36671,f445])).
fof(f36671,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X23,X22) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f632,f1259])).
fof(f37086,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f36669,f445])).
fof(f36669,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f609,f1259])).
fof(f37085,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f36665,f445])).
fof(f36665,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f506,f1259])).
fof(f36655,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,happ(s(fun(bool,bool),X90),s(bool,X89)))) | s(bool,'T_0') = s(bool,sK15('T_0',X90,bool)) | s(bool,X89) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f575,f1259])).
fof(f36654,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,happ(s(fun(bool,bool),X86),s(bool,X85)))) | p(s(bool,happ(s(fun(bool,bool),X86),s(bool,X87)))) | s(bool,'T_0') != s(bool,X87) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f574,f1259])).
fof(f36628,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f502,f1259])).
fof(f36544,plain,(
  ( ! [X243,X241,X244,X242] : (s(X243,f(s(bool,X244))) != s(X243,g(s(bool,X244))) | s(fun(bool,X243),X241) = s(fun(bool,X243),X242) | s(bool,'T_0') = s(bool,X244) | s(bool,'T_0') = s(bool,sK16(X241,X242,X243,bool))) )),
  inference(superposition,[],[f667,f1259])).
fof(f36543,plain,(
  ( ! [X239,X240,X238] : (p(s(bool,happ(s(fun(bool,bool),X239),s(bool,X240)))) | ~p(s(bool,happ(s(fun(bool,bool),X239),s(bool,X238)))) | s(bool,'T_0') = s(bool,X240) | s(bool,'T_0') = s(bool,sK15(X238,X239,bool))) )),
  inference(superposition,[],[f576,f1259])).
fof(f36542,plain,(
  ( ! [X237,X236] : (s('type.list.list'(bool),X236) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X237),s('type.list.list'(bool),sK14(X236,bool)))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X236) | s(bool,'T_0') = s(bool,X237) | s(bool,'T_0') = s(bool,sK13(X236,bool))) )),
  inference(superposition,[],[f562,f1259])).
fof(f36541,plain,(
  ( ! [X235,X233,X234,X232] : (s(bool,X235) != s(bool,f(s(X232,sK16(X233,X234,bool,X232)))) | s(fun(X232,bool),X233) = s(fun(X232,bool),X234) | s(bool,'T_0') = s(bool,X235) | s(bool,'T_0') = s(bool,g(s(X232,sK16(X233,X234,bool,X232))))) )),
  inference(superposition,[],[f667,f1259])).
fof(f36536,plain,(
  ( ! [X208,X206,X209,X207,X205] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X206),s('type.list.list'(bool),X207))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X208),s('type.list.list'(bool),X209))) | s(bool,X205) = s(bool,X208) | s(bool,'T_0') = s(bool,X206) | s(bool,'T_0') = s(bool,X205)) )),
  inference(superposition,[],[f578,f1259])).
fof(f36534,plain,(
  ( ! [X200,X199,X201] : (~p(s(bool,happ(s(fun(bool,bool),X201),s(bool,X200)))) | s(bool,X199) = s(bool,sK15(X199,X201,bool)) | s(bool,'T_0') = s(bool,X200) | s(bool,'T_0') = s(bool,X199)) )),
  inference(superposition,[],[f575,f1259])).
fof(f36533,plain,(
  ( ! [X198,X196,X197,X195] : (~p(s(bool,happ(s(fun(bool,bool),X197),s(bool,X196)))) | p(s(bool,happ(s(fun(bool,bool),X197),s(bool,X198)))) | s(bool,X195) != s(bool,X198) | s(bool,'T_0') = s(bool,X196) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f574,f1259])).
fof(f36434,plain,(
  ( ! [X61,X60] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X60))) | s(bool,X61) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f1259,f476])).
fof(f36433,plain,(
  ( ! [X59,X58] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X58))) | s(bool,X59) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))))) | s(bool,'T_0') = s(bool,X59)) )),
  inference(superposition,[],[f1259,f478])).
fof(f36431,plain,(
  ( ! [X54,X55,X53] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X54),s('type.num.num',X53))) | s(bool,X55) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))))) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f1259,f584])).
fof(f36430,plain,(
  ( ! [X52,X50,X51] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X50))) | s(bool,X52) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))))) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f1259,f585])).
fof(f36426,plain,(
  ( ! [X43,X41,X42] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42))) | s(bool,X43) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))))) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1259,f582])).
fof(f36425,plain,(
  ( ! [X39,X38,X40] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X38),s('type.num.num',X39))) | s(bool,X40) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39))))) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1259,f587])).
fof(f36424,plain,(
  ( ! [X37,X35,X36] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36))) | s(bool,X37) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))))) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f1259,f586])).
fof(f36423,plain,(
  ( ! [X30,X31,X29,X32] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31))) | s(bool,X32) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num',X31))))) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f1259,f669])).
fof(f36422,plain,(
  ( ! [X28,X26,X27] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X26),s('type.num.num',X27))) | s(bool,X28) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))))) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1259,f581])).
fof(f36421,plain,(
  ( ! [X24,X23,X25] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X24))) | s(bool,X25) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f1259,f583])).
fof(f36408,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1259,f1259])).
fof(f36377,plain,(
  ( ! [X72,X71] : (s(bool,X72) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X71))) | s(bool,'T_0') = s(bool,X72) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))))) )),
  inference(superposition,[],[f1259,f476])).
fof(f36375,plain,(
  ( ! [X68,X69] : (s(bool,X69) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X68))) | s(bool,'T_0') = s(bool,X69) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))))) )),
  inference(superposition,[],[f1259,f478])).
fof(f36372,plain,(
  ( ! [X64,X62,X63] : (s(bool,X64) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X63),s('type.num.num',X62))) | s(bool,'T_0') = s(bool,X64) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))))) )),
  inference(superposition,[],[f1259,f584])).
fof(f36371,plain,(
  ( ! [X61,X59,X60] : (s(bool,X61) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X60),s('type.num.num',X59))) | s(bool,'T_0') = s(bool,X61) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))))) )),
  inference(superposition,[],[f1259,f585])).
fof(f36367,plain,(
  ( ! [X52,X50,X51] : (s(bool,X52) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X50),s('type.num.num',X51))) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))))) )),
  inference(superposition,[],[f1259,f582])).
fof(f36366,plain,(
  ( ! [X47,X48,X49] : (s(bool,X49) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X47),s('type.num.num',X48))) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48)))))) )),
  inference(superposition,[],[f1259,f587])).
fof(f36365,plain,(
  ( ! [X45,X46,X44] : (s(bool,X46) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45))) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))))) )),
  inference(superposition,[],[f1259,f586])).
fof(f36363,plain,(
  ( ! [X39,X37,X38,X40] : (s(bool,X40) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X38),s('type.num.num',X39))) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X39)))))) )),
  inference(superposition,[],[f1259,f669])).
fof(f36362,plain,(
  ( ! [X35,X36,X34] : (s(bool,X36) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X34),s('type.num.num',X35))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))))) )),
  inference(superposition,[],[f1259,f581])).
fof(f36361,plain,(
  ( ! [X33,X31,X32] : (s(bool,X33) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32))) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f1259,f583])).
fof(f35082,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f34986,f445])).
fof(f34986,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f7077,f3365])).
fof(f35078,plain,(
  ( ! [X47,X46] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))))) )),
  inference(subsumption_resolution,[],[f35077,f445])).
fof(f35077,plain,(
  ( ! [X47,X46] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))))) )),
  inference(forward_demodulation,[],[f35076,f459])).
fof(f35076,plain,(
  ( ! [X47,X46] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X47)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))))) )),
  inference(forward_demodulation,[],[f34984,f586])).
fof(f34984,plain,(
  ( ! [X47,X46] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X47)))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))))) )),
  inference(superposition,[],[f7077,f605])).
fof(f35067,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42))))))) )),
  inference(forward_demodulation,[],[f35066,f482])).
fof(f35066,plain,(
  ( ! [X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))) )),
  inference(forward_demodulation,[],[f34980,f8436])).
fof(f34980,plain,(
  ( ! [X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))) )),
  inference(superposition,[],[f7077,f482])).
fof(f35065,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41))))))) )),
  inference(forward_demodulation,[],[f35064,f592])).
fof(f35064,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))))) )),
  inference(forward_demodulation,[],[f34979,f8436])).
fof(f34979,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))))) )),
  inference(superposition,[],[f7077,f592])).
fof(f35057,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36))))))) )),
  inference(forward_demodulation,[],[f35056,f591])).
fof(f35056,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))))) )),
  inference(forward_demodulation,[],[f34974,f8436])).
fof(f34974,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))))) )),
  inference(superposition,[],[f7077,f591])).
fof(f35052,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(subsumption_resolution,[],[f35051,f445])).
fof(f35051,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f35050,f459])).
fof(f35050,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f34971,f583])).
fof(f34971,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f7077,f5834])).
fof(f35048,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f35047,f590])).
fof(f35047,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) )),
  inference(forward_demodulation,[],[f34961,f8436])).
fof(f34961,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) )),
  inference(superposition,[],[f7077,f590])).
fof(f34758,plain,(
  ( ! [X127,X130,X128,X126,X129] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X128))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X129),s('type.list.list'(bool),X130))) | s(bool,X129) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X126),s('type.num.num',X127))) | s('type.num.num',X126) != s('type.num.num',X127)) )),
  inference(superposition,[],[f578,f3365])).
fof(f34756,plain,(
  ( ! [X121,X122,X120] : (~p(s(bool,happ(s(fun(bool,bool),X122),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X120),s('type.num.num',X121))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num',X120),s('type.num.num',X121)),X122,bool)) | s('type.num.num',X120) != s('type.num.num',X121)) )),
  inference(superposition,[],[f575,f3365])).
fof(f34755,plain,(
  ( ! [X118,X116,X119,X117] : (~p(s(bool,happ(s(fun(bool,bool),X118),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X118),s(bool,X119)))) | s(bool,X119) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X116),s('type.num.num',X117))) | s('type.num.num',X116) != s('type.num.num',X117)) )),
  inference(superposition,[],[f574,f3365])).
fof(f34908,plain,(
  ( ! [X99,X97,X100,X98] : (p(s(bool,X99)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num',X97),s('type.num.num',X98)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X100)),X99) | s('type.num.num',X97) != s('type.num.num',X98)) )),
  inference(subsumption_resolution,[],[f34750,f445])).
fof(f34750,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,'T_0')) | p(s(bool,X99)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num',X97),s('type.num.num',X98)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X100)),X99) | s('type.num.num',X97) != s('type.num.num',X98)) )),
  inference(superposition,[],[f2119,f3365])).
fof(f34907,plain,(
  ( ! [X92,X90,X93,X91] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),'const.arithmetic.<=_2'(s('type.num.num',X90),s('type.num.num',X91)),X93) | s('type.num.num',X90) != s('type.num.num',X91)) )),
  inference(subsumption_resolution,[],[f34748,f445])).
fof(f34748,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),'const.arithmetic.<=_2'(s('type.num.num',X90),s('type.num.num',X91)),X93) | s('type.num.num',X90) != s('type.num.num',X91)) )),
  inference(superposition,[],[f966,f3365])).
fof(f34906,plain,(
  ( ! [X88,X87,X89,X86] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X88)),X89,'const.arithmetic.<=_2'(s('type.num.num',X86),s('type.num.num',X87))) | s('type.num.num',X86) != s('type.num.num',X87)) )),
  inference(subsumption_resolution,[],[f34747,f445])).
fof(f34747,plain,(
  ( ! [X88,X87,X89,X86] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X88)),X89,'const.arithmetic.<=_2'(s('type.num.num',X86),s('type.num.num',X87))) | s('type.num.num',X86) != s('type.num.num',X87)) )),
  inference(superposition,[],[f965,f3365])).
fof(f34905,plain,(
  ( ! [X85,X83,X84,X82] : (~sP8('const.arithmetic.<=_2'(s('type.num.num',X82),s('type.num.num',X83)),X84,X85) | sP9('const.arithmetic.<=_2'(s('type.num.num',X82),s('type.num.num',X83)),X84,X85) | s('type.num.num',X82) != s('type.num.num',X83)) )),
  inference(subsumption_resolution,[],[f34746,f445])).
fof(f34746,plain,(
  ( ! [X85,X83,X84,X82] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num',X82),s('type.num.num',X83)),X84,X85) | sP9('const.arithmetic.<=_2'(s('type.num.num',X82),s('type.num.num',X83)),X84,X85) | s('type.num.num',X82) != s('type.num.num',X83)) )),
  inference(superposition,[],[f740,f3365])).
fof(f34904,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X80)) | sP9('const.arithmetic.<=_2'(s('type.num.num',X78),s('type.num.num',X79)),X80,X81) | s('type.num.num',X78) != s('type.num.num',X79)) )),
  inference(subsumption_resolution,[],[f34745,f445])).
fof(f34745,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,'T_0')) | ~p(s(bool,X80)) | sP9('const.arithmetic.<=_2'(s('type.num.num',X78),s('type.num.num',X79)),X80,X81) | s('type.num.num',X78) != s('type.num.num',X79)) )),
  inference(superposition,[],[f736,f3365])).
fof(f34903,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,X76)) | sP9('const.arithmetic.<=_2'(s('type.num.num',X74),s('type.num.num',X75)),X77,X76) | s('type.num.num',X74) != s('type.num.num',X75)) )),
  inference(subsumption_resolution,[],[f34744,f445])).
fof(f34744,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | sP9('const.arithmetic.<=_2'(s('type.num.num',X74),s('type.num.num',X75)),X77,X76) | s('type.num.num',X74) != s('type.num.num',X75)) )),
  inference(superposition,[],[f735,f3365])).
fof(f34902,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,X72)) | p(s(bool,X73)) | ~sP5(X72,'const.arithmetic.<=_2'(s('type.num.num',X70),s('type.num.num',X71)),X73) | s('type.num.num',X70) != s('type.num.num',X71)) )),
  inference(subsumption_resolution,[],[f34743,f445])).
fof(f34743,plain,(
  ( ! [X70,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X72)) | p(s(bool,X73)) | ~sP5(X72,'const.arithmetic.<=_2'(s('type.num.num',X70),s('type.num.num',X71)),X73) | s('type.num.num',X70) != s('type.num.num',X71)) )),
  inference(superposition,[],[f686,f3365])).
fof(f34901,plain,(
  ( ! [X68,X69,X67] : (p(s(bool,X69)) | sP1(X69,'const.arithmetic.<=_2'(s('type.num.num',X67),s('type.num.num',X68))) | s('type.num.num',X67) != s('type.num.num',X68)) )),
  inference(subsumption_resolution,[],[f34742,f445])).
fof(f34742,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X69)) | sP1(X69,'const.arithmetic.<=_2'(s('type.num.num',X67),s('type.num.num',X68))) | s('type.num.num',X67) != s('type.num.num',X68)) )),
  inference(superposition,[],[f651,f3365])).
fof(f34900,plain,(
  ( ! [X66,X64,X65] : (p(s(bool,X66)) | sP1('const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65)),X66) | s('type.num.num',X64) != s('type.num.num',X65)) )),
  inference(subsumption_resolution,[],[f34741,f445])).
fof(f34741,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'T_0')) | p(s(bool,X66)) | sP1('const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num',X65)),X66) | s('type.num.num',X64) != s('type.num.num',X65)) )),
  inference(superposition,[],[f648,f3365])).
fof(f34899,plain,(
  ( ! [X61,X62,X63] : (sP0('const.arithmetic.<=_2'(s('type.num.num',X61),s('type.num.num',X62)),X63) | s('type.num.num',X61) != s('type.num.num',X62)) )),
  inference(subsumption_resolution,[],[f34740,f445])).
fof(f34740,plain,(
  ( ! [X61,X62,X63] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num',X61),s('type.num.num',X62)),X63) | s('type.num.num',X61) != s('type.num.num',X62)) )),
  inference(superposition,[],[f633,f3365])).
fof(f34898,plain,(
  ( ! [X59,X60,X58] : (sP0(X60,'const.arithmetic.<=_2'(s('type.num.num',X58),s('type.num.num',X59))) | s('type.num.num',X58) != s('type.num.num',X59)) )),
  inference(subsumption_resolution,[],[f34739,f445])).
fof(f34739,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,'T_0')) | sP0(X60,'const.arithmetic.<=_2'(s('type.num.num',X58),s('type.num.num',X59))) | s('type.num.num',X58) != s('type.num.num',X59)) )),
  inference(superposition,[],[f632,f3365])).
fof(f34897,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,X57)) | s(bool,X57) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))) | s('type.num.num',X55) != s('type.num.num',X56)) )),
  inference(subsumption_resolution,[],[f34738,f445])).
fof(f34738,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,X57)) | s(bool,X57) != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))) | s('type.num.num',X55) != s('type.num.num',X56)) )),
  inference(superposition,[],[f615,f3365])).
fof(f34896,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,X54)) | s(bool,X54) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X52),s('type.num.num',X53))) | s('type.num.num',X52) != s('type.num.num',X53)) )),
  inference(subsumption_resolution,[],[f34737,f445])).
fof(f34737,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | s(bool,X54) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X52),s('type.num.num',X53))) | s('type.num.num',X52) != s('type.num.num',X53)) )),
  inference(superposition,[],[f609,f3365])).
fof(f34895,plain,(
  ( ! [X43,X42] : (s(bool,'F_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.num.num',X42) != s('type.num.num',X43)) )),
  inference(subsumption_resolution,[],[f34733,f445])).
fof(f34733,plain,(
  ( ! [X43,X42] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.num.num',X42) != s('type.num.num',X43)) )),
  inference(superposition,[],[f506,f3365])).
fof(f34894,plain,(
  ( ! [X12,X13] : (s('type.num.num',X12) != s('type.num.num',X13) | s('type.num.num',X13) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))) )),
  inference(subsumption_resolution,[],[f34715,f445])).
fof(f34715,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s('type.num.num',X12) != s('type.num.num',X13) | s('type.num.num',X13) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))) )),
  inference(superposition,[],[f658,f3365])).
fof(f34893,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X3)))) | s('type.num.num',X1) != s('type.num.num',X2)) )),
  inference(subsumption_resolution,[],[f34710,f445])).
fof(f34710,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X3)))) | s('type.num.num',X1) != s('type.num.num',X2)) )),
  inference(superposition,[],[f670,f3365])).
fof(f34708,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num',X18))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))) )),
  inference(superposition,[],[f3365,f587])).
fof(f34706,plain,(
  ( ! [X12,X10,X11] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X12))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X12)))) )),
  inference(superposition,[],[f3365,f669])).
fof(f34705,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))) )),
  inference(superposition,[],[f3365,f581])).
fof(f34704,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))) )),
  inference(superposition,[],[f3365,f583])).
fof(f34674,plain,(
  ( ! [X39,X38] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X39),s('type.num.num',X38))) | s('type.num.num',X39) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X38)))) )),
  inference(superposition,[],[f3365,f4188])).
fof(f34671,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X32))) | s('type.num.num',X33) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3365,f4187])).
fof(f34669,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num',X29))))) | s('type.num.num',X30) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num',X29)))) )),
  inference(superposition,[],[f3365,f588])).
fof(f34666,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19)))) )),
  inference(superposition,[],[f3365,f4189])).
fof(f34664,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))) | s('type.num.num',X16) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3365,f13315])).
fof(f34663,plain,(
  ( ! [X14,X12,X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))) | s('type.num.num',X14) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13)))))) )),
  inference(superposition,[],[f3365,f589])).
fof(f34656,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(superposition,[],[f3365,f571])).
fof(f34630,plain,(
  ( ! [X39,X38] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X38),s('type.num.num',X39))) | s('type.num.num',X39) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X38)))) )),
  inference(superposition,[],[f3365,f4188])).
fof(f34627,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X33))) | s('type.num.num',X33) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X32),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3365,f4187])).
fof(f34625,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))),s('type.num.num',X29))),s('type.num.num',X30))) | s('type.num.num',X30) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num',X29)))) )),
  inference(superposition,[],[f3365,f588])).
fof(f34622,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num',X20))) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X19)))) )),
  inference(superposition,[],[f3365,f4189])).
fof(f34620,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))),s('type.num.num',X16))) | s('type.num.num',X16) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f3365,f13315])).
fof(f34619,plain,(
  ( ! [X14,X12,X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))),s('type.num.num',X14))) | s('type.num.num',X14) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13)))))) )),
  inference(superposition,[],[f3365,f589])).
fof(f34612,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(superposition,[],[f3365,f571])).
fof(f33940,plain,(
  ( ! [X2,X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3629,f967])).
fof(f33942,plain,(
  ( ! [X2,X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f3630,f967])).
fof(f30907,plain,(
  ( ! [X438,X437] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X437))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X437),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X438,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X438),s('type.num.num','const.num.SUC_1'(s('type.num.num',X437))))))) )),
  inference(forward_demodulation,[],[f30777,f13315])).
fof(f30777,plain,(
  ( ! [X438,X437] : (~p(s(bool,happ(s(fun('type.num.num',bool),X438),s('type.num.num','const.num.SUC_1'(s('type.num.num',X437)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X437),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X437),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X438,'type.num.num'))) )),
  inference(superposition,[],[f575,f13315])).
fof(f30891,plain,(
  ( ! [X127,X126] : (s('type.num.num',X127) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X126))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X127),s('type.num.num',X126))))) )),
  inference(forward_demodulation,[],[f30890,f13315])).
fof(f30890,plain,(
  ( ! [X127,X126] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X127),s('type.num.num',X126)))) | s('type.num.num',X127) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f30547,f16256])).
fof(f30547,plain,(
  ( ! [X127,X126] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X127))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X126)))))) | s('type.num.num',X127) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f658,f13315])).
fof(f30879,plain,(
  ( ! [X118,X119] : (s('type.num.num',X119) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X118))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X119)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X119),s('type.num.num',X118))))) )),
  inference(forward_demodulation,[],[f30878,f13315])).
fof(f30878,plain,(
  ( ! [X118,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X119)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X119),s('type.num.num',X118)))) | s('type.num.num',X119) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f30877,f472])).
fof(f30877,plain,(
  ( ! [X118,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X119)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X119),s('type.num.num',X118)))) | s('type.num.num',X119) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f30876,f30796])).
fof(f30876,plain,(
  ( ! [X118,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X119),s('type.num.num',X118)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X119)))) | s('type.num.num',X119) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f30543,f16256])).
fof(f30543,plain,(
  ( ! [X118,X119] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X119))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X118)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X119)))) | s('type.num.num',X119) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X118),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f656,f13315])).
fof(f30535,plain,(
  ( ! [X103,X102] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X103))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X102))))) | s('type.num.num',X103) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X102),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f13315])).
fof(f30531,plain,(
  ( ! [X94,X95] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X95))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X94))))) | s('type.num.num',X95) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f625,f13315])).
fof(f30527,plain,(
  ( ! [X87,X86] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X87))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X86))))) | s('type.num.num',X87) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f13315])).
fof(f30477,plain,(
  ( ! [X4,X5] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f669,f13315])).
fof(f30476,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(superposition,[],[f669,f13315])).
fof(f30853,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(backward_demodulation,[],[f30852,f15822])).
fof(f30852,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f30475,f4189])).
fof(f30475,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f668,f13315])).
fof(f30796,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f30473,f13315])).
fof(f30473,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f13315,f668])).
fof(f28854,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f6714,f4196])).
fof(f28766,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6714,f627])).
fof(f28767,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6714,f625])).
fof(f28768,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6714,f623])).
fof(f28769,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.list.list'('type.num.num'),X1))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.list.list'('type.num.num'),X3)))) )),
  inference(unit_resulting_resolution,[],[f6714,f578])).
fof(f28582,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6442,f627])).
fof(f28583,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6442,f625])).
fof(f28584,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6442,f623])).
fof(f28585,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.list.list'('type.num.num'),X1))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.list.list'('type.num.num'),X3)))) )),
  inference(unit_resulting_resolution,[],[f6442,f578])).
fof(f28400,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6176,f627])).
fof(f28401,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6176,f625])).
fof(f28402,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f6176,f623])).
fof(f28403,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.list.list'('type.num.num'),X1))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.list.list'('type.num.num'),X3)))) )),
  inference(unit_resulting_resolution,[],[f6176,f578])).
fof(f27959,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | p(s(bool,X73)) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X74)),X73)) )),
  inference(superposition,[],[f2119,f476])).
fof(f27962,plain,(
  ( ! [X70,X71] : (p(s(bool,X70)) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71)),X70)) )),
  inference(subsumption_resolution,[],[f27958,f445])).
fof(f27958,plain,(
  ( ! [X70,X71] : (~p(s(bool,'T_0')) | p(s(bool,X70)) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71)),X70)) )),
  inference(superposition,[],[f2119,f3056])).
fof(f27957,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X67)))) | p(s(bool,X68)) | ~sP5('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X69)),X68)) )),
  inference(superposition,[],[f2119,f478])).
fof(f27954,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X59),s('type.num.num',X58)))) | p(s(bool,X60)) | ~sP5('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X61)),X60)) )),
  inference(superposition,[],[f2119,f584])).
fof(f27953,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X55),s('type.num.num',X54)))) | p(s(bool,X56)) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X57)),X56)) )),
  inference(superposition,[],[f2119,f585])).
fof(f27949,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | p(s(bool,X43)) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X44)),X43)) )),
  inference(superposition,[],[f2119,f582])).
fof(f27948,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X37),s('type.num.num',X38)))) | p(s(bool,X39)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)),X39)) )),
  inference(superposition,[],[f2119,f587])).
fof(f27947,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | p(s(bool,X35)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X36)),X35)) )),
  inference(superposition,[],[f2119,f586])).
fof(f27946,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num',X30)))) | p(s(bool,X31)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)),X31)) )),
  inference(superposition,[],[f2119,f669])).
fof(f27945,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | p(s(bool,X26)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)),X26)) )),
  inference(superposition,[],[f2119,f581])).
fof(f27944,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X21)))) | p(s(bool,X22)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X22)) )),
  inference(superposition,[],[f2119,f583])).
fof(f27960,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X7)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)),X7)) )),
  inference(subsumption_resolution,[],[f27939,f445])).
fof(f27939,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | p(s(bool,X7)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)),X7)) )),
  inference(superposition,[],[f2119,f459])).
fof(f27933,plain,(
  ( ! [X0] : (~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f2119])).
fof(f27828,plain,(
  ( ! [X46] : (s(bool,X46) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f27808,f751])).
fof(f27808,plain,(
  ( ! [X46] : (p(s(bool,'F_0')) | s(bool,X46) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f1343,f3055])).
fof(f27815,plain,(
  ( ! [X10,X9] : (s(bool,X10) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f27794,f751])).
fof(f27794,plain,(
  ( ! [X10,X9] : (p(s(bool,'F_0')) | s(bool,X10) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1343,f474])).
fof(f27814,plain,(
  ( ! [X8,X7] : (s(bool,X8) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f27793,f751])).
fof(f27793,plain,(
  ( ! [X8,X7] : (p(s(bool,'F_0')) | s(bool,X8) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1343,f473])).
fof(f27672,plain,(
  ( ! [X6] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22631,f485])).
fof(f27671,plain,(
  ( ! [X4,X5] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22631,f597])).
fof(f27670,plain,(
  ( ! [X3] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22631,f481])).
fof(f27668,plain,(
  ( ! [X0] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22631,f472])).
fof(f27620,plain,(
  ( ! [X6] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22624,f485])).
fof(f27619,plain,(
  ( ! [X4,X5] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22624,f597])).
fof(f27618,plain,(
  ( ! [X3] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22624,f481])).
fof(f27616,plain,(
  ( ! [X0] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22624,f472])).
fof(f27443,plain,(
  ( ! [X6] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(superposition,[],[f22365,f485])).
fof(f27442,plain,(
  ( ! [X4,X5] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(superposition,[],[f22365,f597])).
fof(f27441,plain,(
  ( ! [X3] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(superposition,[],[f22365,f481])).
fof(f27439,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(superposition,[],[f22365,f472])).
fof(f27392,plain,(
  ( ! [X6] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22364,f485])).
fof(f27391,plain,(
  ( ! [X4,X5] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22364,f597])).
fof(f27390,plain,(
  ( ! [X3] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22364,f481])).
fof(f27388,plain,(
  ( ! [X0] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22364,f472])).
fof(f27276,plain,(
  ( ! [X6] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22362,f485])).
fof(f27275,plain,(
  ( ! [X4,X5] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22362,f597])).
fof(f27274,plain,(
  ( ! [X3] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22362,f481])).
fof(f27272,plain,(
  ( ! [X0] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f22362,f472])).
fof(f27225,plain,(
  ( ! [X6] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22360,f485])).
fof(f27224,plain,(
  ( ! [X4,X5] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22360,f597])).
fof(f27223,plain,(
  ( ! [X3] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22360,f481])).
fof(f27221,plain,(
  ( ! [X0] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(superposition,[],[f22360,f472])).
fof(f27064,plain,(
  ( ! [X6] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f22156,f485])).
fof(f27063,plain,(
  ( ! [X4,X5] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))))) )),
  inference(superposition,[],[f22156,f597])).
fof(f27062,plain,(
  ( ! [X3] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f22156,f481])).
fof(f27060,plain,(
  ( ! [X0] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f22156,f472])).
fof(f27059,plain,(
  ~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f22156,f449])).
fof(f27012,plain,(
  ( ! [X6] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))),'F_0')) )),
  inference(superposition,[],[f22149,f485])).
fof(f27011,plain,(
  ( ! [X4,X5] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))),'F_0')) )),
  inference(superposition,[],[f22149,f597])).
fof(f27010,plain,(
  ( ! [X3] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))),'F_0')) )),
  inference(superposition,[],[f22149,f481])).
fof(f27008,plain,(
  ( ! [X0] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(superposition,[],[f22149,f472])).
fof(f27007,plain,(
  ~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(superposition,[],[f22149,f449])).
fof(f26636,plain,(
  ( ! [X6] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))),'T_0')) )),
  inference(superposition,[],[f21890,f485])).
fof(f26635,plain,(
  ( ! [X4,X5] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))),'T_0')) )),
  inference(superposition,[],[f21890,f597])).
fof(f26634,plain,(
  ( ! [X3] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))),'T_0')) )),
  inference(superposition,[],[f21890,f481])).
fof(f26632,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'T_0')) )),
  inference(superposition,[],[f21890,f472])).
fof(f26631,plain,(
  sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')),
  inference(superposition,[],[f21890,f449])).
fof(f26586,plain,(
  ( ! [X6] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f21889,f485])).
fof(f26585,plain,(
  ( ! [X4,X5] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))))) )),
  inference(superposition,[],[f21889,f597])).
fof(f26584,plain,(
  ( ! [X3] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f21889,f481])).
fof(f26582,plain,(
  ( ! [X0] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f21889,f472])).
fof(f26581,plain,(
  sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f21889,f449])).
fof(f26199,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(unit_resulting_resolution,[],[f7164,f630])).
fof(f26205,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f7164,f606])).
fof(f26207,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f7164,f615])).
fof(f26217,plain,(
  ~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f7164,f646])).
fof(f26218,plain,(
  sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f7164,f648])).
fof(f26219,plain,(
  sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0')),
  inference(unit_resulting_resolution,[],[f445,f7164,f651])).
fof(f26220,plain,(
  ~sP5('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f445,f7164,f686])).
fof(f26230,plain,(
  sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f778,f768,f774,f7164,f688])).
fof(f26231,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3534,f768,f774,f7164,f688])).
fof(f26243,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3535,f3520,f774,f7164,f689])).
fof(f26257,plain,(
  ~sP4('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f445,f7164,f690])).
fof(f26264,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f692])).
fof(f26265,plain,(
  ( ! [X0,X1] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f693])).
fof(f26266,plain,(
  ~sP3('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f445,f7164,f694])).
fof(f26273,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f696])).
fof(f26274,plain,(
  ( ! [X0,X1] : (sP3('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f697])).
fof(f26275,plain,(
  ~sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f7164,f698])).
fof(f26287,plain,(
  ~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f7164,f698])).
fof(f26288,plain,(
  ~sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f7164,f751,f7164,f698])).
fof(f26299,plain,(
  ~sP2('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f751,f7164,f698])).
fof(f26300,plain,(
  ~sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f751,f7164,f698])).
fof(f26301,plain,(
  ~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f7164,f7164,f698])).
fof(f26302,plain,(
  ~sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f7164,f7164,f698])).
fof(f26311,plain,(
  sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f802,f7164,f702])).
fof(f26314,plain,(
  sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f802,f7164,f702])).
fof(f26317,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f3056,f7164,f705])).
fof(f26318,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f459,f7164,f705])).
fof(f26320,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f473,f7164,f705])).
fof(f26321,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f474,f7164,f705])).
fof(f26324,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f3055,f7164,f705])).
fof(f26325,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f583,f7164,f705])).
fof(f26326,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f586,f7164,f705])).
fof(f26327,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f581,f7164,f705])).
fof(f26329,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f669,f7164,f705])).
fof(f26330,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f587,f7164,f705])).
fof(f26331,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f584,f7164,f705])).
fof(f26332,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f582,f7164,f705])).
fof(f26335,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f585,f7164,f705])).
fof(f26336,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.ODD_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f478,f7164,f705])).
fof(f26337,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f476,f7164,f705])).
fof(f26338,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f3056,f7164,f705])).
fof(f26339,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f459,f7164,f705])).
fof(f26341,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f473,f7164,f705])).
fof(f26342,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f474,f7164,f705])).
fof(f26345,plain,(
  ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f3055,f7164,f705])).
fof(f26346,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f583,f7164,f705])).
fof(f26347,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f586,f7164,f705])).
fof(f26348,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f581,f7164,f705])).
fof(f26350,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f669,f7164,f705])).
fof(f26351,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f587,f7164,f705])).
fof(f26352,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f584,f7164,f705])).
fof(f26353,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f582,f7164,f705])).
fof(f26356,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f585,f7164,f705])).
fof(f26357,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f478,f7164,f705])).
fof(f26358,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f476,f7164,f705])).
fof(f26359,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(unit_resulting_resolution,[],[f445,f7164,f707])).
fof(f26365,plain,(
  ( ! [X0] : (~sP7('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f445,f7164,f708])).
fof(f26371,plain,(
  ~sP6('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f445,f7164,f713])).
fof(f26378,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f715])).
fof(f26379,plain,(
  ( ! [X0,X1] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f716])).
fof(f26380,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(unit_resulting_resolution,[],[f751,f7164,f717])).
fof(f26386,plain,(
  ( ! [X0] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(unit_resulting_resolution,[],[f7164,f7164,f717])).
fof(f26387,plain,(
  ( ! [X0] : (sP7('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f751,f7164,f718])).
fof(f26393,plain,(
  ( ! [X0] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)) )),
  inference(unit_resulting_resolution,[],[f7164,f7164,f718])).
fof(f26394,plain,(
  ~sP7('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f445,f445,f7164,f722])).
fof(f26395,plain,(
  ( ! [X0] : (~sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f7164,f723])).
fof(f26396,plain,(
  ( ! [X0] : (~sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f445,f7164,f724])).
fof(f26435,plain,(
  ~sP8('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f445,f751,f7164,f730])).
fof(f26443,plain,(
  ~sP8('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f751,f7164,f730])).
fof(f26444,plain,(
  ~sP8('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f445,f7164,f7164,f730])).
fof(f26451,plain,(
  ( ! [X0,X1] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f7164,f733])).
fof(f26452,plain,(
  sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f7164,f734])).
fof(f26458,plain,(
  sP9('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f751,f7164,f734])).
fof(f26460,plain,(
  sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f7164,f7164,f734])).
fof(f26464,plain,(
  sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f7164,f734])).
fof(f26465,plain,(
  sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f7164,f751,f7164,f734])).
fof(f26466,plain,(
  sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f7164,f7164,f734])).
fof(f26467,plain,(
  sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f7164,f7164,f734])).
fof(f26468,plain,(
  ~sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f445,f7164,f737])).
fof(f26473,plain,(
  ~sP9('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f445,f7164,f737])).
fof(f26474,plain,(
  ~sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f445,f7164,f737])).
fof(f26478,plain,(
  ( ! [X0] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f786,f7164,f741])).
fof(f26481,plain,(
  ( ! [X0] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f788,f7164,f741])).
fof(f26484,plain,(
  ~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f7164,f760])).
fof(f26491,plain,(
  ~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f751,f7164,f760])).
fof(f26492,plain,(
  ~sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f7164,f760])).
fof(f26498,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(unit_resulting_resolution,[],[f7164,f963])).
fof(f26499,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f7164,f964])).
fof(f26500,plain,(
  sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f7164,f4383])).
fof(f26501,plain,(
  sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f7164,f4384])).
fof(f26155,plain,(
  ( ! [X6] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f21887,f485])).
fof(f26154,plain,(
  ( ! [X4,X5] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))))) )),
  inference(superposition,[],[f21887,f597])).
fof(f26153,plain,(
  ( ! [X3] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f21887,f481])).
fof(f26151,plain,(
  ( ! [X0] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f21887,f472])).
fof(f26150,plain,(
  ~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f21887,f449])).
fof(f26105,plain,(
  ( ! [X6] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))),'F_0')) )),
  inference(superposition,[],[f21885,f485])).
fof(f26104,plain,(
  ( ! [X4,X5] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))),'F_0')) )),
  inference(superposition,[],[f21885,f597])).
fof(f26103,plain,(
  ( ! [X3] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))),'F_0')) )),
  inference(superposition,[],[f21885,f481])).
fof(f26101,plain,(
  ( ! [X0] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))),'F_0')) )),
  inference(superposition,[],[f21885,f472])).
fof(f26100,plain,(
  ~sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(superposition,[],[f21885,f449])).
fof(f26096,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f26050,f4196])).
fof(f26050,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6441,f627])).
fof(f26051,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6441,f625])).
fof(f26052,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6441,f623])).
fof(f26053,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f6441,f578])).
fof(f26028,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f25983,f4196])).
fof(f25983,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6438,f627])).
fof(f25984,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6438,f625])).
fof(f25985,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6438,f623])).
fof(f25986,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f6438,f578])).
fof(f25963,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f25917,f4185])).
fof(f25917,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6175,f627])).
fof(f25918,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6175,f625])).
fof(f25919,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6175,f623])).
fof(f25920,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f6175,f578])).
fof(f25898,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f25853,f4185])).
fof(f25853,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6172,f627])).
fof(f25854,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6172,f625])).
fof(f25855,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f6172,f623])).
fof(f25856,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f6172,f578])).
fof(f25518,plain,(
  ( ! [X149] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X149,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X149),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f25451,f4196])).
fof(f25451,plain,(
  ( ! [X149] : (~p(s(bool,happ(s(fun('type.num.num',bool),X149),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X149,'type.num.num'))) )),
  inference(superposition,[],[f575,f4196])).
fof(f25514,plain,(
  ( ! [X75] : (s('type.num.num',X75) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X75))))) )),
  inference(forward_demodulation,[],[f25513,f4196])).
fof(f25513,plain,(
  ( ! [X75] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X75)))) | s('type.num.num',X75) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25512,f449])).
fof(f25512,plain,(
  ( ! [X75] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X75)))) | s('type.num.num',X75) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25287,f485])).
fof(f25287,plain,(
  ( ! [X75] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X75)))) | s('type.num.num',X75) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f658,f4196])).
fof(f25497,plain,(
  ( ! [X70] : (s('type.num.num',X70) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f25496,f4196])).
fof(f25496,plain,(
  ( ! [X70] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25495,f25471])).
fof(f25495,plain,(
  ( ! [X70] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25494,f449])).
fof(f25494,plain,(
  ( ! [X70] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25493,f485])).
fof(f25493,plain,(
  ( ! [X70] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f25282,f481])).
fof(f25282,plain,(
  ( ! [X70] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X70)))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f656,f4196])).
fof(f25274,plain,(
  ( ! [X62] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X62) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f4196])).
fof(f25266,plain,(
  ( ! [X54] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X54))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X54) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f4196])).
fof(f25215,plain,(
  sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1965,f4196])).
fof(f25214,plain,(
  ~sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1964,f4196])).
fof(f25209,plain,(
  sP5('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1799,f4196])).
fof(f25208,plain,(
  ~sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1798,f4196])).
fof(f25206,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f627,f4196])).
fof(f25205,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f592,f4196])).
fof(f25204,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) )),
  inference(superposition,[],[f592,f4196])).
fof(f25203,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f591,f4196])).
fof(f25202,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) )),
  inference(superposition,[],[f591,f4196])).
fof(f25201,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f590,f4196])).
fof(f25200,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f590,f4196])).
fof(f25199,plain,(
  ( ! [X7] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X7))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f585,f4196])).
fof(f25198,plain,(
  ( ! [X6] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f585,f4196])).
fof(f25197,plain,(
  ( ! [X5] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f584,f4196])).
fof(f25196,plain,(
  ( ! [X4] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f584,f4196])).
fof(f25195,plain,(
  ( ! [X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f582,f4196])).
fof(f25194,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f582,f4196])).
fof(f25193,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f581,f4196])).
fof(f25192,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f581,f4196])).
fof(f25191,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f482,f4196])).
fof(f25471,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f25470,f449])).
fof(f25470,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f25190,f485])).
fof(f25190,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f481,f4196])).
fof(f25469,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f25468,f449])).
fof(f25468,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f25467,f485])).
fof(f25467,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f25177,f481])).
fof(f25177,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(unit_resulting_resolution,[],[f4196,f658])).
fof(f24562,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X74)) )),
  inference(superposition,[],[f966,f476])).
fof(f24565,plain,(
  ( ! [X70,X71] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X71)) )),
  inference(subsumption_resolution,[],[f24561,f445])).
fof(f24561,plain,(
  ( ! [X70,X71] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X71)) )),
  inference(superposition,[],[f966,f3056])).
fof(f24560,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X67)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X69)) )),
  inference(superposition,[],[f966,f478])).
fof(f24557,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X59),s('type.num.num',X58)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61)) )),
  inference(superposition,[],[f966,f584])).
fof(f24556,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X55),s('type.num.num',X54)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57)) )),
  inference(superposition,[],[f966,f585])).
fof(f24552,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44)) )),
  inference(superposition,[],[f966,f582])).
fof(f24551,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X37),s('type.num.num',X38)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X39)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40)) )),
  inference(superposition,[],[f966,f587])).
fof(f24550,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X36)) )),
  inference(superposition,[],[f966,f586])).
fof(f24549,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num',X30)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),X32)) )),
  inference(superposition,[],[f966,f669])).
fof(f24548,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),X27)) )),
  inference(superposition,[],[f966,f581])).
fof(f24547,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X21)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X22)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),X23)) )),
  inference(superposition,[],[f966,f583])).
fof(f24563,plain,(
  ( ! [X6,X8,X7] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),X8)) )),
  inference(subsumption_resolution,[],[f24542,f445])).
fof(f24542,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),X8)) )),
  inference(superposition,[],[f966,f459])).
fof(f24538,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f445,f966])).
fof(f24444,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X70)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X71)),X72,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X70)))))) )),
  inference(superposition,[],[f965,f476])).
fof(f24447,plain,(
  ( ! [X68,X69] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),X69,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f24443,f445])).
fof(f24443,plain,(
  ( ! [X68,X69] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),X69,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f965,f3056])).
fof(f24442,plain,(
  ( ! [X66,X67,X65] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X65)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66)),X67,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))))) )),
  inference(superposition,[],[f965,f478])).
fof(f24439,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X57),s('type.num.num',X56)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X58)),X59,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f965,f584])).
fof(f24438,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X53),s('type.num.num',X52)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X54)),X55,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))))) )),
  inference(superposition,[],[f965,f585])).
fof(f24434,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X39),s('type.num.num',X40)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41)),X42,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40)))))) )),
  inference(superposition,[],[f965,f582])).
fof(f24433,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X36)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36)))))) )),
  inference(superposition,[],[f965,f587])).
fof(f24432,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X33)),X34,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f965,f586])).
fof(f24431,plain,(
  ( ! [X30,X28,X26,X29,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29)),X30,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X28)))))) )),
  inference(superposition,[],[f965,f669])).
fof(f24430,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)),X25,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f965,f581])).
fof(f24429,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20)),X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f965,f583])).
fof(f24445,plain,(
  ( ! [X6,X8,X7] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),X8,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)))) )),
  inference(subsumption_resolution,[],[f24425,f445])).
fof(f24425,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),X8,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f965,f459])).
fof(f24421,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f965])).
fof(f22892,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f21870,f627])).
fof(f22893,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f21870,f625])).
fof(f22894,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f21870,f623])).
fof(f22896,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X0),s('type.list.list'('type.num.num'),X1))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f21870,f578])).
fof(f22767,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f22766,f8436])).
fof(f22766,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) )),
  inference(forward_demodulation,[],[f22340,f449])).
fof(f22340,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f3849,f8846,f656])).
fof(f22344,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f8846,f630])).
fof(f22350,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f606])).
fof(f22351,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f606])).
fof(f22352,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f615])).
fof(f22360,plain,(
  ( ! [X0] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f646])).
fof(f22362,plain,(
  ( ! [X0] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f646])).
fof(f22363,plain,(
  ( ! [X0,X1] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f646])).
fof(f22364,plain,(
  ( ! [X0] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f648])).
fof(f22365,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f651])).
fof(f22366,plain,(
  ( ! [X0] : (~sP5('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f8846,f686])).
fof(f22376,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f778,f768,f774,f8846,f688])).
fof(f22377,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3534,f768,f774,f8846,f688])).
fof(f22389,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3535,f3520,f774,f8846,f689])).
fof(f22403,plain,(
  ( ! [X0] : (~sP4('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f8846,f690])).
fof(f22410,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f692])).
fof(f22411,plain,(
  ( ! [X2,X0,X1] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f693])).
fof(f22412,plain,(
  ( ! [X0] : (~sP3('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f8846,f694])).
fof(f22419,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f696])).
fof(f22420,plain,(
  ( ! [X2,X0,X1] : (sP3('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f697])).
fof(f22421,plain,(
  ( ! [X0] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f8846,f698])).
fof(f22433,plain,(
  ( ! [X0] : (~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f8846,f698])).
fof(f22434,plain,(
  ( ! [X0,X1] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f8846,f751,f8846,f698])).
fof(f22445,plain,(
  ( ! [X0] : (~sP2('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f751,f8846,f698])).
fof(f22446,plain,(
  ( ! [X0,X1] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f751,f8846,f698])).
fof(f22447,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f8846,f698])).
fof(f22448,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f8846,f698])).
fof(f22457,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f802,f8846,f702])).
fof(f22459,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f802,f8846,f702])).
fof(f22461,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f3056,f8846,f705])).
fof(f22462,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f459,f8846,f705])).
fof(f22464,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f473,f8846,f705])).
fof(f22465,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f474,f8846,f705])).
fof(f22467,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3055,f8846,f705])).
fof(f22468,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f583,f8846,f705])).
fof(f22469,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f586,f8846,f705])).
fof(f22470,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f581,f8846,f705])).
fof(f22472,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3)))),'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(unit_resulting_resolution,[],[f669,f8846,f705])).
fof(f22473,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f587,f8846,f705])).
fof(f22474,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f584,f8846,f705])).
fof(f22475,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f582,f8846,f705])).
fof(f22478,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f585,f8846,f705])).
fof(f22479,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f478,f8846,f705])).
fof(f22480,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f476,f8846,f705])).
fof(f22481,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f3056,f8846,f705])).
fof(f22482,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f459,f8846,f705])).
fof(f22484,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f473,f8846,f705])).
fof(f22485,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f474,f8846,f705])).
fof(f22487,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f3055,f8846,f705])).
fof(f22488,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f583,f8846,f705])).
fof(f22489,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f586,f8846,f705])).
fof(f22490,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f581,f8846,f705])).
fof(f22492,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f669,f8846,f705])).
fof(f22493,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f587,f8846,f705])).
fof(f22494,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f584,f8846,f705])).
fof(f22495,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f582,f8846,f705])).
fof(f22498,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f585,f8846,f705])).
fof(f22499,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ODD_1'(s('type.num.num',X1)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f478,f8846,f705])).
fof(f22500,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.EVEN_1'(s('type.num.num',X1)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f476,f8846,f705])).
fof(f22501,plain,(
  ( ! [X0,X1] : (~sP7('T_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f707])).
fof(f22506,plain,(
  ( ! [X0,X1] : (~sP7('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f708])).
fof(f22511,plain,(
  ( ! [X0] : (~sP6('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f8846,f713])).
fof(f22518,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f715])).
fof(f22519,plain,(
  ( ! [X2,X0,X1] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f716])).
fof(f22520,plain,(
  ( ! [X0,X1] : (sP7('F_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f717])).
fof(f22526,plain,(
  ( ! [X2,X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f717])).
fof(f22527,plain,(
  ( ! [X0,X1] : (sP7('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f718])).
fof(f22533,plain,(
  ( ! [X2,X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f718])).
fof(f22534,plain,(
  ( ! [X0] : (~sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f445,f8846,f722])).
fof(f22535,plain,(
  ( ! [X0,X1] : (~sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f723])).
fof(f22536,plain,(
  ( ! [X0,X1] : (~sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f724])).
fof(f22575,plain,(
  ( ! [X0] : (~sP8('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f8846,f730])).
fof(f22583,plain,(
  ( ! [X0] : (~sP8('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f751,f8846,f730])).
fof(f22584,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f8846,f8846,f730])).
fof(f22591,plain,(
  ( ! [X2,X0,X1] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f8846,f733])).
fof(f22592,plain,(
  ( ! [X0] : (sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f8846,f734])).
fof(f22598,plain,(
  ( ! [X0] : (sP9('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f751,f8846,f734])).
fof(f22600,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f8846,f734])).
fof(f22604,plain,(
  ( ! [X0] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f8846,f734])).
fof(f22605,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f8846,f751,f8846,f734])).
fof(f22606,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f8846,f734])).
fof(f22607,plain,(
  ( ! [X2,X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f8846,f734])).
fof(f22608,plain,(
  ( ! [X0] : (~sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f445,f8846,f737])).
fof(f22613,plain,(
  ( ! [X0] : (~sP9('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f445,f8846,f737])).
fof(f22614,plain,(
  ( ! [X0,X1] : (~sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f445,f8846,f737])).
fof(f22618,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f786,f8846,f741])).
fof(f22621,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f788,f8846,f741])).
fof(f22624,plain,(
  ( ! [X0] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f760])).
fof(f22631,plain,(
  ( ! [X0] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f8846,f760])).
fof(f22632,plain,(
  ( ! [X0,X1] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f8846,f760])).
fof(f22638,plain,(
  ( ! [X0,X1] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f8846,f963])).
fof(f22639,plain,(
  ( ! [X0,X1] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f8846,f964])).
fof(f22167,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) )),
  inference(superposition,[],[f7116,f472])).
fof(f21869,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f7116,f630])).
fof(f21870,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f7116,f611])).
fof(f21875,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f606])).
fof(f21876,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f606])).
fof(f21877,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f615])).
fof(f21885,plain,(
  ( ! [X0] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f646])).
fof(f21887,plain,(
  ( ! [X0] : (~sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f646])).
fof(f21888,plain,(
  ( ! [X0,X1] : (~sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f646])).
fof(f21889,plain,(
  ( ! [X0] : (sP1('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f648])).
fof(f21890,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f651])).
fof(f21891,plain,(
  ( ! [X0] : (~sP5('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f7116,f686])).
fof(f21901,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f778,f768,f774,f7116,f688])).
fof(f21902,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3534,f768,f774,f7116,f688])).
fof(f21914,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3535,f3520,f774,f7116,f689])).
fof(f21928,plain,(
  ( ! [X0] : (~sP4('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f7116,f690])).
fof(f21935,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f692])).
fof(f21936,plain,(
  ( ! [X2,X0,X1] : (sP4('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f693])).
fof(f21937,plain,(
  ( ! [X0] : (~sP3('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f7116,f694])).
fof(f21944,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f696])).
fof(f21945,plain,(
  ( ! [X2,X0,X1] : (sP3('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f697])).
fof(f21946,plain,(
  ( ! [X0] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f7116,f698])).
fof(f21958,plain,(
  ( ! [X0] : (~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f7116,f698])).
fof(f21959,plain,(
  ( ! [X0,X1] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f7116,f751,f7116,f698])).
fof(f21970,plain,(
  ( ! [X0] : (~sP2('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f751,f7116,f698])).
fof(f21971,plain,(
  ( ! [X0,X1] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f751,f7116,f698])).
fof(f21972,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f7116,f698])).
fof(f21973,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f7116,f698])).
fof(f21982,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f802,f7116,f702])).
fof(f21984,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f802,f7116,f702])).
fof(f21986,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f3056,f7116,f705])).
fof(f21987,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f459,f7116,f705])).
fof(f21989,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f473,f7116,f705])).
fof(f21990,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f474,f7116,f705])).
fof(f21992,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3055,f7116,f705])).
fof(f21993,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f583,f7116,f705])).
fof(f21994,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f586,f7116,f705])).
fof(f21995,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f581,f7116,f705])).
fof(f21997,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3)))),'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(unit_resulting_resolution,[],[f669,f7116,f705])).
fof(f21998,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f587,f7116,f705])).
fof(f21999,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f584,f7116,f705])).
fof(f22000,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f582,f7116,f705])).
fof(f22003,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))),'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f585,f7116,f705])).
fof(f22004,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f478,f7116,f705])).
fof(f22005,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f476,f7116,f705])).
fof(f22006,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f3056,f7116,f705])).
fof(f22007,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f459,f7116,f705])).
fof(f22009,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f473,f7116,f705])).
fof(f22010,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f474,f7116,f705])).
fof(f22012,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f3055,f7116,f705])).
fof(f22013,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f583,f7116,f705])).
fof(f22014,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f586,f7116,f705])).
fof(f22015,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f581,f7116,f705])).
fof(f22017,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f669,f7116,f705])).
fof(f22018,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f587,f7116,f705])).
fof(f22019,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f584,f7116,f705])).
fof(f22020,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f582,f7116,f705])).
fof(f22023,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f585,f7116,f705])).
fof(f22024,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num',X1)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f478,f7116,f705])).
fof(f22025,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num',X1)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f476,f7116,f705])).
fof(f22026,plain,(
  ( ! [X0,X1] : (~sP7('T_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f707])).
fof(f22031,plain,(
  ( ! [X0,X1] : (~sP7('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f708])).
fof(f22036,plain,(
  ( ! [X0] : (~sP6('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f7116,f713])).
fof(f22043,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f715])).
fof(f22044,plain,(
  ( ! [X2,X0,X1] : (sP6('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f716])).
fof(f22045,plain,(
  ( ! [X0,X1] : (sP7('F_0',X0,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f717])).
fof(f22051,plain,(
  ( ! [X2,X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f717])).
fof(f22052,plain,(
  ( ! [X0,X1] : (sP7('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f718])).
fof(f22058,plain,(
  ( ! [X2,X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f718])).
fof(f22059,plain,(
  ( ! [X0] : (~sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f445,f7116,f722])).
fof(f22060,plain,(
  ( ! [X0,X1] : (~sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f723])).
fof(f22061,plain,(
  ( ! [X0,X1] : (~sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f724])).
fof(f22100,plain,(
  ( ! [X0] : (~sP8('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f7116,f730])).
fof(f22108,plain,(
  ( ! [X0] : (~sP8('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f751,f7116,f730])).
fof(f22109,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f7116,f7116,f730])).
fof(f22116,plain,(
  ( ! [X2,X0,X1] : (sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f7116,f733])).
fof(f22117,plain,(
  ( ! [X0] : (sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f7116,f734])).
fof(f22123,plain,(
  ( ! [X0] : (sP9('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f751,f7116,f734])).
fof(f22125,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f7116,f734])).
fof(f22129,plain,(
  ( ! [X0] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f7116,f734])).
fof(f22130,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f7116,f751,f7116,f734])).
fof(f22131,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f7116,f734])).
fof(f22132,plain,(
  ( ! [X2,X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f7116,f734])).
fof(f22133,plain,(
  ( ! [X0] : (~sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f445,f7116,f737])).
fof(f22138,plain,(
  ( ! [X0] : (~sP9('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f445,f7116,f737])).
fof(f22139,plain,(
  ( ! [X0,X1] : (~sP9('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f445,f7116,f737])).
fof(f22143,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f786,f7116,f741])).
fof(f22146,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f788,f7116,f741])).
fof(f22149,plain,(
  ( ! [X0] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f760])).
fof(f22156,plain,(
  ( ! [X0] : (~sP0('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f7116,f760])).
fof(f22157,plain,(
  ( ! [X0,X1] : (~sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f7116,f760])).
fof(f22163,plain,(
  ( ! [X0,X1] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f963])).
fof(f22164,plain,(
  ( ! [X0,X1] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f7116,f964])).
fof(f21807,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f3849,f625])).
fof(f21808,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f3849,f623])).
fof(f21809,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f3849,f578])).
fof(f21752,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.ODD_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f1967,f685])).
fof(f21652,plain,(
  sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1965,f4185])).
fof(f21649,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.ODD_1'(s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f1965,f685])).
fof(f21598,plain,(
  ~sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1964,f4185])).
fof(f21535,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f1801,f685])).
fof(f21427,plain,(
  sP5('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1799,f4185])).
fof(f21424,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.EVEN_1'(s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f1799,f685])).
fof(f21372,plain,(
  ~sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1798,f4185])).
fof(f21310,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1683,f685])).
fof(f21251,plain,(
  ( ! [X0] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f776,f770,f1682,f688])).
fof(f21140,plain,(
  ( ! [X0] : (~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f774,f768,f1679,f689])).
fof(f21077,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1641,f685])).
fof(f21022,plain,(
  ( ! [X0] : (~sP2('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f776,f770,f1640,f688])).
fof(f20852,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))) | s(X0,X1) != s(X0,X3)) )),
  inference(equality_resolution,[],[f580])).
fof(f20848,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X0)),s('type.list.list'(X0),sK14(X1,X0)))))) | s(X0,X3) != s(X0,X4) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(superposition,[],[f580,f562])).
fof(f20068,plain,(
  ( ! [X474,X475,X473] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X473),s('type.num.num',X474))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X473))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X474)))))),X475,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X475),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X473),s('type.num.num',X474))))))))))) )),
  inference(forward_demodulation,[],[f20018,f605])).
fof(f20018,plain,(
  ( ! [X474,X475,X473] : (~p(s(bool,happ(s(fun('type.num.num',bool),X475),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X473),s('type.num.num',X474)))))))))) | s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X473))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X474))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X473))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X474)))))),X475,'type.num.num'))) )),
  inference(superposition,[],[f575,f605])).
fof(f19884,plain,(
  ( ! [X134,X132,X133] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X134))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133))))))))) | s('type.num.num',X134) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X133)))))))) )),
  inference(superposition,[],[f627,f605])).
fof(f19880,plain,(
  ( ! [X121,X122,X120] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X122))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X120),s('type.num.num',X121))))))))) | s('type.num.num',X122) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X121)))))))) )),
  inference(superposition,[],[f625,f605])).
fof(f19876,plain,(
  ( ! [X109,X110,X108] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X110))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X108),s('type.num.num',X109))))))))) | s('type.num.num',X110) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X109)))))))) )),
  inference(superposition,[],[f623,f605])).
fof(f19362,plain,(
  ( ! [X480,X482,X481] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X480),s('type.num.num',X481))))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X480))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481)))))),X482,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X482),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X480),s('type.num.num',X481))))))))))) )),
  inference(forward_demodulation,[],[f19309,f597])).
fof(f19309,plain,(
  ( ! [X480,X482,X481] : (~p(s(bool,happ(s(fun('type.num.num',bool),X482),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X480),s('type.num.num',X481)))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X480))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X480))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481)))))),X482,'type.num.num'))) )),
  inference(superposition,[],[f575,f597])).
fof(f19349,plain,(
  ( ! [X167,X166,X168] : (s('type.num.num',X168) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num',X167))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X168),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num',X167))))))),s('type.num.num',X168))))) )),
  inference(forward_demodulation,[],[f19348,f597])).
fof(f19348,plain,(
  ( ! [X167,X166,X168] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X168),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num',X167))))))),s('type.num.num',X168)))) | s('type.num.num',X168) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))) )),
  inference(forward_demodulation,[],[f19347,f16256])).
fof(f19347,plain,(
  ( ! [X167,X166,X168] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num',X167))))))),s('type.num.num',X168)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X168))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))))) | s('type.num.num',X168) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))) )),
  inference(forward_demodulation,[],[f19184,f472])).
fof(f19184,plain,(
  ( ! [X167,X166,X168] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X166),s('type.num.num',X167))))))))),s('type.num.num',X168)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X168))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))))) | s('type.num.num',X168) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X166))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167)))))))) )),
  inference(superposition,[],[f656,f597])).
fof(f19175,plain,(
  ( ! [X140,X141,X139] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X141))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X139),s('type.num.num',X140))))))))) | s('type.num.num',X141) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X139))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X140)))))))) )),
  inference(superposition,[],[f627,f597])).
fof(f19167,plain,(
  ( ! [X116,X117,X115] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X115),s('type.num.num',X116))))))))) | s('type.num.num',X117) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X115))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X116)))))))) )),
  inference(superposition,[],[f623,f597])).
fof(f18456,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(subsumption_resolution,[],[f18167,f751])).
fof(f18167,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f656,f495])).
fof(f18131,plain,(
  ( ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num',X7)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))) )),
  inference(superposition,[],[f656,f485])).
fof(f18130,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))),s('type.num.num',X5)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))) )),
  inference(superposition,[],[f656,f481])).
fof(f18129,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))) )),
  inference(superposition,[],[f656,f472])).
fof(f18341,plain,(
  ( ! [X70,X69] : (s('type.num.num',X70) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))))),s('type.num.num',X70))))) )),
  inference(forward_demodulation,[],[f18340,f482])).
fof(f18340,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))))),s('type.num.num',X70)))) | s('type.num.num',X70) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))) )),
  inference(forward_demodulation,[],[f18339,f482])).
fof(f18339,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))))) | s('type.num.num',X70) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))) )),
  inference(forward_demodulation,[],[f18124,f481])).
fof(f18124,plain,(
  ( ! [X70,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))))),s('type.num.num',X70)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))))) | s('type.num.num',X70) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))) )),
  inference(superposition,[],[f656,f482])).
fof(f18338,plain,(
  ( ! [X68,X66,X67] : (s('type.num.num',X68) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67))))))),s('type.num.num',X68))))) )),
  inference(forward_demodulation,[],[f18337,f592])).
fof(f18337,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67))))))),s('type.num.num',X68)))) | s('type.num.num',X68) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X66))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))) )),
  inference(forward_demodulation,[],[f18336,f592])).
fof(f18336,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67))))))),s('type.num.num',X68)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X66))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))))) | s('type.num.num',X68) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X66))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))) )),
  inference(forward_demodulation,[],[f18123,f481])).
fof(f18123,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X66),s('type.num.num',X67))))))),s('type.num.num',X68)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X66))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))))) | s('type.num.num',X68) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X66))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))) )),
  inference(superposition,[],[f656,f592])).
fof(f18324,plain,(
  ( ! [X59,X57,X58] : (s('type.num.num',X59) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58))))))),s('type.num.num',X59))))) )),
  inference(forward_demodulation,[],[f18323,f591])).
fof(f18323,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58))))))),s('type.num.num',X59)))) | s('type.num.num',X59) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))))) )),
  inference(forward_demodulation,[],[f18322,f591])).
fof(f18322,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58))))))),s('type.num.num',X59)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))))))) | s('type.num.num',X59) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))))) )),
  inference(forward_demodulation,[],[f18119,f481])).
fof(f18119,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X57),s('type.num.num',X58))))))),s('type.num.num',X59)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))))))) | s('type.num.num',X59) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))))) )),
  inference(superposition,[],[f656,f591])).
fof(f18310,plain,(
  ( ! [X47,X46] : (s('type.num.num',X47) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))),s('type.num.num',X47))))) )),
  inference(forward_demodulation,[],[f18309,f485])).
fof(f18309,plain,(
  ( ! [X47,X46] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X47),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))),s('type.num.num',X47)))) | s('type.num.num',X47) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))) )),
  inference(forward_demodulation,[],[f18308,f16256])).
fof(f18308,plain,(
  ( ! [X47,X46] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))),s('type.num.num',X47)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X47))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))))) | s('type.num.num',X47) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))) )),
  inference(forward_demodulation,[],[f18114,f472])).
fof(f18114,plain,(
  ( ! [X47,X46] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X46))))))),s('type.num.num',X47)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X47))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))))) | s('type.num.num',X47) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))))) )),
  inference(superposition,[],[f656,f485])).
fof(f18307,plain,(
  ( ! [X45,X44] : (s('type.num.num',X45) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))))),s('type.num.num',X45))))) )),
  inference(forward_demodulation,[],[f18306,f481])).
fof(f18306,plain,(
  ( ! [X45,X44] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))))),s('type.num.num',X45)))) | s('type.num.num',X45) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))) )),
  inference(forward_demodulation,[],[f18305,f16256])).
fof(f18305,plain,(
  ( ! [X45,X44] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))))),s('type.num.num',X45)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))))) | s('type.num.num',X45) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))) )),
  inference(forward_demodulation,[],[f18113,f481])).
fof(f18113,plain,(
  ( ! [X45,X44] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X44))))))),s('type.num.num',X45)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X45))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))))) | s('type.num.num',X45) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))))) )),
  inference(superposition,[],[f656,f481])).
fof(f18304,plain,(
  ( ! [X43,X42] : (s('type.num.num',X43) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))),s('type.num.num',X43))))) )),
  inference(forward_demodulation,[],[f18303,f472])).
fof(f18303,plain,(
  ( ! [X43,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))),s('type.num.num',X43)))) | s('type.num.num',X43) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))) )),
  inference(forward_demodulation,[],[f18302,f16256])).
fof(f18302,plain,(
  ( ! [X43,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X42))))),s('type.num.num',X43)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X43))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))))) | s('type.num.num',X43) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))) )),
  inference(forward_demodulation,[],[f18112,f485])).
fof(f18112,plain,(
  ( ! [X43,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42))))),s('type.num.num',X43)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X43))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))))) | s('type.num.num',X43) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))))) )),
  inference(superposition,[],[f656,f472])).
fof(f18301,plain,(
  ( ! [X41] : (s('type.num.num',X41) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41))))) )),
  inference(forward_demodulation,[],[f18300,f449])).
fof(f18300,plain,(
  ( ! [X41] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41)))) | s('type.num.num',X41) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f18299,f16256])).
fof(f18299,plain,(
  ( ! [X41] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X41)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X41) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f18111,f472])).
fof(f18111,plain,(
  ( ! [X41] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X41)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X41))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X41) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f656,f449])).
fof(f18295,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num',X39) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))))),s('type.num.num',X39))))) )),
  inference(forward_demodulation,[],[f18294,f590])).
fof(f18294,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))))),s('type.num.num',X39)))) | s('type.num.num',X39) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38)))))) )),
  inference(forward_demodulation,[],[f18293,f590])).
fof(f18293,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38)))))))) | s('type.num.num',X39) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38)))))) )),
  inference(forward_demodulation,[],[f18109,f481])).
fof(f18109,plain,(
  ( ! [X39,X37,X38] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X37),s('type.num.num',X38))))))),s('type.num.num',X39)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X39))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38)))))))) | s('type.num.num',X39) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38)))))) )),
  inference(superposition,[],[f656,f590])).
fof(f18269,plain,(
  ( ! [X17,X16] : (s('type.num.num',X17) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num',X16)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))),s('type.num.num',X17))))) )),
  inference(forward_demodulation,[],[f18268,f4189])).
fof(f18268,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num',X16)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))),s('type.num.num',X17)))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) )),
  inference(forward_demodulation,[],[f18267,f16256])).
fof(f18267,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X17))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))),s('type.num.num',X17)))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) )),
  inference(forward_demodulation,[],[f18100,f4189])).
fof(f18100,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))),s('type.num.num',X17)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) )),
  inference(superposition,[],[f656,f4189])).
fof(f18246,plain,(
  ( ! [X2,X0,X3] : (s('type.num.num',X3) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))),s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f18245,f571])).
fof(f18245,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))),s('type.num.num',X3)))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f18244,f16256])).
fof(f18244,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))),s('type.num.num',X3)))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f18092,f571])).
fof(f18092,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(superposition,[],[f656,f571])).
fof(f17765,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK16(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK16(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f667,f495])).
fof(f17764,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK16(X0,X1,X2,bool))) )),
  inference(superposition,[],[f667,f495])).
fof(f17450,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X3) = s('type.list.list'(X0),sK14(X1,X0)) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(superposition,[],[f579,f562])).
fof(f17449,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X4) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X0)),s('type.list.list'(X0),sK14(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(superposition,[],[f579,f562])).
fof(f17389,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) )),
  inference(unit_resulting_resolution,[],[f577,f579])).
fof(f16270,plain,(
  ( ! [X101,X99,X100,X98] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X99),s('type.num.num',X100))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X100)))),X101,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X101),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X99),s('type.num.num',X100))))))) )),
  inference(forward_demodulation,[],[f16253,f669])).
fof(f16253,plain,(
  ( ! [X101,X99,X100,X98] : (~p(s(bool,happ(s(fun(bool,bool),X101),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X99),s('type.num.num',X100)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X100))))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X100)))),X101,bool))) )),
  inference(superposition,[],[f575,f669])).
fof(f16250,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X85),s('type.list.list'(bool),X86))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X83),s('type.num.num',X84))),s('type.list.list'(bool),X87))) | s(bool,X85) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num',X83))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X82),s('type.num.num',X84)))))) )),
  inference(superposition,[],[f578,f669])).
fof(f16248,plain,(
  ( ! [X76,X74,X72,X75,X73] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X73),s('type.num.num',X74)))) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X74)))),X75,X76) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X73))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X72),s('type.num.num',X74)))),X75,X76)) )),
  inference(superposition,[],[f740,f669])).
fof(f16247,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X68),s('type.num.num',X69)))) | ~p(s(bool,X70)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X68))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X67),s('type.num.num',X69)))),X70,X71)) )),
  inference(superposition,[],[f736,f669])).
fof(f16246,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X63),s('type.num.num',X64)))) | ~p(s(bool,X65)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X64)))),X66,X65)) )),
  inference(superposition,[],[f735,f669])).
fof(f16245,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X58),s('type.num.num',X59)))) | ~p(s(bool,X60)) | p(s(bool,X61)) | ~sP5(X60,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X58))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X59)))),X61)) )),
  inference(superposition,[],[f686,f669])).
fof(f16244,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X54),s('type.num.num',X55)))) | p(s(bool,X56)) | sP1(X56,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X54))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num',X55)))))) )),
  inference(superposition,[],[f651,f669])).
fof(f16243,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X50),s('type.num.num',X51)))) | p(s(bool,X52)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X50))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X51)))),X52)) )),
  inference(superposition,[],[f648,f669])).
fof(f16242,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X46),s('type.num.num',X47)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X47)))),X48)) )),
  inference(superposition,[],[f633,f669])).
fof(f16241,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X42),s('type.num.num',X43)))) | sP0(X44,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X43)))))) )),
  inference(superposition,[],[f632,f669])).
fof(f16231,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X9)))) )),
  inference(superposition,[],[f611,f669])).
fof(f16260,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X5)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X6)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6)))) )),
  inference(forward_demodulation,[],[f16230,f669])).
fof(f16230,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X6)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X6)))) )),
  inference(superposition,[],[f612,f669])).
fof(f16229,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X3)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X3))))) )),
  inference(superposition,[],[f670,f669])).
fof(f16228,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f669,f495])).
fof(f16227,plain,(
  ( ! [X17,X18,X16] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X17))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num',X18))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num',X17)))))) )),
  inference(superposition,[],[f669,f588])).
fof(f16222,plain,(
  ( ! [X4,X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X4))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f669,f589])).
fof(f16156,plain,(
  ( ! [X17,X18,X16] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num',X18))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num',X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num',X18)))))) )),
  inference(superposition,[],[f669,f588])).
fof(f16257,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X15))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X15)))))))) )),
  inference(forward_demodulation,[],[f16155,f668])).
fof(f16155,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X15))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.num.num',X15)))))) )),
  inference(superposition,[],[f669,f668])).
fof(f16151,plain,(
  ( ! [X4,X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X4)))))) )),
  inference(superposition,[],[f669,f589])).
fof(f16114,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f751,f669,f705])).
fof(f16115,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f445,f669,f703])).
fof(f16116,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f751,f669,f705])).
fof(f16117,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f445,f669,f703])).
fof(f16071,plain,(
  ( ! [X588,X586,X589,X587] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X587),s('type.num.num',X588))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num',X587))),s('type.num.num',X588)),X589,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X589),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X587),s('type.num.num',X588))))))))) )),
  inference(forward_demodulation,[],[f16024,f668])).
fof(f16024,plain,(
  ( ! [X588,X586,X589,X587] : (~p(s(bool,happ(s(fun('type.num.num',bool),X589),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X587),s('type.num.num',X588)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num',X587))),s('type.num.num',X588))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X586),s('type.num.num',X587))),s('type.num.num',X588)),X589,'type.num.num'))) )),
  inference(superposition,[],[f575,f668])).
fof(f15859,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7)))))))) )),
  inference(superposition,[],[f668,f589])).
fof(f15825,plain,(
  ( ! [X17,X18,X16] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num',X17))),s('type.num.num',X18))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X16),s('type.num.num',X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num',X18)))))) )),
  inference(superposition,[],[f668,f588])).
fof(f15822,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(superposition,[],[f668,f4189])).
fof(f15820,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num',X4)))))) )),
  inference(superposition,[],[f668,f589])).
fof(f15652,plain,(
  ( ! [X165,X163,X166,X164] : (~p(s(bool,happ(s(fun('type.list.list'(X163),bool),X165),s('type.list.list'(X163),X164)))) | p(s(bool,happ(s(fun('type.list.list'(X163),bool),X165),s('type.list.list'(X163),X166)))) | s('type.list.list'(X163),X166) != s('type.list.list'(X163),'const.list.CONS_2'(s(X163,sK13(X164,X163)),s('type.list.list'(X163),sK14(X164,X163)))) | s('type.list.list'(X163),'const.list.NIL_0') = s('type.list.list'(X163),X164)) )),
  inference(superposition,[],[f574,f562])).
fof(f15601,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,X3)))) | p(s(bool,happ(s(fun(bool,bool),X4),s(bool,X5)))) | s(bool,'F_0') != s(bool,X5) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f574,f495])).
fof(f15600,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X2)))) | s(bool,X0) != s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f574,f495])).
fof(f15435,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num',X18)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num',X19)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))),s('type.num.num',X19))))) )),
  inference(superposition,[],[f670,f587])).
fof(f15434,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num',X16)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))),s('type.num.num',X16))))) )),
  inference(superposition,[],[f670,f586])).
fof(f15433,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X12)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num',X13)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num',X13))))) )),
  inference(superposition,[],[f670,f581])).
fof(f15432,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))),s('type.num.num',X10)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num',X10))))) )),
  inference(superposition,[],[f670,f583])).
fof(f15168,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))) | s(X0,X2) = s(X0,sK13(X1,X0)) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(superposition,[],[f578,f562])).
fof(f15166,plain,(
  ( ! [X218,X216,X215,X219,X217] : (s('type.list.list'('type.list.list'(X215)),'const.list.CONS_2'(s('type.list.list'(X215),X216),s('type.list.list'('type.list.list'(X215)),X217))) != s('type.list.list'('type.list.list'(X215)),'const.list.CONS_2'(s('type.list.list'(X215),X218),s('type.list.list'('type.list.list'(X215)),X219))) | s('type.list.list'(X215),X218) = s('type.list.list'(X215),'const.list.CONS_2'(s(X215,sK13(X216,X215)),s('type.list.list'(X215),sK14(X216,X215)))) | s('type.list.list'(X215),'const.list.NIL_0') = s('type.list.list'(X215),X216)) )),
  inference(superposition,[],[f578,f562])).
fof(f15150,plain,(
  ( ! [X152,X151,X153,X150] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X150),s('type.list.list'('type.num.num'),X151))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X152),s('type.list.list'('type.num.num'),X153))) | s('type.num.num',X152) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X150)))) )),
  inference(superposition,[],[f578,f4188])).
fof(f15147,plain,(
  ( ! [X140,X138,X141,X139] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X138),s('type.list.list'('type.num.num'),X139))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X140),s('type.list.list'('type.num.num'),X141))) | s('type.num.num',X140) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f578,f4187])).
fof(f15145,plain,(
  ( ! [X134,X132,X130,X133,X131] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X133),s('type.list.list'('type.num.num'),X134))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X130))),s('type.num.num',X131))),s('type.list.list'('type.num.num'),X132))) | s('type.num.num',X133) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X130),s('type.num.num',X131))),s('type.num.num',X131)))) )),
  inference(superposition,[],[f578,f588])).
fof(f15141,plain,(
  ( ! [X116,X114,X112,X115,X113] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X115),s('type.list.list'('type.num.num'),X116))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num','const.num.SUC_1'(s('type.num.num',X113))))),s('type.list.list'('type.num.num'),X114))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X112),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num',X113)))))) )),
  inference(superposition,[],[f578,f589])).
fof(f15135,plain,(
  ( ! [X94,X92,X90,X93,X91,X89] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',X93),s('type.list.list'('type.num.num'),X94))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),X91))))),s('type.list.list'('type.num.num'),X92))) | s('type.num.num',X93) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X89),'const.list.CONS_2'(s(X89,X90),s('type.list.list'(X89),X91)))))) )),
  inference(superposition,[],[f578,f571])).
fof(f15118,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X17))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X18),s('type.list.list'(bool),X19))) | s(bool,X18) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f578,f474])).
fof(f15117,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X13))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X14),s('type.list.list'(bool),X15))) | s(bool,X14) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f578,f473])).
fof(f15116,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X9))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X10),s('type.list.list'(bool),X11))) | s(bool,X10) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)))) )),
  inference(superposition,[],[f578,f459])).
fof(f15115,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X4),s('type.list.list'(bool),X5))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X6),s('type.list.list'(bool),X7))) | s(bool,'F_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f578,f495])).
fof(f15114,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X1))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f578,f495])).
fof(f15105,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f758,f578])).
fof(f15106,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f4197,f578])).
fof(f15107,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.num.num'),X0))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.list.list'('type.num.num'),X2)))) )),
  inference(unit_resulting_resolution,[],[f757,f578])).
fof(f15108,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.list.list'('type.num.num'),X1))) != s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.list.list'('type.num.num'),X3)))) )),
  inference(unit_resulting_resolution,[],[f759,f578])).
fof(f15111,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'('type.list.list'(X0)),'const.list.CONS_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'('type.list.list'(X0)),X1))) != s('type.list.list'('type.list.list'(X0)),'const.list.CONS_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))),s('type.list.list'('type.list.list'(X0)),X4)))) )),
  inference(unit_resulting_resolution,[],[f577,f578])).
fof(f15020,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,happ(s(fun('type.list.list'(X17),bool),X19),s('type.list.list'(X17),X18)))) | s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK13(X18,X17)),s('type.list.list'(X17),sK14(X18,X17)))) = s('type.list.list'(X17),sK15('const.list.CONS_2'(s(X17,sK13(X18,X17)),s('type.list.list'(X17),sK14(X18,X17))),X19,'type.list.list'(X17))) | s('type.list.list'(X17),'const.list.NIL_0') = s('type.list.list'(X17),X18)) )),
  inference(superposition,[],[f575,f562])).
fof(f15013,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK14(X1,X0)))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(superposition,[],[f571,f562])).
fof(f15012,plain,(
  ( ! [X0] : (s('type.list.list'(bool),X0) = s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK14(X0,bool)))) | s('type.list.list'(bool),'const.list.NIL_0') = s('type.list.list'(bool),X0) | s(bool,'T_0') = s(bool,sK13(X0,bool))) )),
  inference(superposition,[],[f562,f495])).
fof(f15009,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13('const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)),X0)),s('type.list.list'(X0),sK14('const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)),X0))))) )),
  inference(unit_resulting_resolution,[],[f577,f562])).
fof(f14604,plain,(
  ( ! [X360,X359,X361] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X359),s('type.num.num',X360))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X359))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X360)))),X361,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X361),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X359),s('type.num.num',X360))))))))) )),
  inference(forward_demodulation,[],[f14569,f592])).
fof(f14569,plain,(
  ( ! [X360,X359,X361] : (~p(s(bool,happ(s(fun('type.num.num',bool),X361),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X359),s('type.num.num',X360)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X359))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X360))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X359))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X360)))),X361,'type.num.num'))) )),
  inference(superposition,[],[f575,f592])).
fof(f14470,plain,(
  ( ! [X121,X122,X120] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X122))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X120),s('type.num.num',X121))))))) | s('type.num.num',X122) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X121)))))) )),
  inference(superposition,[],[f627,f592])).
fof(f14466,plain,(
  ( ! [X109,X110,X108] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X110))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X108),s('type.num.num',X109))))))) | s('type.num.num',X110) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))))) )),
  inference(superposition,[],[f625,f592])).
fof(f14462,plain,(
  ( ! [X97,X98,X96] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X98))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X96),s('type.num.num',X97))))))) | s('type.num.num',X98) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))))) )),
  inference(superposition,[],[f623,f592])).
fof(f14425,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f592,f4185])).
fof(f14393,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f592,f4185])).
fof(f14274,plain,(
  ( ! [X346,X345,X347] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X345),s('type.num.num',X346))))) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X345))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X346)))),X347,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X347),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X345),s('type.num.num',X346))))))))) )),
  inference(forward_demodulation,[],[f14238,f591])).
fof(f14238,plain,(
  ( ! [X346,X345,X347] : (~p(s(bool,happ(s(fun('type.num.num',bool),X347),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X345),s('type.num.num',X346)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X345))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X346))))) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X345))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X346)))),X347,'type.num.num'))) )),
  inference(superposition,[],[f575,f591])).
fof(f14141,plain,(
  ( ! [X116,X114,X115] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X114),s('type.num.num',X115))))))) | s('type.num.num',X116) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115)))))) )),
  inference(superposition,[],[f627,f591])).
fof(f14137,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X104))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X102),s('type.num.num',X103))))))) | s('type.num.num',X104) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X102))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X103)))))) )),
  inference(superposition,[],[f625,f591])).
fof(f14133,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num',X92) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))))) )),
  inference(superposition,[],[f623,f591])).
fof(f14098,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f591,f4185])).
fof(f14067,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f591,f4185])).
fof(f13959,plain,(
  ( ! [X339,X340,X338] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X338),s('type.num.num',X339))))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X338))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X339)))),X340,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X340),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X338),s('type.num.num',X339))))))))) )),
  inference(forward_demodulation,[],[f13914,f590])).
fof(f13914,plain,(
  ( ! [X339,X340,X338] : (~p(s(bool,happ(s(fun('type.num.num',bool),X340),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X338),s('type.num.num',X339)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X338))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X339))))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X338))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X339)))),X340,'type.num.num'))) )),
  inference(superposition,[],[f575,f590])).
fof(f13819,plain,(
  ( ! [X114,X112,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X112),s('type.num.num',X113))))))) | s('type.num.num',X114) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X112))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113)))))) )),
  inference(superposition,[],[f627,f590])).
fof(f13811,plain,(
  ( ! [X90,X88,X89] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X88),s('type.num.num',X89))))))) | s('type.num.num',X90) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X89)))))) )),
  inference(superposition,[],[f623,f590])).
fof(f13933,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f13932,f590])).
fof(f13932,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f13779,f481])).
fof(f13779,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f588,f590])).
fof(f13931,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f13930,f590])).
fof(f13930,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f13778,f481])).
fof(f13778,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f589,f590])).
fof(f13642,plain,(
  ( ! [X325,X327,X326] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num','const.num.SUC_1'(s('type.num.num',X326))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X325),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num',X326)))),X327,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X327),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num','const.num.SUC_1'(s('type.num.num',X326))))))))) )),
  inference(forward_demodulation,[],[f13604,f589])).
fof(f13604,plain,(
  ( ! [X325,X327,X326] : (~p(s(bool,happ(s(fun('type.num.num',bool),X327),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num','const.num.SUC_1'(s('type.num.num',X326)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X325),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num',X326))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X325),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X325),s('type.num.num',X326)))),X327,'type.num.num'))) )),
  inference(superposition,[],[f575,f589])).
fof(f13511,plain,(
  ( ! [X105,X106,X104] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X104),s('type.num.num','const.num.SUC_1'(s('type.num.num',X105))))))) | s('type.num.num',X106) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X104),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X104),s('type.num.num',X105)))))) )),
  inference(superposition,[],[f627,f589])).
fof(f13507,plain,(
  ( ! [X94,X92,X93] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X94))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num','const.num.SUC_1'(s('type.num.num',X93))))))) | s('type.num.num',X94) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X92),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X92),s('type.num.num',X93)))))) )),
  inference(superposition,[],[f625,f589])).
fof(f13503,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X82))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X80),s('type.num.num','const.num.SUC_1'(s('type.num.num',X81))))))) | s('type.num.num',X82) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X80),s('type.num.num',X81)))))) )),
  inference(superposition,[],[f623,f589])).
fof(f13613,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f13467,f472])).
fof(f13467,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f589,f4187])).
fof(f13342,plain,(
  ( ! [X315,X316,X314] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X314))),s('type.num.num',X315))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X314),s('type.num.num',X315))),s('type.num.num',X315)),X316,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X316),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X314))),s('type.num.num',X315))))))) )),
  inference(forward_demodulation,[],[f13306,f588])).
fof(f13306,plain,(
  ( ! [X315,X316,X314] : (~p(s(bool,happ(s(fun('type.num.num',bool),X316),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X314))),s('type.num.num',X315)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X314),s('type.num.num',X315))),s('type.num.num',X315))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X314),s('type.num.num',X315))),s('type.num.num',X315)),X316,'type.num.num'))) )),
  inference(superposition,[],[f575,f588])).
fof(f13215,plain,(
  ( ! [X99,X97,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X97))),s('type.num.num',X98))))) | s('type.num.num',X99) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',X98))),s('type.num.num',X98)))) )),
  inference(superposition,[],[f627,f588])).
fof(f13211,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X87))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X85))),s('type.num.num',X86))))) | s('type.num.num',X87) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X85),s('type.num.num',X86))),s('type.num.num',X86)))) )),
  inference(superposition,[],[f625,f588])).
fof(f13207,plain,(
  ( ! [X74,X75,X73] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X75))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X73))),s('type.num.num',X74))))) | s('type.num.num',X75) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X73),s('type.num.num',X74))),s('type.num.num',X74)))) )),
  inference(superposition,[],[f623,f588])).
fof(f13315,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f13149,f4187])).
fof(f13149,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f588,f4187])).
fof(f13314,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f13148,f472])).
fof(f13148,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f588,f4188])).
fof(f13053,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X10)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11)))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) )),
  inference(forward_demodulation,[],[f12911,f587])).
fof(f12911,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) )),
  inference(superposition,[],[f612,f587])).
fof(f13052,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) )),
  inference(forward_demodulation,[],[f12909,f581])).
fof(f12909,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) )),
  inference(superposition,[],[f612,f581])).
fof(f13051,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X4)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) )),
  inference(forward_demodulation,[],[f12908,f583])).
fof(f12908,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4)))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) )),
  inference(superposition,[],[f612,f583])).
fof(f12789,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) )),
  inference(subsumption_resolution,[],[f12788,f751])).
fof(f12788,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) )),
  inference(superposition,[],[f576,f495])).
fof(f12787,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool))) )),
  inference(superposition,[],[f576,f495])).
fof(f12720,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f12669,f751])).
fof(f12669,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f630,f495])).
fof(f12125,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56)))),X57,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))))))) )),
  inference(forward_demodulation,[],[f12115,f587])).
fof(f12115,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56))))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56)))),X57,bool))) )),
  inference(superposition,[],[f575,f587])).
fof(f12113,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X48),s('type.num.num',X49)))) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51)) )),
  inference(superposition,[],[f740,f587])).
fof(f12112,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))),X46,X47)) )),
  inference(superposition,[],[f736,f587])).
fof(f12111,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X40),s('type.num.num',X41)))) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))),X43,X42)) )),
  inference(superposition,[],[f735,f587])).
fof(f12110,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37)))),X39)) )),
  inference(superposition,[],[f686,f587])).
fof(f12109,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) )),
  inference(superposition,[],[f651,f587])).
fof(f12108,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32)) )),
  inference(superposition,[],[f648,f587])).
fof(f12107,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29)) )),
  inference(superposition,[],[f633,f587])).
fof(f12106,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) )),
  inference(superposition,[],[f632,f587])).
fof(f12096,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f611,f587])).
fof(f12095,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f587,f495])).
fof(f12045,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f587,f705])).
fof(f12046,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f587,f703])).
fof(f12047,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f751,f587,f705])).
fof(f12048,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f445,f587,f703])).
fof(f11990,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56)))),X57,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))))))) )),
  inference(forward_demodulation,[],[f11980,f586])).
fof(f11980,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56))))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X56)))),X57,bool))) )),
  inference(superposition,[],[f575,f586])).
fof(f11978,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X48),s('type.num.num',X49)))) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X49)))),X50,X51)) )),
  inference(superposition,[],[f740,f586])).
fof(f11977,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X45)))),X46,X47)) )),
  inference(superposition,[],[f736,f586])).
fof(f11976,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X40),s('type.num.num',X41)))) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41)))),X43,X42)) )),
  inference(superposition,[],[f735,f586])).
fof(f11975,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37)))),X39)) )),
  inference(superposition,[],[f686,f586])).
fof(f11974,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) )),
  inference(superposition,[],[f651,f586])).
fof(f11973,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31)))),X32)) )),
  inference(superposition,[],[f648,f586])).
fof(f11972,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29)) )),
  inference(superposition,[],[f633,f586])).
fof(f11971,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))) )),
  inference(superposition,[],[f632,f586])).
fof(f11960,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f586,f495])).
fof(f11910,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f586,f705])).
fof(f11911,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f586,f703])).
fof(f11912,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f751,f586,f705])).
fof(f11913,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f445,f586,f703])).
fof(f11856,plain,(
  ( ! [X54,X55,X53] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X54),s('type.num.num',X53))) = s(bool,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,'const.prim_rec.<_2'(s('type.num.num',X54),s('type.num.num',X53))))))) )),
  inference(forward_demodulation,[],[f11846,f585])).
fof(f11846,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,'const.prim_rec.<_2'(s('type.num.num',X54),s('type.num.num',X53)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))))) = s(bool,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55,bool))) )),
  inference(superposition,[],[f575,f585])).
fof(f11844,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X47),s('type.num.num',X46)))) | ~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) )),
  inference(superposition,[],[f740,f585])).
fof(f11843,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X43),s('type.num.num',X42)))) | ~p(s(bool,X44)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) )),
  inference(superposition,[],[f736,f585])).
fof(f11842,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X39),s('type.num.num',X38)))) | ~p(s(bool,X40)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) )),
  inference(superposition,[],[f735,f585])).
fof(f11841,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X35),s('type.num.num',X34)))) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) )),
  inference(superposition,[],[f686,f585])).
fof(f11840,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X32),s('type.num.num',X31)))) | p(s(bool,X33)) | sP1(X33,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f651,f585])).
fof(f11839,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X29),s('type.num.num',X28)))) | p(s(bool,X30)) | sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) )),
  inference(superposition,[],[f648,f585])).
fof(f11838,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25)))) | sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f633,f585])).
fof(f11837,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22)))) | sP0(X24,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f632,f585])).
fof(f11827,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f585,f495])).
fof(f11826,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f585,f4185])).
fof(f11802,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f585,f4185])).
fof(f11775,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f585,f705])).
fof(f11776,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f585,f703])).
fof(f11777,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f751,f585,f705])).
fof(f11778,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f445,f585,f703])).
fof(f8858,plain,(
  ( ! [X54,X55,X53] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X54),s('type.num.num',X53))) = s(bool,sK15('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X54),s('type.num.num',X53))))))) )),
  inference(forward_demodulation,[],[f8843,f584])).
fof(f8843,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X54),s('type.num.num',X53)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))))) = s(bool,sK15('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55,bool))) )),
  inference(superposition,[],[f575,f584])).
fof(f8841,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X47),s('type.num.num',X46)))) | ~sP8('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) )),
  inference(superposition,[],[f740,f584])).
fof(f8840,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42)))) | ~p(s(bool,X44)) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) )),
  inference(superposition,[],[f736,f584])).
fof(f8839,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X39),s('type.num.num',X38)))) | ~p(s(bool,X40)) | sP9('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) )),
  inference(superposition,[],[f735,f584])).
fof(f8838,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X35),s('type.num.num',X34)))) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) )),
  inference(superposition,[],[f686,f584])).
fof(f8837,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31)))) | p(s(bool,X33)) | sP1(X33,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f651,f584])).
fof(f8836,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num',X28)))) | p(s(bool,X30)) | sP1('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) )),
  inference(superposition,[],[f648,f584])).
fof(f8835,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X26),s('type.num.num',X25)))) | sP0('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f633,f584])).
fof(f8834,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X22)))) | sP0(X24,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f632,f584])).
fof(f8824,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f584,f495])).
fof(f8823,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f584,f4185])).
fof(f8791,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f584,f4185])).
fof(f8756,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f584,f705])).
fof(f8757,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f584,f703])).
fof(f8758,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f751,f584,f705])).
fof(f8759,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f445,f584,f703])).
fof(f8710,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X56)))),X57,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))))))) )),
  inference(forward_demodulation,[],[f8700,f583])).
fof(f8700,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X56))))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X56)))),X57,bool))) )),
  inference(superposition,[],[f575,f583])).
fof(f8698,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X48),s('type.num.num',X49)))) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))),X50,X51)) )),
  inference(superposition,[],[f740,f583])).
fof(f8697,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45)))),X46,X47)) )),
  inference(superposition,[],[f736,f583])).
fof(f8696,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X40),s('type.num.num',X41)))) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))),X43,X42)) )),
  inference(superposition,[],[f735,f583])).
fof(f8695,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))),X39)) )),
  inference(superposition,[],[f686,f583])).
fof(f8694,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))))) )),
  inference(superposition,[],[f651,f583])).
fof(f8693,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))),X32)) )),
  inference(superposition,[],[f648,f583])).
fof(f8692,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X29)) )),
  inference(superposition,[],[f633,f583])).
fof(f8691,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25)))))) )),
  inference(superposition,[],[f632,f583])).
fof(f8681,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f611,f583])).
fof(f8680,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f583,f495])).
fof(f8616,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f583,f705])).
fof(f8617,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f583,f703])).
fof(f8618,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f751,f583,f705])).
fof(f8619,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f445,f583,f703])).
fof(f8605,plain,(
  ( ! [X54,X55,X53] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X53),s('type.num.num',X54))) = s(bool,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,'const.prim_rec.<_2'(s('type.num.num',X53),s('type.num.num',X54))))))) )),
  inference(forward_demodulation,[],[f8594,f582])).
fof(f8594,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,'const.prim_rec.<_2'(s('type.num.num',X53),s('type.num.num',X54)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))))) = s(bool,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54)))),X55,bool))) )),
  inference(superposition,[],[f575,f582])).
fof(f8592,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47)))),X48,X49)) )),
  inference(superposition,[],[f740,f582])).
fof(f8591,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X42),s('type.num.num',X43)))) | ~p(s(bool,X44)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))),X44,X45)) )),
  inference(superposition,[],[f736,f582])).
fof(f8590,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X38),s('type.num.num',X39)))) | ~p(s(bool,X40)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X41,X40)) )),
  inference(superposition,[],[f735,f582])).
fof(f8589,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X35)))) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP5(X36,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35)))),X37)) )),
  inference(superposition,[],[f686,f582])).
fof(f8588,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num',X32)))) | p(s(bool,X33)) | sP1(X33,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) )),
  inference(superposition,[],[f651,f582])).
fof(f8587,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) | p(s(bool,X30)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X30)) )),
  inference(superposition,[],[f648,f582])).
fof(f8586,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26)))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))),X27)) )),
  inference(superposition,[],[f633,f582])).
fof(f8585,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23)))) | sP0(X24,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f632,f582])).
fof(f8575,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f582,f495])).
fof(f8574,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f582,f4185])).
fof(f8596,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f8573,f471])).
fof(f8573,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f582,f2960])).
fof(f8542,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f582,f4185])).
fof(f8507,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f582,f705])).
fof(f8508,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f582,f703])).
fof(f8509,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f751,f582,f705])).
fof(f8510,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f445,f582,f703])).
fof(f8500,plain,(
  ( ! [X57,X56,X55] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56)))),X57,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56))))))) )),
  inference(forward_demodulation,[],[f8489,f581])).
fof(f8489,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56)))),X57,bool))) )),
  inference(superposition,[],[f575,f581])).
fof(f8487,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X48),s('type.num.num',X49)))) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))),X50,X51) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))),X50,X51)) )),
  inference(superposition,[],[f740,f581])).
fof(f8486,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)))) | ~p(s(bool,X46)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X46,X47)) )),
  inference(superposition,[],[f736,f581])).
fof(f8485,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X40),s('type.num.num',X41)))) | ~p(s(bool,X42)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X43,X42)) )),
  inference(superposition,[],[f735,f581])).
fof(f8484,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP5(X38,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37)))),X39)) )),
  inference(superposition,[],[f686,f581])).
fof(f8483,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | p(s(bool,X35)) | sP1(X35,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34)))))) )),
  inference(superposition,[],[f651,f581])).
fof(f8482,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))) | p(s(bool,X32)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31)))),X32)) )),
  inference(superposition,[],[f648,f581])).
fof(f8481,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X27),s('type.num.num',X28)))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X29)) )),
  inference(superposition,[],[f633,f581])).
fof(f8480,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP0(X26,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))) )),
  inference(superposition,[],[f632,f581])).
fof(f8470,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f611,f581])).
fof(f8469,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f581,f495])).
fof(f8468,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f581,f4185])).
fof(f8436,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f581,f4185])).
fof(f8401,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f581,f705])).
fof(f8402,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f581,f703])).
fof(f8403,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f751,f581,f705])).
fof(f8404,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f445,f581,f703])).
fof(f8093,plain,(
  ( ! [X412,X414,X413,X411] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X411),X413))))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X411),'const.list.CONS_2'(s(X411,X412),s('type.list.list'(X411),X413)))),X414,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X414),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X411),X413))))))))) )),
  inference(forward_demodulation,[],[f8072,f571])).
fof(f8072,plain,(
  ( ! [X412,X414,X413,X411] : (~p(s(bool,happ(s(fun('type.num.num',bool),X414),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X411),X413)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X411),'const.list.CONS_2'(s(X411,X412),s('type.list.list'(X411),X413))))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X411),'const.list.CONS_2'(s(X411,X412),s('type.list.list'(X411),X413)))),X414,'type.num.num'))) )),
  inference(superposition,[],[f575,f571])).
fof(f7995,plain,(
  ( ! [X151,X149,X150,X148] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X151))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X150))))))) | s('type.num.num',X151) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),'const.list.CONS_2'(s(X148,X149),s('type.list.list'(X148),X150)))))) )),
  inference(superposition,[],[f627,f571])).
fof(f7991,plain,(
  ( ! [X134,X132,X135,X133] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X135))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),X134))))))) | s('type.num.num',X135) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X132),'const.list.CONS_2'(s(X132,X133),s('type.list.list'(X132),X134)))))) )),
  inference(superposition,[],[f625,f571])).
fof(f7987,plain,(
  ( ! [X118,X116,X119,X117] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X119))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),X118))))))) | s('type.num.num',X119) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X116),'const.list.CONS_2'(s(X116,X117),s('type.list.list'(X116),X118)))))) )),
  inference(superposition,[],[f623,f571])).
fof(f7876,plain,(
  ( ! [X83] : (s(bool,'T_0') = s(bool,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X83,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X83),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f7830,f3056])).
fof(f7830,plain,(
  ( ! [X83] : (~p(s(bool,happ(s(fun(bool,bool),X83),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X83,bool))) )),
  inference(superposition,[],[f575,f3056])).
fof(f7875,plain,(
  ( ! [X81,X82] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X81))) = s(bool,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X82),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X81))))))) )),
  inference(forward_demodulation,[],[f7829,f476])).
fof(f7829,plain,(
  ( ! [X81,X82] : (~p(s(bool,happ(s(fun(bool,bool),X82),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X81)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s(bool,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,bool))) )),
  inference(superposition,[],[f575,f476])).
fof(f7874,plain,(
  ( ! [X80] : (s(bool,'T_0') = s(bool,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X80,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f7828,f806])).
fof(f7828,plain,(
  ( ! [X80] : (~p(s(bool,happ(s(fun(bool,bool),X80),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X80,bool))) )),
  inference(superposition,[],[f575,f806])).
fof(f7873,plain,(
  ( ! [X79] : (s(bool,'F_0') = s(bool,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X79,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X79),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f7827,f3055])).
fof(f7827,plain,(
  ( ! [X79] : (~p(s(bool,happ(s(fun(bool,bool),X79),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X79,bool))) )),
  inference(superposition,[],[f575,f3055])).
fof(f7872,plain,(
  ( ! [X78,X77] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X77))) = s(bool,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77)))),X78,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X78),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X77))))))) )),
  inference(forward_demodulation,[],[f7826,f478])).
fof(f7826,plain,(
  ( ! [X78,X77] : (~p(s(bool,happ(s(fun(bool,bool),X78),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X77)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))))) = s(bool,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77)))),X78,bool))) )),
  inference(superposition,[],[f575,f478])).
fof(f7871,plain,(
  ( ! [X76] : (s(bool,'F_0') = s(bool,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X76,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X76),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f7825,f823])).
fof(f7825,plain,(
  ( ! [X76] : (~p(s(bool,happ(s(fun(bool,bool),X76),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X76,bool))) )),
  inference(superposition,[],[f575,f823])).
fof(f7870,plain,(
  ( ! [X74,X75] : (s(bool,'T_0') = s(bool,sK15('const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0')),X75,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X75),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f7824,f468])).
fof(f7824,plain,(
  ( ! [X74,X75] : (~p(s(bool,happ(s(fun(bool,bool),X75),s(bool,'T_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0'))) = s(bool,sK15('const.arithmetic.>=_2'(s('type.num.num',X74),s('type.num.num','const.num.|48|_0')),X75,bool))) )),
  inference(superposition,[],[f575,f468])).
fof(f7869,plain,(
  ( ! [X72,X73] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))) = s(bool,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.num.|48|_0')),X73,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X73),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72))))))) )),
  inference(forward_demodulation,[],[f7823,f491])).
fof(f7823,plain,(
  ( ! [X72,X73] : (~p(s(bool,happ(s(fun(bool,bool),X73),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.num.|48|_0'))) = s(bool,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.num.|48|_0')),X73,bool))) )),
  inference(superposition,[],[f575,f491])).
fof(f7868,plain,(
  ( ! [X70,X71] : (s(bool,'F_0') = s(bool,sK15('const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X70)),X71,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X71),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f7822,f470])).
fof(f7822,plain,(
  ( ! [X70,X71] : (~p(s(bool,happ(s(fun(bool,bool),X71),s(bool,'F_0')))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X70))) = s(bool,sK15('const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X70)),X71,bool))) )),
  inference(superposition,[],[f575,f470])).
fof(f7867,plain,(
  ( ! [X68,X69] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68))) = s(bool,sK15('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X69),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68))))))) )),
  inference(forward_demodulation,[],[f7821,f494])).
fof(f7821,plain,(
  ( ! [X68,X69] : (~p(s(bool,happ(s(fun(bool,bool),X69),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))))) = s(bool,sK15('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69,bool))) )),
  inference(superposition,[],[f575,f494])).
fof(f7866,plain,(
  ( ! [X66,X67] : (s(bool,'F_0') = s(bool,sK15('const.prim_rec.<_2'(s('type.num.num',X66),s('type.num.num','const.num.|48|_0')),X67,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X67),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f7820,f471])).
fof(f7820,plain,(
  ( ! [X66,X67] : (~p(s(bool,happ(s(fun(bool,bool),X67),s(bool,'F_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X66),s('type.num.num','const.num.|48|_0'))) = s(bool,sK15('const.prim_rec.<_2'(s('type.num.num',X66),s('type.num.num','const.num.|48|_0')),X67,bool))) )),
  inference(superposition,[],[f575,f471])).
fof(f7865,plain,(
  ( ! [X64,X65] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.num.|48|_0')),X65,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X65),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f7819,f493])).
fof(f7819,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun(bool,bool),X65),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X64),s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.num.|48|_0'))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.num.|48|_0')),X65,bool))) )),
  inference(superposition,[],[f575,f493])).
fof(f7864,plain,(
  ( ! [X62,X63] : (s(bool,'F_0') = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.ZERO_0')),X63,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X63),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f7818,f474])).
fof(f7818,plain,(
  ( ! [X62,X63] : (~p(s(bool,happ(s(fun(bool,bool),X63),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.ZERO_0')),X63,bool))) )),
  inference(superposition,[],[f575,f474])).
fof(f7863,plain,(
  ( ! [X61,X60] : (s(bool,'F_0') = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0')),X61,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X61),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f7817,f473])).
fof(f7817,plain,(
  ( ! [X61,X60] : (~p(s(bool,happ(s(fun(bool,bool),X61),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0')),X61,bool))) )),
  inference(superposition,[],[f575,f473])).
fof(f7862,plain,(
  ( ! [X59,X58] : (s(bool,'T_0') = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58)),X59,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X59),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f7816,f469])).
fof(f7816,plain,(
  ( ! [X59,X58] : (~p(s(bool,happ(s(fun(bool,bool),X59),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X58)),X59,bool))) )),
  inference(superposition,[],[f575,f469])).
fof(f7861,plain,(
  ( ! [X57,X56] : (s(bool,'T_0') = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56)),X57,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f7815,f459])).
fof(f7815,plain,(
  ( ! [X57,X56] : (~p(s(bool,happ(s(fun(bool,bool),X57),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56))) = s(bool,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X56)),X57,bool))) )),
  inference(superposition,[],[f575,f459])).
fof(f7814,plain,(
  ( ! [X54,X55] : (~p(s(bool,happ(s(fun(bool,bool),X55),s(bool,X54)))) | s(bool,'F_0') = s(bool,sK15('F_0',X55,bool)) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f575,f495])).
fof(f7813,plain,(
  ( ! [X52,X53] : (~p(s(bool,happ(s(fun(bool,bool),X53),s(bool,'F_0')))) | s(bool,X52) = s(bool,sK15(X52,X53,bool)) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f575,f495])).
fof(f7860,plain,(
  ( ! [X50,X51] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X50))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.ZERO_0')))),X51,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X51),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X50))))))) )),
  inference(forward_demodulation,[],[f7812,f487])).
fof(f7812,plain,(
  ( ! [X50,X51] : (~p(s(bool,happ(s(fun('type.num.num',bool),X51),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X50)))))) | s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num','const.arithmetic.ZERO_0')))),X51,'type.num.num'))) )),
  inference(superposition,[],[f575,f487])).
fof(f7859,plain,(
  ( ! [X48,X49] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X48))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X48)))),X49,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X48))))))) )),
  inference(forward_demodulation,[],[f7811,f486])).
fof(f7811,plain,(
  ( ! [X48,X49] : (~p(s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X48)))))) | s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X48))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X48)))),X49,'type.num.num'))) )),
  inference(superposition,[],[f575,f486])).
fof(f7858,plain,(
  ( ! [X47,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X46))))) = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46)))),X47,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X47),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X46))))))))) )),
  inference(forward_demodulation,[],[f7810,f482])).
fof(f7810,plain,(
  ( ! [X47,X46] : (~p(s(bool,happ(s(fun('type.num.num',bool),X47),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X46)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))))) = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46)))),X47,'type.num.num'))) )),
  inference(superposition,[],[f575,f482])).
fof(f7857,plain,(
  ( ! [X45] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X45,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7809,f448])).
fof(f7809,plain,(
  ( ! [X45] : (~p(s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X45,'type.num.num'))) )),
  inference(superposition,[],[f575,f448])).
fof(f7856,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num',X43),s('type.num.num','const.num.|48|_0')),X44,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X44),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f7808,f4186])).
fof(f7808,plain,(
  ( ! [X43,X44] : (~p(s(bool,happ(s(fun('type.num.num',bool),X44),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X43),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num',X43),s('type.num.num','const.num.|48|_0')),X44,'type.num.num'))) )),
  inference(superposition,[],[f575,f4186])).
fof(f7855,plain,(
  ( ! [X41,X42] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))),X42,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X42),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7807,f490])).
fof(f7807,plain,(
  ( ! [X41,X42] : (~p(s(bool,happ(s(fun('type.num.num',bool),X42),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))),X42,'type.num.num'))) )),
  inference(superposition,[],[f575,f490])).
fof(f7854,plain,(
  ( ! [X39,X40] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39)))))),X40,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7806,f479])).
fof(f7806,plain,(
  ( ! [X39,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39))))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39)))))),X40,'type.num.num'))) )),
  inference(superposition,[],[f575,f479])).
fof(f7853,plain,(
  ( ! [X37,X38] : (s('type.num.num',X37) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num',X37),s('type.num.num','const.num.|48|_0')),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37))))) )),
  inference(forward_demodulation,[],[f7805,f466])).
fof(f7805,plain,(
  ( ! [X37,X38] : (~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X37),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num',X37),s('type.num.num','const.num.|48|_0')),X38,'type.num.num'))) )),
  inference(superposition,[],[f575,f466])).
fof(f7852,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35)),X36,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7804,f465])).
fof(f7804,plain,(
  ( ! [X35,X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35))) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X35)),X36,'type.num.num'))) )),
  inference(superposition,[],[f575,f465])).
fof(f7851,plain,(
  ( ! [X34] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7803,f1732])).
fof(f7803,plain,(
  ( ! [X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num'))) )),
  inference(superposition,[],[f575,f1732])).
fof(f7850,plain,(
  ( ! [X33,X32] : (s('type.num.num',X32) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))),X33,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X33),s('type.num.num',X32))))) )),
  inference(forward_demodulation,[],[f7802,f477])).
fof(f7802,plain,(
  ( ! [X33,X32] : (~p(s(bool,happ(s(fun('type.num.num',bool),X33),s('type.num.num',X32)))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32))))) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))),X33,'type.num.num'))) )),
  inference(superposition,[],[f575,f477])).
fof(f7849,plain,(
  ( ! [X30,X31] : (s('type.num.num',X30) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0')))),X31,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num',X30))))) )),
  inference(forward_demodulation,[],[f7801,f475])).
fof(f7801,plain,(
  ( ! [X30,X31] : (~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num',X30)))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0')))),X31,'type.num.num'))) )),
  inference(superposition,[],[f575,f475])).
fof(f7848,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X29),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28))))))))) )),
  inference(forward_demodulation,[],[f7800,f485])).
fof(f7800,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun('type.num.num',bool),X29),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X28)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X29,'type.num.num'))) )),
  inference(superposition,[],[f575,f485])).
fof(f7847,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))),X27,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))))))) )),
  inference(forward_demodulation,[],[f7799,f484])).
fof(f7799,plain,(
  ( ! [X26,X27] : (~p(s(bool,happ(s(fun('type.num.num',bool),X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X26)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))),X27,'type.num.num'))) )),
  inference(superposition,[],[f575,f484])).
fof(f7846,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))),X25,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X24))))))) )),
  inference(forward_demodulation,[],[f7798,f483])).
fof(f7798,plain,(
  ( ! [X24,X25] : (~p(s(bool,happ(s(fun('type.num.num',bool),X25),s('type.num.num','const.num.SUC_1'(s('type.num.num',X24)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))),X25,'type.num.num'))) )),
  inference(superposition,[],[f575,f483])).
fof(f7845,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))))))) )),
  inference(forward_demodulation,[],[f7797,f481])).
fof(f7797,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,'type.num.num'))) )),
  inference(superposition,[],[f575,f481])).
fof(f7844,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))),X21,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f7796,f472])).
fof(f7796,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))),X21,'type.num.num'))) )),
  inference(superposition,[],[f575,f472])).
fof(f7843,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X19,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X19),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f7795,f449])).
fof(f7795,plain,(
  ( ! [X19] : (~p(s(bool,happ(s(fun('type.num.num',bool),X19),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X19,'type.num.num'))) )),
  inference(superposition,[],[f575,f449])).
fof(f7842,plain,(
  ( ! [X17,X18] : (s('type.num.num',X17) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X17)),X18,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X18),s('type.num.num',X17))))) )),
  inference(forward_demodulation,[],[f7794,f4188])).
fof(f7794,plain,(
  ( ! [X17,X18] : (~p(s(bool,happ(s(fun('type.num.num',bool),X18),s('type.num.num',X17)))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X17))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X17)),X18,'type.num.num'))) )),
  inference(superposition,[],[f575,f4188])).
fof(f7841,plain,(
  ( ! [X15,X16] : (s('type.num.num',X15) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X16,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',X15))))) )),
  inference(forward_demodulation,[],[f7793,f4187])).
fof(f7793,plain,(
  ( ! [X15,X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',X15)))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X16,'type.num.num'))) )),
  inference(superposition,[],[f575,f4187])).
fof(f7840,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')),X14,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7792,f461])).
fof(f7792,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')),X14,'type.num.num'))) )),
  inference(superposition,[],[f575,f461])).
fof(f7839,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)),X12,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X12),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7791,f460])).
fof(f7791,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun('type.num.num',bool),X12),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))) = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)),X12,'type.num.num'))) )),
  inference(superposition,[],[f575,f460])).
fof(f7838,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X9)),X10,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))))) )),
  inference(forward_demodulation,[],[f7790,f4189])).
fof(f7790,plain,(
  ( ! [X10,X9] : (~p(s(bool,happ(s(fun('type.num.num',bool),X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X9))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X9)),X10,'type.num.num'))) )),
  inference(superposition,[],[f575,f4189])).
fof(f7837,plain,(
  ( ! [X8,X7] : (s('type.num.num',X7) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)),X8,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',X7))))) )),
  inference(forward_demodulation,[],[f7789,f463])).
fof(f7789,plain,(
  ( ! [X8,X7] : (~p(s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)),X8,'type.num.num'))) )),
  inference(superposition,[],[f575,f463])).
fof(f7836,plain,(
  ( ! [X6,X5] : (s('type.num.num',X5) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')),X6,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X5))))) )),
  inference(forward_demodulation,[],[f7788,f462])).
fof(f7788,plain,(
  ( ! [X6,X5] : (~p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X5)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')),X6,'type.num.num'))) )),
  inference(superposition,[],[f575,f462])).
fof(f7835,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f7787,f4185])).
fof(f7787,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,'type.num.num'))) )),
  inference(superposition,[],[f575,f4185])).
fof(f7834,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X3,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7786,f2960])).
fof(f7786,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X3,'type.num.num'))) )),
  inference(superposition,[],[f575,f2960])).
fof(f7833,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0')),X2,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f7785,f458])).
fof(f7785,plain,(
  ( ! [X2,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0'))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0')),X2,'type.num.num'))) )),
  inference(superposition,[],[f575,f458])).
fof(f7763,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30)))) | ~sP8('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32) | sP9('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32)) )),
  inference(superposition,[],[f740,f494])).
fof(f7762,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) | ~p(s(bool,X28)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) )),
  inference(superposition,[],[f736,f494])).
fof(f7761,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))) | ~p(s(bool,X25)) | sP9('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X26,X25)) )),
  inference(superposition,[],[f735,f494])).
fof(f7760,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21)))) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP5(X22,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23)) )),
  inference(superposition,[],[f686,f494])).
fof(f7759,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)))) | p(s(bool,X20)) | sP1(X20,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f651,f494])).
fof(f7758,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | p(s(bool,X18)) | sP1('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18)) )),
  inference(superposition,[],[f648,f494])).
fof(f7757,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)))) | sP0('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) )),
  inference(superposition,[],[f633,f494])).
fof(f7756,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X13)))) | sP0(X14,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) )),
  inference(superposition,[],[f632,f494])).
fof(f7746,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f494,f495])).
fof(f7745,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f494,f4185])).
fof(f7712,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f494,f705])).
fof(f7713,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f494,f703])).
fof(f7714,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f751,f494,f705])).
fof(f7715,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f445,f494,f703])).
fof(f7690,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')))) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.num.|48|_0')),X32,X33) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.num.|48|_0')),X32,X33)) )),
  inference(superposition,[],[f740,f493])).
fof(f7689,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X29)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.num.|48|_0')),X29,X30)) )),
  inference(superposition,[],[f736,f493])).
fof(f7688,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X26)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.num.|48|_0')),X27,X26)) )),
  inference(superposition,[],[f735,f493])).
fof(f7687,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X23)) | p(s(bool,X24)) | ~sP5(X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.num.|48|_0')),X24)) )),
  inference(superposition,[],[f686,f493])).
fof(f7686,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X21)) | sP1(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f651,f493])).
fof(f7685,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X19)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.num.|48|_0')),X19)) )),
  inference(superposition,[],[f648,f493])).
fof(f7684,plain,(
  ( ! [X17,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.num.|48|_0')),X17)) )),
  inference(superposition,[],[f633,f493])).
fof(f7683,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0')))) | sP0(X15,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f632,f493])).
fof(f7673,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f611,f493])).
fof(f7672,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f493,f495])).
fof(f7693,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f7671,f473])).
fof(f7671,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f493,f4185])).
fof(f7638,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f493,f705])).
fof(f7639,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f493,f703])).
fof(f7640,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f493,f705])).
fof(f7641,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f493,f703])).
fof(f7617,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30)))) | ~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.num.|48|_0')),X31,X32) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.num.|48|_0')),X31,X32)) )),
  inference(superposition,[],[f740,f491])).
fof(f7616,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) | ~p(s(bool,X28)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.num.|48|_0')),X28,X29)) )),
  inference(superposition,[],[f736,f491])).
fof(f7615,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))) | ~p(s(bool,X25)) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.num.|48|_0')),X26,X25)) )),
  inference(superposition,[],[f735,f491])).
fof(f7614,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21)))) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP5(X22,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.num.|48|_0')),X23)) )),
  inference(superposition,[],[f686,f491])).
fof(f7613,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)))) | p(s(bool,X20)) | sP1(X20,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f651,f491])).
fof(f7612,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | p(s(bool,X18)) | sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.num.|48|_0')),X18)) )),
  inference(superposition,[],[f648,f491])).
fof(f7611,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)))) | sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.num.|48|_0')),X16)) )),
  inference(superposition,[],[f633,f491])).
fof(f7610,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X13)))) | sP0(X14,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f632,f491])).
fof(f7600,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f491,f495])).
fof(f7599,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f491,f4185])).
fof(f7619,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f7598,f470])).
fof(f7598,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f491,f2960])).
fof(f7566,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f491,f705])).
fof(f7567,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f491,f703])).
fof(f7568,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f491,f705])).
fof(f7569,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f491,f703])).
fof(f7482,plain,(
  ( ! [X0] : (~sP3('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f780,f1532,f766,f751,f689])).
fof(f7484,plain,(
  ( ! [X0] : (~sP3('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f780,f1533,f766,f751,f689])).
fof(f7485,plain,(
  ( ! [X0] : (~sP3('T_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f780,f1534,f766,f751,f689])).
fof(f7486,plain,(
  ~sP3('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f783,f1531,f766,f751,f689])).
fof(f7487,plain,(
  ~sP3('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f780,f4349,f766,f751,f689])).
fof(f7504,plain,(
  ( ! [X0] : (~sP2('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1637,f768,f774,f751,f689])).
fof(f7505,plain,(
  ( ! [X0] : (~sP2('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1530,f768,f774,f751,f689])).
fof(f7506,plain,(
  ( ! [X0] : (~sP2('F_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1529,f768,f774,f751,f689])).
fof(f7508,plain,(
  ~sP2('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f3090,f768,f774,f751,f689])).
fof(f7510,plain,(
  sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f781,f767,f774,f751,f689])).
fof(f7511,plain,(
  ( ! [X0] : (sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3535,f3520,f774,f751,f689])).
fof(f7530,plain,(
  sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f781,f767,f775,f751,f689])).
fof(f7531,plain,(
  ( ! [X0] : (sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f3535,f3520,f775,f751,f689])).
fof(f7546,plain,(
  ( ! [X0] : (sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f3536,f770,f777,f751,f689])).
fof(f7547,plain,(
  sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f783,f770,f777,f751,f689])).
fof(f7549,plain,(
  ~sP2('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f1528,f768,f777,f751,f689])).
fof(f7384,plain,(
  ( ! [X0] : (sP5('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f3536,f770,f776,f751,f688])).
fof(f7385,plain,(
  sP5('F_0','F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f783,f770,f776,f751,f688])).
fof(f7387,plain,(
  ( ! [X0] : (~sP2('const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1537,f770,f776,f751,f688])).
fof(f7388,plain,(
  ( ! [X0] : (~sP2('const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f1536,f770,f776,f751,f688])).
fof(f7390,plain,(
  ~sP2('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f3093,f770,f776,f751,f688])).
fof(f7395,plain,(
  ( ! [X0] : (sP5('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f3536,f771,f776,f751,f688])).
fof(f7396,plain,(
  sP5('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f783,f771,f776,f751,f688])).
fof(f7410,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f778,f768,f774,f751,f688])).
fof(f7411,plain,(
  sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f779,f768,f774,f751,f688])).
fof(f7412,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f3534,f768,f774,f751,f688])).
fof(f7419,plain,(
  sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f779,f769,f775,f751,f688])).
fof(f7422,plain,(
  ~sP2('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1535,f770,f775,f751,f688])).
fof(f7280,plain,(
  ( ! [X0] : (~sP3('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f782,f1525,f770,f445,f687])).
fof(f7282,plain,(
  ( ! [X0] : (~sP3('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f782,f1526,f770,f445,f687])).
fof(f7284,plain,(
  ( ! [X0] : (~sP3('const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f782,f1527,f770,f445,f687])).
fof(f7285,plain,(
  ~sP3('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f782,f1524,f770,f445,f687])).
fof(f7286,plain,(
  ~sP3('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f782,f4347,f770,f445,f687])).
fof(f7298,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f782,f766,f772,f445,f687])).
fof(f7302,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f778,f3520,f772,f445,f687])).
fof(f7303,plain,(
  sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f782,f766,f773,f445,f687])).
fof(f7304,plain,(
  sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f782,f767,f773,f445,f687])).
fof(f7307,plain,(
  ( ! [X0] : (sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f779,f3520,f773,f445,f687])).
fof(f7310,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f3534,f766,f3533,f445,f687])).
fof(f7316,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f3534,f3520,f3533,f445,f687])).
fof(f7320,plain,(
  sP5('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f782,f771,f776,f445,f687])).
fof(f7324,plain,(
  ~sP4('T_0','T_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f782,f1510,f777,f445,f687])).
fof(f7327,plain,(
  sP5('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f782,f771,f777,f445,f687])).
fof(f7081,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X8)))) | s('type.num.num',X8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f658,f484])).
fof(f7080,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num',X6)))) | s('type.num.num',X6) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5)))) )),
  inference(superposition,[],[f658,f483])).
fof(f7079,plain,(
  ( ! [X4,X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4)))) | s('type.num.num',X4) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) )),
  inference(superposition,[],[f658,f481])).
fof(f7078,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2)))) | s('type.num.num',X2) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f658,f472])).
fof(f7077,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f658,f449])).
fof(f7214,plain,(
  ( ! [X45,X46] : (s('type.num.num',X46) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X45))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X45))))))),s('type.num.num',X46))))) )),
  inference(forward_demodulation,[],[f7213,f482])).
fof(f7213,plain,(
  ( ! [X45,X46] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X45))))))),s('type.num.num',X46)))) | s('type.num.num',X46) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) )),
  inference(forward_demodulation,[],[f7074,f481])).
fof(f7074,plain,(
  ( ! [X45,X46] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X45))))))),s('type.num.num',X46)))) | s('type.num.num',X46) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) )),
  inference(superposition,[],[f658,f482])).
fof(f7197,plain,(
  ( ! [X28,X27] : (s('type.num.num',X28) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))))),s('type.num.num',X28))))) )),
  inference(forward_demodulation,[],[f7196,f485])).
fof(f7196,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))))),s('type.num.num',X28)))) | s('type.num.num',X28) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27)))))) )),
  inference(forward_demodulation,[],[f7064,f472])).
fof(f7064,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))))))),s('type.num.num',X28)))) | s('type.num.num',X28) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27)))))) )),
  inference(superposition,[],[f658,f485])).
fof(f7193,plain,(
  ( ! [X21,X22] : (s('type.num.num',X22) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))))),s('type.num.num',X22))))) )),
  inference(forward_demodulation,[],[f7192,f481])).
fof(f7192,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))))),s('type.num.num',X22)))) | s('type.num.num',X22) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) )),
  inference(forward_demodulation,[],[f7061,f481])).
fof(f7061,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))))),s('type.num.num',X22)))) | s('type.num.num',X22) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) )),
  inference(superposition,[],[f658,f481])).
fof(f7191,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))),s('type.num.num',X20))))) )),
  inference(forward_demodulation,[],[f7190,f472])).
fof(f7190,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))))),s('type.num.num',X20)))) | s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(forward_demodulation,[],[f7060,f485])).
fof(f7060,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))))),s('type.num.num',X20)))) | s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f658,f472])).
fof(f7178,plain,(
  ( ! [X3] : (s('type.num.num',X3) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f7177,f4185])).
fof(f7177,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3)))) | s('type.num.num',X3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f7051,f472])).
fof(f7051,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X3)))) | s('type.num.num',X3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f658,f4185])).
fof(f7174,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f7173,f458])).
fof(f7173,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f7049,f4184])).
fof(f7049,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X1)))) | s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f658,f458])).
fof(f7164,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f7163,f4196])).
fof(f7163,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f7162,f472])).
fof(f7162,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(forward_demodulation,[],[f7001,f481])).
fof(f7001,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(unit_resulting_resolution,[],[f4185,f658])).
fof(f7116,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f7115,f586])).
fof(f7115,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f7114,f485])).
fof(f7114,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f7046,f472])).
fof(f7046,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f472,f658])).
fof(f7112,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f7048,f487])).
fof(f7048,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(unit_resulting_resolution,[],[f487,f658])).
fof(f6750,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f627,f4185])).
fof(f6748,plain,(
  ( ! [X50,X49] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X49))))) | s('type.num.num',X50) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f487])).
fof(f6747,plain,(
  ( ! [X47,X48] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X48))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X47))))) | s('type.num.num',X48) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47)))))) )),
  inference(superposition,[],[f627,f486])).
fof(f6745,plain,(
  ( ! [X44] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))) | s('type.num.num',X44) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f627,f448])).
fof(f6799,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43))) | s('type.num.num',X43) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X42),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f6744,f4185])).
fof(f6744,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X43) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X42),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f627,f4186])).
fof(f6743,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40)))))))) )),
  inference(superposition,[],[f627,f490])).
fof(f6742,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))))) )),
  inference(superposition,[],[f627,f479])).
fof(f6741,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))) | s('type.num.num',X37) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f627,f466])).
fof(f6740,plain,(
  ( ! [X35,X34] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X34)))) )),
  inference(superposition,[],[f627,f465])).
fof(f6739,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f627,f1732])).
fof(f6738,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) | s('type.num.num',X32) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31)))))) )),
  inference(superposition,[],[f627,f477])).
fof(f6737,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f475])).
fof(f6735,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) | s('type.num.num',X26) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f484])).
fof(f6734,plain,(
  ( ! [X24,X23] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))) | s('type.num.num',X24) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)))))) )),
  inference(superposition,[],[f627,f483])).
fof(f6732,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))))) | s('type.num.num',X20) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f627,f472])).
fof(f6796,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f6731,f4185])).
fof(f6731,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X18) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f627,f449])).
fof(f6730,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) )),
  inference(superposition,[],[f627,f4188])).
fof(f6729,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f4187])).
fof(f6728,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f627,f461])).
fof(f6727,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f627,f460])).
fof(f6726,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))) )),
  inference(superposition,[],[f627,f4189])).
fof(f6725,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f627,f463])).
fof(f6724,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f627,f462])).
fof(f6795,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f6723,f4185])).
fof(f6723,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f627,f4185])).
fof(f6721,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f627,f458])).
fof(f6714,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f759,f627])).
fof(f6782,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f6717,f4185])).
fof(f6717,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f932,f627])).
fof(f6719,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f561,f627])).
fof(f6720,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f1600,f627])).
fof(f6476,plain,(
  ( ! [X50,X49] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X49))))) | s('type.num.num',X50) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f625,f487])).
fof(f6475,plain,(
  ( ! [X47,X48] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X47))))) | s('type.num.num',X48) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47)))))) )),
  inference(superposition,[],[f625,f486])).
fof(f6473,plain,(
  ( ! [X44] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))) | s('type.num.num',X44) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f625,f448])).
fof(f6472,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X43))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X43) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X42),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f625,f4186])).
fof(f6471,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40)))))))) )),
  inference(superposition,[],[f625,f490])).
fof(f6470,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))))) )),
  inference(superposition,[],[f625,f479])).
fof(f6469,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))) | s('type.num.num',X37) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f625,f466])).
fof(f6468,plain,(
  ( ! [X35,X34] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X34)))) )),
  inference(superposition,[],[f625,f465])).
fof(f6467,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f625,f1732])).
fof(f6466,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))) | s('type.num.num',X32) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31)))))) )),
  inference(superposition,[],[f625,f477])).
fof(f6465,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X29))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f625,f475])).
fof(f6463,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) | s('type.num.num',X26) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f625,f484])).
fof(f6462,plain,(
  ( ! [X24,X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))) | s('type.num.num',X24) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)))))) )),
  inference(superposition,[],[f625,f483])).
fof(f6458,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) )),
  inference(superposition,[],[f625,f4188])).
fof(f6457,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f625,f4187])).
fof(f6456,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f625,f461])).
fof(f6455,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f625,f460])).
fof(f6454,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))) )),
  inference(superposition,[],[f625,f4189])).
fof(f6453,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f625,f463])).
fof(f6452,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f625,f462])).
fof(f6449,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f625,f458])).
fof(f6438,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f758,f625])).
fof(f6440,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f4197,f625])).
fof(f6441,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f757,f625])).
fof(f6442,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f759,f625])).
fof(f6445,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f932,f625])).
fof(f6447,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f561,f625])).
fof(f6448,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f1600,f625])).
fof(f6210,plain,(
  ( ! [X50,X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X49))))) | s('type.num.num',X50) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f487])).
fof(f6209,plain,(
  ( ! [X47,X48] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X48))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X47))))) | s('type.num.num',X48) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47)))))) )),
  inference(superposition,[],[f623,f486])).
fof(f6207,plain,(
  ( ! [X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))) | s('type.num.num',X44) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f623,f448])).
fof(f6206,plain,(
  ( ! [X43,X42] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X43) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X42),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f623,f4186])).
fof(f6205,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X40)))))))) )),
  inference(superposition,[],[f623,f490])).
fof(f6204,plain,(
  ( ! [X39,X38] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))))) )),
  inference(superposition,[],[f623,f479])).
fof(f6203,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))) | s('type.num.num',X37) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X36),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f623,f466])).
fof(f6202,plain,(
  ( ! [X35,X34] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X34)))) )),
  inference(superposition,[],[f623,f465])).
fof(f6201,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f623,f1732])).
fof(f6200,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))) | s('type.num.num',X32) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X31)))))) )),
  inference(superposition,[],[f623,f477])).
fof(f6199,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f475])).
fof(f6197,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) | s('type.num.num',X26) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f484])).
fof(f6196,plain,(
  ( ! [X24,X23] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))) | s('type.num.num',X24) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)))))) )),
  inference(superposition,[],[f623,f483])).
fof(f6194,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))))) | s('type.num.num',X20) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))) )),
  inference(superposition,[],[f623,f472])).
fof(f6192,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X16)))) )),
  inference(superposition,[],[f623,f4188])).
fof(f6191,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f4187])).
fof(f6190,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f623,f461])).
fof(f6189,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f623,f460])).
fof(f6188,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))) )),
  inference(superposition,[],[f623,f4189])).
fof(f6187,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f623,f463])).
fof(f6186,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f623,f462])).
fof(f6185,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f623,f4185])).
fof(f6184,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f623,f2960])).
fof(f6183,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f623,f458])).
fof(f6172,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f758,f623])).
fof(f6174,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f4197,f623])).
fof(f6175,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f757,f623])).
fof(f6176,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f759,f623])).
fof(f6179,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f932,f623])).
fof(f6181,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f561,f623])).
fof(f6182,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f1600,f623])).
fof(f5898,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(unit_resulting_resolution,[],[f577,f565])).
fof(f5835,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30)))) )),
  inference(subsumption_resolution,[],[f5757,f3059])).
fof(f5757,plain,(
  ( ! [X30] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X30)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X30)))) )),
  inference(superposition,[],[f523,f4189])).
fof(f5834,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f5726,f449])).
fof(f5726,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f475,f4189])).
fof(f5524,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f490,f4185])).
fof(f5438,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f3527,f684])).
fof(f5354,plain,(
  ( ! [X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X25))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f518,f487])).
fof(f5273,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f3521,f684])).
fof(f5164,plain,(
  ( ! [X24] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X24))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))))) )),
  inference(superposition,[],[f518,f486])).
fof(f5139,plain,(
  s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f486,f462])).
fof(f5086,plain,(
  ( ! [X0] : (~sP5('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f3514,f685])).
fof(f5051,plain,(
  ( ! [X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27))))))))) )),
  inference(subsumption_resolution,[],[f4979,f561])).
fof(f4979,plain,(
  ( ! [X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X27)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27)))))) )),
  inference(superposition,[],[f522,f485])).
fof(f4953,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f561,f485])).
fof(f4637,plain,(
  sP4('T_0','T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f4348,f685])).
fof(f4388,plain,(
  ( ! [X14,X15] : (~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X14,X15) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X14,X15)) )),
  inference(subsumption_resolution,[],[f4369,f445])).
fof(f4369,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X14,X15) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X14,X15)) )),
  inference(superposition,[],[f740,f3056])).
fof(f4387,plain,(
  ( ! [X12,X13] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X12,X13) | ~p(s(bool,X12))) )),
  inference(subsumption_resolution,[],[f4368,f445])).
fof(f4368,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X12)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X12,X13)) )),
  inference(superposition,[],[f736,f3056])).
fof(f4386,plain,(
  ( ! [X10,X11] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X11,X10) | ~p(s(bool,X10))) )),
  inference(subsumption_resolution,[],[f4367,f445])).
fof(f4367,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X11,X10)) )),
  inference(superposition,[],[f735,f3056])).
fof(f4385,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | p(s(bool,X9)) | ~sP5(X8,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X9)) )),
  inference(subsumption_resolution,[],[f4366,f445])).
fof(f4366,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP5(X8,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X9)) )),
  inference(superposition,[],[f686,f3056])).
fof(f4384,plain,(
  ( ! [X7] : (sP1(X7,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,X7))) )),
  inference(subsumption_resolution,[],[f4365,f445])).
fof(f4365,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,X7)) | sP1(X7,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f651,f3056])).
fof(f4383,plain,(
  ( ! [X6] : (sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X6) | p(s(bool,X6))) )),
  inference(subsumption_resolution,[],[f4364,f445])).
fof(f4364,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X6)) )),
  inference(superposition,[],[f648,f3056])).
fof(f4382,plain,(
  ( ! [X5] : (sP0('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X5)) )),
  inference(subsumption_resolution,[],[f4363,f445])).
fof(f4363,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X5)) )),
  inference(superposition,[],[f633,f3056])).
fof(f4381,plain,(
  ( ! [X4] : (sP0(X4,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f4362,f445])).
fof(f4362,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | sP0(X4,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f632,f3056])).
fof(f4347,plain,(
  ~sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f751,f3056,f705])).
fof(f4348,plain,(
  sP5('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f445,f3056,f703])).
fof(f4349,plain,(
  ~sP5('F_0','T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f751,f3056,f705])).
fof(f4350,plain,(
  sP5('T_0','T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f445,f3056,f703])).
fof(f4197,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X23)))) )),
  inference(subsumption_resolution,[],[f4116,f3759])).
fof(f4116,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)))))))) )),
  inference(superposition,[],[f519,f483])).
fof(f4195,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(backward_demodulation,[],[f4184,f3922])).
fof(f4196,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f4194,f472])).
fof(f4194,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(backward_demodulation,[],[f4184,f3846])).
fof(f4192,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))) )),
  inference(backward_demodulation,[],[f4184,f2890])).
fof(f4191,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))) )),
  inference(backward_demodulation,[],[f4184,f2889])).
fof(f4188,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f4184,f755])).
fof(f4187,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f4184,f754])).
fof(f4186,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(backward_demodulation,[],[f4184,f753])).
fof(f4013,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f3923,f448])).
fof(f3923,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f482,f2960])).
fof(f3922,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f482,f450])).
fof(f3849,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))) )),
  inference(subsumption_resolution,[],[f3780,f3759])).
fof(f3780,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))))) )),
  inference(superposition,[],[f519,f481])).
fof(f3759,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f561,f481])).
fof(f3846,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f3757,f472])).
fof(f3757,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f481,f450])).
fof(f3485,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f609])).
fof(f3486,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f3293,f3293,f609])).
fof(f3487,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f615])).
fof(f3490,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f3293,f632])).
fof(f3491,plain,(
  ( ! [X0,X1] : (sP0('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f3293,f633])).
fof(f3492,plain,(
  ( ! [X0] : (~sP1('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f647])).
fof(f3496,plain,(
  ( ! [X0] : (~sP1('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f647])).
fof(f3497,plain,(
  ( ! [X0,X1] : (~sP1('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f3293,f3293,f647])).
fof(f3500,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f648])).
fof(f3501,plain,(
  ( ! [X0] : (sP1('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f651])).
fof(f3504,plain,(
  ( ! [X0] : (~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f686])).
fof(f3505,plain,(
  ( ! [X0,X1] : (~sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3293,f751,f3293,f686])).
fof(f3508,plain,(
  ( ! [X0] : (~sP4('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f690])).
fof(f3514,plain,(
  ( ! [X0] : (~sP4('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f690])).
fof(f3515,plain,(
  ( ! [X0,X1] : (~sP4('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3293,f751,f3293,f690])).
fof(f3520,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f691])).
fof(f3521,plain,(
  ( ! [X0] : (~sP3('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f694])).
fof(f3527,plain,(
  ( ! [X0] : (~sP3('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f694])).
fof(f3528,plain,(
  ( ! [X0,X1] : (~sP3('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3293,f751,f3293,f694])).
fof(f3533,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f695])).
fof(f3534,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f699])).
fof(f3535,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f3293,f700])).
fof(f3536,plain,(
  ( ! [X2,X0,X1] : (sP2('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f3293,f701])).
fof(f3537,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f806,f3293,f703])).
fof(f3538,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f459,f3293,f703])).
fof(f3539,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f469,f3293,f703])).
fof(f3540,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f468,f3293,f703])).
fof(f3541,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f473,f3293,f703])).
fof(f3542,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f474,f3293,f703])).
fof(f3543,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f471,f3293,f703])).
fof(f3544,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f470,f3293,f703])).
fof(f3545,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f823,f3293,f703])).
fof(f3546,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3055,f3293,f703])).
fof(f3547,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f478,f3293,f703])).
fof(f3548,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))),'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f476,f3293,f703])).
fof(f3549,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f806,f3293,f703])).
fof(f3550,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f459,f3293,f703])).
fof(f3551,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f469,f3293,f703])).
fof(f3552,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f468,f3293,f703])).
fof(f3553,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f473,f3293,f703])).
fof(f3554,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f474,f3293,f703])).
fof(f3555,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f471,f3293,f703])).
fof(f3556,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f470,f3293,f703])).
fof(f3557,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f823,f3293,f703])).
fof(f3558,plain,(
  ( ! [X0] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f3055,f3293,f703])).
fof(f3559,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num',X1)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f478,f3293,f703])).
fof(f3560,plain,(
  ( ! [X0,X1] : (sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num',X1)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f476,f3293,f703])).
fof(f3561,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f802,f3293,f704])).
fof(f3562,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f803,f3293,f704])).
fof(f3563,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f802,f3293,f704])).
fof(f3564,plain,(
  ( ! [X0] : (~sP5('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f803,f3293,f704])).
fof(f3565,plain,(
  ( ! [X0,X1] : (~sP7('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f707])).
fof(f3566,plain,(
  ( ! [X0,X1] : (~sP7('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f708])).
fof(f3569,plain,(
  ( ! [X0] : (sP7('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f785,f3293,f709])).
fof(f3574,plain,(
  ( ! [X0] : (sP7('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f785,f3293,f709])).
fof(f3575,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f3293,f785,f3293,f709])).
fof(f3577,plain,(
  ( ! [X0] : (~sP6('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f713])).
fof(f3583,plain,(
  ( ! [X0] : (~sP6('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f3293,f713])).
fof(f3584,plain,(
  ( ! [X0,X1] : (~sP6('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f3293,f751,f3293,f713])).
fof(f3589,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f714])).
fof(f3590,plain,(
  ( ! [X0] : (sP7('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f445,f3293,f719])).
fof(f3595,plain,(
  ( ! [X0] : (sP7('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f445,f3293,f719])).
fof(f3597,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f3293,f719])).
fof(f3600,plain,(
  ( ! [X0] : (sP7('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f445,f3293,f719])).
fof(f3601,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f3293,f445,f3293,f719])).
fof(f3602,plain,(
  ( ! [X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0','const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f3293,f719])).
fof(f3603,plain,(
  ( ! [X2,X0,X1] : (sP7('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f3293,f3293,f719])).
fof(f3604,plain,(
  ( ! [X0] : (~sP7('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f751,f445,f3293,f722])).
fof(f3608,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f445,f3293,f722])).
fof(f3609,plain,(
  ( ! [X0,X1] : (~sP7('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f3293,f722])).
fof(f3612,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f723])).
fof(f3616,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f751,f3293,f724])).
fof(f3624,plain,(
  ( ! [X0] : (~sP8('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f3293,f730])).
fof(f3629,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f731])).
fof(f3630,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f3293,f732])).
fof(f3631,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f735])).
fof(f3635,plain,(
  ( ! [X2,X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X2)))) )),
  inference(unit_resulting_resolution,[],[f3293,f3293,f735])).
fof(f3636,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f445,f3293,f736])).
fof(f3640,plain,(
  ( ! [X2,X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f3293,f3293,f736])).
fof(f3641,plain,(
  ( ! [X0] : (~sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f3293,f737])).
fof(f3642,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f790,f3293,f740])).
fof(f3643,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f791,f3293,f740])).
fof(f3644,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f792,f3293,f740])).
fof(f3645,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f793,f3293,f740])).
fof(f3646,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(unit_resulting_resolution,[],[f3293,f889])).
fof(f3647,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f3293,f899])).
fof(f3368,plain,(
  sP4('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f3094,f685])).
fof(f3365,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X4) != s('type.num.num',X5)) )),
  inference(subsumption_resolution,[],[f3291,f751])).
fof(f3291,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s('type.num.num',X4) != s('type.num.num',X5) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f611,f495])).
fof(f3293,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f3292,f587])).
fof(f3292,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) )),
  inference(forward_demodulation,[],[f3250,f472])).
fof(f3250,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f472,f611])).
fof(f3205,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f3153,f751])).
fof(f3153,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f523,f495])).
fof(f3202,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f3150,f3059])).
fof(f3150,plain,(
  ( ! [X12] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f523,f753])).
fof(f3090,plain,(
  ~sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f3055,f705])).
fof(f3091,plain,(
  sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f445,f3055,f703])).
fof(f3093,plain,(
  ~sP5('F_0','F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f751,f3055,f705])).
fof(f3094,plain,(
  sP5('T_0','F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f445,f3055,f703])).
fof(f3059,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f561,f522])).
fof(f3060,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) )),
  inference(unit_resulting_resolution,[],[f1600,f522])).
fof(f3056,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f2980,f806])).
fof(f2980,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f476,f2960])).
fof(f3055,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f2979,f823])).
fof(f2979,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f478,f2960])).
fof(f2897,plain,(
  ( ! [X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f518,f466])).
fof(f2894,plain,(
  ( ! [X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9)))))) )),
  inference(superposition,[],[f518,f477])).
fof(f2893,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f518,f475])).
fof(f2890,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f518,f755])).
fof(f2889,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f518,f754])).
fof(f2886,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) )),
  inference(superposition,[],[f518,f463])).
fof(f2885,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f518,f462])).
fof(f2881,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f757,f518])).
fof(f2882,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f758,f518])).
fof(f2844,plain,(
  ( ! [X0] : (sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f1136])).
fof(f2405,plain,(
  ~sP9('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f2396,f725])).
fof(f2396,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f445,f751,f751,f730])).
fof(f2386,plain,(
  sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f794,f751,f751,f729])).
fof(f2387,plain,(
  sP9('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f795,f751,f751,f729])).
fof(f2239,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f2230,f706])).
fof(f2230,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f445,f751,f445,f713])).
fof(f2220,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f784,f445,f445,f709])).
fof(f2221,plain,(
  sP7('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0','T_0')),
  inference(unit_resulting_resolution,[],[f785,f445,f445,f709])).
fof(f2216,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f2207,f683])).
fof(f2207,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f751,f698])).
fof(f2201,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f2192,f684])).
fof(f2192,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f445,f751,f445,f694])).
fof(f2163,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f445,f751,f445,f690])).
fof(f2143,plain,(
  ( ! [X0] : (sP4('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1501,f685])).
fof(f2125,plain,(
  ( ! [X0] : (sP4('T_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1500,f685])).
fof(f2111,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34)))) | ~p(s(bool,X35)) | p(s(bool,X36)) | ~sP5(X35,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34)))),X36)) )),
  inference(superposition,[],[f686,f476])).
fof(f2122,plain,(
  ( ! [X33,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5(X32,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X33)) )),
  inference(subsumption_resolution,[],[f2110,f445])).
fof(f2110,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP5(X32,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X33)) )),
  inference(superposition,[],[f686,f806])).
fof(f2109,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X29)))) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP5(X30,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29)))),X31)) )),
  inference(superposition,[],[f686,f478])).
fof(f2121,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP5(X25,'const.arithmetic.>=_2'(s('type.num.num',X24),s('type.num.num','const.num.|48|_0')),X26)) )),
  inference(subsumption_resolution,[],[f2107,f445])).
fof(f2107,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP5(X25,'const.arithmetic.>=_2'(s('type.num.num',X24),s('type.num.num','const.num.|48|_0')),X26)) )),
  inference(superposition,[],[f686,f468])).
fof(f2120,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,X10)) | p(s(bool,X11)) | ~sP5(X10,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)),X11)) )),
  inference(subsumption_resolution,[],[f2102,f445])).
fof(f2102,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | p(s(bool,X11)) | ~sP5(X10,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)),X11)) )),
  inference(superposition,[],[f686,f469])).
fof(f2119,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X7)) | p(s(bool,X8)) | ~sP5(X7,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),X8)) )),
  inference(subsumption_resolution,[],[f2101,f445])).
fof(f2101,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | p(s(bool,X8)) | ~sP5(X7,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),X8)) )),
  inference(superposition,[],[f686,f459])).
fof(f1998,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27)))) | ~sP8('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) )),
  inference(superposition,[],[f740,f478])).
fof(f1997,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X24)))) | ~p(s(bool,X25)) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X25,X26)) )),
  inference(superposition,[],[f736,f478])).
fof(f1996,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X21)))) | ~p(s(bool,X22)) | sP9('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23,X22)) )),
  inference(superposition,[],[f735,f478])).
fof(f1995,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20)) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X19))))) )),
  inference(superposition,[],[f651,f478])).
fof(f1994,plain,(
  ( ! [X17,X18] : (sP1('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18)) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X17))))) )),
  inference(superposition,[],[f648,f478])).
fof(f1993,plain,(
  ( ! [X15,X16] : (sP0('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X15))))) )),
  inference(superposition,[],[f633,f478])).
fof(f1992,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X13))))) )),
  inference(superposition,[],[f632,f478])).
fof(f1982,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f478,f495])).
fof(f1981,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f478,f450])).
fof(f1964,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.ODD_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f478,f705])).
fof(f1965,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.ODD_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f478,f703])).
fof(f1966,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f751,f478,f705])).
fof(f1967,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num',X0)),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f445,f478,f703])).
fof(f1859,plain,(
  ( ! [X0] : (sP4('T_0','T_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f1491,f685])).
fof(f1842,plain,(
  ( ! [X0] : (sP4('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f1490,f685])).
fof(f1831,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | ~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29)) )),
  inference(superposition,[],[f740,f476])).
fof(f1830,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | ~p(s(bool,X25)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X25,X26)) )),
  inference(superposition,[],[f736,f476])).
fof(f1829,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X21)))) | ~p(s(bool,X22)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23,X22)) )),
  inference(superposition,[],[f735,f476])).
fof(f1828,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))))) )),
  inference(superposition,[],[f651,f476])).
fof(f1827,plain,(
  ( ! [X17,X18] : (sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17))))) )),
  inference(superposition,[],[f648,f476])).
fof(f1826,plain,(
  ( ! [X15,X16] : (sP0('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15))))) )),
  inference(superposition,[],[f633,f476])).
fof(f1825,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X13))))) )),
  inference(superposition,[],[f632,f476])).
fof(f1815,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f476,f495])).
fof(f1814,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f476,f450])).
fof(f1798,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f476,f705])).
fof(f1799,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f476,f703])).
fof(f1800,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f751,f476,f705])).
fof(f1801,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.EVEN_1'(s('type.num.num',X0)),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f445,f476,f703])).
fof(f1783,plain,(
  ( ! [X0] : (sP4('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f1489,f685])).
fof(f1732,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f475,f463])).
fof(f1679,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f474,f705])).
fof(f1680,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f474,f703])).
fof(f1682,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f474,f705])).
fof(f1683,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f474,f703])).
fof(f1637,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f473,f705])).
fof(f1638,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f473,f703])).
fof(f1640,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f473,f705])).
fof(f1641,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f473,f703])).
fof(f1600,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f561,f472])).
fof(f1524,plain,(
  ~sP5('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f751,f806,f705])).
fof(f1525,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f751,f459,f705])).
fof(f1526,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f751,f469,f705])).
fof(f1527,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f751,f468,f705])).
fof(f1528,plain,(
  ~sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f823,f705])).
fof(f1529,plain,(
  ( ! [X0] : (~sP5('F_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f470,f705])).
fof(f1530,plain,(
  ( ! [X0] : (~sP5('F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f471,f705])).
fof(f1531,plain,(
  ~sP5('F_0','T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f751,f806,f705])).
fof(f1532,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f459,f705])).
fof(f1533,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f469,f705])).
fof(f1534,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f468,f705])).
fof(f1535,plain,(
  ~sP5('F_0','F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f751,f823,f705])).
fof(f1536,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f470,f705])).
fof(f1537,plain,(
  ( ! [X0] : (~sP5('F_0','F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f471,f705])).
fof(f1509,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f445,f802,f704])).
fof(f1510,plain,(
  ~sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f445,f803,f704])).
fof(f1513,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f445,f802,f704])).
fof(f1514,plain,(
  ~sP5('T_0','T_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f445,f803,f704])).
fof(f1488,plain,(
  sP5('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f445,f806,f703])).
fof(f1489,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f459,f703])).
fof(f1490,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f469,f703])).
fof(f1491,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f468,f703])).
fof(f1492,plain,(
  sP5('T_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f445,f823,f703])).
fof(f1493,plain,(
  ( ! [X0] : (sP5('T_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f470,f703])).
fof(f1494,plain,(
  ( ! [X0] : (sP5('T_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f471,f703])).
fof(f1495,plain,(
  sP5('T_0','T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f445,f806,f703])).
fof(f1496,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f459,f703])).
fof(f1497,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f469,f703])).
fof(f1498,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f468,f703])).
fof(f1499,plain,(
  sP5('T_0','F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f445,f823,f703])).
fof(f1500,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f445,f470,f703])).
fof(f1501,plain,(
  ( ! [X0] : (sP5('T_0','F_0','const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f445,f471,f703])).
fof(f1478,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f751,f802,f702])).
fof(f1479,plain,(
  sP5('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f751,f803,f702])).
fof(f1480,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f802,f702])).
fof(f1481,plain,(
  sP5('F_0','T_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f751,f803,f702])).
fof(f1468,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f1135])).
fof(f1414,plain,(
  ( ! [X0] : (sP1('F_0','const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f751,f1103])).
fof(f1367,plain,(
  ( ! [X0] : (sP1('const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f1102])).
fof(f1343,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f1325,f751])).
fof(f1325,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f606,f495])).
fof(f1311,plain,(
  ( ! [X0] : (sP1('F_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f751,f964])).
fof(f1259,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f495,f495])).
fof(f1246,plain,(
  ( ! [X0] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f963])).
fof(f1139,plain,(
  ( ! [X19,X20,X18] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)),X19,X20) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)),X19,X20)) )),
  inference(subsumption_resolution,[],[f1127,f445])).
fof(f1127,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)),X19,X20) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18)),X19,X20)) )),
  inference(superposition,[],[f740,f469])).
fof(f1138,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X16)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16,X17)) )),
  inference(subsumption_resolution,[],[f1126,f445])).
fof(f1126,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X16)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16,X17)) )),
  inference(superposition,[],[f736,f469])).
fof(f1137,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X13)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12)),X14,X13)) )),
  inference(subsumption_resolution,[],[f1125,f445])).
fof(f1125,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12)),X14,X13)) )),
  inference(superposition,[],[f735,f469])).
fof(f1136,plain,(
  ( ! [X10,X11] : (sP1(X11,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))) | p(s(bool,X11))) )),
  inference(subsumption_resolution,[],[f1124,f445])).
fof(f1124,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,X11)) | sP1(X11,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f651,f469])).
fof(f1135,plain,(
  ( ! [X8,X9] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)),X9) | p(s(bool,X9))) )),
  inference(subsumption_resolution,[],[f1123,f445])).
fof(f1123,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | p(s(bool,X9)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)),X9)) )),
  inference(superposition,[],[f648,f469])).
fof(f1134,plain,(
  ( ! [X6,X7] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)),X7)) )),
  inference(subsumption_resolution,[],[f1122,f445])).
fof(f1122,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)),X7)) )),
  inference(superposition,[],[f633,f469])).
fof(f1133,plain,(
  ( ! [X4,X5] : (sP0(X5,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)))) )),
  inference(subsumption_resolution,[],[f1121,f445])).
fof(f1121,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | sP0(X5,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)))) )),
  inference(superposition,[],[f632,f469])).
fof(f1106,plain,(
  ( ! [X19,X20,X18] : (~sP8('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,X20) | sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,X20)) )),
  inference(subsumption_resolution,[],[f1094,f445])).
fof(f1094,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,X20) | sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,X20)) )),
  inference(superposition,[],[f740,f468])).
fof(f1105,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X16)) | sP9('const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')),X16,X17)) )),
  inference(subsumption_resolution,[],[f1093,f445])).
fof(f1093,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X16)) | sP9('const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')),X16,X17)) )),
  inference(superposition,[],[f736,f468])).
fof(f1104,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X13)) | sP9('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')),X14,X13)) )),
  inference(subsumption_resolution,[],[f1092,f445])).
fof(f1092,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | sP9('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')),X14,X13)) )),
  inference(superposition,[],[f735,f468])).
fof(f1103,plain,(
  ( ! [X10,X11] : (sP1(X11,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))) | p(s(bool,X11))) )),
  inference(subsumption_resolution,[],[f1091,f445])).
fof(f1091,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,X11)) | sP1(X11,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f651,f468])).
fof(f1102,plain,(
  ( ! [X8,X9] : (sP1('const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')),X9) | p(s(bool,X9))) )),
  inference(subsumption_resolution,[],[f1090,f445])).
fof(f1090,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | p(s(bool,X9)) | sP1('const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')),X9)) )),
  inference(superposition,[],[f648,f468])).
fof(f1101,plain,(
  ( ! [X6,X7] : (sP0('const.arithmetic.>=_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')),X7)) )),
  inference(subsumption_resolution,[],[f1089,f445])).
fof(f1089,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.>=_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')),X7)) )),
  inference(superposition,[],[f633,f468])).
fof(f1100,plain,(
  ( ! [X4,X5] : (sP0(X5,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1088,f445])).
fof(f1088,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | sP0(X5,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f632,f468])).
fof(f988,plain,(
  ( ! [X0] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f445,f899])).
fof(f967,plain,(
  ( ! [X19,X20,X18] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),X19,X20) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),X19,X20)) )),
  inference(subsumption_resolution,[],[f955,f445])).
fof(f955,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),X19,X20) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),X19,X20)) )),
  inference(superposition,[],[f740,f459])).
fof(f966,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X16)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)),X16,X17)) )),
  inference(subsumption_resolution,[],[f954,f445])).
fof(f954,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X16)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15)),X16,X17)) )),
  inference(superposition,[],[f736,f459])).
fof(f965,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X13)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)),X14,X13)) )),
  inference(subsumption_resolution,[],[f953,f445])).
fof(f953,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)),X14,X13)) )),
  inference(superposition,[],[f735,f459])).
fof(f964,plain,(
  ( ! [X10,X11] : (sP1(X11,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | p(s(bool,X11))) )),
  inference(subsumption_resolution,[],[f952,f445])).
fof(f952,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,X11)) | sP1(X11,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f651,f459])).
fof(f963,plain,(
  ( ! [X8,X9] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)),X9) | p(s(bool,X9))) )),
  inference(subsumption_resolution,[],[f951,f445])).
fof(f951,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | p(s(bool,X9)) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)),X9)) )),
  inference(superposition,[],[f648,f459])).
fof(f962,plain,(
  ( ! [X6,X7] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),X7)) )),
  inference(subsumption_resolution,[],[f950,f445])).
fof(f950,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)),X7)) )),
  inference(superposition,[],[f633,f459])).
fof(f961,plain,(
  ( ! [X4,X5] : (sP0(X5,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4)))) )),
  inference(subsumption_resolution,[],[f949,f445])).
fof(f949,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | sP0(X5,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4)))) )),
  inference(superposition,[],[f632,f459])).
fof(f925,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f787,f751,f741])).
fof(f927,plain,(
  ( ! [X0] : (sP7('F_0','const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f789,f751,f741])).
fof(f917,plain,(
  ( ! [X0,X1] : (~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(subsumption_resolution,[],[f915,f445])).
fof(f915,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP8('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(superposition,[],[f740,f806])).
fof(f912,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f791,f445,f740])).
fof(f914,plain,(
  ( ! [X0] : (sP9('T_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f793,f445,f740])).
fof(f903,plain,(
  ( ! [X0] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f889])).
fof(f899,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f897,f445])).
fof(f897,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(superposition,[],[f736,f806])).
fof(f896,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f445,f445,f736])).
fof(f889,plain,(
  ( ! [X0,X1] : (sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X1,X0) | ~p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f887,f445])).
fof(f887,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X1,X0)) )),
  inference(superposition,[],[f735,f806])).
fof(f886,plain,(
  ( ! [X0] : (sP9('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f445,f735])).
fof(f884,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f445,f751,f724])).
fof(f883,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f723])).
fof(f876,plain,(
  ( ! [X0] : (sP7('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f751,f751,f718])).
fof(f873,plain,(
  ( ! [X0] : (sP7('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f751,f751,f717])).
fof(f870,plain,(
  ( ! [X0] : (~sP7('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f445,f751,f708])).
fof(f867,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f445,f751,f707])).
fof(f866,plain,(
  sP1('F_0','const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f751,f852])).
fof(f861,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f760])).
fof(f852,plain,(
  ( ! [X0] : (sP1(X0,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f850,f445])).
fof(f850,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f651,f806])).
fof(f849,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f751,f445,f651])).
fof(f846,plain,(
  sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f751,f843])).
fof(f843,plain,(
  ( ! [X0] : (sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f841,f445])).
fof(f841,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(superposition,[],[f648,f806])).
fof(f840,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f445,f648])).
fof(f837,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f445,f445,f647])).
fof(f836,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f751,f751,f646])).
fof(f823,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f456,f507])).
fof(f806,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f447,f503])).
fof(f802,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f751,f502])).
fof(f803,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f456,f502])).
fof(f794,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f751,f733])).
fof(f795,plain,(
  ( ! [X0,X1] : (sP8('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f456,f733])).
fof(f792,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f445,f732])).
fof(f793,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f447,f732])).
fof(f790,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f731])).
fof(f791,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f447,f731])).
fof(f788,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f751,f716])).
fof(f789,plain,(
  ( ! [X0,X1] : (sP6('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f456,f716])).
fof(f786,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f751,f715])).
fof(f787,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f456,f715])).
fof(f784,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f714])).
fof(f785,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f447,f714])).
fof(f782,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f445,f701])).
fof(f783,plain,(
  ( ! [X0,X1] : (sP2('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f447,f701])).
fof(f780,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f445,f700])).
fof(f781,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f447,f700])).
fof(f778,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f699])).
fof(f779,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f447,f699])).
fof(f776,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f751,f697])).
fof(f777,plain,(
  ( ! [X0,X1] : (sP3('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f456,f697])).
fof(f774,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f751,f696])).
fof(f775,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f456,f696])).
fof(f772,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f695])).
fof(f773,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f447,f695])).
fof(f770,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f751,f693])).
fof(f771,plain,(
  ( ! [X0,X1] : (sP4('const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f456,f693])).
fof(f768,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f751,f692])).
fof(f769,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f456,f692])).
fof(f766,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f691])).
fof(f767,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f447,f691])).
fof(f764,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f445,f633])).
fof(f765,plain,(
  ( ! [X0] : (sP0('const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f447,f633])).
fof(f762,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f445,f632])).
fof(f763,plain,(
  ( ! [X0] : (sP0(X0,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(unit_resulting_resolution,[],[f447,f632])).
fof(f734,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f442])).
fof(f442,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f441])).
fof(f441,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f331])).
fof(f331,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f296,f330,f329])).
fof(f329,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f330,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f296,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f295])).
fof(f295,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f137])).
fof(f137,axiom,(
  ! [X27,X28,X11] : ((p(s(bool,X11)) <=> (p(s(bool,X28)) | p(s(bool,X27)))) <=> ((p(s(bool,X11)) | ~p(s(bool,X28))) & (p(s(bool,X11)) | ~p(s(bool,X27))) & (p(s(bool,X28)) | p(s(bool,X27)) | ~p(s(bool,X11)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.sat.sat_25_prove_ltb')).
fof(f735,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f442])).
fof(f736,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f442])).
fof(f737,plain,(
  ( ! [X2,X0,X1] : (~sP9(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f442])).
fof(f730,plain,(
  ( ! [X2,X0,X1] : (~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f440])).
fof(f440,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f439])).
fof(f439,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f438])).
fof(f438,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f329])).
fof(f731,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f440])).
fof(f732,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f440])).
fof(f733,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f440])).
fof(f723,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f437])).
fof(f437,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f436])).
fof(f436,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f435])).
fof(f435,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f330])).
fof(f724,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f437])).
fof(f725,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f437])).
fof(f740,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f726])).
fof(f726,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f437])).
fof(f727,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f437])).
fof(f728,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f437])).
fof(f729,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f437])).
fof(f717,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f434])).
fof(f434,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f433])).
fof(f433,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f328])).
fof(f328,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f294,f327,f326])).
fof(f326,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f327,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f294,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f293])).
fof(f293,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f136])).
fof(f136,axiom,(
  ! [X27,X28,X11] : ((p(s(bool,X11)) <=> (p(s(bool,X28)) & p(s(bool,X27)))) <=> ((p(s(bool,X11)) | ~p(s(bool,X28)) | ~p(s(bool,X27))) & (p(s(bool,X28)) | ~p(s(bool,X11))) & (p(s(bool,X27)) | ~p(s(bool,X11)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.sat.sat_23_prove_ltb')).
fof(f718,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f434])).
fof(f719,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f434])).
fof(f722,plain,(
  ( ! [X2,X0,X1] : (~sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f434])).
fof(f713,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f432])).
fof(f432,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f431])).
fof(f431,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f326])).
fof(f714,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f432])).
fof(f715,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f432])).
fof(f716,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f432])).
fof(f706,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f430])).
fof(f430,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP6(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f429])).
fof(f429,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f428])).
fof(f428,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f327])).
fof(f707,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f430])).
fof(f708,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f430])).
fof(f709,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f430])).
fof(f741,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f712])).
fof(f712,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f430])).
fof(f702,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f427])).
fof(f427,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f325])).
fof(f325,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f292,f324,f323,f322,f321])).
fof(f321,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f322,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f323,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f324,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f292,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f291])).
fof(f291,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f135])).
fof(f135,axiom,(
  ! [X27,X28,X11] : ((p(s(bool,X11)) <=> s(bool,X27) = s(bool,X28)) <=> ((p(s(bool,X11)) | p(s(bool,X28)) | p(s(bool,X27))) & (p(s(bool,X11)) | ~p(s(bool,X27)) | ~p(s(bool,X28))) & (p(s(bool,X28)) | ~p(s(bool,X27)) | ~p(s(bool,X11))) & (p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X11)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.sat.sat_2|49|_prove_ltb')).
fof(f703,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f427])).
fof(f704,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f427])).
fof(f705,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f427])).
fof(f698,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f426])).
fof(f426,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f425])).
fof(f425,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f321])).
fof(f699,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f426])).
fof(f700,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f426])).
fof(f701,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f426])).
fof(f694,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f424])).
fof(f424,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f423])).
fof(f423,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f422])).
fof(f422,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f322])).
fof(f695,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f424])).
fof(f696,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f424])).
fof(f697,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f424])).
fof(f690,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f421])).
fof(f421,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f420])).
fof(f420,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f419])).
fof(f419,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f323])).
fof(f691,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f421])).
fof(f692,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f421])).
fof(f693,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f421])).
fof(f683,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f418])).
fof(f418,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f417])).
fof(f417,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f416])).
fof(f416,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f324])).
fof(f684,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f418])).
fof(f685,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f418])).
fof(f686,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f418])).
fof(f687,plain,(
  ( ! [X2,X0,X1] : (~sP3(X1,X2,X0) | ~p(s(bool,X2)) | ~sP4(X0,X2,X1) | sP5(X0,X1,X2) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f418])).
fof(f688,plain,(
  ( ! [X2,X0,X1] : (~sP3(X1,X2,X0) | p(s(bool,X1)) | ~sP4(X0,X2,X1) | sP5(X0,X1,X2) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f418])).
fof(f689,plain,(
  ( ! [X2,X0,X1] : (~sP3(X1,X2,X0) | p(s(bool,X0)) | ~sP4(X0,X2,X1) | sP5(X0,X1,X2) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f418])).
fof(f670,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f314])).
fof(f314,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f313])).
fof(f313,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f288])).
fof(f288,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X9,X10,X11] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X11)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.LESS_EQ_TRANS')).
fof(f668,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10,X11] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num',X11)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.ADD_ASSOC')).
fof(f667,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK16(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK16(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f411])).
fof(f411,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK16(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK16(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f312])).
fof(f312,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f285])).
fof(f285,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f284])).
fof(f284,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0',aHL_EXT)).
fof(f646,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f403])).
fof(f403,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f402])).
fof(f402,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f401])).
fof(f401,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f319])).
fof(f319,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f647,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f403])).
fof(f648,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f403])).
fof(f651,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f403])).
fof(f760,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f631,f751])).
fof(f631,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f396])).
fof(f396,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f395])).
fof(f395,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f317])).
fof(f317,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f632,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f396])).
fof(f633,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f396])).
fof(f629,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f394])).
fof(f394,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f270])).
fof(f270,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f128])).
fof(f128,axiom,(
  ! [X10,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|5')).
fof(f630,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f394])).
fof(f627,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f393])).
fof(f393,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f80])).
fof(f80,axiom,(
  ! [X10,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) <=> s('type.num.num',X9) = s('type.num.num',X10))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|19')).
fof(f628,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f393])).
fof(f625,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f122])).
fof(f122,axiom,(
  ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) <=> s('type.num.num',X9) = s('type.num.num',X10))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_eq|split|7')).
fof(f626,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f392])).
fof(f623,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f391])).
fof(f391,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f121])).
fof(f121,axiom,(
  ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) <=> s('type.num.num',X9) = s('type.num.num',X10))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_eq|split|6')).
fof(f624,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f391])).
fof(f759,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f619,f751])).
fof(f619,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f389])).
fof(f389,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f120])).
fof(f120,axiom,(
  ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) <=> p(s(bool,'F_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_eq|split|5')).
fof(f615,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f388])).
fof(f388,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1)))) & (((~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X1)))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f387])).
fof(f387,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1))))) & (((~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X1)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f264])).
fof(f264,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1)))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) & p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X1)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X12,X13] : (s(bool,X12) = s(bool,X13) <=> ((p(s(bool,X12)) & p(s(bool,X13))) | (~p(s(bool,X12)) & ~p(s(bool,X13)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.bool.EQ_EXPAND')).
fof(f611,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f386])).
fof(f386,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f385])).
fof(f385,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X9,X10] : (s('type.num.num',X9) = s('type.num.num',X10) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.EQ_LESS_EQ')).
fof(f612,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f386])).
fof(f609,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f305])).
fof(f605,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f114])).
fof(f114,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|17')).
fof(f604,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f259])).
fof(f259,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f113])).
fof(f113,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|16')).
fof(f603,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f258])).
fof(f258,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f101])).
fof(f101,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|4')).
fof(f602,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f102])).
fof(f102,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|5')).
fof(f601,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f256])).
fof(f256,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f112])).
fof(f112,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|15')).
fof(f600,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f111])).
fof(f111,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|14')).
fof(f599,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f254])).
fof(f254,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f105])).
fof(f105,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|8')).
fof(f598,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|9')).
fof(f597,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f252])).
fof(f252,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|11')).
fof(f596,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f251])).
fof(f251,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|10')).
fof(f595,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f250])).
fof(f250,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f100])).
fof(f100,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|3')).
fof(f594,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f99])).
fof(f99,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|2')).
fof(f593,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f248])).
fof(f248,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|2')).
fof(f592,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f247])).
fof(f247,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X10),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|12')).
fof(f591,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f246])).
fof(f246,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|8')).
fof(f590,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f245])).
fof(f245,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X10,X9] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X9))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|5')).
fof(f589,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X9,X10] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.MULT_SUC')).
fof(f588,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f243])).
fof(f243,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X9,X10] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.MULT|split|1')).
fof(f587,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f242])).
fof(f242,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f129])).
fof(f129,axiom,(
  ! [X10,X9] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|6')).
fof(f586,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f241])).
fof(f241,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X10,X9] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|4')).
fof(f585,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X10,X9] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num',X10))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|25')).
fof(f583,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X10,X9] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|3')).
fof(f582,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f237])).
fof(f237,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f83])).
fof(f83,axiom,(
  ! [X10,X9] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X9))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|22')).
fof(f581,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f89])).
fof(f89,axiom,(
  ! [X10,X9] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X9))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|28')).
fof(f578,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s(X0,X1) = s(X0,X3)) )),
  inference(cnf_transformation,[],[f384])).
fof(f384,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & (s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f383])).
fof(f383,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & ((s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4)) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(nnf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f234])).
fof(f234,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X6] : ! [X23,X24,X25,X26] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X24))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),X26))) <=> (s(X6,X23) = s(X6,X25) & s('type.list.list'(X6),X24) = s('type.list.list'(X6),X26)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.list.list_|49||49|')).
fof(f579,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)) )),
  inference(cnf_transformation,[],[f384])).
fof(f580,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | s(X0,X1) != s(X0,X3)) )),
  inference(cnf_transformation,[],[f384])).
fof(f577,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f232])).
fof(f232,plain,(
  ! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X6] : ! [X24,X23] : ~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X24)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.list.list_distinct')).
fof(f574,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f382])).
fof(f382,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK15(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f381])).
fof(f381,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f380])).
fof(f380,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f231])).
fof(f231,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f230])).
fof(f230,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X6] : ! [X19,X20] : (? [X15] : (s(X6,X15) = s(X6,X20) & p(s(bool,happ(s(fun(X6,bool),X19),s(X6,X15))))) <=> p(s(bool,happ(s(fun(X6,bool),X19),s(X6,X20)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.bool.UNWIND_THM2')).
fof(f575,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK15(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f382])).
fof(f576,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f382])).
fof(f518,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f345])).
fof(f758,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f512,f751])).
fof(f512,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f342])).
fof(f342,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f115])).
fof(f115,axiom,(
  ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) <=> p(s(bool,'F_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_eq|split|0')).
fof(f757,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f510,f751])).
fof(f510,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f341])).
fof(f341,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f118])).
fof(f118,axiom,(
  ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) <=> p(s(bool,'F_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_eq|split|3')).
fof(f506,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f339])).
fof(f339,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X14] : (s(bool,'F_0') = s(bool,X14) <=> ~p(s(bool,X14)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.bool.EQ_CLAUSES|split|2')).
fof(f507,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f339])).
fof(f502,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f337])).
fof(f337,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f188])).
fof(f188,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X14] : (s(bool,'T_0') = s(bool,X14) <=> p(s(bool,X14)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.bool.EQ_CLAUSES|split|1')).
fof(f503,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f337])).
fof(f495,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0',aHL_BOOL_CASES)).
fof(f494,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X10] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|21')).
fof(f493,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f88])).
fof(f88,axiom,(
  ! [X10] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|27')).
fof(f491,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f85])).
fof(f85,axiom,(
  ! [X10] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|24')).
fof(f490,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|9')).
fof(f755,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f489,f450])).
fof(f489,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X9] : s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X9)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.MULT_LEFT_|49|')).
fof(f754,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f488,f450])).
fof(f488,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X9] : s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.MULT_RIGHT_|49|')).
fof(f487,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(rectify,[],[f110])).
fof(f110,axiom,(
  ! [X10] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X10))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|13')).
fof(f486,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f109])).
fof(f109,axiom,(
  ! [X10] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X10))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|12')).
fof(f485,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_suc|split|2')).
fof(f484,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(rectify,[],[f104])).
fof(f104,axiom,(
  ! [X10] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|7')).
fof(f482,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|16')).
fof(f753,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f480,f450])).
fof(f480,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|11')).
fof(f479,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f71])).
fof(f71,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|10')).
fof(f478,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f93])).
fof(f93,axiom,(
  ! [X10] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X10))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|32')).
fof(f477,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f97])).
fof(f97,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|0')).
fof(f476,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f94])).
fof(f94,axiom,(
  ! [X10] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X10))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|33')).
fof(f475,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(rectify,[],[f98])).
fof(f98,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_add|split|1')).
fof(f474,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f125])).
fof(f125,axiom,(
  ! [X10] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|2')).
fof(f473,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f124])).
fof(f124,axiom,(
  ! [X10] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|1')).
fof(f472,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_suc|split|1')).
fof(f471,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f81])).
fof(f81,axiom,(
  ! [X10] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|20')).
fof(f470,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f84])).
fof(f84,axiom,(
  ! [X10] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|23')).
fof(f469,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f87])).
fof(f87,axiom,(
  ! [X10] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|26')).
fof(f468,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f90])).
fof(f90,axiom,(
  ! [X10] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|29')).
fof(f465,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|6')).
fof(f463,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.ADD|split|0')).
fof(f461,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0')))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.MULT_|48|')).
fof(f460,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.MULT_CLAUSES|split|0')).
fof(f459,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f123])).
fof(f123,axiom,(
  ! [X10] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_lte|split|0')).
fof(f457,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.arithmetic.ZERO_LESS_EQ')).
fof(f456,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f95])).
fof(f95,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|34')).
fof(f447,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f96])).
fof(f96,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.numeral.numeral_distrib|split|35')).
fof(f38236,plain,(
  ( ! [X74,X72,X73] : (~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),'const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74) | p(s(bool,X74))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37607,f445])).
fof(f37607,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),'const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74) | p(s(bool,X74))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28099])).
fof(f28099,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | ~sP5('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),'const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74) | p(s(bool,X74))) ) | $spl22),
  inference(superposition,[],[f8979,f476])).
fof(f8979,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | ~sP5(X25,'const.arithmetic.>=_2'(s('type.num.num',X24),s('type.num.num','const.arithmetic.ZERO_0')),X26) | p(s(bool,X26))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f2121])).
fof(f38235,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224,f38226,f38228,f38234])).
fof(f38233,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38232,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224,f38226,f38228])).
fof(f38232,plain,(
  ( ! [X74,X72,X73] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X74)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37605,f445])).
fof(f37605,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X74)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24730])).
fof(f24730,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X74)) ) | $spl22),
  inference(superposition,[],[f8934,f476])).
fof(f8934,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X16)) | sP9('const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')),X16,X17)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f1105])).
fof(f38231,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38230,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224,f38226,f38228])).
fof(f38230,plain,(
  ( ! [X74,X72,X73] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37604,f445])).
fof(f37604,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24654])).
fof(f24654,plain,(
  ( ! [X74,X72,X73] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))))) ) | $spl22),
  inference(superposition,[],[f8933,f476])).
fof(f8933,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X13)) | sP9('const.arithmetic.>=_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.ZERO_0')),X14,X13)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f1104])).
fof(f38229,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224,f38226,f38228])).
fof(f38227,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224,f38226])).
fof(f38225,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222,f38224])).
fof(f38223,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220,f38222])).
fof(f38221,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218,f38220])).
fof(f38219,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216,f38218])).
fof(f38217,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214,f38216])).
fof(f38215,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212,f38214])).
fof(f38213,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210,f38212])).
fof(f38211,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206,f38210])).
fof(f38209,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38208,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206])).
fof(f38208,plain,(
  ( ! [X68,X69,X67] : (~sP5('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),'const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),X69) | p(s(bool,X69))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37591,f445])).
fof(f37591,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),'const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),X69) | p(s(bool,X69))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28097])).
fof(f28097,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X67)))) | ~sP5('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),'const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),X69) | p(s(bool,X69))) ) | $spl22),
  inference(superposition,[],[f8979,f478])).
fof(f38207,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200,f38206])).
fof(f38205,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38204,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200])).
fof(f38204,plain,(
  ( ! [X68,X69,X67] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X69)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37589,f445])).
fof(f37589,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X69)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24728])).
fof(f24728,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X67)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))),X69)) ) | $spl22),
  inference(superposition,[],[f8934,f478])).
fof(f38203,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38202,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200])).
fof(f38202,plain,(
  ( ! [X68,X69,X67] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),X69,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37588,f445])).
fof(f37588,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),X69,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24652])).
fof(f24652,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X67)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')),X69,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67)))))) ) | $spl22),
  inference(superposition,[],[f8933,f478])).
fof(f38201,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198,f38200])).
fof(f38199,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196,f38198])).
fof(f38197,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194,f38196])).
fof(f38195,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192,f38194])).
fof(f38193,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190,f38192])).
fof(f38191,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188,f38190])).
fof(f38189,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186,f38188])).
fof(f38187,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184,f38186])).
fof(f38185,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182,f38184])).
fof(f38183,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116,f38182])).
fof(f38181,plain,(
  $false | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37576,f445])).
fof(f37576,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f8997])).
fof(f8997,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f3060])).
fof(f38180,plain,(
  $false | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37575,f445])).
fof(f37575,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f16985])).
fof(f16985,plain,(
  ( ! [X461,X460] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X461))))))))) ) | $spl22),
  inference(subsumption_resolution,[],[f16934,f757])).
fof(f16934,plain,(
  ( ! [X461,X460] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X461)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X460),s('type.num.num',X461)))))))) ) | $spl22),
  inference(superposition,[],[f9209,f9191])).
fof(f9191,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) ) | $spl22),
  inference(backward_demodulation,[],[f9175,f602])).
fof(f9175,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl22),
  inference(backward_demodulation,[],[f8875,f475])).
fof(f8875,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f462])).
fof(f9209,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl22),
  inference(forward_demodulation,[],[f8890,f8871])).
fof(f8890,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f522])).
fof(f38179,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38178,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38178,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37574,f445])).
fof(f37574,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9209])).
fof(f38177,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38176,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38176,plain,(
  ( ! [X52,X53,X51] : (~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),X53) | p(s(bool,X53))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37564,f445])).
fof(f37564,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),X53) | p(s(bool,X53))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28092])).
fof(f28092,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)))) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),X53) | p(s(bool,X53))) ) | $spl22),
  inference(superposition,[],[f8979,f8885])).
fof(f8885,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f491])).
fof(f38175,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38174,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38174,plain,(
  ( ! [X47,X45,X46] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),'const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X47) | p(s(bool,X47))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37563,f445])).
fof(f37563,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),'const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X47) | p(s(bool,X47))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28090])).
fof(f28090,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)))) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),'const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X47) | p(s(bool,X47))) ) | $spl22),
  inference(superposition,[],[f8979,f8887])).
fof(f8887,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f494])).
fof(f38173,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38172,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38172,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,X52)) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X52)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37562,f445])).
fof(f37562,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | p(s(bool,X52)) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X52)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f27952])).
fof(f27952,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)))) | p(s(bool,X52)) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X52)) ) | $spl22),
  inference(superposition,[],[f2119,f8885])).
fof(f38171,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38170,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38170,plain,(
  ( ! [X47,X45,X46] : (p(s(bool,X46)) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47)),X46)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37561,f445])).
fof(f37561,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | p(s(bool,X46)) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47)),X46)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f27950])).
fof(f27950,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)))) | p(s(bool,X46)) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47)),X46)) ) | $spl22),
  inference(superposition,[],[f2119,f8887])).
fof(f38169,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38168,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38168,plain,(
  ( ! [X52,X53,X51] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),X53)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37560,f445])).
fof(f37560,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),X53)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24723])).
fof(f24723,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),X53)) ) | $spl22),
  inference(superposition,[],[f8934,f8885])).
fof(f38167,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38166,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38166,plain,(
  ( ! [X47,X45,X46] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X47)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37559,f445])).
fof(f37559,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X47)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24721])).
fof(f24721,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X47)) ) | $spl22),
  inference(superposition,[],[f8934,f8887])).
fof(f38165,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38164,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38164,plain,(
  ( ! [X52,X53,X51] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),X53,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37558,f445])).
fof(f37558,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),X53,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24647])).
fof(f24647,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X52),s('type.num.num','const.arithmetic.ZERO_0')),X53,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(superposition,[],[f8933,f8885])).
fof(f38163,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38162,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38162,plain,(
  ( ! [X47,X45,X46] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X47,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37557,f445])).
fof(f37557,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X47,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24645])).
fof(f24645,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X47,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) ) | $spl22),
  inference(superposition,[],[f8933,f8887])).
fof(f38161,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38160,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38160,plain,(
  ( ! [X52,X53,X51] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X52)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),X53)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37556,f445])).
fof(f37556,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X52)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),X53)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24555])).
fof(f24555,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X51)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X52)),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.ZERO_0')),X53)) ) | $spl22),
  inference(superposition,[],[f966,f8885])).
fof(f38159,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38158,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38158,plain,(
  ( ! [X47,X45,X46] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X47)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37555,f445])).
fof(f37555,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X47)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24553])).
fof(f24553,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X46)),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))),X47)) ) | $spl22),
  inference(superposition,[],[f966,f8887])).
fof(f38157,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38156,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38156,plain,(
  ( ! [X50,X51,X49] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X51,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37554,f445])).
fof(f37554,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X51,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24437])).
fof(f24437,plain,(
  ( ! [X50,X51,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X49)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X51,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(superposition,[],[f965,f8885])).
fof(f38155,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38154,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38154,plain,(
  ( ! [X45,X43,X44] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X44)),X45,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37553,f445])).
fof(f37553,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X44)),X45,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24435])).
fof(f24435,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X43)))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X44)),X45,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | $spl22),
  inference(superposition,[],[f965,f8887])).
fof(f38153,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38152,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38152,plain,(
  ( ! [X30,X31,X32] : (sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32) | ~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37552,f445])).
fof(f37552,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32) | ~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9253])).
fof(f9253,plain,(
  ( ! [X30,X31,X32] : (sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32) | ~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30))))) ) | $spl22),
  inference(forward_demodulation,[],[f9150,f8871])).
fof(f9150,plain,(
  ( ! [X30,X31,X32] : (~sP8('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30)))) | sP9('const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30)))),X31,X32)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7763])).
fof(f38151,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38150,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38150,plain,(
  ( ! [X30,X31,X32] : (sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32) | ~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37551,f445])).
fof(f37551,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32) | ~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9251])).
fof(f9251,plain,(
  ( ! [X30,X31,X32] : (sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32) | ~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30))))) ) | $spl22),
  inference(forward_demodulation,[],[f9122,f8871])).
fof(f9122,plain,(
  ( ! [X30,X31,X32] : (~sP8('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')),X31,X32) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X30)))) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.num.|48|_0')),X31,X32)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7617])).
fof(f38149,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38148,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38148,plain,(
  ( ! [X28,X29,X27] : (sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | ~p(s(bool,X28))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37550,f445])).
fof(f37550,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | ~p(s(bool,X28))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9149])).
fof(f9149,plain,(
  ( ! [X28,X29,X27] : (sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))),X28,X29) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) | ~p(s(bool,X28))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7762])).
fof(f38147,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38146,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38146,plain,(
  ( ! [X26,X24,X25] : (sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X26,X25) | ~p(s(bool,X25))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37549,f445])).
fof(f37549,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X26,X25) | ~p(s(bool,X25))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9148])).
fof(f9148,plain,(
  ( ! [X26,X24,X25] : (sP9('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))),X26,X25) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))) | ~p(s(bool,X25))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7761])).
fof(f38145,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38144,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38144,plain,(
  ( ! [X23,X21,X22] : (~sP5(X22,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37548,f445])).
fof(f37548,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | ~sP5(X22,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9147])).
fof(f9147,plain,(
  ( ! [X23,X21,X22] : (~sP5(X22,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X23) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21)))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7760])).
fof(f38143,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38142,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38142,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37547,f445])).
fof(f37547,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | sP1(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | p(s(bool,X20))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9146])).
fof(f9146,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)))) | p(s(bool,X20))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7759])).
fof(f38141,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38140,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38140,plain,(
  ( ! [X17,X18] : (sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37546,f445])).
fof(f37546,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | p(s(bool,X18))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9145])).
fof(f9145,plain,(
  ( ! [X17,X18] : (sP1('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))),X18) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | p(s(bool,X18))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7758])).
fof(f38139,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38138,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38138,plain,(
  ( ! [X15,X16] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37545,f445])).
fof(f37545,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9144])).
fof(f9144,plain,(
  ( ! [X15,X16] : (sP0('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))),X16) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7757])).
fof(f38137,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38136,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38136,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37544,f445])).
fof(f37544,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | sP0(X14,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9143])).
fof(f9143,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X13))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7756])).
fof(f38135,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38134,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38134,plain,(
  ( ! [X28,X29,X27] : (sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.ZERO_0')),X28,X29) | ~p(s(bool,X28))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37543,f445])).
fof(f37543,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.ZERO_0')),X28,X29) | ~p(s(bool,X28))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9121])).
fof(f9121,plain,(
  ( ! [X28,X29,X27] : (sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.ZERO_0')),X28,X29) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27)))) | ~p(s(bool,X28))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7616])).
fof(f38133,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38132,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38132,plain,(
  ( ! [X26,X24,X25] : (sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')),X26,X25) | ~p(s(bool,X25))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37542,f445])).
fof(f37542,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')),X26,X25) | ~p(s(bool,X25))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9120])).
fof(f9120,plain,(
  ( ! [X26,X24,X25] : (sP9('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')),X26,X25) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24)))) | ~p(s(bool,X25))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7615])).
fof(f38131,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38130,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38130,plain,(
  ( ! [X23,X21,X22] : (~sP5(X22,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37541,f445])).
fof(f37541,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | ~sP5(X22,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9119])).
fof(f9119,plain,(
  ( ! [X23,X21,X22] : (~sP5(X22,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0')),X23) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21)))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7614])).
fof(f38129,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38128,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38128,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,X20))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37540,f445])).
fof(f37540,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | sP1(X20,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,X20))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9118])).
fof(f9118,plain,(
  ( ! [X19,X20] : (sP1(X20,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)))) | p(s(bool,X20))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7613])).
fof(f38127,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38126,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38126,plain,(
  ( ! [X17,X18] : (sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X18) | p(s(bool,X18))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37539,f445])).
fof(f37539,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X18) | p(s(bool,X18))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9117])).
fof(f9117,plain,(
  ( ! [X17,X18] : (sP1('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X18) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)))) | p(s(bool,X18))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7612])).
fof(f38125,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38124,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38124,plain,(
  ( ! [X15,X16] : (sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.ZERO_0')),X16)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37538,f445])).
fof(f37538,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.ZERO_0')),X16)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9116])).
fof(f9116,plain,(
  ( ! [X15,X16] : (sP0('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.ZERO_0')),X16) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7611])).
fof(f38123,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38122,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38122,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37537,f445])).
fof(f37537,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | sP0(X14,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9115])).
fof(f9115,plain,(
  ( ! [X14,X13] : (sP0(X14,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X13))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7610])).
fof(f38121,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38120,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38120,plain,(
  ( ! [X57,X54,X56,X55] : (~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),'const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),X57) | p(s(bool,X57))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37528,f445])).
fof(f37528,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),'const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),X57) | p(s(bool,X57))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28093])).
fof(f28093,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X55),s('type.num.num',X54)))) | ~sP5('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),'const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),X57) | p(s(bool,X57))) ) | $spl22),
  inference(superposition,[],[f8979,f585])).
fof(f38119,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38118,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38118,plain,(
  ( ! [X43,X41,X44,X42] : (~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),'const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44) | p(s(bool,X44))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37527,f445])).
fof(f37527,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),'const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44) | p(s(bool,X44))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28089])).
fof(f28089,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~sP5('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),'const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44) | p(s(bool,X44))) ) | $spl22),
  inference(superposition,[],[f8979,f582])).
fof(f38117,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114,f38116])).
fof(f38115,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104,f38114])).
fof(f38113,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38112,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104])).
fof(f38112,plain,(
  ( ! [X57,X54,X56,X55] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37524,f445])).
fof(f37524,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24724])).
fof(f24724,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X55),s('type.num.num',X54)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57)) ) | $spl22),
  inference(superposition,[],[f8934,f585])).
fof(f38111,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38110,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104])).
fof(f38110,plain,(
  ( ! [X43,X41,X44,X42] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37523,f445])).
fof(f37523,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24720])).
fof(f24720,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X44)) ) | $spl22),
  inference(superposition,[],[f8934,f582])).
fof(f38109,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38108,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104])).
fof(f38108,plain,(
  ( ! [X57,X54,X56,X55] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),X57,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37522,f445])).
fof(f37522,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),X57,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24648])).
fof(f24648,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X55),s('type.num.num',X54)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num','const.arithmetic.ZERO_0')),X57,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))))) ) | $spl22),
  inference(superposition,[],[f8933,f585])).
fof(f38107,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38106,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104])).
fof(f38106,plain,(
  ( ! [X43,X41,X44,X42] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37521,f445])).
fof(f37521,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24644])).
fof(f24644,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))) ) | $spl22),
  inference(superposition,[],[f8933,f582])).
fof(f38105,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102,f38104])).
fof(f38103,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100,f38102])).
fof(f38101,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098,f38100])).
fof(f38099,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096,f38098])).
fof(f38097,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094,f38096])).
fof(f38095,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092,f38094])).
fof(f38093,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090,f38092])).
fof(f38091,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088,f38090])).
fof(f38089,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086,f38088])).
fof(f38087,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084,f38086])).
fof(f38085,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082,f38084])).
fof(f38083,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080,f38082])).
fof(f38081,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078,f38080])).
fof(f38079,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076,f38078])).
fof(f38077,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074,f38076])).
fof(f38075,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072,f38074])).
fof(f38073,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070,f38072])).
fof(f38071,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068,f38070])).
fof(f38069,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066,f38068])).
fof(f38067,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062,f38066])).
fof(f38065,plain,(
  $false | ($spl0 | $spl30)),
  inference(global_subsumption,[],[f38064,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062])).
fof(f38064,plain,(
  ( ! [X25] : (s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),sK15('const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),sK14(sK11,sK10))),X25,'type.list.list'(sK10)))) ) | ($spl0 | $spl30)),
  inference(subsumption_resolution,[],[f37498,f445])).
fof(f37498,plain,(
  ( ! [X25] : (~p(s(bool,'T_0')) | s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),sK15('const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),sK14(sK11,sK10))),X25,'type.list.list'(sK10)))) ) | ($spl0 | $spl30)),
  inference(backward_demodulation,[],[f37063,f17535])).
fof(f17535,plain,(
  ( ! [X25] : (s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),sK15('const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),sK14(sK11,sK10))),X25,'type.list.list'(sK10))) | ~p(s(bool,happ(s(fun('type.list.list'(sK10),bool),X25),s('type.list.list'(sK10),sK11))))) ) | $spl0),
  inference(forward_demodulation,[],[f17527,f15010])).
fof(f17527,plain,(
  ( ! [X25] : (~p(s(bool,happ(s(fun('type.list.list'(sK10),bool),X25),s('type.list.list'(sK10),sK11)))) | s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),sK14(sK11,sK10)))) = s('type.list.list'(sK10),sK15('const.list.CONS_2'(s(sK10,sK13(sK11,sK10)),s('type.list.list'(sK10),sK14(sK11,sK10))),X25,'type.list.list'(sK10)))) ) | $spl0),
  inference(superposition,[],[f575,f15010])).
fof(f38063,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060,f38062])).
fof(f38061,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056,f38060])).
fof(f38059,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38058,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056])).
fof(f38058,plain,(
  ( ! [X443,X444] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X443))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X443)))),X444,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37494,f445])).
fof(f37494,plain,(
  ( ! [X443,X444] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X443))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X443)))),X444,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f33520])).
fof(f33520,plain,(
  ( ! [X443,X444] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X443))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X443)))),X444,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X444),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X443))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f33451,f17338])).
fof(f17338,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl22),
  inference(forward_demodulation,[],[f17144,f16750])).
fof(f16750,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl22),
  inference(superposition,[],[f9191,f8875])).
fof(f17144,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl22),
  inference(superposition,[],[f16574,f8875])).
fof(f16574,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) ) | $spl22),
  inference(backward_demodulation,[],[f16388,f9192])).
fof(f9192,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) ) | $spl22),
  inference(backward_demodulation,[],[f9191,f600])).
fof(f16388,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) ) | $spl22),
  inference(superposition,[],[f9189,f9175])).
fof(f9189,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))) ) | $spl22),
  inference(backward_demodulation,[],[f9175,f594])).
fof(f33451,plain,(
  ( ! [X443,X444] : (~p(s(bool,happ(s(fun('type.num.num',bool),X444),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X443)))))))) | s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X443))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X443)))),X444,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f17338])).
fof(f38057,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054,f38056])).
fof(f38055,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052,f38054])).
fof(f38053,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050,f38052])).
fof(f38051,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048,f38050])).
fof(f38049,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046,f38048])).
fof(f38047,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044,f38046])).
fof(f38045,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036,f38044])).
fof(f38043,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38042,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036])).
fof(f38042,plain,(
  ( ! [X461,X459,X460] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X459))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X459),s('type.num.num',X460)))))),X461,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37486,f445])).
fof(f37486,plain,(
  ( ! [X461,X459,X460] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X459))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X459),s('type.num.num',X460)))))),X461,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f17375])).
fof(f17375,plain,(
  ( ! [X461,X459,X460] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X459))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X459),s('type.num.num',X460)))))),X461,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X461),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X459))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f17326,f16574])).
fof(f17326,plain,(
  ( ! [X461,X459,X460] : (~p(s(bool,happ(s(fun('type.num.num',bool),X461),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X459))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X460)))))))) | s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X459),s('type.num.num',X460))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X459),s('type.num.num',X460)))))),X461,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f16574])).
fof(f38041,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38040,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036])).
fof(f38040,plain,(
  ( ! [X482,X481,X483] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482))))) = s('type.num.num',sK15('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X481),s('type.num.num','const.num.SUC_1'(s('type.num.num',X482)))))),X483,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37485,f445])).
fof(f37485,plain,(
  ( ! [X482,X481,X483] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482))))) = s('type.num.num',sK15('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X481),s('type.num.num','const.num.SUC_1'(s('type.num.num',X482)))))),X483,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30807])).
fof(f30807,plain,(
  ( ! [X482,X481,X483] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482))))) = s('type.num.num',sK15('const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X481),s('type.num.num','const.num.SUC_1'(s('type.num.num',X482)))))),X483,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X483),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f16989])).
fof(f16989,plain,(
  ( ! [X482,X481,X483] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482))))) = s('type.num.num',sK15('const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X481),s('type.num.num',X482)))))),X483,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X483),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f16940,f9191])).
fof(f16940,plain,(
  ( ! [X482,X481,X483] : (~p(s(bool,happ(s(fun('type.num.num',bool),X483),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X481))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X482)))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X481),s('type.num.num',X482))))))) = s('type.num.num',sK15('const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X481),s('type.num.num',X482)))))),X483,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f9191])).
fof(f38039,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38038,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036])).
fof(f38038,plain,(
  ( ! [X492,X494,X493] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num','const.num.SUC_1'(s('type.num.num',X493)))))))),X494,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37484,f445])).
fof(f37484,plain,(
  ( ! [X492,X494,X493] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num','const.num.SUC_1'(s('type.num.num',X493)))))))),X494,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30826])).
fof(f30826,plain,(
  ( ! [X492,X494,X493] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num','const.num.SUC_1'(s('type.num.num',X493)))))))),X494,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X494),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f20468])).
fof(f20468,plain,(
  ( ! [X492,X494,X493] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num',X493)))))))),X494,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X494),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f20467,f9191])).
fof(f20467,plain,(
  ( ! [X492,X494,X493] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num',X493))))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num',X493)))))))),X494,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X494),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f20371,f472])).
fof(f20371,plain,(
  ( ! [X492,X494,X493] : (~p(s(bool,happ(s(fun('type.num.num',bool),X494),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X492))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X493)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num',X493))))))))) = s('type.num.num',sK15('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X492),s('type.num.num',X493)))))))),X494,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f18954])).
fof(f18954,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f18757,f9193])).
fof(f9193,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | $spl22),
  inference(backward_demodulation,[],[f9191,f598])).
fof(f18757,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) ) | $spl22),
  inference(superposition,[],[f595,f9175])).
fof(f38037,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034,f38036])).
fof(f38035,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032,f38034])).
fof(f38033,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030,f38032])).
fof(f38031,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028,f38030])).
fof(f38029,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026,f38028])).
fof(f38027,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022,f38026])).
fof(f38025,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38024,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022])).
fof(f38024,plain,(
  ( ! [X372,X373,X371] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X371),s('type.num.num',X372))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X371))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X372)))),X373,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37477,f445])).
fof(f37477,plain,(
  ( ! [X372,X373,X371] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X371),s('type.num.num',X372))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X371))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X372)))),X373,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f14938])).
fof(f14938,plain,(
  ( ! [X372,X373,X371] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X371),s('type.num.num',X372))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X371))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X372)))),X373,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X373),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X371),s('type.num.num',X372))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f14895,f9190])).
fof(f9190,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl22),
  inference(backward_demodulation,[],[f9175,f593])).
fof(f14895,plain,(
  ( ! [X372,X373,X371] : (~p(s(bool,happ(s(fun('type.num.num',bool),X373),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X371),s('type.num.num',X372)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X371))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X372))))) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X371))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X372)))),X373,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f9190])).
fof(f38023,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018,f38022])).
fof(f38021,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38020,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018])).
fof(f38020,plain,(
  ( ! [X486,X485,X487] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num','const.num.SUC_1'(s('type.num.num',X486)))))))),X487,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37475,f445])).
fof(f37475,plain,(
  ( ! [X486,X485,X487] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num','const.num.SUC_1'(s('type.num.num',X486)))))))),X487,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30830])).
fof(f30830,plain,(
  ( ! [X486,X485,X487] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num','const.num.SUC_1'(s('type.num.num',X486)))))))),X487,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X487),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f20815])).
fof(f20815,plain,(
  ( ! [X486,X485,X487] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486)))))))),X487,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X487),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f20766,f18955])).
fof(f18955,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f18757,f601])).
fof(f20766,plain,(
  ( ! [X486,X485,X487] : (~p(s(bool,happ(s(fun('type.num.num',bool),X487),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486)))))))))) | s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486))))))))) = s('type.num.num',sK15('const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X485),s('type.num.num',X486)))))))),X487,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f18955])).
fof(f38019,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016,f38018])).
fof(f38017,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014,f38016])).
fof(f38015,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980,f38014])).
fof(f38013,plain,(
  $false | ($spl0 | $spl30)),
  inference(global_subsumption,[],[f38012,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38012,plain,(
  ( ! [X43] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)),X43,'type.num.num'))) ) | ($spl0 | $spl30)),
  inference(subsumption_resolution,[],[f37471,f445])).
fof(f37471,plain,(
  ( ! [X43] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)),X43,'type.num.num'))) ) | ($spl0 | $spl30)),
  inference(backward_demodulation,[],[f37063,f8382])).
fof(f8382,plain,(
  ( ! [X43] : (~p(s(bool,happ(s(fun('type.num.num',bool),X43),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)),X43,'type.num.num'))) ) | $spl0),
  inference(forward_demodulation,[],[f8354,f8212])).
fof(f8354,plain,(
  ( ! [X43] : (~p(s(bool,happ(s(fun('type.num.num',bool),X43),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)),X43,'type.num.num'))) ) | $spl0),
  inference(superposition,[],[f575,f8212])).
fof(f38011,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38010,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38010,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37470,f445])).
fof(f37470,plain,(
  ( ! [X43,X44] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9162])).
fof(f9162,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num',X43),s('type.num.num','const.arithmetic.ZERO_0')),X44,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X44),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7856])).
fof(f38009,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38008,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38008,plain,(
  ( ! [X127] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X127,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37469,f445])).
fof(f37469,plain,(
  ( ! [X127] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X127,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f27003])).
fof(f27003,plain,(
  ( ! [X127] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X127,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X127),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f26925,f9031])).
fof(f9031,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl22),
  inference(backward_demodulation,[],[f8871,f5524])).
fof(f26925,plain,(
  ( ! [X127] : (~p(s(bool,happ(s(fun('type.num.num',bool),X127),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X127,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f9031])).
fof(f38007,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38006,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38006,plain,(
  ( ! [X43] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.num.|48|_0',X43,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37468,f445])).
fof(f37468,plain,(
  ( ! [X43] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.num.|48|_0',X43,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9393])).
fof(f9393,plain,(
  ( ! [X43] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.num.|48|_0',X43,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X43),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f9369,f8871])).
fof(f9369,plain,(
  ( ! [X43] : (~p(s(bool,happ(s(fun('type.num.num',bool),X43),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK15('const.num.|48|_0',X43,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f575,f8871])).
fof(f38005,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38004,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38004,plain,(
  ( ! [X45] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X45,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37467,f445])).
fof(f37467,plain,(
  ( ! [X45] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X45,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9262])).
fof(f9262,plain,(
  ( ! [X45] : (~p(s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X45,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9163,f8871])).
fof(f9163,plain,(
  ( ! [X45] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X45,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7857])).
fof(f38003,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38002,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38002,plain,(
  ( ! [X41,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))),X42,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37466,f445])).
fof(f37466,plain,(
  ( ! [X41,X42] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))),X42,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9261])).
fof(f9261,plain,(
  ( ! [X41,X42] : (~p(s(bool,happ(s(fun('type.num.num',bool),X42),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))),X42,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9161,f8871])).
fof(f9161,plain,(
  ( ! [X41,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41)))))),X42,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X42),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7855])).
fof(f38001,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f38000,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f38000,plain,(
  ( ! [X39,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39)))))),X40,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37465,f445])).
fof(f37465,plain,(
  ( ! [X39,X40] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39)))))),X40,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9260])).
fof(f9260,plain,(
  ( ! [X39,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39)))))),X40,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9160,f8871])).
fof(f9160,plain,(
  ( ! [X39,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39)))))),X40,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7854])).
fof(f37999,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37998,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37998,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),X36,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37464,f445])).
fof(f37464,plain,(
  ( ! [X35,X36] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),X36,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9259])).
fof(f9259,plain,(
  ( ! [X35,X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),X36,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9158,f8871])).
fof(f9158,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)),X36,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7852])).
fof(f37997,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37996,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37996,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')),X14,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37463,f445])).
fof(f37463,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')),X14,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9257])).
fof(f9257,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')),X14,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9156,f8871])).
fof(f9156,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')),X14,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7840])).
fof(f37995,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37994,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37994,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)),X12,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37462,f445])).
fof(f37462,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)),X12,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9256])).
fof(f9256,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun('type.num.num',bool),X12),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)),X12,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9155,f8871])).
fof(f9155,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)),X12,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X12),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7839])).
fof(f37993,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37992,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37992,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X3,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37461,f445])).
fof(f37461,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X3,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9255])).
fof(f9255,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X3,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9152,f8871])).
fof(f9152,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X3,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7834])).
fof(f37991,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37990,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37990,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0')),X2,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37460,f445])).
fof(f37460,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0')),X2,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9254])).
fof(f9254,plain,(
  ( ! [X2,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0')),X2,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f9151,f8871])).
fof(f9151,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK15('const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.NIL_0')),X2,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.|48|_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7833])).
fof(f37989,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37988,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37988,plain,(
  ( ! [X30,X31] : (s('type.num.num',X30) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num',X30)),X31,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37459,f445])).
fof(f37459,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s('type.num.num',X30) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num',X30)),X31,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9187])).
fof(f9187,plain,(
  ( ! [X30,X31] : (s('type.num.num',X30) = s('type.num.num',sK15('const.numeral.iZ_1'(s('type.num.num',X30)),X31,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num',X30))))) ) | $spl22),
  inference(backward_demodulation,[],[f8875,f7849])).
fof(f37987,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37986,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37986,plain,(
  ( ! [X37,X38] : (s('type.num.num',X37) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37458,f445])).
fof(f37458,plain,(
  ( ! [X37,X38] : (~p(s(bool,'T_0')) | s('type.num.num',X37) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9159])).
fof(f9159,plain,(
  ( ! [X37,X38] : (s('type.num.num',X37) = s('type.num.num',sK15('const.arithmetic.-_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7853])).
fof(f37985,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37984,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37984,plain,(
  ( ! [X8,X7] : (s('type.num.num',X7) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),X8,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37457,f445])).
fof(f37457,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | s('type.num.num',X7) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),X8,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9154])).
fof(f9154,plain,(
  ( ! [X8,X7] : (s('type.num.num',X7) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)),X8,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',X7))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7837])).
fof(f37983,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37982,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37982,plain,(
  ( ! [X6,X5] : (s('type.num.num',X5) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')),X6,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37456,f445])).
fof(f37456,plain,(
  ( ! [X6,X5] : (~p(s(bool,'T_0')) | s('type.num.num',X5) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')),X6,'type.num.num'))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9153])).
fof(f9153,plain,(
  ( ! [X6,X5] : (s('type.num.num',X5) = s('type.num.num',sK15('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')),X6,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X5))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7836])).
fof(f37981,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978,f37980])).
fof(f37979,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964,f37978])).
fof(f37965,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962,f37964])).
fof(f37963,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960,f37962])).
fof(f37961,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958,f37960])).
fof(f37959,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956,f37958])).
fof(f37957,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893,f37956])).
fof(f37955,plain,(
  $false | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37418,f445])).
fof(f37418,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30806])).
fof(f30806,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f16956])).
fof(f16956,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f16759,f16955])).
fof(f16955,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f16954,f16951])).
fof(f16951,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f16674,f485])).
fof(f16674,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))) ) | $spl22),
  inference(unit_resulting_resolution,[],[f9191,f658])).
fof(f16954,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f16758,f597])).
fof(f16758,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))))) ) | $spl22),
  inference(superposition,[],[f485,f9191])).
fof(f16759,plain,(
  ( ! [X6,X4,X5] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))))) ) | $spl22),
  inference(superposition,[],[f586,f9191])).
fof(f37954,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37953,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37953,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37417,f445])).
fof(f37417,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35036])).
fof(f35036,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))))))) ) | $spl22),
  inference(forward_demodulation,[],[f35035,f9190])).
fof(f35035,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl22),
  inference(forward_demodulation,[],[f34953,f8436])).
fof(f34953,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl22),
  inference(superposition,[],[f7077,f9190])).
fof(f37952,plain,(
  $false | ($spl0 | $spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37414,f445])).
fof(f37414,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f36150])).
fof(f36150,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl0 | $spl22)),
  inference(backward_demodulation,[],[f35926,f29993])).
fof(f29993,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f17766,f629])).
fof(f17766,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK14(sK11,sK10)))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f17732,f630])).
fof(f37951,plain,(
  $false | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37410,f445])).
fof(f37410,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30824])).
fof(f30824,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f20383])).
fof(f20383,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))))) ) | $spl22),
  inference(forward_demodulation,[],[f20093,f16256])).
fof(f20093,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))))))) ) | $spl22),
  inference(unit_resulting_resolution,[],[f18954,f658])).
fof(f37950,plain,(
  $false | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37949,f445])).
fof(f37949,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl30)),
  inference(forward_demodulation,[],[f37948,f37063])).
fof(f37948,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37397,f445])).
fof(f37397,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30802])).
fof(f30802,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num','const.num.SUC_1'(s('type.num.num',X20)))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f16764])).
fof(f16764,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X20))))))))) ) | $spl22),
  inference(superposition,[],[f629,f9191])).
fof(f37947,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f37394,f445])).
fof(f37394,plain,(
  ~p(s(bool,'T_0')) | $spl30),
  inference(backward_demodulation,[],[f37063,f22167])).
fof(f37946,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37945,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37945,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37393,f445])).
fof(f37393,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f10874])).
fof(f10874,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f10873,f482])).
fof(f10873,plain,(
  ( ! [X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl22),
  inference(forward_demodulation,[],[f10861,f9174])).
fof(f9174,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f8790])).
fof(f10861,plain,(
  ( ! [X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X18)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl22),
  inference(superposition,[],[f9209,f482])).
fof(f37944,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37943,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37943,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42)))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37392,f445])).
fof(f37392,plain,(
  ( ! [X42] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42)))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35738])).
fof(f35738,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f35737,f482])).
fof(f35737,plain,(
  ( ! [X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f35649,f8886])).
fof(f8886,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f493])).
fof(f35649,plain,(
  ( ! [X42] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X42))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))))))) ) | $spl22),
  inference(superposition,[],[f13050,f482])).
fof(f13050,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | $spl22),
  inference(subsumption_resolution,[],[f13049,f445])).
fof(f13049,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | $spl22),
  inference(forward_demodulation,[],[f12907,f459])).
fof(f12907,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | $spl22),
  inference(superposition,[],[f612,f8886])).
fof(f37942,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37941,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37941,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41)))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37391,f445])).
fof(f37391,plain,(
  ( ! [X41,X40] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41)))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35736])).
fof(f35736,plain,(
  ( ! [X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f35735,f592])).
fof(f35735,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f35648,f8886])).
fof(f35648,plain,(
  ( ! [X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X40),s('type.num.num',X41))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))))))) ) | $spl22),
  inference(superposition,[],[f13050,f592])).
fof(f37940,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37939,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37939,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37390,f445])).
fof(f37390,plain,(
  ( ! [X35,X36] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36)))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35724])).
fof(f35724,plain,(
  ( ! [X35,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f35723,f591])).
fof(f35723,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f35643,f8886])).
fof(f35643,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X35),s('type.num.num',X36))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))))))) ) | $spl22),
  inference(superposition,[],[f13050,f591])).
fof(f37938,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37937,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37937,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37389,f445])).
fof(f37389,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22)))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35699])).
fof(f35699,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f35698,f590])).
fof(f35698,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f35630,f8886])).
fof(f35630,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X21),s('type.num.num',X22))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))))) ) | $spl22),
  inference(superposition,[],[f13050,f590])).
fof(f37936,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37935,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37935,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37388,f445])).
fof(f37388,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35684])).
fof(f35684,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f35683,f9190])).
fof(f35683,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f35622,f8886])).
fof(f35622,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl22),
  inference(superposition,[],[f13050,f9190])).
fof(f37934,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37933,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37933,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37386,f445])).
fof(f37386,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f35657])).
fof(f35657,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl22),
  inference(superposition,[],[f13050,f8886])).
fof(f37932,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37931,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37931,plain,(
  ( ! [X4,X5] : (s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37385,f445])).
fof(f37385,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f32782])).
fof(f32782,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) ) | $spl22),
  inference(forward_demodulation,[],[f32781,f16221])).
fof(f16221,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0)))) ) | $spl22),
  inference(superposition,[],[f669,f8875])).
fof(f32781,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num',X4)))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) ) | $spl22),
  inference(subsumption_resolution,[],[f32737,f445])).
fof(f32737,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num',X4)))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) ) | $spl22),
  inference(superposition,[],[f612,f16255])).
fof(f16255,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl22),
  inference(forward_demodulation,[],[f16150,f459])).
fof(f16150,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl22),
  inference(superposition,[],[f669,f8875])).
fof(f37930,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37929,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37929,plain,(
  ( ! [X19,X17,X18] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),X19) | p(s(bool,X19))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37384,f445])).
fof(f37384,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),X19) | p(s(bool,X19))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28083])).
fof(f28083,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0')))) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),X19) | p(s(bool,X19))) ) | $spl22),
  inference(superposition,[],[f8979,f8886])).
fof(f37928,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37927,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37927,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X18)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)),X18)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37383,f445])).
fof(f37383,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)),X18)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f27943])).
fof(f27943,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X18)) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X19)),X18)) ) | $spl22),
  inference(superposition,[],[f2119,f8886])).
fof(f37926,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37925,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37925,plain,(
  ( ! [X19,X17,X18] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X19)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37382,f445])).
fof(f37382,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X19)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24714])).
fof(f24714,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0')))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X19)) ) | $spl22),
  inference(superposition,[],[f8934,f8886])).
fof(f37924,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37923,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37923,plain,(
  ( ! [X19,X17,X18] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),X19,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37381,f445])).
fof(f37381,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),X19,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24638])).
fof(f24638,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0')))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')),X19,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(superposition,[],[f8933,f8886])).
fof(f37922,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37921,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37921,plain,(
  ( ! [X19,X17,X18] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X19)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37380,f445])).
fof(f37380,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X19)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24546])).
fof(f24546,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0')))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.ZERO_0')),X19)) ) | $spl22),
  inference(superposition,[],[f966,f8886])).
fof(f37920,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37919,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37919,plain,(
  ( ! [X17,X15,X16] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16)),X17,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37379,f445])).
fof(f37379,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16)),X17,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24428])).
fof(f24428,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0')))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X16)),X17,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl22),
  inference(superposition,[],[f965,f8886])).
fof(f37918,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37917,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37917,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37378,f445])).
fof(f37378,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f13050])).
fof(f37916,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37915,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37915,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X5)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37377,f445])).
fof(f37377,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X5)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f12918])).
fof(f12918,plain,(
  ( ! [X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X5)) ) | $spl22),
  inference(forward_demodulation,[],[f12917,f8872])).
fof(f12917,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(forward_demodulation,[],[f12916,f8872])).
fof(f12916,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(subsumption_resolution,[],[f12915,f445])).
fof(f12915,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(forward_demodulation,[],[f12855,f459])).
fof(f12855,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),'const.list.NIL_0')))) ) | $spl22),
  inference(superposition,[],[f612,f8872])).
fof(f37914,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37913,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37913,plain,(
  ( ! [X33,X31,X32] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37376,f445])).
fof(f37376,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9252])).
fof(f9252,plain,(
  ( ! [X33,X31,X32] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33) | ~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(forward_demodulation,[],[f9136,f8871])).
fof(f9136,plain,(
  ( ! [X33,X31,X32] : (~sP8('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.ZERO_0')),X32,X33) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')))) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.num.|48|_0')),X32,X33)) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7690])).
fof(f37912,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37911,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37911,plain,(
  ( ! [X30,X28,X29] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0')),X29,X30) | ~p(s(bool,X29))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37373,f445])).
fof(f37373,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0')),X29,X30) | ~p(s(bool,X29))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9135])).
fof(f9135,plain,(
  ( ! [X30,X28,X29] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0')),X29,X30) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X29))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7689])).
fof(f37910,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37909,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37909,plain,(
  ( ! [X26,X27,X25] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.ZERO_0')),X27,X26) | ~p(s(bool,X26))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37372,f445])).
fof(f37372,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.ZERO_0')),X27,X26) | ~p(s(bool,X26))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9134])).
fof(f9134,plain,(
  ( ! [X26,X27,X25] : (sP9('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.ZERO_0')),X27,X26) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X26))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7688])).
fof(f37908,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37907,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37907,plain,(
  ( ! [X24,X23,X22] : (~sP5(X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')),X24) | ~p(s(bool,X23)) | p(s(bool,X24))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37371,f445])).
fof(f37371,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | ~sP5(X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')),X24) | ~p(s(bool,X23)) | p(s(bool,X24))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9133])).
fof(f9133,plain,(
  ( ! [X24,X23,X22] : (~sP5(X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')),X24) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X23)) | p(s(bool,X24))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7687])).
fof(f37906,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37905,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37905,plain,(
  ( ! [X21,X20] : (sP1(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,X21))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37370,f445])).
fof(f37370,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | sP1(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,X21))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9132])).
fof(f9132,plain,(
  ( ! [X21,X20] : (sP1(X21,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X21))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7686])).
fof(f37904,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37903,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37903,plain,(
  ( ! [X19,X18] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0')),X19) | p(s(bool,X19))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37369,f445])).
fof(f37369,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0')),X19) | p(s(bool,X19))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9131])).
fof(f9131,plain,(
  ( ! [X19,X18] : (sP1('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.ZERO_0')),X19) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X19))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7685])).
fof(f37902,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37901,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37901,plain,(
  ( ! [X17,X16] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')),X17)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37368,f445])).
fof(f37368,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')),X17)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9130])).
fof(f9130,plain,(
  ( ! [X17,X16] : (sP0('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')),X17) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7684])).
fof(f37900,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37899,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37899,plain,(
  ( ! [X14,X15] : (sP0(X15,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37367,f445])).
fof(f37367,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | sP0(X15,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f9129])).
fof(f9129,plain,(
  ( ! [X14,X15] : (sP0(X15,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f7683])).
fof(f37898,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37897,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37897,plain,(
  ( ! [X167,X169,X168] : (s('type.num.num',X169) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num','const.num.SUC_1'(s('type.num.num',X168)))))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37360,f445])).
fof(f37360,plain,(
  ( ! [X167,X169,X168] : (~p(s(bool,'T_0')) | s('type.num.num',X169) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num','const.num.SUC_1'(s('type.num.num',X168)))))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f30815])).
fof(f30815,plain,(
  ( ! [X167,X169,X168] : (s('type.num.num',X169) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num','const.num.SUC_1'(s('type.num.num',X168))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168))))),s('type.num.num',X169))))) ) | $spl22),
  inference(backward_demodulation,[],[f30796,f19024])).
fof(f19024,plain,(
  ( ! [X167,X169,X168] : (s('type.num.num',X169) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num',X168))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168))))),s('type.num.num',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f19023,f18757])).
fof(f19023,plain,(
  ( ! [X167,X169,X168] : (s('type.num.num',X169) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168))))),s('type.num.num',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f19022,f9175])).
fof(f19022,plain,(
  ( ! [X167,X169,X168] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168))))),s('type.num.num',X169)))) | s('type.num.num',X169) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f19021,f9191])).
fof(f19021,plain,(
  ( ! [X167,X169,X168] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num',X168))))))),s('type.num.num',X169)))) | s('type.num.num',X169) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168)))))))) )),
  inference(forward_demodulation,[],[f18817,f472])).
fof(f18817,plain,(
  ( ! [X167,X169,X168] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X167),s('type.num.num',X168))))))))),s('type.num.num',X169)))) | s('type.num.num',X169) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X168)))))))) )),
  inference(superposition,[],[f658,f595])).
fof(f37896,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37895,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37895,plain,(
  ( ! [X187,X185,X186] : (s('type.num.num',X187) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X186)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37354,f445])).
fof(f37354,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'T_0')) | s('type.num.num',X187) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X186)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f16981])).
fof(f16981,plain,(
  ( ! [X187,X185,X186] : (s('type.num.num',X187) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X186))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num',X186))))))),s('type.num.num',X187))))) ) | $spl22),
  inference(forward_demodulation,[],[f16980,f9191])).
fof(f16980,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num',X186))))))),s('type.num.num',X187)))) | s('type.num.num',X187) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num',X186)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f16823,f597])).
fof(f16823,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X186))))))),s('type.num.num',X187)))) | s('type.num.num',X187) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X185),s('type.num.num',X186)))))))) ) | $spl22),
  inference(superposition,[],[f658,f9191])).
fof(f37894,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891,f37893])).
fof(f37892,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889,f37891])).
fof(f37890,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887,f37889])).
fof(f37888,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885,f37887])).
fof(f37886,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883,f37885])).
fof(f37884,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881,f37883])).
fof(f37882,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873,f37881])).
fof(f37874,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859,f37873])).
fof(f37872,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37871,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37871,plain,(
  ( ! [X61,X59,X60,X58] : (~sP5('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),'const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X61) | p(s(bool,X61))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37317,f445])).
fof(f37317,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),'const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X61) | p(s(bool,X61))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28094])).
fof(f28094,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X59),s('type.num.num',X58)))) | ~sP5('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),'const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X61) | p(s(bool,X61))) ) | $spl22),
  inference(superposition,[],[f8979,f584])).
fof(f37870,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37869,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37869,plain,(
  ( ! [X39,X37,X38,X40] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),'const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),X40) | p(s(bool,X40))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37316,f445])).
fof(f37316,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),'const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),X40) | p(s(bool,X40))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28088])).
fof(f28088,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X37),s('type.num.num',X38)))) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),'const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),X40) | p(s(bool,X40))) ) | $spl22),
  inference(superposition,[],[f8979,f587])).
fof(f37868,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37867,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37867,plain,(
  ( ! [X35,X33,X36,X34] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),'const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),X36) | p(s(bool,X36))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37315,f445])).
fof(f37315,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),'const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),X36) | p(s(bool,X36))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28087])).
fof(f28087,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),'const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),X36) | p(s(bool,X36))) ) | $spl22),
  inference(superposition,[],[f8979,f586])).
fof(f37866,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37865,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37865,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),X32) | p(s(bool,X32))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37314,f445])).
fof(f37314,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),X32) | p(s(bool,X32))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28086])).
fof(f28086,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num',X30)))) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),X32) | p(s(bool,X32))) ) | $spl22),
  inference(superposition,[],[f8979,f669])).
fof(f37864,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37863,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37863,plain,(
  ( ! [X26,X24,X27,X25] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),'const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),X27) | p(s(bool,X27))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37313,f445])).
fof(f37313,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),'const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),X27) | p(s(bool,X27))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28085])).
fof(f28085,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),'const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),X27) | p(s(bool,X27))) ) | $spl22),
  inference(superposition,[],[f8979,f581])).
fof(f37862,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37861,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37861,plain,(
  ( ! [X23,X21,X22,X20] : (~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),'const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),X23) | p(s(bool,X23))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37312,f445])).
fof(f37312,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),'const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),X23) | p(s(bool,X23))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f28084])).
fof(f28084,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X21)))) | ~sP5('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),'const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),X23) | p(s(bool,X23))) ) | $spl22),
  inference(superposition,[],[f8979,f583])).
fof(f37860,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857,f37859])).
fof(f37858,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855,f37857])).
fof(f37856,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853,f37855])).
fof(f37854,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851,f37853])).
fof(f37852,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849,f37851])).
fof(f37850,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823,f37849])).
fof(f37848,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37847,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37847,plain,(
  ( ! [X61,X59,X60,X58] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37305,f445])).
fof(f37305,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24725])).
fof(f24725,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X59),s('type.num.num',X58)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61)) ) | $spl22),
  inference(superposition,[],[f8934,f584])).
fof(f37846,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37845,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37845,plain,(
  ( ! [X39,X37,X38,X40] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37304,f445])).
fof(f37304,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24719])).
fof(f24719,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X37),s('type.num.num',X38)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X40)) ) | $spl22),
  inference(superposition,[],[f8934,f587])).
fof(f37844,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37843,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37843,plain,(
  ( ! [X35,X33,X36,X34] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X36)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37303,f445])).
fof(f37303,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X36)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24718])).
fof(f24718,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))),X36)) ) | $spl22),
  inference(superposition,[],[f8934,f586])).
fof(f37842,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37841,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37841,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),X32)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37302,f445])).
fof(f37302,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),X32)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24717])).
fof(f24717,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num',X30)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))),X32)) ) | $spl22),
  inference(superposition,[],[f8934,f669])).
fof(f37840,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37839,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37839,plain,(
  ( ! [X26,X24,X27,X25] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),X27)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37301,f445])).
fof(f37301,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),X27)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24716])).
fof(f24716,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))),X27)) ) | $spl22),
  inference(superposition,[],[f8934,f581])).
fof(f37838,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37837,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37837,plain,(
  ( ! [X23,X21,X22,X20] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),X23)) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37300,f445])).
fof(f37300,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),X23)) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24715])).
fof(f24715,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X21)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))),X23)) ) | $spl22),
  inference(superposition,[],[f8934,f583])).
fof(f37836,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37835,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37835,plain,(
  ( ! [X61,X59,X60,X58] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X61,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37299,f445])).
fof(f37299,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X61,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24649])).
fof(f24649,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X59),s('type.num.num',X58)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X60),s('type.num.num','const.arithmetic.ZERO_0')),X61,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))))) ) | $spl22),
  inference(superposition,[],[f8933,f584])).
fof(f37834,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37833,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37833,plain,(
  ( ! [X39,X37,X38,X40] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37298,f445])).
fof(f37298,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24643])).
fof(f24643,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X37),s('type.num.num',X38)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.ZERO_0')),X40,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))))) ) | $spl22),
  inference(superposition,[],[f8933,f587])).
fof(f37832,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37831,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37831,plain,(
  ( ! [X35,X33,X36,X34] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),X36,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37297,f445])).
fof(f37297,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),X36,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24642])).
fof(f24642,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X33),s('type.num.num',X34)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X35),s('type.num.num','const.arithmetic.ZERO_0')),X36,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | $spl22),
  inference(superposition,[],[f8933,f586])).
fof(f37830,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37829,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37829,plain,(
  ( ! [X30,X28,X31,X29,X32] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),X32,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37296,f445])).
fof(f37296,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),X32,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24641])).
fof(f24641,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X29),s('type.num.num',X30)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.ZERO_0')),X32,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X28),s('type.num.num',X30)))))) ) | $spl22),
  inference(superposition,[],[f8933,f669])).
fof(f37828,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37827,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37827,plain,(
  ( ! [X26,X24,X27,X25] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),X27,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37295,f445])).
fof(f37295,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),X27,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24640])).
fof(f24640,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X25)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')),X27,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))) ) | $spl22),
  inference(superposition,[],[f8933,f581])).
fof(f37826,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37825,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37825,plain,(
  ( ! [X23,X21,X22,X20] : (sP9('const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) ) | ($spl22 | $spl30)),
  inference(subsumption_resolution,[],[f37294,f445])).
fof(f37294,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'T_0')) | sP9('const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f24639])).
fof(f24639,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X21)))) | sP9('const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0')),X23,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))) ) | $spl22),
  inference(superposition,[],[f8933,f583])).
fof(f37824,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821,f37823])).
fof(f37822,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819,f37821])).
fof(f37820,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817,f37819])).
fof(f37818,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815,f37817])).
fof(f37816,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813,f37815])).
fof(f37814,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811,f37813])).
fof(f37812,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809,f37811])).
fof(f37810,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807,f37809])).
fof(f37808,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805,f37807])).
fof(f37806,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803,f37805])).
fof(f37804,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801,f37803])).
fof(f37802,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799,f37801])).
fof(f37800,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276,f37799])).
fof(f37796,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794,f37276])).
fof(f37795,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792,f37794])).
fof(f37793,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790,f37792])).
fof(f37791,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788,f37790])).
fof(f37789,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786,f37788])).
fof(f37787,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784,f37786])).
fof(f37785,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782,f37784])).
fof(f37783,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780,f37782])).
fof(f37781,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758,f37780])).
fof(f37759,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754,f37758])).
fof(f37755,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750,f37754])).
fof(f37751,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746,f37750])).
fof(f37747,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744,f37746])).
fof(f37745,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742,f37744])).
fof(f37743,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740,f37742])).
fof(f37741,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738,f37740])).
fof(f37739,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736,f37738])).
fof(f37737,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734,f37736])).
fof(f37735,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732,f37734])).
fof(f37733,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730,f37732])).
fof(f37731,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728,f37730])).
fof(f37729,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726,f37728])).
fof(f37727,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724,f37726])).
fof(f37725,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722,f37724])).
fof(f37723,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720,f37722])).
fof(f37721,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718,f37720])).
fof(f37719,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716,f37718])).
fof(f37717,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714,f37716])).
fof(f37715,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712,f37714])).
fof(f37713,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710,f37712])).
fof(f37711,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708,f37710])).
fof(f37709,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706,f37708])).
fof(f37707,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704,f37706])).
fof(f37705,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702,f37704])).
fof(f37703,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700,f37702])).
fof(f37701,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698,f37700])).
fof(f37699,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696,f37698])).
fof(f37697,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694,f37696])).
fof(f37695,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692,f37694])).
fof(f37693,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690,f37692])).
fof(f37691,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688,f37690])).
fof(f37689,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686,f37688])).
fof(f37687,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684,f37686])).
fof(f37685,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682,f37684])).
fof(f37683,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680,f37682])).
fof(f37681,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678,f37680])).
fof(f37679,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676,f37678])).
fof(f37677,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674,f37676])).
fof(f37675,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672,f37674])).
fof(f37673,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670,f37672])).
fof(f37671,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668,f37670])).
fof(f37669,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663,f37668])).
fof(f37667,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f37666,f445])).
fof(f37666,plain,(
  ~p(s(bool,'T_0')) | $spl30),
  inference(forward_demodulation,[],[f37665,f37063])).
fof(f37665,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | $spl30),
  inference(subsumption_resolution,[],[f37204,f445])).
fof(f37204,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) ) | $spl30),
  inference(backward_demodulation,[],[f37063,f629])).
fof(f37664,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659,f37663])).
fof(f37660,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657,f37659])).
fof(f37658,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655,f37657])).
fof(f37656,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653,f37655])).
fof(f37654,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165,f37653])).
fof(f37652,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37167,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165])).
fof(f37167,plain,(
  ( ! [X0,X1] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X0))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X1)))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f15225])).
fof(f15225,plain,(
  ( ! [X0,X1] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X0))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X1)))) ) | $spl22),
  inference(forward_demodulation,[],[f15110,f3055])).
fof(f15110,plain,(
  ( ! [X0,X1] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X0))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'(bool),X1)))) ) | $spl22),
  inference(unit_resulting_resolution,[],[f8912,f578])).
fof(f8912,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl22),
  inference(backward_demodulation,[],[f8871,f803])).
fof(f37651,plain,(
  $false | ($spl22 | $spl30)),
  inference(global_subsumption,[],[f37166,f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165])).
fof(f37166,plain,(
  ( ! [X54,X56,X55,X53] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X54))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X55),s('type.list.list'(bool),X56))) | s(bool,X55) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)))) ) | ($spl22 | $spl30)),
  inference(backward_demodulation,[],[f37063,f15126])).
fof(f15126,plain,(
  ( ! [X54,X56,X55,X53] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X54))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X55),s('type.list.list'(bool),X56))) | s(bool,X55) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)))) ) | $spl22),
  inference(superposition,[],[f578,f8881])).
fof(f8881,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl22),
  inference(backward_demodulation,[],[f8871,f470])).
fof(f37650,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164,f37165])).
fof(f37649,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645,f37164])).
fof(f37647,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f37136,f445])).
fof(f37136,plain,(
  ~p(s(bool,'T_0')) | $spl30),
  inference(backward_demodulation,[],[f37063,f751])).
fof(f37646,plain,(
  $false | $spl30),
  inference(global_subsumption,[],[f444,f443,f445,f447,f448,f449,f450,f751,f456,f457,f458,f459,f460,f461,f462,f463,f465,f466,f468,f469,f470,f471,f472,f473,f474,f475,f476,f477,f478,f479,f753,f481,f482,f483,f484,f485,f486,f487,f754,f755,f490,f491,f756,f493,f494,f495,f503,f502,f507,f506,f757,f758,f519,f518,f523,f522,f561,f562,f566,f565,f571,f576,f575,f574,f577,f580,f579,f578,f581,f582,f583,f584,f585,f586,f587,f588,f589,f590,f591,f592,f593,f594,f595,f596,f597,f598,f599,f600,f601,f602,f603,f604,f605,f609,f606,f612,f611,f615,f759,f624,f623,f626,f625,f628,f627,f630,f629,f633,f632,f760,f651,f648,f647,f646,f658,f656,f667,f668,f669,f670,f689,f688,f687,f686,f685,f684,f683,f693,f692,f691,f690,f697,f696,f695,f694,f701,f700,f699,f698,f705,f704,f703,f702,f741,f709,f708,f707,f706,f716,f715,f714,f713,f722,f719,f718,f717,f729,f728,f727,f740,f725,f724,f723,f733,f732,f731,f730,f737,f736,f735,f734,f763,f762,f765,f764,f767,f766,f769,f768,f771,f770,f773,f772,f775,f774,f777,f776,f779,f778,f781,f780,f783,f782,f785,f784,f787,f786,f789,f788,f791,f790,f793,f792,f795,f794,f803,f802,f806,f823,f836,f837,f840,f843,f846,f849,f852,f861,f866,f867,f870,f873,f876,f883,f884,f886,f889,f896,f899,f903,f914,f912,f917,f927,f925,f932,f961,f962,f963,f964,f965,f966,f967,f988,f1100,f1101,f1102,f1103,f1104,f1105,f1106,f1133,f1134,f1135,f1136,f1137,f1138,f1139,f1246,f1259,f1311,f1343,f1367,f1414,f1468,f1481,f1480,f1479,f1478,f1501,f1500,f1499,f1498,f1497,f1496,f1495,f1494,f1493,f1492,f1491,f1490,f1489,f1488,f1514,f1513,f1510,f1509,f1537,f1536,f1535,f1534,f1533,f1532,f1531,f1530,f1529,f1528,f1527,f1526,f1525,f1524,f1600,f1641,f1640,f1638,f1637,f1683,f1682,f1680,f1679,f1732,f1783,f1801,f1800,f1799,f1798,f1814,f1815,f1825,f1826,f1827,f1828,f1829,f1830,f1831,f1842,f1859,f1967,f1966,f1965,f1964,f1981,f1982,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f2119,f2120,f2121,f2109,f2122,f2111,f2125,f2143,f2163,f2192,f2201,f2207,f2216,f2221,f2220,f2230,f2239,f2387,f2386,f2396,f2405,f2844,f2882,f2881,f2883,f2885,f2886,f2887,f2888,f2889,f2890,f2893,f2894,f2895,f2896,f2897,f2898,f2899,f2960,f3055,f3056,f3060,f3059,f3094,f3093,f3091,f3090,f3202,f3205,f3293,f3365,f3368,f3647,f3646,f3645,f3644,f3643,f3642,f3641,f3640,f3636,f3635,f3631,f3630,f3629,f3624,f3616,f3612,f3609,f3608,f3604,f3603,f3602,f3601,f3600,f3597,f3595,f3590,f3589,f3584,f3583,f3577,f3575,f3574,f3569,f3566,f3565,f3564,f3563,f3562,f3561,f3560,f3559,f3558,f3557,f3556,f3555,f3554,f3553,f3552,f3551,f3550,f3549,f3548,f3547,f3546,f3545,f3544,f3543,f3542,f3541,f3540,f3539,f3538,f3537,f3536,f3535,f3534,f3533,f3528,f3527,f3521,f3520,f3515,f3514,f3508,f3505,f3504,f3501,f3500,f3497,f3496,f3492,f3491,f3490,f3487,f3486,f3485,f3846,f3759,f3849,f3850,f3922,f4013,f4184,f4185,f4186,f4187,f4188,f4189,f4191,f4192,f4196,f4195,f4197,f4350,f4349,f4348,f4347,f4381,f4382,f4383,f4384,f4385,f4386,f4387,f4388,f4637,f4953,f5051,f5086,f5139,f5164,f5273,f5354,f5438,f5524,f5834,f5835,f5898,f6182,f6181,f6179,f6176,f6175,f6174,f6172,f6183,f6184,f6185,f6186,f6187,f6188,f6189,f6190,f6191,f6192,f6194,f6196,f6197,f6199,f6200,f6201,f6202,f6203,f6204,f6205,f6206,f6207,f6209,f6210,f6448,f6447,f6445,f6442,f6441,f6440,f6438,f6449,f6452,f6453,f6454,f6455,f6456,f6457,f6458,f6462,f6463,f6465,f6466,f6467,f6468,f6469,f6470,f6471,f6472,f6473,f6475,f6476,f6720,f6719,f6782,f6714,f6721,f6795,f6724,f6725,f6726,f6727,f6728,f6729,f6730,f6796,f6732,f6734,f6735,f6737,f6738,f6739,f6740,f6741,f6742,f6743,f6799,f6745,f6747,f6748,f6750,f7112,f7116,f7164,f7174,f7178,f7191,f7193,f7197,f7214,f7077,f7078,f7079,f7080,f7081,f7327,f7324,f7320,f7316,f7310,f7307,f7304,f7303,f7302,f7298,f7286,f7285,f7284,f7282,f7280,f7422,f7419,f7412,f7411,f7410,f7396,f7395,f7390,f7388,f7387,f7385,f7384,f7549,f7547,f7546,f7531,f7530,f7511,f7510,f7508,f7506,f7505,f7504,f7487,f7486,f7485,f7484,f7482,f7569,f7568,f7567,f7566,f7619,f7599,f7600,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7641,f7640,f7639,f7638,f7693,f7672,f7673,f7683,f7684,f7685,f7686,f7687,f7688,f7689,f7690,f7715,f7714,f7713,f7712,f7745,f7746,f7756,f7757,f7758,f7759,f7760,f7761,f7762,f7763,f7833,f7834,f7835,f7836,f7837,f7838,f7839,f7840,f7841,f7842,f7843,f7844,f7845,f7846,f7847,f7848,f7849,f7850,f7851,f7852,f7853,f7854,f7855,f7856,f7857,f7858,f7859,f7860,f7813,f7814,f7861,f7862,f7863,f7864,f7865,f7866,f7867,f7868,f7869,f7870,f7871,f7872,f7873,f7874,f7875,f7876,f7987,f7991,f7995,f8093,f3057,f8404,f8403,f8402,f8401,f8436,f8468,f8469,f8470,f8480,f8481,f8482,f8483,f8484,f8485,f8486,f8487,f8500,f8510,f8509,f8508,f8507,f8542,f8596,f8574,f8575,f8585,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8605,f8619,f8618,f8617,f8616,f8680,f8681,f8691,f8692,f8693,f8694,f8695,f8696,f8697,f8698,f8710,f8759,f8758,f8757,f8756,f8790,f8846,f8791,f8823,f8824,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8858,f5551,f3413,f11778,f11777,f11776,f11775,f11802,f11826,f11827,f11837,f11838,f11839,f11840,f11841,f11842,f11843,f11844,f11856,f11913,f11912,f11911,f11910,f11960,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11990,f12048,f12047,f12046,f12045,f12095,f12096,f12106,f12107,f12108,f12109,f12110,f12111,f12112,f12113,f12125,f12720,f12787,f12789,f13051,f13052,f13053,f13314,f13315,f13207,f13211,f13215,f13342,f13613,f13503,f13507,f13511,f13642,f13931,f13933,f13811,f13819,f13959,f14067,f14098,f14133,f14137,f14141,f14274,f14393,f14425,f14462,f14466,f14470,f14604,f15009,f15012,f15013,f15020,f15111,f15108,f15107,f15106,f15105,f15114,f15115,f15116,f15117,f15118,f15135,f15141,f15145,f15147,f15150,f15166,f15168,f15432,f15433,f15434,f15435,f15600,f15601,f15652,f15820,f15822,f15825,f15859,f16071,f16117,f16116,f16115,f16114,f16151,f16256,f16257,f16156,f16222,f16227,f16228,f16229,f16260,f16231,f16241,f16242,f16243,f16244,f16245,f16246,f16247,f16248,f16250,f16270,f17389,f17449,f17450,f17764,f17765,f18246,f18269,f18295,f18301,f18304,f18307,f18310,f18324,f18338,f18341,f18129,f18130,f18131,f18456,f19167,f19175,f19349,f19362,f19876,f19880,f19884,f20068,f20848,f20852,f21022,f21077,f21140,f21251,f21310,f21372,f21424,f21427,f21535,f21598,f21649,f21652,f21752,f21809,f21808,f21807,f22164,f22163,f22157,f22156,f22149,f22146,f22143,f22139,f22138,f22133,f22132,f22131,f22130,f22129,f22125,f22123,f22117,f22116,f22109,f22108,f22100,f22061,f22060,f22059,f22058,f22052,f22051,f22045,f22044,f22043,f22036,f22031,f22026,f22025,f22024,f22023,f22020,f22019,f22018,f22017,f22015,f22014,f22013,f22012,f22010,f22009,f22007,f22006,f22005,f22004,f22003,f22000,f21999,f21998,f21997,f21995,f21994,f21993,f21992,f21990,f21989,f21987,f21986,f21984,f21982,f21973,f21972,f21971,f21970,f21959,f21958,f21946,f21945,f21944,f21937,f21936,f21935,f21928,f21914,f21902,f21901,f21891,f21890,f21889,f21888,f21887,f21885,f21877,f21876,f21875,f21870,f21869,f22167,f22639,f22638,f22632,f22631,f22624,f22621,f22618,f22614,f22613,f22608,f22607,f22606,f22605,f22604,f22600,f22598,f22592,f22591,f22584,f22583,f22575,f22536,f22535,f22534,f22533,f22527,f22526,f22520,f22519,f22518,f22511,f22506,f22501,f22500,f22499,f22498,f22495,f22494,f22493,f22492,f22490,f22489,f22488,f22487,f22485,f22484,f22482,f22481,f22480,f22479,f22478,f22475,f22474,f22473,f22472,f22470,f22469,f22468,f22467,f22465,f22464,f22462,f22461,f22459,f22457,f22448,f22447,f22446,f22445,f22434,f22433,f22421,f22420,f22419,f22412,f22411,f22410,f22403,f22389,f22377,f22376,f22366,f22365,f22364,f22363,f22362,f22360,f22352,f22351,f22350,f22344,f22767,f22896,f22894,f22893,f22892,f24421,f24445,f24429,f24430,f24431,f24432,f24433,f24434,f24438,f24439,f24442,f24447,f24444,f24538,f24563,f24547,f24548,f24549,f24550,f24551,f24552,f24556,f24557,f24560,f24565,f24562,f25469,f25471,f25191,f25192,f25193,f25194,f25195,f25196,f25197,f25198,f25199,f25200,f25201,f25202,f25203,f25204,f25205,f25206,f25208,f25209,f25214,f25215,f25266,f25274,f25497,f25514,f25518,f25856,f25855,f25854,f25898,f25920,f25919,f25918,f25963,f25986,f25985,f25984,f26028,f26053,f26052,f26051,f26096,f26100,f26101,f26103,f26104,f26105,f26150,f26151,f26153,f26154,f26155,f26501,f26500,f26499,f26498,f26492,f26491,f26484,f26481,f26478,f26474,f26473,f26468,f26467,f26466,f26465,f26464,f26460,f26458,f26452,f26451,f26444,f26443,f26435,f26396,f26395,f26394,f26393,f26387,f26386,f26380,f26379,f26378,f26371,f26365,f26359,f26358,f26357,f26356,f26353,f26352,f26351,f26350,f26348,f26347,f26346,f26345,f26342,f26341,f26339,f26338,f26337,f26336,f26335,f26332,f26331,f26330,f26329,f26327,f26326,f26325,f26324,f26321,f26320,f26318,f26317,f26314,f26311,f26302,f26301,f26300,f26299,f26288,f26287,f26275,f26274,f26273,f26266,f26265,f26264,f26257,f26243,f26231,f26230,f26220,f26219,f26218,f26217,f26207,f26205,f26199,f26581,f26582,f26584,f26585,f26586,f26631,f26632,f26634,f26635,f26636,f27007,f27008,f27010,f27011,f27012,f27059,f27060,f27062,f27063,f27064,f27221,f27223,f27224,f27225,f27272,f27274,f27275,f27276,f27388,f27390,f27391,f27392,f27439,f27441,f27442,f27443,f27616,f27618,f27619,f27620,f27668,f27670,f27671,f27672,f27814,f27815,f27828,f27933,f27960,f27944,f27945,f27946,f27947,f27948,f27949,f27953,f27954,f27957,f27962,f27959,f28403,f28402,f28401,f28400,f28585,f28584,f28583,f28582,f28769,f28768,f28767,f28766,f28854,f30796,f30852,f30853,f30476,f30477,f30527,f30531,f30535,f30879,f30891,f30907,f33942,f33940,f34612,f34619,f34620,f34622,f34625,f34627,f34630,f34656,f34663,f34664,f34666,f34669,f34671,f34674,f34704,f34705,f34706,f34708,f34893,f34894,f34895,f34896,f34897,f34898,f34899,f34900,f34901,f34902,f34903,f34904,f34905,f34906,f34907,f34908,f34755,f34756,f34758,f35048,f35052,f35057,f35065,f35067,f35078,f35082,f36361,f36362,f36363,f36365,f36366,f36367,f36371,f36372,f36375,f36377,f36408,f36421,f36422,f36423,f36424,f36425,f36426,f36430,f36431,f36433,f36434,f36533,f36534,f36536,f36541,f36542,f36543,f36544,f36628,f37061,f37065,f37068,f37071,f37074,f37077,f37080,f36654,f36655,f37085,f37086,f37087,f37088,f37089,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37101,f37102,f37103,f37104,f37107,f37108,f37109,f36728,f36729,f36731,f36736,f36737,f36738,f36739,f37117,f37119,f37121,f37123,f37125,f37127,f37129,f37063,f37645])).
fof(f37084,plain,(
  ( ! [X2,X1] : (~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),X2) | p(s(bool,X2))) ) | $spl44),
  inference(cnf_transformation,[],[f37084_D])).
fof(f37084_D,plain,(
  ( ! [X2,X1] : (~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),X2) | p(s(bool,X2))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f37063,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl30),
  inference(cnf_transformation,[],[f37063_D])).
fof(f37063_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f37131,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),X2) | p(s(bool,X2))) ) | $spl22),
  inference(condensation,[],[f37130])).
fof(f37130,plain,(
  ( ! [X80,X78,X81,X79] : (~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X79),s('type.num.num','const.arithmetic.ZERO_0')),X80) | p(s(bool,X80)) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | $spl22),
  inference(subsumption_resolution,[],[f36764,f1343])).
fof(f36764,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X78)) | ~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X79),s('type.num.num','const.arithmetic.ZERO_0')),X80) | p(s(bool,X80)) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | $spl22),
  inference(superposition,[],[f8979,f1259])).
fof(f37081,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2)),X1)) ) | $spl42),
  inference(cnf_transformation,[],[f37081_D])).
fof(f37081_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2)),X1)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f37129,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2)),X1)) )),
  inference(condensation,[],[f37128])).
fof(f37128,plain,(
  ( ! [X68,X66,X69,X67] : (p(s(bool,X67)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f36761,f1343])).
fof(f36761,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X66)) | p(s(bool,X67)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f2119,f1259])).
fof(f37078,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) ) | $spl40),
  inference(cnf_transformation,[],[f37078_D])).
fof(f37078_D,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f37127,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f37126])).
fof(f37126,plain,(
  ( ! [X54,X52,X53,X51] : (~sP8('T_0',X52,X53) | sP9('T_0',X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f36757,f1343])).
fof(f36757,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X51)) | ~sP8('T_0',X52,X53) | sP9('T_0',X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f740,f1259])).
fof(f37075,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | sP9('T_0',X1,X2)) ) | $spl38),
  inference(cnf_transformation,[],[f37075_D])).
fof(f37075_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | sP9('T_0',X1,X2)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f37125,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f37124])).
fof(f37124,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | sP9('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f36756,f1343])).
fof(f36756,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | sP9('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f736,f1259])).
fof(f37072,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | sP9('T_0',X2,X1)) ) | $spl36),
  inference(cnf_transformation,[],[f37072_D])).
fof(f37072_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | sP9('T_0',X2,X1)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f37123,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f37122])).
fof(f37122,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | sP9('T_0',X45,X44) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f36755,f1343])).
fof(f36755,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | sP9('T_0',X45,X44) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f735,f1259])).
fof(f37069,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP5(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl34),
  inference(cnf_transformation,[],[f37069_D])).
fof(f37069_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP5(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f37121,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f37120])).
fof(f37120,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP5(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f36754,f1343])).
fof(f36754,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP5(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f686,f1259])).
fof(f37066,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl32),
  inference(cnf_transformation,[],[f37066_D])).
fof(f37066_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f37119,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f37118])).
fof(f37118,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f36753,f1343])).
fof(f36753,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f651,f1259])).
fof(f37062,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl28),
  inference(cnf_transformation,[],[f37062_D])).
fof(f37062_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f37117,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f37116])).
fof(f37116,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f36752,f1343])).
fof(f36752,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X33)) | p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f648,f1259])).
fof(f37083,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')),X2) | p(s(bool,X2))) ) | $spl22),
  inference(condensation,[],[f37082])).
fof(f37082,plain,(
  ( ! [X80,X78,X81,X79] : (~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X79),s('type.num.num','const.arithmetic.ZERO_0')),X80) | p(s(bool,X80)) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | $spl22),
  inference(subsumption_resolution,[],[f36652,f1343])).
fof(f36652,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,X78)) | ~sP5('T_0','const.arithmetic.>=_2'(s('type.num.num',X79),s('type.num.num','const.arithmetic.ZERO_0')),X80) | p(s(bool,X80)) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | $spl22),
  inference(superposition,[],[f8979,f1259])).
fof(f37080,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2)),X1)) )),
  inference(condensation,[],[f37079])).
fof(f37079,plain,(
  ( ! [X68,X66,X69,X67] : (p(s(bool,X67)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f36649,f1343])).
fof(f36649,plain,(
  ( ! [X68,X66,X69,X67] : (~p(s(bool,X66)) | p(s(bool,X67)) | ~sP5('T_0','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X68)),X67) | s(bool,X66) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f2119,f1259])).
fof(f37077,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f37076])).
fof(f37076,plain,(
  ( ! [X54,X52,X53,X51] : (~sP8('T_0',X52,X53) | sP9('T_0',X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f36645,f1343])).
fof(f36645,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X51)) | ~sP8('T_0',X52,X53) | sP9('T_0',X52,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f740,f1259])).
fof(f37074,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f37073])).
fof(f37073,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | sP9('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f36644,f1343])).
fof(f36644,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | sP9('T_0',X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f736,f1259])).
fof(f37071,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f37070])).
fof(f37070,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | sP9('T_0',X45,X44) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f36643,f1343])).
fof(f36643,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | sP9('T_0',X45,X44) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f735,f1259])).
fof(f37068,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP5(X1,'T_0',X2)) )),
  inference(condensation,[],[f37067])).
fof(f37067,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP5(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f36642,f1343])).
fof(f36642,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP5(X40,'T_0',X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f686,f1259])).
fof(f37065,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f37064])).
fof(f37064,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f36641,f1343])).
fof(f36641,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | sP1(X37,'T_0') | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f651,f1259])).
fof(f37061,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f37060])).
fof(f37060,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f36640,f1343])).
fof(f36640,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,X33)) | p(s(bool,X34)) | sP1('T_0',X34) | s(bool,X33) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f648,f1259])).
fof(f8862,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))) ) | $spl26),
  inference(cnf_transformation,[],[f8862_D])).
fof(f8862_D,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2903,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl9),
  inference(cnf_transformation,[],[f2903_D])).
fof(f2903_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f3413,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))) )),
  inference(superposition,[],[f518,f479])).
fof(f8860,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))))) ) | $spl24),
  inference(cnf_transformation,[],[f8860_D])).
fof(f8860_D,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f5551,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26)))))))) )),
  inference(superposition,[],[f518,f490])).
fof(f8848,plain,(
  $false | $spl9),
  inference(subsumption_resolution,[],[f8847,f445])).
fof(f8847,plain,(
  ~p(s(bool,'T_0')) | $spl9),
  inference(forward_demodulation,[],[f8845,f469])).
fof(f8845,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl9),
  inference(backward_demodulation,[],[f8790,f3058])).
fof(f3058,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl9),
  inference(unit_resulting_resolution,[],[f2903,f522])).
fof(f8217,plain,(
  $false | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f750,f748])).
fof(f8219,plain,(
  $false | ($spl2 | $spl4)),
  inference(trivial_inequality_removal,[],[f8218])).
fof(f8218,plain,(
  s('type.list.list'(sK10),sK11) != s('type.list.list'(sK10),sK11) | ($spl2 | $spl4)),
  inference(superposition,[],[f748,f750])).
fof(f8082,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f8081,f4190])).
fof(f4190,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl1),
  inference(backward_demodulation,[],[f4184,f761])).
fof(f761,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl1),
  inference(forward_demodulation,[],[f747,f450])).
fof(f8081,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl4),
  inference(forward_demodulation,[],[f8080,f4184])).
fof(f8080,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | $spl4),
  inference(forward_demodulation,[],[f7948,f458])).
fof(f7948,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),'const.list.NIL_0'))))) | $spl4),
  inference(superposition,[],[f571,f750])).
fof(f2914,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(cnf_transformation,[],[f2914_D])).
fof(f2914_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2899,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f518,f448])).
fof(f2910,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) ) | $spl18),
  inference(cnf_transformation,[],[f2910_D])).
fof(f2910_D,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2912,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl21),
  inference(cnf_transformation,[],[f2912_D])).
fof(f2912_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f2898,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f518,f753])).
fof(f2909,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) ) | $spl16),
  inference(cnf_transformation,[],[f2909_D])).
fof(f2909_D,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2896,plain,(
  ( ! [X10] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f518,f465])).
fof(f2908,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(cnf_transformation,[],[f2908_D])).
fof(f2908_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2895,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f518,f1732])).
fof(f2906,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f2906_D])).
fof(f2906_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2888,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f518,f461])).
fof(f2905,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) | $spl10),
  inference(cnf_transformation,[],[f2905_D])).
fof(f2905_D,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2887,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) )),
  inference(superposition,[],[f518,f460])).
fof(f2901,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl6),
  inference(cnf_transformation,[],[f2901_D])).
fof(f2901_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2883,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f518,f458])).
fof(f746,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl0),
  inference(cnf_transformation,[],[f746_D])).
fof(f746_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f750,plain,(
  s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.NIL_0'))) | $spl4),
  inference(cnf_transformation,[],[f750_D])).
fof(f750_D,plain,(
  s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.NIL_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f443,plain,(
  s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f334])).
fof(f334,plain,(
  (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(sK10),sK11) = s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,sK12),s('type.list.list'(sK10),'const.list.NIL_0')))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ! [X2] : s('type.list.list'(sK10),sK11) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,X2),s('type.list.list'(sK10),'const.list.NIL_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f333])).
fof(f333,plain,(
  ? [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.NIL_0')))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ! [X2] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(rectify,[],[f332])).
fof(f332,plain,(
  ? [X0,X1] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ? [X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0')))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ! [X2] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(nnf_transformation,[],[f297])).
fof(f297,plain,(
  ? [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <~> ? [X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(ennf_transformation,[],[f140])).
fof(f140,plain,(
  ~! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ~! [X0] : ! [X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X2] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X8] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ? [X8] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0','thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|0')).
fof(f747,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(cnf_transformation,[],[f747_D])).
fof(f747_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f748,plain,(
  ( ! [X2] : (s('type.list.list'(sK10),sK11) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,X2),s('type.list.list'(sK10),'const.list.NIL_0')))) ) | $spl2),
  inference(cnf_transformation,[],[f748_D])).
fof(f748_D,plain,(
  ( ! [X2] : (s('type.list.list'(sK10),sK11) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,X2),s('type.list.list'(sK10),'const.list.NIL_0')))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f444,plain,(
  ( ! [X2] : (s('type.list.list'(sK10),sK11) != s('type.list.list'(sK10),'const.list.CONS_2'(s(sK10,X2),s('type.list.list'(sK10),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f334])).
% SZS output end Proof for thm.pat_to_closProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 838
% Passive clauses: 4006
% Generated clauses: 41494
% Final active clauses: 494
% Final passive clauses: 1946
% Input formulas: 137
% Initial clauses: 297
% 
% Duplicate literals: 86
% Trivial inequalities: 72
% Fw subsumption resolutions: 772
% Fw demodulations: 7291
% Bw demodulations: 1409
% Condensations: 124
% Global subsumptions: 268
% 
% Simple tautologies: 101
% Equational tautologies: 73
% Forward subsumptions: 27961
% Fw demodulations to eq. taut.: 431
% Bw demodulations to eq. taut.: 26
% 
% Unit resulting resolution: 6683
% Factoring: 2
% Forward superposition: 13836
% Backward superposition: 9976
% Self superposition: 101
% Equality factoring: 26
% Equality resolution: 17
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 4612
% SAT solver unit clauses: 1127
% SAT solver binary clauses: 1961
% 
% Sat splits: 27
% Sat splitting refutations: 282
% 
% Memory used [KB]: 32750
% Time elapsed: 1.482 s
% ------------------------------
% ------------------------------
% Success in time 2.81 s
