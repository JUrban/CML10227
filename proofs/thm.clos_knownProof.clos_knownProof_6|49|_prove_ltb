Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f7582,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7581,f224,f515,f513,f511,f509,f507,f505,f503,f501,f499,f497,f495,f493,f491,f489,f487,f485,f483,f481,f479,f477,f475,f473,f471,f469,f467,f465,f463,f461,f459,f457,f455,f453,f451,f449,f447,f445,f443,f441,f439,f437,f7579,f7578,f7577,f7576,f7575,f7304,f7303,f7302,f7301,f7300,f7299,f7298,f7297,f7296,f7295,f7294,f7293,f7292,f7291,f7290,f7289,f7288,f7287,f7286,f7285,f7284,f7283,f7282,f7281,f7280,f7279,f7278,f7277,f7276,f6707,f6706,f4779,f4778,f7580])).
fof(f7580,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f455,f234])).
fof(f234,plain,(
  ( ! [X44] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(sK12),X44)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',sK14))),s('type.sptree.spt'(sK12),sK15))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',sK16))),s('type.sptree.spt'(sK12),sK17))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(sK12),sK18))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(sK12),sK19))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(sK12),sK20))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',sK21))),s('type.sptree.spt'(sK12),sK22))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(sK12),sK23))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(sK12),sK24))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(sK12),sK25))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(sK12),sK26))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(sK12),sK27))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(sK12),sK28))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(sK12),sK29))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(sK12),sK30))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',sK31))),s('type.sptree.spt'(sK12),sK32))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(sK12),sK33))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',sK34),s('type.num.num',sK35))),s('type.sptree.spt'(sK12),sK36))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',sK37))),s('type.sptree.spt'(sK12),sK38))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(sK12),sK39))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(sK12),sK40))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(sK12),sK41))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(sK12),sK42))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(sK12),sK43))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',sK44))),s('type.sptree.spt'(sK12),sK45))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',sK46))),s('type.sptree.spt'(sK12),sK47))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(sK12),sK48))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',sK49))),s('type.sptree.spt'(sK12),sK50))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(sK12),sK51))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(sK12),sK52))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(sK12),sK53))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(sK12),sK54))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(sK12),sK55))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(sK12),sK56))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(sK12),sK57))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(sK12),sK58))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(sK12),sK59))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',sK60),s('type.ast.opw',sK61))),s('type.sptree.spt'(sK12),sK62))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',sK63),s('type.ast.shift',sK64),s('type.num.num',sK65))),s('type.sptree.spt'(sK12),sK66))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(sK12),sK67))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(sK12),sK68)))) & ! [X55,X56] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X55))),s('type.sptree.spt'(sK12),X56))) & ! [X53,X54] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X53))),s('type.sptree.spt'(sK12),X54))) & ! [X52] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(sK12),X52))) & ! [X51] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(sK12),X51))) & ! [X50] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(sK12),X50))) & ! [X48,X49] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(sK12),X49))) & ! [X47] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(sK12),X47))) & ! [X46] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(sK12),X46))) & ! [X45] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(sK12),X45))) & ! [X44] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(sK12),X44))) & ! [X43] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(sK12),X43))) & ! [X42] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(sK12),X42))) & ! [X41] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(sK12),X41))) & ! [X40] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(sK12),X40))) & ! [X38,X39] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(sK12),X39))) & ! [X37] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(sK12),X37))) & ! [X34,X35,X36] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(sK12),X36))) & ! [X32,X33] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(sK12),X33))) & ! [X31] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(sK12),X31))) & ! [X30] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(sK12),X30))) & ! [X29] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(sK12),X29))) & ! [X28] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(sK12),X28))) & ! [X27] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(sK12),X27))) & ! [X25,X26] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(sK12),X26))) & ! [X23,X24] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(sK12),X24))) & ! [X22] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(sK12),X22))) & ! [X20,X21] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(sK12),X21))) & ! [X19] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(sK12),X19))) & ! [X18] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(sK12),X18))) & ! [X17] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(sK12),X17))) & ! [X16] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(sK12),X16))) & ! [X15] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(sK12),X15))) & ! [X14] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(sK12),X14))) & ! [X13] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(sK12),X13))) & ! [X12] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(sK12),X12))) & ! [X11] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(sK12),X11))) & ! [X8,X9,X10] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(sK12),X10))) & ! [X4,X5,X6,X7] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(sK12),X7))) & ! [X3] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(sK12),X3))) & ! [X2] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(sK12),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53,sK54,sK55,sK56,sK57,sK58,sK59,sK60,sK61,sK62,sK63,sK64,sK65,sK66,sK67,sK68])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X110,X111] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X110))),s('type.sptree.spt'(X0),X111))) | ? [X108,X109] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X108))),s('type.sptree.spt'(X0),X109))) | ? [X107] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X107))) | ? [X106] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X106))) | ? [X105] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X105))) | ? [X103,X104] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X103))),s('type.sptree.spt'(X0),X104))) | ? [X102] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X102))) | ? [X101] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X101))) | ? [X100] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X100))) | ? [X99] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X99))) | ? [X98] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X98))) | ? [X97] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X97))) | ? [X96] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X96))) | ? [X95] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X95))) | ? [X93,X94] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X93))),s('type.sptree.spt'(X0),X94))) | ? [X92] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X92))) | ? [X89,X90,X91] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X89),s('type.num.num',X90))),s('type.sptree.spt'(X0),X91))) | ? [X87,X88] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X87))),s('type.sptree.spt'(X0),X88))) | ? [X86] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X86))) | ? [X85] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X85))) | ? [X84] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X84))) | ? [X83] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X83))) | ? [X82] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X82))) | ? [X80,X81] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X80))),s('type.sptree.spt'(X0),X81))) | ? [X78,X79] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X78))),s('type.sptree.spt'(X0),X79))) | ? [X77] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X77))) | ? [X75,X76] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X75))),s('type.sptree.spt'(X0),X76))) | ? [X74] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X74))) | ? [X73] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X73))) | ? [X72] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X72))) | ? [X71] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X71))) | ? [X70] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X70))) | ? [X69] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X69))) | ? [X68] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X68))) | ? [X67] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X67))) | ? [X66] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X66))) | ? [X63,X64,X65] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X63),s('type.ast.opw',X64))),s('type.sptree.spt'(X0),X65))) | ? [X59,X60,X61,X62] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X59),s('type.ast.shift',X60),s('type.num.num',X61))),s('type.sptree.spt'(X0),X62))) | ? [X58] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X58))) | ? [X57] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X57)))) & ! [X55,X56] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X55))),s('type.sptree.spt'(X0),X56))) & ! [X53,X54] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X53))),s('type.sptree.spt'(X0),X54))) & ! [X52] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X52))) & ! [X51] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X51))) & ! [X50] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X50))) & ! [X48,X49] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(X0),X49))) & ! [X47] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X47))) & ! [X46] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X46))) & ! [X45] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X45))) & ! [X44] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X44))) & ! [X43] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X43))) & ! [X42] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X42))) & ! [X41] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X41))) & ! [X40] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X40))) & ! [X38,X39] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(X0),X39))) & ! [X37] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X37))) & ! [X34,X35,X36] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(X0),X36))) & ! [X32,X33] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(X0),X33))) & ! [X31] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X31))) & ! [X30] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X30))) & ! [X29] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X29))) & ! [X28] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X28))) & ! [X27] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X27))) & ! [X25,X26] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(X0),X26))) & ! [X23,X24] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(X0),X24))) & ! [X22] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X22))) & ! [X20,X21] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(X0),X21))) & ! [X19] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X19))) & ! [X18] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X18))) & ! [X17] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X17))) & ! [X16] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X16))) & ! [X15] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X15))) & ! [X14] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X14))) & ! [X13] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X13))) & ! [X12] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X12))) & ! [X11] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X11))) & ! [X8,X9,X10] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(X0),X10))) & ! [X4,X5,X6,X7] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(X0),X7))) & ! [X3] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X3))) & ! [X2] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X2))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X55,X56] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X55))),s('type.sptree.spt'(X0),X56))) | ? [X53,X54] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X53))),s('type.sptree.spt'(X0),X54))) | ? [X52] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X52))) | ? [X51] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X51))) | ? [X50] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X50))) | ? [X48,X49] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(X0),X49))) | ? [X47] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X47))) | ? [X46] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X46))) | ? [X45] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X45))) | ? [X44] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X44))) | ? [X43] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X43))) | ? [X42] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X42))) | ? [X41] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X41))) | ? [X40] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X40))) | ? [X38,X39] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(X0),X39))) | ? [X37] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X37))) | ? [X34,X35,X36] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(X0),X36))) | ? [X32,X33] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(X0),X33))) | ? [X31] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X31))) | ? [X30] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X30))) | ? [X29] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X29))) | ? [X28] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X28))) | ? [X27] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X27))) | ? [X25,X26] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(X0),X26))) | ? [X23,X24] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(X0),X24))) | ? [X22] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X22))) | ? [X20,X21] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(X0),X21))) | ? [X19] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X19))) | ? [X18] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X18))) | ? [X17] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X17))) | ? [X16] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X16))) | ? [X15] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X15))) | ? [X14] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X14))) | ? [X13] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X13))) | ? [X12] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X12))) | ? [X11] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X11))) | ? [X8,X9,X10] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(X0),X10))) | ? [X4,X5,X6,X7] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(X0),X7))) | ? [X3] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X3))) | ? [X2] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X2)))) & ! [X110,X111] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X110))),s('type.sptree.spt'(X0),X111))) & ! [X108,X109] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X108))),s('type.sptree.spt'(X0),X109))) & ! [X107] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X107))) & ! [X106] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X106))) & ! [X105] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X105))) & ! [X103,X104] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X103))),s('type.sptree.spt'(X0),X104))) & ! [X102] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X102))) & ! [X101] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X101))) & ! [X100] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X100))) & ! [X99] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X99))) & ! [X98] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X98))) & ! [X97] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X97))) & ! [X96] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X96))) & ! [X95] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X95))) & ! [X93,X94] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X93))),s('type.sptree.spt'(X0),X94))) & ! [X92] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X92))) & ! [X89,X90,X91] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X89),s('type.num.num',X90))),s('type.sptree.spt'(X0),X91))) & ! [X87,X88] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X87))),s('type.sptree.spt'(X0),X88))) & ! [X86] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X86))) & ! [X85] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X85))) & ! [X84] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X84))) & ! [X83] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X83))) & ! [X82] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X82))) & ! [X80,X81] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X80))),s('type.sptree.spt'(X0),X81))) & ! [X78,X79] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X78))),s('type.sptree.spt'(X0),X79))) & ! [X77] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X77))) & ! [X75,X76] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X75))),s('type.sptree.spt'(X0),X76))) & ! [X74] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X74))) & ! [X73] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X73))) & ! [X72] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X72))) & ! [X71] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X71))) & ! [X70] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X70))) & ! [X69] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X69))) & ! [X68] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X68))) & ! [X67] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X67))) & ! [X66] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X66))) & ! [X63,X64,X65] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X63),s('type.ast.opw',X64))),s('type.sptree.spt'(X0),X65))) & ! [X59,X60,X61,X62] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X59),s('type.ast.shift',X60),s('type.num.num',X61))),s('type.sptree.spt'(X0),X62))) & ! [X58] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X58))) & ! [X57] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X57))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X55,X56] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X55))),s('type.sptree.spt'(X0),X56))) | ? [X53,X54] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X53))),s('type.sptree.spt'(X0),X54))) | ? [X52] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X52))) | ? [X51] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X51))) | ? [X50] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X50))) | ? [X48,X49] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(X0),X49))) | ? [X47] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X47))) | ? [X46] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X46))) | ? [X45] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X45))) | ? [X44] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X44))) | ? [X43] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X43))) | ? [X42] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X42))) | ? [X41] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X41))) | ? [X40] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X40))) | ? [X38,X39] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(X0),X39))) | ? [X37] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X37))) | ? [X34,X35,X36] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(X0),X36))) | ? [X32,X33] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(X0),X33))) | ? [X31] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X31))) | ? [X30] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X30))) | ? [X29] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X29))) | ? [X28] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X28))) | ? [X27] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X27))) | ? [X25,X26] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(X0),X26))) | ? [X23,X24] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(X0),X24))) | ? [X22] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X22))) | ? [X20,X21] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(X0),X21))) | ? [X19] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X19))) | ? [X18] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X18))) | ? [X17] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X17))) | ? [X16] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X16))) | ? [X15] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X15))) | ? [X14] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X14))) | ? [X13] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X13))) | ? [X12] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X12))) | ? [X11] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X11))) | ? [X8,X9,X10] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(X0),X10))) | ? [X4,X5,X6,X7] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(X0),X7))) | ? [X3] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X3))) | ? [X2] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X2)))) & (! [X110,X111] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X110))),s('type.sptree.spt'(X0),X111))) & ! [X108,X109] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X108))),s('type.sptree.spt'(X0),X109))) & ! [X107] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X107))) & ! [X106] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X106))) & ! [X105] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X105))) & ! [X103,X104] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X103))),s('type.sptree.spt'(X0),X104))) & ! [X102] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X102))) & ! [X101] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X101))) & ! [X100] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X100))) & ! [X99] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X99))) & ! [X98] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X98))) & ! [X97] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X97))) & ! [X96] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X96))) & ! [X95] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X95))) & ! [X93,X94] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X93))),s('type.sptree.spt'(X0),X94))) & ! [X92] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X92))) & ! [X89,X90,X91] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X89),s('type.num.num',X90))),s('type.sptree.spt'(X0),X91))) & ! [X87,X88] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X87))),s('type.sptree.spt'(X0),X88))) & ! [X86] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X86))) & ! [X85] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X85))) & ! [X84] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X84))) & ! [X83] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X83))) & ! [X82] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X82))) & ! [X80,X81] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X80))),s('type.sptree.spt'(X0),X81))) & ! [X78,X79] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X78))),s('type.sptree.spt'(X0),X79))) & ! [X77] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X77))) & ! [X75,X76] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X75))),s('type.sptree.spt'(X0),X76))) & ! [X74] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X74))) & ! [X73] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X73))) & ! [X72] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X72))) & ! [X71] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X71))) & ! [X70] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X70))) & ! [X69] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X69))) & ! [X68] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X68))) & ! [X67] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X67))) & ! [X66] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X66))) & ! [X63,X64,X65] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X63),s('type.ast.opw',X64))),s('type.sptree.spt'(X0),X65))) & ! [X59,X60,X61,X62] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X59),s('type.ast.shift',X60),s('type.num.num',X61))),s('type.sptree.spt'(X0),X62))) & ! [X58] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X58))) & ! [X57] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X57)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X55,X56] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X55))),s('type.sptree.spt'(X0),X56))) | ? [X53,X54] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X53))),s('type.sptree.spt'(X0),X54))) | ? [X52] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X52))) | ? [X51] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X51))) | ? [X50] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X50))) | ? [X48,X49] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(X0),X49))) | ? [X47] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X47))) | ? [X46] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X46))) | ? [X45] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X45))) | ? [X44] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X44))) | ? [X43] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X43))) | ? [X42] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X42))) | ? [X41] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X41))) | ? [X40] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X40))) | ? [X38,X39] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(X0),X39))) | ? [X37] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X37))) | ? [X34,X35,X36] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(X0),X36))) | ? [X32,X33] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(X0),X33))) | ? [X31] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X31))) | ? [X30] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X30))) | ? [X29] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X29))) | ? [X28] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X28))) | ? [X27] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X27))) | ? [X25,X26] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(X0),X26))) | ? [X23,X24] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(X0),X24))) | ? [X22] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X22))) | ? [X20,X21] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(X0),X21))) | ? [X19] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X19))) | ? [X18] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X18))) | ? [X17] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X17))) | ? [X16] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X16))) | ? [X15] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X15))) | ? [X14] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X14))) | ? [X13] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X13))) | ? [X12] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X12))) | ? [X11] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X11))) | ? [X8,X9,X10] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(X0),X10))) | ? [X4,X5,X6,X7] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(X0),X7))) | ? [X3] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X3))) | ? [X2] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X2)))) => (? [X110,X111] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X110))),s('type.sptree.spt'(X0),X111))) | ? [X108,X109] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X108))),s('type.sptree.spt'(X0),X109))) | ? [X107] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X107))) | ? [X106] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X106))) | ? [X105] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X105))) | ? [X103,X104] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X103))),s('type.sptree.spt'(X0),X104))) | ? [X102] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X102))) | ? [X101] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X101))) | ? [X100] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X100))) | ? [X99] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X99))) | ? [X98] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X98))) | ? [X97] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X97))) | ? [X96] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X96))) | ? [X95] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X95))) | ? [X93,X94] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X93))),s('type.sptree.spt'(X0),X94))) | ? [X92] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X92))) | ? [X89,X90,X91] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X89),s('type.num.num',X90))),s('type.sptree.spt'(X0),X91))) | ? [X87,X88] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X87))),s('type.sptree.spt'(X0),X88))) | ? [X86] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X86))) | ? [X85] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X85))) | ? [X84] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X84))) | ? [X83] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X83))) | ? [X82] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X82))) | ? [X80,X81] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X80))),s('type.sptree.spt'(X0),X81))) | ? [X78,X79] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X78))),s('type.sptree.spt'(X0),X79))) | ? [X77] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X77))) | ? [X75,X76] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X75))),s('type.sptree.spt'(X0),X76))) | ? [X74] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X74))) | ? [X73] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X73))) | ? [X72] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X72))) | ? [X71] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X71))) | ? [X70] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X70))) | ? [X69] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X69))) | ? [X68] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X68))) | ? [X67] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X67))) | ? [X66] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X66))) | ? [X63,X64,X65] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X63),s('type.ast.opw',X64))),s('type.sptree.spt'(X0),X65))) | ? [X59,X60,X61,X62] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X59),s('type.ast.shift',X60),s('type.num.num',X61))),s('type.sptree.spt'(X0),X62))) | ? [X58] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X58))) | ? [X57] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X57)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X55,X56] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X55))),s('type.sptree.spt'(X0),X56))) | ? [X53,X54] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X53))),s('type.sptree.spt'(X0),X54))) | ? [X52] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X52))) | ? [X51] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X51))) | ? [X50] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X50))) | ? [X48,X49] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(X0),X49))) | ? [X47] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X47))) | ? [X46] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X46))) | ? [X45] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X45))) | ? [X44] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X44))) | ? [X43] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X43))) | ? [X42] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X42))) | ? [X41] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X41))) | ? [X40] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X40))) | ? [X38,X39] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(X0),X39))) | ? [X37] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X37))) | ? [X34,X35,X36] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(X0),X36))) | ? [X32,X33] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(X0),X33))) | ? [X31] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X31))) | ? [X30] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X30))) | ? [X29] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X29))) | ? [X28] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X28))) | ? [X27] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X27))) | ? [X25,X26] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(X0),X26))) | ? [X23,X24] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(X0),X24))) | ? [X22] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X22))) | ? [X20,X21] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(X0),X21))) | ? [X19] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X19))) | ? [X18] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X18))) | ? [X17] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X17))) | ? [X16] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X16))) | ? [X15] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X15))) | ? [X14] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X14))) | ? [X13] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X13))) | ? [X12] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X12))) | ? [X11] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X11))) | ? [X8,X9,X10] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(X0),X10))) | ? [X4,X5,X6,X7] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(X0),X7))) | ? [X3] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X3))) | ? [X2] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X2)))) => (? [X110,X111] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X110))),s('type.sptree.spt'(X0),X111))) | ? [X108,X109] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X108))),s('type.sptree.spt'(X0),X109))) | ? [X107] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X0),X107))) | ? [X106] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X0),X106))) | ? [X105] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X0),X105))) | ? [X103,X104] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X103))),s('type.sptree.spt'(X0),X104))) | ? [X102] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X0),X102))) | ? [X101] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X0),X101))) | ? [X100] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X0),X100))) | ? [X99] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X0),X99))) | ? [X98] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X0),X98))) | ? [X97] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X0),X97))) | ? [X96] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X0),X96))) | ? [X95] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X0),X95))) | ? [X93,X94] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X93))),s('type.sptree.spt'(X0),X94))) | ? [X92] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X0),X92))) | ? [X89,X90,X91] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X89),s('type.num.num',X90))),s('type.sptree.spt'(X0),X91))) | ? [X87,X88] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X87))),s('type.sptree.spt'(X0),X88))) | ? [X86] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X0),X86))) | ? [X85] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X0),X85))) | ? [X84] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X0),X84))) | ? [X83] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X0),X83))) | ? [X82] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X0),X82))) | ? [X80,X81] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X80))),s('type.sptree.spt'(X0),X81))) | ? [X78,X79] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X78))),s('type.sptree.spt'(X0),X79))) | ? [X77] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X0),X77))) | ? [X75,X76] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X75))),s('type.sptree.spt'(X0),X76))) | ? [X74] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X0),X74))) | ? [X73] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X0),X73))) | ? [X72] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X0),X72))) | ? [X71] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X0),X71))) | ? [X70] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X0),X70))) | ? [X69] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X0),X69))) | ? [X68] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X0),X68))) | ? [X67] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X0),X67))) | ? [X66] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X0),X66))) | ? [X63,X64,X65] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X63),s('type.ast.opw',X64))),s('type.sptree.spt'(X0),X65))) | ? [X59,X60,X61,X62] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X59),s('type.ast.shift',X60),s('type.num.num',X61))),s('type.sptree.spt'(X0),X62))) | ? [X58] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X0),X58))) | ? [X57] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),X1) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X0)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X0),X57)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X8))),s('type.sptree.spt'(X6),X9))) | ? [X10,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X10))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X11,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X11))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X12,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X12))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X6),X9))) | ? [X13,X14,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X13),s('type.num.num',X14))),s('type.sptree.spt'(X6),X9))) | ? [X15,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X15))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X6),X9))) | ? [X16,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X16))),s('type.sptree.spt'(X6),X9))) | ? [X17,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X17))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X6),X9))) | ? [X18,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X18))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X19,X20,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X19),s('type.ast.opw',X20))),s('type.sptree.spt'(X6),X9))) | ? [X21,X22,X23,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X21),s('type.ast.shift',X22),s('type.num.num',X23))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X6),X9)))) => (? [X10,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X10))),s('type.sptree.spt'(X6),X9))) | ? [X8,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X8))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X11,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X11))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X12,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X12))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X6),X9))) | ? [X13,X14,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X13),s('type.num.num',X14))),s('type.sptree.spt'(X6),X9))) | ? [X15,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X15))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X6),X9))) | ? [X16,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X16))),s('type.sptree.spt'(X6),X9))) | ? [X17,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X17))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X6),X9))) | ? [X18,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X18))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X19,X20,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X19),s('type.ast.opw',X20))),s('type.sptree.spt'(X6),X9))) | ? [X21,X22,X23,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X21),s('type.ast.shift',X22),s('type.num.num',X23))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X8))),s('type.sptree.spt'(X6),X9))) | ? [X10,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X10))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X11,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X11))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X12,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X12))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X6),X9))) | ? [X13,X14,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X13),s('type.num.num',X14))),s('type.sptree.spt'(X6),X9))) | ? [X15,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X15))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X6),X9))) | ? [X16,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X16))),s('type.sptree.spt'(X6),X9))) | ? [X17,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X17))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X6),X9))) | ? [X18,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X18))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X19,X20,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X19),s('type.ast.opw',X20))),s('type.sptree.spt'(X6),X9))) | ? [X21,X22,X23,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X21),s('type.ast.shift',X22),s('type.num.num',X23))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X6),X9)))) => (? [X10,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X10))),s('type.sptree.spt'(X6),X9))) | ? [X8,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X8))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(X6),X9))) | ? [X11,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X11))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(X6),X9))) | ? [X12,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X12))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(X6),X9))) | ? [X13,X14,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X13),s('type.num.num',X14))),s('type.sptree.spt'(X6),X9))) | ? [X15,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X15))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(X6),X9))) | ? [X16,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X16))),s('type.sptree.spt'(X6),X9))) | ? [X17,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X17))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(X6),X9))) | ? [X18,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X18))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(X6),X9))) | ? [X19,X20,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X19),s('type.ast.opw',X20))),s('type.sptree.spt'(X6),X9))) | ? [X21,X22,X23,X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X21),s('type.ast.shift',X22),s('type.num.num',X23))),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(X6),X9))) | ? [X9] : s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),X7) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(X6)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(X6),X9)))))),
  file('thm.clos_knownProof.clos_knownProof_6|49|_prove_ltb','thm.clos_knownProof.clos_knownProof_6|49|_prove_ltb')).
fof(f4778,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f477,f245])).
fof(f245,plain,(
  ( ! [X29] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(sK12),X29)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4779,plain,(
  $false | $spl60),
  inference(subsumption_resolution,[],[f497,f255])).
fof(f255,plain,(
  ( ! [X16] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(sK12),X16)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f6706,plain,(
  $false | $spl52),
  inference(subsumption_resolution,[],[f489,f251])).
fof(f251,plain,(
  ( ! [X21,X20] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',X20))),s('type.sptree.spt'(sK12),X21)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f6707,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f451,f232])).
fof(f232,plain,(
  ( ! [X46] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(sK12),X46)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7276,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f469,f241])).
fof(f241,plain,(
  ( ! [X35,X36,X34] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',X34),s('type.num.num',X35))),s('type.sptree.spt'(sK12),X36)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7277,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f463,f238])).
fof(f238,plain,(
  ( ! [X40] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(sK12),X40)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7278,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f449,f231])).
fof(f231,plain,(
  ( ! [X47] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(sK12),X47)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7279,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f443,f228])).
fof(f228,plain,(
  ( ! [X51] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(sK12),X51)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7280,plain,(
  $false | $spl64),
  inference(subsumption_resolution,[],[f501,f257])).
fof(f257,plain,(
  ( ! [X14] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(sK12),X14)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7281,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f439,f225])).
fof(f225,plain,(
  ( ! [X56,X55] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',X55))),s('type.sptree.spt'(sK12),X56)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7282,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f483,f248])).
fof(f248,plain,(
  ( ! [X26,X25] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',X25))),s('type.sptree.spt'(sK12),X26)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7283,plain,(
  $false | $spl28),
  inference(subsumption_resolution,[],[f465,f239])).
fof(f239,plain,(
  ( ! [X39,X38] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',X38))),s('type.sptree.spt'(sK12),X39)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7284,plain,(
  $false | $spl56),
  inference(subsumption_resolution,[],[f493,f253])).
fof(f253,plain,(
  ( ! [X18] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(sK12),X18)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7285,plain,(
  $false | $spl78),
  inference(subsumption_resolution,[],[f515,f264])).
fof(f264,plain,(
  ( ! [X2] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(sK12),X2)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7286,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f457,f235])).
fof(f235,plain,(
  ( ! [X43] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(sK12),X43)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7287,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f461,f237])).
fof(f237,plain,(
  ( ! [X41] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(sK12),X41)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7288,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f485,f249])).
fof(f249,plain,(
  ( ! [X24,X23] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',X23))),s('type.sptree.spt'(sK12),X24)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7289,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f467,f240])).
fof(f240,plain,(
  ( ! [X37] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(sK12),X37)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7290,plain,(
  $false | $spl58),
  inference(subsumption_resolution,[],[f495,f254])).
fof(f254,plain,(
  ( ! [X17] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(sK12),X17)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7291,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f447,f230])).
fof(f230,plain,(
  ( ! [X48,X49] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',X48))),s('type.sptree.spt'(sK12),X49)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7292,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f479,f246])).
fof(f246,plain,(
  ( ! [X28] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(sK12),X28)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7293,plain,(
  $false | $spl54),
  inference(subsumption_resolution,[],[f491,f252])).
fof(f252,plain,(
  ( ! [X19] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(sK12),X19)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7294,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f441,f227])).
fof(f227,plain,(
  ( ! [X52] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(sK12),X52)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7295,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f453,f233])).
fof(f233,plain,(
  ( ! [X45] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(sK12),X45)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7296,plain,(
  $false | $spl76),
  inference(subsumption_resolution,[],[f513,f263])).
fof(f263,plain,(
  ( ! [X3] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(sK12),X3)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7297,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f473,f243])).
fof(f243,plain,(
  ( ! [X31] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(sK12),X31)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7298,plain,(
  $false | $spl38),
  inference(subsumption_resolution,[],[f475,f244])).
fof(f244,plain,(
  ( ! [X30] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(sK12),X30)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7299,plain,(
  $false | $spl68),
  inference(subsumption_resolution,[],[f505,f259])).
fof(f259,plain,(
  ( ! [X12] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(sK12),X12)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7300,plain,(
  $false | $spl70),
  inference(subsumption_resolution,[],[f507,f260])).
fof(f260,plain,(
  ( ! [X11] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(sK12),X11)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7301,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f437,f226])).
fof(f226,plain,(
  ( ! [X54,X53] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',X53))),s('type.sptree.spt'(sK12),X54)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7302,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f459,f236])).
fof(f236,plain,(
  ( ! [X42] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(sK12),X42)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7303,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f445,f229])).
fof(f229,plain,(
  ( ! [X50] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(sK12),X50)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7304,plain,(
  $false | $spl62),
  inference(subsumption_resolution,[],[f499,f256])).
fof(f256,plain,(
  ( ! [X15] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(sK12),X15)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7575,plain,(
  $false | $spl74),
  inference(subsumption_resolution,[],[f511,f262])).
fof(f262,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',X4),s('type.ast.shift',X5),s('type.num.num',X6))),s('type.sptree.spt'(sK12),X7)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7576,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f481,f247])).
fof(f247,plain,(
  ( ! [X27] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(sK12),X27)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7577,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f471,f242])).
fof(f242,plain,(
  ( ! [X33,X32] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',X32))),s('type.sptree.spt'(sK12),X33)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7578,plain,(
  $false | $spl72),
  inference(subsumption_resolution,[],[f509,f261])).
fof(f261,plain,(
  ( ! [X10,X8,X9] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',X8),s('type.ast.opw',X9))),s('type.sptree.spt'(sK12),X10)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f7579,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f487,f250])).
fof(f250,plain,(
  ( ! [X22] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(sK12),X22)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f437,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',sK14))),s('type.sptree.spt'(sK12),sK15))) | $spl0),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',sK14))),s('type.sptree.spt'(sK12),sK15))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f439,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',sK16))),s('type.sptree.spt'(sK12),sK17))) | $spl2),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',sK16))),s('type.sptree.spt'(sK12),sK17))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f441,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(sK12),sK18))) | $spl4),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(sK12),sK18))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f443,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(sK12),sK19))) | $spl6),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(sK12),sK19))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f445,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(sK12),sK20))) | $spl8),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(sK12),sK20))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f447,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',sK21))),s('type.sptree.spt'(sK12),sK22))) | $spl10),
  inference(cnf_transformation,[],[f447_D])).
fof(f447_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',sK21))),s('type.sptree.spt'(sK12),sK22))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f449,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(sK12),sK23))) | $spl12),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(sK12),sK23))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f451,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(sK12),sK24))) | $spl14),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(sK12),sK24))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f453,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(sK12),sK25))) | $spl16),
  inference(cnf_transformation,[],[f453_D])).
fof(f453_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(sK12),sK25))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f455,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(sK12),sK26))) | $spl18),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(sK12),sK26))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f457,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(sK12),sK27))) | $spl20),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(sK12),sK27))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f459,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(sK12),sK28))) | $spl22),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(sK12),sK28))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f461,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(sK12),sK29))) | $spl24),
  inference(cnf_transformation,[],[f461_D])).
fof(f461_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(sK12),sK29))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f463,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(sK12),sK30))) | $spl26),
  inference(cnf_transformation,[],[f463_D])).
fof(f463_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(sK12),sK30))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f465,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',sK31))),s('type.sptree.spt'(sK12),sK32))) | $spl28),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',sK31))),s('type.sptree.spt'(sK12),sK32))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f467,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(sK12),sK33))) | $spl30),
  inference(cnf_transformation,[],[f467_D])).
fof(f467_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(sK12),sK33))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f469,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',sK34),s('type.num.num',sK35))),s('type.sptree.spt'(sK12),sK36))) | $spl32),
  inference(cnf_transformation,[],[f469_D])).
fof(f469_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',sK34),s('type.num.num',sK35))),s('type.sptree.spt'(sK12),sK36))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f471,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',sK37))),s('type.sptree.spt'(sK12),sK38))) | $spl34),
  inference(cnf_transformation,[],[f471_D])).
fof(f471_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',sK37))),s('type.sptree.spt'(sK12),sK38))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f473,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(sK12),sK39))) | $spl36),
  inference(cnf_transformation,[],[f473_D])).
fof(f473_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(sK12),sK39))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f475,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(sK12),sK40))) | $spl38),
  inference(cnf_transformation,[],[f475_D])).
fof(f475_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(sK12),sK40))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f477,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(sK12),sK41))) | $spl40),
  inference(cnf_transformation,[],[f477_D])).
fof(f477_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(sK12),sK41))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f479,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(sK12),sK42))) | $spl42),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(sK12),sK42))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f481,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(sK12),sK43))) | $spl44),
  inference(cnf_transformation,[],[f481_D])).
fof(f481_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(sK12),sK43))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f483,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',sK44))),s('type.sptree.spt'(sK12),sK45))) | $spl46),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',sK44))),s('type.sptree.spt'(sK12),sK45))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f485,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',sK46))),s('type.sptree.spt'(sK12),sK47))) | $spl48),
  inference(cnf_transformation,[],[f485_D])).
fof(f485_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',sK46))),s('type.sptree.spt'(sK12),sK47))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f487,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(sK12),sK48))) | $spl50),
  inference(cnf_transformation,[],[f487_D])).
fof(f487_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(sK12),sK48))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f489,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',sK49))),s('type.sptree.spt'(sK12),sK50))) | $spl52),
  inference(cnf_transformation,[],[f489_D])).
fof(f489_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',sK49))),s('type.sptree.spt'(sK12),sK50))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f491,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(sK12),sK51))) | $spl54),
  inference(cnf_transformation,[],[f491_D])).
fof(f491_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(sK12),sK51))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f493,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(sK12),sK52))) | $spl56),
  inference(cnf_transformation,[],[f493_D])).
fof(f493_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(sK12),sK52))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f495,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(sK12),sK53))) | $spl58),
  inference(cnf_transformation,[],[f495_D])).
fof(f495_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(sK12),sK53))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f497,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(sK12),sK54))) | $spl60),
  inference(cnf_transformation,[],[f497_D])).
fof(f497_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(sK12),sK54))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f499,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(sK12),sK55))) | $spl62),
  inference(cnf_transformation,[],[f499_D])).
fof(f499_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(sK12),sK55))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f501,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(sK12),sK56))) | $spl64),
  inference(cnf_transformation,[],[f501_D])).
fof(f501_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(sK12),sK56))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f503,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(sK12),sK57))) | $spl66),
  inference(cnf_transformation,[],[f503_D])).
fof(f503_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(sK12),sK57))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f505,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(sK12),sK58))) | $spl68),
  inference(cnf_transformation,[],[f505_D])).
fof(f505_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(sK12),sK58))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f507,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(sK12),sK59))) | $spl70),
  inference(cnf_transformation,[],[f507_D])).
fof(f507_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(sK12),sK59))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f509,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',sK60),s('type.ast.opw',sK61))),s('type.sptree.spt'(sK12),sK62))) | $spl72),
  inference(cnf_transformation,[],[f509_D])).
fof(f509_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',sK60),s('type.ast.opw',sK61))),s('type.sptree.spt'(sK12),sK62))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f511,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',sK63),s('type.ast.shift',sK64),s('type.num.num',sK65))),s('type.sptree.spt'(sK12),sK66))) | $spl74),
  inference(cnf_transformation,[],[f511_D])).
fof(f511_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',sK63),s('type.ast.shift',sK64),s('type.num.num',sK65))),s('type.sptree.spt'(sK12),sK66))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f513,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(sK12),sK67))) | $spl76),
  inference(cnf_transformation,[],[f513_D])).
fof(f513_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(sK12),sK67))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f515,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(sK12),sK68))) | $spl78),
  inference(cnf_transformation,[],[f515_D])).
fof(f515_D,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(sK12),sK68))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f224,plain,(
  s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(sK12),sK68))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(sK12),sK67))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',sK63),s('type.ast.shift',sK64),s('type.num.num',sK65))),s('type.sptree.spt'(sK12),sK66))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',sK60),s('type.ast.opw',sK61))),s('type.sptree.spt'(sK12),sK62))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(sK12),sK59))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(sK12),sK58))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(sK12),sK57))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(sK12),sK56))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(sK12),sK55))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(sK12),sK54))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(sK12),sK53))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(sK12),sK52))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(sK12),sK51))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',sK49))),s('type.sptree.spt'(sK12),sK50))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(sK12),sK48))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',sK46))),s('type.sptree.spt'(sK12),sK47))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',sK44))),s('type.sptree.spt'(sK12),sK45))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(sK12),sK43))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(sK12),sK42))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(sK12),sK41))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(sK12),sK40))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(sK12),sK39))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',sK37))),s('type.sptree.spt'(sK12),sK38))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',sK34),s('type.num.num',sK35))),s('type.sptree.spt'(sK12),sK36))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(sK12),sK33))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',sK31))),s('type.sptree.spt'(sK12),sK32))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(sK12),sK30))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(sK12),sK29))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(sK12),sK28))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(sK12),sK27))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(sK12),sK26))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(sK12),sK25))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(sK12),sK24))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(sK12),sK23))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',sK21))),s('type.sptree.spt'(sK12),sK22))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(sK12),sK20))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(sK12),sK19))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(sK12),sK18))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',sK16))),s('type.sptree.spt'(sK12),sK17))) | s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',sK14))),s('type.sptree.spt'(sK12),sK15)))),
  inference(cnf_transformation,[],[f139])).
fof(f7581,plain,(
  $false | $spl66),
  inference(subsumption_resolution,[],[f503,f258])).
fof(f258,plain,(
  ( ! [X13] : (s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),sK13) != s('type.pair.prod'('type.closLang.op','type.sptree.spt'(sK12)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(sK12),X13)))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 494
% Passive clauses: 3355
% Generated clauses: 7351
% Final active clauses: 494
% Final passive clauses: 2601
% Input formulas: 37
% Initial clauses: 208
% 
% Duplicate literals: 185
% Trivial inequalities: 29
% Fw subsumption resolutions: 461
% 
% Simple tautologies: 161
% Equational tautologies: 42
% Forward subsumptions: 3075
% 
% Binary resolution: 5080
% Factoring: 934
% Forward superposition: 248
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 123
% Split components: 285
% SAT solver clauses: 313
% SAT solver unit clauses: 48
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 1
% 
% Sat splits: 123
% Sat splitting refutations: 40
% 
% TWLsolver clauses: 312
% TWLsolver calls for satisfiability: 260
% 
% Memory used [KB]: 3582
% Time elapsed: 0.278 s
% ------------------------------
% ------------------------------
% Success in time 0.29 s
