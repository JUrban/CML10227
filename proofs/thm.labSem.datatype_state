Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.labSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labSem
% SZS output start Proof for thm.labSem
fof(f522,plain,(
  $false),
  inference(subsumption_resolution,[],[f521,f21])).
fof(f21,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.labSem.datatype_state','thm.bool.TRUTH')).
fof(f521,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f20,f25])).
fof(f25,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : ! [X23] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X7,X23)))),
  file('thm.labSem.datatype_state','thm.bool.DATATYPE_TAG_THM')).
fof(f20,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),sK4),s('type.min.ind',sK2))),s(fun('type.num.num','type.wordSem.word_loc'(sK1)),sK3))),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK8))),s(fun('type.fcp.cart'(bool,sK1),bool),sK7))),s('type.num.num',sK6))),s(bool,sK16))),s('type.ffi.ffi_state'(sK0),sK12))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),sK11))),s('type.list.list'('type.labLang.sec'(sK1)),sK14))),s('type.num.num',sK15))),s(bool,sK13))),s('type.num.num',sK5))),s('type.num.num',sK10))),s('type.num.num',sK9))))))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(sK0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),fun('type.list.list'('type.labLang.sec'(sK1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),sK4),s('type.min.ind',sK2))),s(fun('type.num.num','type.wordSem.word_loc'(sK1)),sK3))),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK8))),s(fun('type.fcp.cart'(bool,sK1),bool),sK7))),s('type.num.num',sK6))),s(bool,sK16))),s('type.ffi.ffi_state'(sK0),sK12))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),sK11))),s('type.list.list'('type.labLang.sec'(sK1)),sK14))),s('type.num.num',sK15))),s(bool,sK13))),s('type.num.num',sK5))),s('type.num.num',sK10))),s('type.num.num',sK9))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16])],[f16])).
fof(f16,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),X4),s('type.min.ind',X2))),s(fun('type.num.num','type.wordSem.word_loc'(X1)),X3))),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.num.num',X6))),s(bool,X16))),s('type.ffi.ffi_state'(X0),X12))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X11))),s('type.list.list'('type.labLang.sec'(X1)),X14))),s('type.num.num',X15))),s(bool,X13))),s('type.num.num',X5))),s('type.num.num',X10))),s('type.num.num',X9))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),X4),s('type.min.ind',X2))),s(fun('type.num.num','type.wordSem.word_loc'(X1)),X3))),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.num.num',X6))),s(bool,X16))),s('type.ffi.ffi_state'(X0),X12))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X11))),s('type.list.list'('type.labLang.sec'(X1)),X14))),s('type.num.num',X15))),s(bool,X13))),s('type.num.num',X5))),s('type.num.num',X10))),s('type.num.num',X9))))))),
  inference(flattening,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X0),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),fun('type.list.list'('type.labLang.sec'(X1)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),X4),s('type.min.ind',X2))),s(fun('type.num.num','type.wordSem.word_loc'(X1)),X3))),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s(fun('type.fcp.cart'(bool,X1),bool),X7))),s('type.num.num',X6))),s(bool,X16))),s('type.ffi.ffi_state'(X0),X12))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X11))),s('type.list.list'('type.labLang.sec'(X1)),X14))),s('type.num.num',X15))),s(bool,X13))),s('type.num.num',X5))),s('type.num.num',X10))),s('type.num.num',X9))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),X10),s('type.min.ind',X8))),s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9))),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s(fun('type.fcp.cart'(bool,X7),bool),X13))),s('type.num.num',X12))),s(bool,X22))),s('type.ffi.ffi_state'(X6),X18))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X17))),s('type.list.list'('type.labLang.sec'(X7)),X20))),s('type.num.num',X21))),s(bool,X19))),s('type.num.num',X11))),s('type.num.num',X16))),s('type.num.num',X15))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))),happ(s(fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))),happ(s(fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))),happ(s(fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))),happ(s(fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))),happ(s(fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))),happ(s(fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))),happ(s(fun(fun('type.num.num','type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool))))))))))))),happ(s(fun('type.min.ind',fun(fun('type.num.num','type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.num.num',fun(bool,fun('type.ffi.ffi_state'(X6),fun(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),fun('type.list.list'('type.labLang.sec'(X7)),fun('type.num.num',fun(bool,fun('type.num.num',fun('type.num.num',fun('type.num.num',bool)))))))))))))),X10),s('type.min.ind',X8))),s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9))),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s(fun('type.fcp.cart'(bool,X7),bool),X13))),s('type.num.num',X12))),s(bool,X22))),s('type.ffi.ffi_state'(X6),X18))),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X17))),s('type.list.list'('type.labLang.sec'(X7)),X20))),s('type.num.num',X21))),s(bool,X19))),s('type.num.num',X11))),s('type.num.num',X16))),s('type.num.num',X15))))))),
  file('thm.labSem.datatype_state','thm.labSem.datatype_state')).
% SZS output end Proof for thm.labSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 57
% Generated clauses: 470
% Final active clauses: 12
% Final passive clauses: 36
% Input formulas: 7
% Initial clauses: 7
% 
% Duplicate literals: 84
% Trivial inequalities: 7
% Fw subsumption resolutions: 6
% Fw demodulations: 16
% 
% Simple tautologies: 25
% Equational tautologies: 16
% Forward subsumptions: 244
% 
% Binary resolution: 4
% Forward superposition: 123
% Backward superposition: 126
% Self superposition: 49
% Equality factoring: 40
% Equality resolution: 1
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 18
% SAT solver unit clauses: 4
% SAT solver binary clauses: 12
% 
% Sat splits: 12
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 18
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 767
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 0.048 s
