Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_removeProof
% SZS output start Proof for thm.clos_removeProof
fof(f1091,plain,(
  $false),
  inference(subsumption_resolution,[],[f1090,f82])).
fof(f82,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_locs_const_|48|','thm.clos_removeProof.code_locs_const_|48|')).
fof(f1090,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(forward_demodulation,[],[f1088,f85])).
fof(f85,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  file('thm.clos_removeProof.code_locs_const_|48|','thm.closProps.code_locs_def|split|0')).
fof(f1088,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(superposition,[],[f99,f86])).
fof(f86,plain,(
  s('type.closLang.exp','const.clos_remove.const_|48|_0') = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f22])).
fof(f22,axiom,(
  s('type.closLang.exp','const.clos_remove.const_|48|_0') = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  file('thm.clos_removeProof.code_locs_const_|48|','thm.clos_remove.const_|48|_def')).
fof(f99,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.closLang.exp'),X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.closLang.exp'),X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X9,X14] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X9))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_locs_const_|48|','thm.closProps.code_locs_def|split|7')).
% SZS output end Proof for thm.clos_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 110
% Generated clauses: 957
% Final active clauses: 24
% Final passive clauses: 73
% Input formulas: 34
% Initial clauses: 35
% 
% Duplicate literals: 154
% Trivial inequalities: 25
% Fw subsumption resolutions: 32
% Fw demodulations: 40
% 
% Simple tautologies: 47
% Equational tautologies: 19
% Forward subsumptions: 492
% 
% Binary resolution: 4
% Forward superposition: 321
% Backward superposition: 229
% Self superposition: 59
% Equality factoring: 44
% Equality resolution: 2
% 
% Split clauses: 24
% Split components: 48
% SAT solver clauses: 44
% SAT solver unit clauses: 7
% SAT solver binary clauses: 24
% 
% Sat splits: 24
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 44
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1023
% Time elapsed: 0.056 s
% ------------------------------
% ------------------------------
% Success in time 0.061 s
