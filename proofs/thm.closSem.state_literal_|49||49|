Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closSem
% (65465)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 84
% Passive clauses: 642
% Generated clauses: 10421
% Final active clauses: 82
% Final passive clauses: 449
% Input formulas: 33
% Initial clauses: 43
% 
% Duplicate literals: 476
% Trivial inequalities: 129
% Fw subsumption resolutions: 1096
% Fw demodulations: 901
% 
% Simple tautologies: 134
% Equational tautologies: 25
% Forward subsumptions: 6759
% 
% Binary resolution: 4
% Forward superposition: 4206
% Backward superposition: 3264
% Self superposition: 183
% Equality factoring: 51
% Equality resolution: 16
% 
% Split clauses: 129
% Split components: 262
% SAT solver clauses: 365
% SAT solver unit clauses: 38
% SAT solver binary clauses: 110
% 
% Sat splits: 129
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 365
% TWLsolver calls for satisfiability: 83
% 
% Memory used [KB]: 7675
% Time elapsed: 0.609 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closSem
% (65500)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 87
% Passive clauses: 287
% Generated clauses: 13761
% Final active clauses: 84
% Final passive clauses: 196
% Input formulas: 33
% Initial clauses: 43
% 
% Duplicate literals: 769
% Trivial inequalities: 175
% Fw subsumption resolutions: 884
% Fw demodulations: 786
% Bw demodulations: 2
% Condensations: 2261
% 
% Simple tautologies: 169
% Equational tautologies: 28
% Forward subsumptions: 7171
% 
% Binary resolution: 4
% Forward superposition: 4795
% Backward superposition: 3443
% Self superposition: 209
% Equality factoring: 70
% Equality resolution: 21
% 
% Split clauses: 38
% Split components: 80
% SAT solver clauses: 527
% SAT solver unit clauses: 67
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 38
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 526
% TWLsolver calls for satisfiability: 261
% 
% Memory used [KB]: 10618
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closSem
% SZS output start Proof for thm.closSem
fof(f29538,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f109,f158,f156,f154,f152,f150,f148,f108,f157,f107,f155,f106,f153,f105,f151,f104,f149,f147,f165,f191,f634,f635,f782,f636,f781,f2274,f9871,f9890,f9891,f9893,f9898,f9765,f9900,f9872,f23200,f23239,f23293,f23924,f23973,f24037,f24668,f24729,f24815,f26717,f26686,f26826,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26906,f26907,f26580,f26769,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f26505,f26718,f27186,f27188,f27189,f27192,f26487,f26867,f26481,f27198,f27200,f27201,f27193,f26478,f26473,f27203,f27204,f27205,f27206,f27202,f26469,f26873,f27207,f26467,f27209,f27208,f26466,f26465,f27211,f27212,f27210,f27281,f26400,f26399,f27285,f27286,f27284,f27287,f26393,f27288,f26019,f27282,f27290,f27341,f27342,f26882,f26364,f27343,f26869,f27590,f27595,f27596,f27639,f27640,f27644,f26291,f27651,f26290,f27199,f26196,f26195,f27656,f27654,f27657,f26192,f27658,f27660,f26172,f27655,f27667,f27669,f27673,f27674,f27319,f27676,f27678,f27680,f27682,f27683,f27309,f25842,f27684,f27685,f27265,f27661,f27704,f27187,f25538,f25252,f24959,f27707,f27686,f24877,f27753,f27755,f27756,f27758,f27762,f27766,f27768,f27772,f27774,f27775,f27778,f27780,f27781,f27776,f27784,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f27797,f24415,f27798,f24412,f27795,f27800,f27802,f24267,f27803,f24264,f27801,f24140,f24139,f24137,f27805,f24134,f27804,f27806,f27808,f23712,f23710,f27809,f23707,f27807,f23701,f23697,f23696,f23683,f27810,f23582,f23581,f23578,f23576,f27811,f23575,f23573,f23572,f27708,f23321,f23320,f23318,f27817,f23315,f27816,f27818,f27820,f27821,f27823,f27822,f22896,f27824,f27825,f22926,f22928,f27826,f27828,f27829,f27830,f27831,f27832,f27833,f27759,f23032,f23029,f23022,f27769,f23018,f27834,f27835,f27836,f23008,f27838,f23004,f27839,f27842,f22990,f27845,f27848,f27850,f27852,f27853,f27854,f27855,f27856,f27858,f27860,f27861,f27864,f27865,f27866,f27867,f27869,f27871,f27874,f27877,f27881,f27885,f27887,f27889,f27891,f27893,f27895,f27899,f27901,f22619,f22614,f22609,f22605,f27902,f27904,f27906,f27908,f27910,f27913,f27914,f27915,f27916,f22158,f27837,f27917,f27920,f27921,f192,f27923,f22196,f27925,f27927,f21958,f21957,f21952,f27928,f193,f27954,f27957,f27960,f27962,f17691,f27969,f27970,f27971,f27972,f16275,f16273,f16272,f16270,f27728,f16269,f16079,f27974,f16077,f27975,f16076,f27976,f16073,f27977,f783,f28010,f28013,f28016,f28018,f17282,f28025,f28026,f28028,f28032,f28033,f28034,f28040,f28052,f28054,f28058,f28060,f28062,f28064,f28066,f28068,f28072,f28074,f28076,f27788,f28078,f28081,f28084,f28089,f28092,f9899,f28095,f28098,f28099,f28100,f12250,f28102,f28103,f28104,f12322,f28105,f28106,f28107,f28108,f28109,f12309,f28110,f12303,f9901,f28113,f27763,f12291,f12290,f194,f9555,f9379,f27813,f28125,f28150,f28176,f28191,f2276,f2275,f28498,f28506,f28507,f28529,f28531,f28532,f28539,f28572,f28573,f28594,f28701,f28768,f28864,f29310,f29383,f29489,f29534,f29535,f29536,f29537])).
fof(f29537,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f150,f29343])).
fof(f29343,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK2) = s('type.list.list'('type.option.option'('type.closSem.v')),sK7) | $spl0),
  inference(forward_demodulation,[],[f29342,f21400])).
fof(f21400,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.option.option'('type.closSem.v')),X3) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X4),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X3))),s('type.closSem.state'(X4),X5)))))) )),
  inference(superposition,[],[f130,f159])).
fof(f159,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f140,f139])).
fof(f139,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X22,X23] : ! [X24,X25] : s(X23,X24) = s(X23,'const.combin.K_2'(s(X23,X24),s(X22,X25)))),
  file('thm.closSem.state_literal_|49||49|','thm.combin.K_THM')).
fof(f140,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X23,X22] : ! [X26,X27] : s(X23,'const.combin.K_2'(s(X23,X26),s(X22,X27))) = s(X23,happ(s(fun(X22,X23),'const.combin.K_1'(s(X23,X26))),s(X22,X27)))),
  file('thm.closSem.state_literal_|49||49|','ARITY_1_2_const.combin.K')).
fof(f130,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X18,X19] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X19),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_83_prove_ltb')).
fof(f29342,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK7) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29341,f21400])).
fof(f29341,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29340,f130])).
fof(f29340,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29339,f130])).
fof(f29339,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29338,f21395])).
fof(f21395,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X3),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X3),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X1),s('type.closSem.state'(X0),X2)))))))) )),
  inference(superposition,[],[f130,f127])).
fof(f127,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X18,X19] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X18))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_66_prove_ltb')).
fof(f29338,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29337,f21395])).
fof(f29337,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29336,f130])).
fof(f29336,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29335,f130])).
fof(f29335,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29334,f21396])).
fof(f21396,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X7),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X4),X6))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X4),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X7),s('type.closSem.state'(X4),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X5),s('type.closSem.state'(X4),X6)))))))) )),
  inference(superposition,[],[f130,f115])).
fof(f115,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X18,X19] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X18))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_65_prove_ltb')).
fof(f29334,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29333,f21396])).
fof(f29333,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29332,f130])).
fof(f29332,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29331,f130])).
fof(f29331,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29330,f21397])).
fof(f21397,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X12),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X9),X11))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X8),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X12),s('type.closSem.state'(X8),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X9),'type.ffi.ffi_state'(X8)),X10),s('type.closSem.state'(X9),X11)))))))) )),
  inference(superposition,[],[f130,f142])).
fof(f142,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X6] : ! [X18,X19] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X18))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_64_prove_ltb')).
fof(f29330,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29329,f21397])).
fof(f29329,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29328,f130])).
fof(f29328,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29327,f130])).
fof(f29327,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29326,f21398])).
fof(f21398,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X16),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X13),X15))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X13),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X16),s('type.closSem.state'(X13),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X14),s('type.closSem.state'(X13),X15)))))))) )),
  inference(superposition,[],[f130,f123])).
fof(f123,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X18,X19] : s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X18))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_63_prove_ltb')).
fof(f29326,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29232,f21398])).
fof(f29232,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f147,f133])).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : ((s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) & s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2))))) & (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) | s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) != s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2))) | s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),X2)))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ((s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) & s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2))))) & ((s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) | s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) != s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2)))) | s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),X2)))),
  inference(nnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2] : (s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),X2) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) & s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2)))))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0] : ! [X1,X2] : (s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),X2) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) & s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : ! [X20,X21] : (s('type.closSem.state'(X6),X20) = s('type.closSem.state'(X6),X21) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X6),X21))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X20))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X21))) & s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X21))) & s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X20))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X21))) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X20))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X21)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.state_component_equality')).
fof(f29536,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f556,f557,f634,f635,f636,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1735,f1978,f1757,f2006,f2256,f2047,f2451,f2464,f2465,f3461,f3343,f3344,f3370,f3371,f3598,f3667,f3844,f4128,f4162,f4155,f4629,f5499,f5500,f5864,f6546,f6547,f6699,f6700,f6704,f6705,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7220,f7225,f7227,f7228,f7615,f7273,f7283,f7291,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9157,f9230,f9075,f9837,f9835,f9891,f9893,f9898,f9900,f10334,f10335,f11991,f11809,f11810,f11856,f11857,f12942,f12943,f12944,f15490,f15491,f15492,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f26698,f26717,f26686,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f26505,f27186,f27188,f27189,f27192,f26487,f26481,f27200,f27201,f26478,f26473,f27203,f27204,f27206,f26469,f26467,f27209,f26466,f26465,f27211,f26399,f27285,f27286,f26393,f26019,f27341,f27342,f26364,f27343,f26291,f26290,f27652,f26282,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26178,f26172,f26171,f27669,f26165,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f25781,f25776,f25768,f27704,f25252,f26796,f24959,f24877,f24876,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f27948,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f10405,f10314,f9555,f9379,f28150,f7595,f28176,f28191,f28208,f2193,f25989,f26363,f7089,f6703,f21640,f21261,f21026,f18663,f18010,f3457,f1981,f16176,f7411,f7217,f7086,f6718,f6717,f6716,f6715,f6712,f6711,f28209,f28198,f28133,f27949,f27754,f27720,f27703,f27701,f27698,f27697,f27670,f27666,f27653,f27272,f26602,f26482,f26477,f26472,f26471,f26468,f26464,f26398,f26366,f26295,f26294,f26274,f26271,f26270,f26268,f26039,f26036,f26024,f26020,f26017,f26016,f26007,f26002,f25999,f25996,f25995,f25991,f25990,f25920,f25919,f25917,f25916,f25914,f25908,f25905,f25661,f25658,f25166,f25165,f25164,f25163,f24982,f24981,f22996,f22781,f22780,f12564,f12563,f10543,f10542,f10541,f9770,f7287,f7284,f7275,f7269,f7268,f7267,f6728,f6727,f6725,f6724,f6710,f6698,f5939,f5938,f5015,f5014,f3699,f3698,f3624,f3539,f3538,f2686,f2685,f1101,f1100,f1099,f653,f565,f349,f28144,f25994,f21641,f21260,f21027,f12280,f12278,f12148,f12147,f11995,f11990,f11989,f9164,f9162,f9082,f8880,f7272,f4292,f4291,f16179,f147,f29324,f29325,f29343,f29344,f29360,f29361,f29371,f29372,f29491,f29488,f29382,f29309])).
fof(f29309,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | $spl0),
  inference(forward_demodulation,[],[f29308,f159])).
fof(f29308,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29307,f159])).
fof(f29307,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29306,f119])).
fof(f29306,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29305,f119])).
fof(f29305,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29304,f141])).
fof(f29304,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29303,f141])).
fof(f29303,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29302,f118])).
fof(f29302,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29301,f118])).
fof(f29301,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29300,f114])).
fof(f29300,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29234,f114])).
fof(f29234,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f147,f136])).
fof(f29382,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | $spl0),
  inference(forward_demodulation,[],[f29381,f159])).
fof(f29381,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29380,f159])).
fof(f29380,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29379,f119])).
fof(f29379,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29378,f119])).
fof(f29378,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29377,f141])).
fof(f29377,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29376,f141])).
fof(f29376,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29375,f118])).
fof(f29375,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29374,f118])).
fof(f29374,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29373,f114])).
fof(f29373,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29229,f114])).
fof(f29229,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f147,f136])).
fof(f29488,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | $spl0),
  inference(forward_demodulation,[],[f29487,f159])).
fof(f29487,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29486,f159])).
fof(f29486,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29485,f119])).
fof(f29485,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29484,f119])).
fof(f29484,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29483,f141])).
fof(f29483,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29482,f141])).
fof(f29482,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29481,f118])).
fof(f29481,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29480,f118])).
fof(f29480,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29239,f114])).
fof(f29239,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(superposition,[],[f114,f147])).
fof(f29491,plain,(
  ( ! [X20] : (s('type.list.list'('type.option.option'('type.closSem.v')),sK2) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),X20))) | s('type.closSem.state'(sK1),X20) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f29490,f29343])).
fof(f29490,plain,(
  ( ! [X20] : (s('type.list.list'('type.option.option'('type.closSem.v')),sK7) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),X20))) | s('type.closSem.state'(sK1),X20) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f29260,f21400])).
fof(f29260,plain,(
  ( ! [X20] : (s('type.closSem.state'(sK1),X20) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),X20))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))))) ) | $spl0),
  inference(superposition,[],[f133,f147])).
fof(f29372,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(backward_demodulation,[],[f29371,f29361])).
fof(f29371,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) | $spl0),
  inference(forward_demodulation,[],[f29370,f22240])).
fof(f29370,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29369,f22240])).
fof(f29369,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29368,f121])).
fof(f29368,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29367,f121])).
fof(f29367,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29366,f144])).
fof(f29366,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29365,f144])).
fof(f29365,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29364,f128])).
fof(f29364,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29363,f128])).
fof(f29363,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29362,f126])).
fof(f29362,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29230,f126])).
fof(f29230,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f147,f137])).
fof(f29361,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(backward_demodulation,[],[f29360,f29344])).
fof(f29360,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) | $spl0),
  inference(forward_demodulation,[],[f29359,f21830])).
fof(f29359,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29358,f21830])).
fof(f29358,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29357,f131])).
fof(f29357,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29356,f131])).
fof(f29356,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29355,f21825])).
fof(f29355,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29354,f21825])).
fof(f29354,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29353,f131])).
fof(f29353,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29352,f131])).
fof(f29352,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29351,f21826])).
fof(f29351,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29350,f21826])).
fof(f29350,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29349,f131])).
fof(f29349,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29348,f131])).
fof(f29348,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29347,f21827])).
fof(f29347,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29346,f21827])).
fof(f29346,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29345,f124])).
fof(f29345,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29231,f124])).
fof(f29231,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f147,f134])).
fof(f29344,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(backward_demodulation,[],[f29343,f29325])).
fof(f29325,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(backward_demodulation,[],[f29324,f147])).
fof(f29324,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK9) | $spl0),
  inference(forward_demodulation,[],[f29323,f20790])).
fof(f29323,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29322,f20790])).
fof(f29322,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29321,f145])).
fof(f29321,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29320,f145])).
fof(f29320,plain,(
  s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f29319,f20785])).
fof(f29319,plain,(
  s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29318,f20785])).
fof(f29318,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29317,f145])).
fof(f29317,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29316,f145])).
fof(f29316,plain,(
  s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f29315,f20786])).
fof(f29315,plain,(
  s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.ffi.ffi_state'(sK0),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29314,f20786])).
fof(f29314,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f29313,f122])).
fof(f29313,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29312,f122])).
fof(f29312,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29311,f116])).
fof(f29311,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(forward_demodulation,[],[f29233,f116])).
fof(f29233,plain,(
  s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.ffi.ffi_state'(sK1),'const.closSem.state_ffi_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f147,f135])).
fof(f16179,plain,(
  ( ! [X1725,X1727,X1720,X1722,X1724,X1726,X1721,X1723] : (s(X1722,f(s(bool,X1723))) != s(X1722,g(s(bool,X1723))) | s(fun(bool,X1722),X1720) = s(fun(bool,X1722),X1721) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK12(X1720,X1721,X1722,bool)),s(X1724,X1725))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1723),s(X1726,X1727)))) )),
  inference(superposition,[],[f146,f1329])).
fof(f4291,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X81),s(bool,X80))) | s(bool,'F_0') = s(bool,happ(s(fun(X82,bool),'const.combin.K_1'(s(bool,X81))),s(X82,X83))) | s(bool,X80) = s(bool,X84) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X84),s(X85,X86)))) )),
  inference(superposition,[],[f233,f279])).
fof(f4292,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s(bool,X87) = s(bool,'const.combin.K_2'(s(bool,X88),s(bool,X87))) | s(bool,'F_0') = s(bool,happ(s(fun(X89,bool),'const.combin.K_1'(s(bool,X88))),s(X89,X90))) | s(bool,X87) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f233,f180])).
fof(f7272,plain,(
  ( ! [X356,X358,X354,X357,X359,X353,X355] : (s(bool,X353) = s(bool,'const.combin.K_2'(s(bool,X354),s(bool,X353))) | s(bool,'F_0') = s(bool,happ(s(fun(X355,bool),'const.combin.K_1'(s(bool,X354))),s(X355,X356))) | s(bool,X353) = s(bool,X357) | s(bool,'T_0') = s(bool,happ(s(fun(X358,bool),'const.combin.K_1'(s(bool,X357))),s(X358,X359)))) )),
  inference(superposition,[],[f233,f280])).
fof(f8880,plain,(
  ( ! [X883,X881,X882,X880,X884,X879] : (s(bool,f(s(X879,sK12(X880,X881,bool,X879)))) != s(bool,happ(s(fun(X882,bool),'const.combin.K_1'(s(bool,X883))),s(X882,X884))) | s(fun(X879,bool),X880) = s(fun(X879,bool),X881) | s(bool,'T_0') = s(bool,X883) | s(bool,'T_0') = s(bool,g(s(X879,sK12(X880,X881,bool,X879))))) )),
  inference(superposition,[],[f146,f303])).
fof(f9082,plain,(
  ( ! [X175,X173,X171,X169,X174,X172,X170] : (s(bool,'const.combin.K_2'(s(bool,X173),s(X174,X175))) != s(bool,happ(s(fun(X170,bool),'const.combin.K_1'(s(bool,X171))),s(X170,X172))) | s(bool,X169) = s(bool,X173) | s(bool,'T_0') = s(bool,X169) | s(bool,'T_0') = s(bool,X171)) )),
  inference(duplicate_literal_removal,[],[f8788])).
fof(f8788,plain,(
  ( ! [X175,X173,X171,X169,X174,X172,X170] : (s(bool,'const.combin.K_2'(s(bool,X173),s(X174,X175))) != s(bool,happ(s(fun(X170,bool),'const.combin.K_1'(s(bool,X171))),s(X170,X172))) | s(bool,X169) = s(bool,X173) | s(bool,'T_0') = s(bool,X169) | s(bool,'T_0') = s(bool,X171) | s(bool,'T_0') = s(bool,X169)) )),
  inference(superposition,[],[f1163,f303])).
fof(f9162,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X0))),s(X4,X5))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(condensation,[],[f9161])).
fof(f9161,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,'T_0') = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75)) )),
  inference(duplicate_literal_removal,[],[f8611])).
fof(f8611,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,'T_0') = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f303,f303])).
fof(f9164,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X0))),s(X4,X5))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f9163])).
fof(f9163,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) = s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,'T_0') = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67)) )),
  inference(duplicate_literal_removal,[],[f8610])).
fof(f8610,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) = s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,'T_0') = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f303,f302])).
fof(f11989,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) != s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,X73) = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75)) )),
  inference(duplicate_literal_removal,[],[f11781])).
fof(f11781,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) != s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,X73) = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f7500,f303])).
fof(f11990,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) != s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,X66) = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67)) )),
  inference(duplicate_literal_removal,[],[f11780])).
fof(f11780,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) != s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,X66) = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f7500,f302])).
fof(f11995,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f11769])).
fof(f11769,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f7500,f112])).
fof(f12147,plain,(
  ( ! [X308,X304,X306,X309,X305,X307] : (s(bool,'F_0') != s(bool,happ(s(fun(X307,bool),'const.combin.K_1'(s(bool,X304))),s(X307,X308))) | s(bool,X309) = s(bool,'const.combin.K_2'(s(bool,X304),s(X305,X306))) | s(bool,'T_0') = s(bool,X309)) )),
  inference(superposition,[],[f11995,f139])).
fof(f12148,plain,(
  ( ! [X313,X315,X310,X312,X314,X311] : (s(bool,'F_0') != s(bool,happ(s(fun(X313,bool),'const.combin.K_1'(s(bool,X311))),s(X313,X314))) | s(bool,X315) = s(bool,happ(s(fun(X310,bool),'const.combin.K_1'(s(bool,X311))),s(X310,X312))) | s(bool,'T_0') = s(bool,X315)) )),
  inference(superposition,[],[f11995,f159])).
fof(f12278,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X4))),s(X3,X5))) | s(bool,X0) = s(bool,X4)) )),
  inference(condensation,[],[f12277])).
fof(f12277,plain,(
  ( ! [X127,X125,X123,X128,X126,X124,X129] : (s(bool,'F_0') != s(bool,happ(s(fun(X124,bool),'const.combin.K_1'(s(bool,X123))),s(X124,X125))) | s(bool,'T_0') = s(bool,X126) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X127),s(X128,X129)))) )),
  inference(duplicate_literal_removal,[],[f12121])).
fof(f12121,plain,(
  ( ! [X127,X125,X123,X128,X126,X124,X129] : (s(bool,'F_0') != s(bool,happ(s(fun(X124,bool),'const.combin.K_1'(s(bool,X123))),s(X124,X125))) | s(bool,'T_0') = s(bool,X126) | s(bool,'T_0') = s(bool,X126) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X127),s(X128,X129)))) )),
  inference(superposition,[],[f11995,f279])).
fof(f12280,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X4))),s(X3,X5))) | s(bool,X1) = s(bool,X4)) )),
  inference(condensation,[],[f12279])).
fof(f12279,plain,(
  ( ! [X121,X118,X116,X122,X120,X119,X117] : (s(bool,'F_0') != s(bool,happ(s(fun(X117,bool),'const.combin.K_1'(s(bool,X116))),s(X117,X118))) | s(bool,'T_0') = s(bool,X119) | s(bool,X116) = s(bool,X120) | s(bool,'T_0') = s(bool,happ(s(fun(X121,bool),'const.combin.K_1'(s(bool,X120))),s(X121,X122)))) )),
  inference(duplicate_literal_removal,[],[f12120])).
fof(f12120,plain,(
  ( ! [X121,X118,X116,X122,X120,X119,X117] : (s(bool,'F_0') != s(bool,happ(s(fun(X117,bool),'const.combin.K_1'(s(bool,X116))),s(X117,X118))) | s(bool,'T_0') = s(bool,X119) | s(bool,'T_0') = s(bool,X119) | s(bool,X116) = s(bool,X120) | s(bool,'T_0') = s(bool,happ(s(fun(X121,bool),'const.combin.K_1'(s(bool,X120))),s(X121,X122)))) )),
  inference(superposition,[],[f11995,f280])).
fof(f21027,plain,(
  ( ! [X540,X536,X538,X534,X541,X537,X539,X535] : (s(bool,X535) != s(bool,'const.combin.K_2'(s(bool,X537),s(X538,X539))) | s(bool,'const.combin.K_2'(s(bool,X537),s(X540,X541))) = s(bool,happ(s(fun(X534,bool),'const.combin.K_1'(s(bool,X535))),s(X534,X536))) | s(bool,'T_0') = s(bool,happ(s(fun(X534,bool),'const.combin.K_1'(s(bool,X535))),s(X534,X536)))) )),
  inference(superposition,[],[f3370,f159])).
fof(f21260,plain,(
  ( ! [X103,X101,X99,X97,X105,X102,X100,X98,X104] : (s(bool,'const.combin.K_2'(s(bool,X101),s(X102,X103))) != s(bool,happ(s(fun(X98,bool),'const.combin.K_1'(s(bool,X99))),s(X98,X100))) | s(bool,X97) = s(bool,'const.combin.K_2'(s(bool,X101),s(X104,X105))) | s(bool,'T_0') = s(bool,X97) | s(bool,'T_0') = s(bool,X99)) )),
  inference(duplicate_literal_removal,[],[f20984])).
fof(f20984,plain,(
  ( ! [X103,X101,X99,X97,X105,X102,X100,X98,X104] : (s(bool,'const.combin.K_2'(s(bool,X101),s(X102,X103))) != s(bool,happ(s(fun(X98,bool),'const.combin.K_1'(s(bool,X99))),s(X98,X100))) | s(bool,X97) = s(bool,'const.combin.K_2'(s(bool,X101),s(X104,X105))) | s(bool,'T_0') = s(bool,X97) | s(bool,'T_0') = s(bool,X99) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f3370,f303])).
fof(f21641,plain,(
  ( ! [X428,X424,X426,X429,X425,X427] : (s(bool,X425) != s(bool,X427) | s(bool,'const.combin.K_2'(s(bool,X427),s(X428,X429))) = s(bool,happ(s(fun(X424,bool),'const.combin.K_1'(s(bool,X425))),s(X424,X426))) | s(bool,'T_0') = s(bool,happ(s(fun(X424,bool),'const.combin.K_1'(s(bool,X425))),s(X424,X426)))) )),
  inference(superposition,[],[f21223,f159])).
fof(f25994,plain,(
  ( ! [X580,X576,X578,X581,X577,X579] : (s(bool,X576) = s(bool,'const.combin.K_2'(s(bool,X577),s(bool,X576))) | s(bool,'F_0') = s(bool,happ(s(fun(X578,bool),'const.combin.K_1'(s(bool,X577))),s(X578,X579))) | s(bool,X580) = s(bool,'const.combin.K_2'(s(bool,X581),s(bool,X580))) | s(bool,X576) = s(bool,X580) | s(bool,'F_0') = s(bool,X581)) )),
  inference(superposition,[],[f233,f349])).
fof(f28144,plain,(
  ( ! [X4,X0,X3] : (s(bool,'F_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X0))),s(X3,X4))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f28143,f139])).
fof(f28143,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2))) = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X0))),s(X3,X4)))) )),
  inference(condensation,[],[f28142])).
fof(f28142,plain,(
  ( ! [X90,X88,X87,X91,X89,X86] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X87,X88))) = s(bool,happ(s(fun(X89,bool),'const.combin.K_1'(s(bool,X90))),s(X89,X91))) | s(bool,'T_0') = s(bool,X90) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f8613,f9230])).
fof(f8613,plain,(
  ( ! [X92,X90,X88,X87,X93,X91,X89,X86] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X87,X88))) = s(bool,happ(s(fun(X89,bool),'const.combin.K_1'(s(bool,X90))),s(X89,X91))) | s(bool,'T_0') = s(bool,X90) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,happ(s(fun(X92,bool),'const.combin.K_1'(s(bool,X86))),s(X92,X93)))) )),
  inference(superposition,[],[f303,f2047])).
fof(f349,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) = s(bool,'const.combin.K_2'(s(bool,X10),s(bool,X9))) | s(bool,X9) = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'F_0') = s(bool,X10)) )),
  inference(superposition,[],[f182,f180])).
fof(f565,plain,(
  ( ! [X26,X24,X25] : (s(bool,X24) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s(bool,X24))) | s(bool,'F_0') = s(bool,X25) | s(bool,X24) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f215,f180])).
fof(f653,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s(bool,X38) = s(bool,'const.combin.K_2'(s(bool,X39),s(bool,X38))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X39),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f232,f180])).
fof(f1099,plain,(
  ( ! [X88,X87,X85,X89,X86] : (s(bool,X85) = s(bool,'const.combin.K_2'(s(bool,X86),s(bool,X85))) | s(bool,'F_0') = s(bool,X86) | s(bool,X85) = s(bool,X87) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X87),s(X88,X89)))) )),
  inference(superposition,[],[f182,f279])).
fof(f1100,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s(bool,X90) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X91))),s(bool,X90))) | s(bool,'F_0') = s(bool,X91) | s(bool,X90) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f215,f279])).
fof(f1101,plain,(
  ( ! [X101,X99,X97,X95,X100,X98,X96] : (s(bool,X95) = s(bool,'const.combin.K_2'(s(bool,X96),s(bool,X95))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X96),s(X97,X98))) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X99),s(X100,X101)))) )),
  inference(superposition,[],[f232,f279])).
fof(f2685,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X81),s(bool,X80))) | s(bool,X81) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X82,X83))) | s(bool,X80) = s(bool,X84) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X84),s(X85,X86)))) )),
  inference(superposition,[],[f2256,f279])).
fof(f2686,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s(bool,X87) = s(bool,'const.combin.K_2'(s(bool,X88),s(bool,X87))) | s(bool,X88) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X89,X90))) | s(bool,X87) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f2256,f180])).
fof(f3538,plain,(
  ( ! [X158,X161,X159,X157,X162,X160] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X157),s(X160,X161))) | s(bool,X162) = s(bool,'const.combin.K_2'(s(bool,X157),s(X158,X159))) | s(bool,'T_0') = s(bool,X162)) )),
  inference(superposition,[],[f3461,f139])).
fof(f3539,plain,(
  ( ! [X167,X165,X163,X166,X164,X168] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X164),s(X166,X167))) | s(bool,X168) = s(bool,happ(s(fun(X163,bool),'const.combin.K_1'(s(bool,X164))),s(X163,X165))) | s(bool,'T_0') = s(bool,X168)) )),
  inference(superposition,[],[f3461,f159])).
fof(f3624,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f3623])).
fof(f3623,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X66),s(X67,X68))) | s(bool,'T_0') = s(bool,X69) | s(bool,X66) = s(bool,X70) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72)))) )),
  inference(duplicate_literal_removal,[],[f3524])).
fof(f3524,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X66),s(X67,X68))) | s(bool,'T_0') = s(bool,X69) | s(bool,'T_0') = s(bool,X69) | s(bool,X66) = s(bool,X70) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72)))) )),
  inference(superposition,[],[f3461,f279])).
fof(f3698,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,'F_0') != s(bool,X99) | s(bool,X102) = s(bool,'const.combin.K_2'(s(bool,X99),s(X100,X101))) | s(bool,'T_0') = s(bool,X102)) )),
  inference(superposition,[],[f3598,f139])).
fof(f3699,plain,(
  ( ! [X103,X105,X106,X104] : (s(bool,'F_0') != s(bool,X104) | s(bool,X106) = s(bool,happ(s(fun(X103,bool),'const.combin.K_1'(s(bool,X104))),s(X103,X105))) | s(bool,'T_0') = s(bool,X106)) )),
  inference(superposition,[],[f3598,f159])).
fof(f5014,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(bool,X80) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X81))),s(bool,X80))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X81),s(X82,X83))) | s(bool,X80) = s(bool,X84) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X84),s(X85,X86)))) )),
  inference(superposition,[],[f556,f279])).
fof(f5015,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s(bool,X87) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X88))),s(bool,X87))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X88),s(X89,X90))) | s(bool,X87) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f556,f180])).
fof(f5938,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X89))),s(bool,X88))) | s(bool,X89) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X90,X91))) | s(bool,X88) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f2047,f279])).
fof(f5939,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X96))),s(bool,X95))) | s(bool,X96) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98))) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) )),
  inference(superposition,[],[f2047,f180])).
fof(f6698,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK12(X0,X1,X2,bool))) )),
  inference(superposition,[],[f146,f112])).
fof(f6710,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK12(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK12(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f146,f112])).
fof(f6724,plain,(
  ( ! [X54,X50,X48,X53,X49] : (s(X50,f(s(bool,'F_0'))) != s(X50,g(s(bool,'F_0'))) | s(fun(bool,X50),X48) = s(fun(bool,X50),X49) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,sK12(X48,X49,X50,bool)))),s(X53,X54)))) )),
  inference(forward_demodulation,[],[f6708,f139])).
fof(f6708,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(X50,f(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X51,X52))))) != s(X50,g(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X51,X52))))) | s(fun(bool,X50),X48) = s(fun(bool,X50),X49) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,sK12(X48,X49,X50,bool)))),s(X53,X54)))) )),
  inference(superposition,[],[f146,f2047])).
fof(f6725,plain,(
  ( ! [X61,X57,X60,X56,X55] : (s(X57,f(s(bool,'F_0'))) != s(X57,g(s(bool,'F_0'))) | s(fun(bool,X57),X55) = s(fun(bool,X57),X56) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK12(X55,X56,X57,bool)),s(X60,X61)))) )),
  inference(forward_demodulation,[],[f6709,f139])).
fof(f6709,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (s(X57,f(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X58,X59))))) != s(X57,g(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X58,X59))))) | s(fun(bool,X57),X55) = s(fun(bool,X57),X56) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK12(X55,X56,X57,bool)),s(X60,X61)))) )),
  inference(superposition,[],[f146,f2256])).
fof(f6727,plain,(
  ( ! [X54,X50,X48,X53,X49] : (s(bool,'F_0') != s(bool,f(s(X48,sK12(X49,X50,bool,X48)))) | s(fun(X48,bool),X49) = s(fun(X48,bool),X50) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,g(s(X48,sK12(X49,X50,bool,X48)))))),s(X53,X54)))) )),
  inference(forward_demodulation,[],[f6720,f139])).
fof(f6720,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X51,X52))) != s(bool,f(s(X48,sK12(X49,X50,bool,X48)))) | s(fun(X48,bool),X49) = s(fun(X48,bool),X50) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,g(s(X48,sK12(X49,X50,bool,X48)))))),s(X53,X54)))) )),
  inference(superposition,[],[f146,f2047])).
fof(f6728,plain,(
  ( ! [X61,X57,X60,X56,X55] : (s(bool,'F_0') != s(bool,f(s(X55,sK12(X56,X57,bool,X55)))) | s(fun(X55,bool),X56) = s(fun(X55,bool),X57) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X55,sK12(X56,X57,bool,X55)))),s(X60,X61)))) )),
  inference(forward_demodulation,[],[f6721,f139])).
fof(f6721,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X58,X59))) != s(bool,f(s(X55,sK12(X56,X57,bool,X55)))) | s(fun(X55,bool),X56) = s(fun(X55,bool),X57) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X55,sK12(X56,X57,bool,X55)))),s(X60,X61)))) )),
  inference(superposition,[],[f146,f2256])).
fof(f7267,plain,(
  ( ! [X325,X323,X324,X326,X322] : (s(bool,X322) = s(bool,'const.combin.K_2'(s(bool,X323),s(bool,X322))) | s(bool,'F_0') = s(bool,X323) | s(bool,X322) = s(bool,X324) | s(bool,'T_0') = s(bool,happ(s(fun(X325,bool),'const.combin.K_1'(s(bool,X324))),s(X325,X326)))) )),
  inference(superposition,[],[f182,f280])).
fof(f7268,plain,(
  ( ! [X327,X329,X331,X328,X330] : (s(bool,X327) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X328))),s(bool,X327))) | s(bool,'F_0') = s(bool,X328) | s(bool,X327) = s(bool,X329) | s(bool,'T_0') = s(bool,happ(s(fun(X330,bool),'const.combin.K_1'(s(bool,X329))),s(X330,X331)))) )),
  inference(superposition,[],[f215,f280])).
fof(f7269,plain,(
  ( ! [X333,X335,X337,X332,X334,X336,X338] : (s(bool,X332) = s(bool,'const.combin.K_2'(s(bool,X333),s(bool,X332))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X333),s(X334,X335))) | s(bool,X332) = s(bool,X336) | s(bool,'T_0') = s(bool,happ(s(fun(X337,bool),'const.combin.K_1'(s(bool,X336))),s(X337,X338)))) )),
  inference(superposition,[],[f232,f280])).
fof(f7275,plain,(
  ( ! [X377,X372,X374,X376,X378,X373,X375] : (s(bool,X372) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X373))),s(bool,X372))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X373),s(X374,X375))) | s(bool,X372) = s(bool,X376) | s(bool,'T_0') = s(bool,happ(s(fun(X377,bool),'const.combin.K_1'(s(bool,X376))),s(X377,X378)))) )),
  inference(superposition,[],[f556,f280])).
fof(f7284,plain,(
  ( ! [X428,X430,X426,X432,X429,X431,X427] : (s(bool,X426) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X427))),s(bool,X426))) | s(bool,X427) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X428,X429))) | s(bool,X426) = s(bool,X430) | s(bool,'T_0') = s(bool,happ(s(fun(X431,bool),'const.combin.K_1'(s(bool,X430))),s(X431,X432)))) )),
  inference(superposition,[],[f2047,f280])).
fof(f7287,plain,(
  ( ! [X445,X447,X449,X451,X446,X448,X450] : (s(bool,X445) = s(bool,'const.combin.K_2'(s(bool,X446),s(bool,X445))) | s(bool,X446) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X447,X448))) | s(bool,X445) = s(bool,X449) | s(bool,'T_0') = s(bool,happ(s(fun(X450,bool),'const.combin.K_1'(s(bool,X449))),s(X450,X451)))) )),
  inference(superposition,[],[f2256,f280])).
fof(f9770,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X1)) )),
  inference(condensation,[],[f9769])).
fof(f9769,plain,(
  ( ! [X261,X257,X259,X260,X258] : (s(bool,X260) != s(bool,happ(s(fun(X258,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X258,X259))) | s(bool,X260) = s(bool,X261) | s(bool,'T_0') = s(bool,X261) | s(bool,'T_0') = s(bool,X257)) )),
  inference(duplicate_literal_removal,[],[f9542])).
fof(f9542,plain,(
  ( ! [X261,X257,X259,X260,X258] : (s(bool,X260) != s(bool,happ(s(fun(X258,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X258,X259))) | s(bool,X260) = s(bool,X261) | s(bool,'T_0') = s(bool,X261) | s(bool,'T_0') = s(bool,X257) | s(bool,'T_0') = s(bool,X257)) )),
  inference(superposition,[],[f3667,f9157])).
fof(f10541,plain,(
  ( ! [X134,X132,X130,X136,X135,X133,X131] : (s(bool,X130) = s(bool,'const.combin.K_2'(s(bool,X131),s(bool,X130))) | s(bool,X131) = s(bool,happ(s(fun(X132,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X132,X133))) | s(bool,X130) = s(bool,X134) | s(bool,'T_0') = s(bool,happ(s(fun(X135,bool),'const.combin.K_1'(s(bool,X134))),s(X135,X136)))) )),
  inference(superposition,[],[f9837,f280])).
fof(f10542,plain,(
  ( ! [X142,X140,X138,X143,X141,X139,X137] : (s(bool,X137) = s(bool,'const.combin.K_2'(s(bool,X138),s(bool,X137))) | s(bool,X138) = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X139,X140))) | s(bool,X137) = s(bool,X141) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X141),s(X142,X143)))) )),
  inference(superposition,[],[f9837,f279])).
fof(f10543,plain,(
  ( ! [X146,X144,X147,X145,X148] : (s(bool,X144) = s(bool,'const.combin.K_2'(s(bool,X145),s(bool,X144))) | s(bool,X145) = s(bool,happ(s(fun(X146,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X146,X147))) | s(bool,X144) = s(bool,X148) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f9837,f180])).
fof(f12563,plain,(
  ( ! [X292,X294,X296,X293,X295,X297] : (s(bool,X292) != s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) | s(bool,'T_0') = s(bool,X297) | s(bool,X297) = s(bool,'const.combin.K_2'(s(bool,X292),s(X293,X294)))) )),
  inference(superposition,[],[f9770,f139])).
fof(f12564,plain,(
  ( ! [X300,X302,X298,X301,X303,X299] : (s(bool,X299) != s(bool,happ(s(fun(X301,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X301,X302))) | s(bool,'T_0') = s(bool,X303) | s(bool,X303) = s(bool,happ(s(fun(X298,bool),'const.combin.K_1'(s(bool,X299))),s(X298,X300)))) )),
  inference(superposition,[],[f9770,f159])).
fof(f22780,plain,(
  ( ! [X546,X549,X551,X545,X547,X548,X550,X544] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X544),s(X547,X548))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X549),s(X550,X551))) | s(bool,X549) = s(bool,'const.combin.K_2'(s(bool,X544),s(X545,X546)))) )),
  inference(superposition,[],[f3624,f139])).
fof(f22781,plain,(
  ( ! [X557,X559,X553,X555,X556,X558,X552,X554] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X553),s(X555,X556))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X557),s(X558,X559))) | s(bool,X557) = s(bool,happ(s(fun(X552,bool),'const.combin.K_1'(s(bool,X553))),s(X552,X554)))) )),
  inference(superposition,[],[f3624,f159])).
fof(f22996,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,X1) = s(bool,X3)) )),
  inference(condensation,[],[f22995])).
fof(f22995,plain,(
  ( ! [X198,X196,X204,X202,X199,X197,X203] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X196),s(X197,X198))) | s(bool,'T_0') = s(bool,X199) | s(bool,X196) = s(bool,X202) | s(bool,'T_0') = s(bool,happ(s(fun(X203,bool),'const.combin.K_1'(s(bool,X202))),s(X203,X204)))) )),
  inference(subsumption_resolution,[],[f22743,f2006])).
fof(f22743,plain,(
  ( ! [X198,X196,X204,X202,X200,X199,X197,X203,X201] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X196),s(X197,X198))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X199),s(X200,X201))) | s(bool,'T_0') = s(bool,X199) | s(bool,X196) = s(bool,X202) | s(bool,'T_0') = s(bool,happ(s(fun(X203,bool),'const.combin.K_1'(s(bool,X202))),s(X203,X204)))) )),
  inference(superposition,[],[f3624,f280])).
fof(f24981,plain,(
  ( ! [X393,X395,X396,X392,X394] : (s(bool,X392) = s(bool,'const.combin.K_2'(s(bool,X395),s(bool,X392))) | s(bool,X396) = s(bool,'const.combin.K_2'(s(bool,X392),s(X393,X394))) | s(bool,'T_0') = s(bool,X396) | s(bool,'F_0') = s(bool,X395)) )),
  inference(superposition,[],[f349,f139])).
fof(f24982,plain,(
  ( ! [X397,X399,X401,X398,X400] : (s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X400),s(bool,X398))) | s(bool,X401) = s(bool,happ(s(fun(X397,bool),'const.combin.K_1'(s(bool,X398))),s(X397,X399))) | s(bool,'T_0') = s(bool,X401) | s(bool,'F_0') = s(bool,X400)) )),
  inference(superposition,[],[f349,f159])).
fof(f25163,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,X2))) | s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X3) | s(bool,X4) = s(bool,'const.combin.K_2'(s(bool,X5),s(bool,X4))) | s(bool,X0) = s(bool,X4) | s(bool,'F_0') = s(bool,X5)) )),
  inference(superposition,[],[f349,f349])).
fof(f25164,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,X6) = s(bool,X7) | s(bool,X8) = s(bool,'const.combin.K_2'(s(bool,X9),s(bool,X8))) | s(bool,X7) = s(bool,X8) | s(bool,'F_0') = s(bool,X9) | s(bool,X6) = s(bool,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X11,bool),'const.combin.K_1'(s(bool,X10))),s(X11,X12)))) )),
  inference(superposition,[],[f349,f280])).
fof(f25165,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (s(bool,X13) = s(bool,X14) | s(bool,X15) = s(bool,'const.combin.K_2'(s(bool,X16),s(bool,X15))) | s(bool,X14) = s(bool,X15) | s(bool,'F_0') = s(bool,X16) | s(bool,X13) = s(bool,X17) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X17),s(X18,X19)))) )),
  inference(superposition,[],[f349,f279])).
fof(f25166,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) = s(bool,X21) | s(bool,X22) = s(bool,'const.combin.K_2'(s(bool,X23),s(bool,X22))) | s(bool,X21) = s(bool,X22) | s(bool,'F_0') = s(bool,X23) | s(bool,X20) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f349,f180])).
fof(f25658,plain,(
  ( ! [X1505,X1507,X1509,X1506,X1508] : (s(bool,X1508) != s(bool,f(s(X1505,sK12(X1506,X1507,bool,X1505)))) | s(fun(X1505,bool),X1506) = s(fun(X1505,bool),X1507) | s(bool,g(s(X1505,sK12(X1506,X1507,bool,X1505)))) = s(bool,'const.combin.K_2'(s(bool,X1509),s(bool,g(s(X1505,sK12(X1506,X1507,bool,X1505)))))) | s(bool,'T_0') = s(bool,X1508) | s(bool,'F_0') = s(bool,X1509)) )),
  inference(superposition,[],[f146,f349])).
fof(f25661,plain,(
  ( ! [X1521,X1523,X1520,X1522,X1524] : (s(X1522,f(s(bool,X1523))) != s(X1522,g(s(bool,X1523))) | s(fun(bool,X1522),X1520) = s(fun(bool,X1522),X1521) | s(bool,sK12(X1520,X1521,X1522,bool)) = s(bool,'const.combin.K_2'(s(bool,X1524),s(bool,sK12(X1520,X1521,X1522,bool)))) | s(bool,'T_0') = s(bool,X1523) | s(bool,'F_0') = s(bool,X1524)) )),
  inference(superposition,[],[f146,f349])).
fof(f25905,plain,(
  ( ! [X1505,X1507,X1509,X1506,X1508] : (s(bool,X1508) != s(bool,f(s(X1505,sK12(X1506,X1507,bool,X1505)))) | s(fun(X1505,bool),X1506) = s(fun(X1505,bool),X1507) | s(bool,X1508) = s(bool,'const.combin.K_2'(s(bool,X1509),s(bool,X1508))) | s(bool,'T_0') = s(bool,g(s(X1505,sK12(X1506,X1507,bool,X1505)))) | s(bool,'F_0') = s(bool,X1509)) )),
  inference(superposition,[],[f146,f349])).
fof(f25908,plain,(
  ( ! [X1521,X1523,X1520,X1522,X1524] : (s(X1522,f(s(bool,X1523))) != s(X1522,g(s(bool,X1523))) | s(fun(bool,X1522),X1520) = s(fun(bool,X1522),X1521) | s(bool,X1523) = s(bool,'const.combin.K_2'(s(bool,X1524),s(bool,X1523))) | s(bool,'T_0') = s(bool,sK12(X1520,X1521,X1522,bool)) | s(bool,'F_0') = s(bool,X1524)) )),
  inference(superposition,[],[f146,f349])).
fof(f25914,plain,(
  ( ! [X30,X28,X33,X31,X29,X32] : (s(bool,X29) != s(bool,'const.combin.K_2'(s(bool,X28),s(X30,X31))) | s(bool,'T_0') = s(bool,X29) | s(bool,X32) = s(bool,'const.combin.K_2'(s(bool,X33),s(bool,X32))) | s(bool,X28) = s(bool,X32) | s(bool,'F_0') = s(bool,X33)) )),
  inference(superposition,[],[f1175,f349])).
fof(f25916,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (s(bool,X41) != s(bool,'const.combin.K_2'(s(bool,X40),s(X42,X43))) | s(bool,'T_0') = s(bool,happ(s(fun(X44,bool),'const.combin.K_1'(s(bool,X41))),s(X44,X45))) | s(bool,X46) = s(bool,'const.combin.K_2'(s(bool,X47),s(bool,X46))) | s(bool,X40) = s(bool,X46) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1384,f349])).
fof(f25917,plain,(
  ( ! [X54,X52,X50,X48,X55,X53,X51,X49] : (s(bool,X49) != s(bool,'const.combin.K_2'(s(bool,X48),s(X50,X51))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X49),s(X52,X53))) | s(bool,X54) = s(bool,'const.combin.K_2'(s(bool,X55),s(bool,X54))) | s(bool,X48) = s(bool,X54) | s(bool,'F_0') = s(bool,X55)) )),
  inference(superposition,[],[f1455,f349])).
fof(f25919,plain,(
  ( ! [X80,X85,X83,X81,X84,X82] : (s(bool,X81) != s(bool,happ(s(fun(X82,bool),'const.combin.K_1'(s(bool,X80))),s(X82,X83))) | s(bool,'T_0') = s(bool,X81) | s(bool,X84) = s(bool,'const.combin.K_2'(s(bool,X85),s(bool,X84))) | s(bool,X80) = s(bool,X84) | s(bool,'F_0') = s(bool,X85)) )),
  inference(superposition,[],[f7512,f349])).
fof(f25920,plain,(
  ( ! [X92,X90,X88,X87,X93,X91,X89,X86] : (s(bool,X87) != s(bool,happ(s(fun(X88,bool),'const.combin.K_1'(s(bool,X86))),s(X88,X89))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X87),s(X90,X91))) | s(bool,X92) = s(bool,'const.combin.K_2'(s(bool,X93),s(bool,X92))) | s(bool,X86) = s(bool,X92) | s(bool,'F_0') = s(bool,X93)) )),
  inference(superposition,[],[f8246,f349])).
fof(f25990,plain,(
  ( ! [X557,X555,X556,X554] : (s(bool,X554) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X555))),s(bool,X554))) | s(bool,'F_0') = s(bool,X555) | s(bool,X556) = s(bool,'const.combin.K_2'(s(bool,X557),s(bool,X556))) | s(bool,X554) = s(bool,X556) | s(bool,'F_0') = s(bool,X557)) )),
  inference(superposition,[],[f215,f349])).
fof(f25991,plain,(
  ( ! [X561,X563,X559,X560,X562,X558] : (s(bool,X558) = s(bool,'const.combin.K_2'(s(bool,X559),s(bool,X558))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X559),s(X560,X561))) | s(bool,X562) = s(bool,'const.combin.K_2'(s(bool,X563),s(bool,X562))) | s(bool,X558) = s(bool,X562) | s(bool,'F_0') = s(bool,X563)) )),
  inference(superposition,[],[f232,f349])).
fof(f25995,plain,(
  ( ! [X584,X586,X582,X585,X583] : (s(bool,X582) = s(bool,'const.combin.K_2'(s(bool,X583),s(bool,X582))) | s(bool,X583) = s(bool,X584) | s(bool,'T_0') = s(bool,X584) | s(bool,X585) = s(bool,'const.combin.K_2'(s(bool,X586),s(bool,X585))) | s(bool,X582) = s(bool,X585) | s(bool,'F_0') = s(bool,X586)) )),
  inference(superposition,[],[f279,f349])).
fof(f25996,plain,(
  ( ! [X588,X590,X589,X591,X587] : (s(bool,X587) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X588))),s(bool,X587))) | s(bool,X588) = s(bool,X589) | s(bool,'T_0') = s(bool,X589) | s(bool,X590) = s(bool,'const.combin.K_2'(s(bool,X591),s(bool,X590))) | s(bool,X587) = s(bool,X590) | s(bool,'F_0') = s(bool,X591)) )),
  inference(superposition,[],[f280,f349])).
fof(f25999,plain,(
  ( ! [X606,X602,X605,X607,X603,X604] : (s(bool,X602) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X603))),s(bool,X602))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X603),s(X604,X605))) | s(bool,X606) = s(bool,'const.combin.K_2'(s(bool,X607),s(bool,X606))) | s(bool,X602) = s(bool,X606) | s(bool,'F_0') = s(bool,X607)) )),
  inference(superposition,[],[f556,f349])).
fof(f26002,plain,(
  ( ! [X621,X619,X620,X622,X618] : (s(bool,X618) = s(bool,'const.combin.K_2'(s(bool,X619),s(bool,X618))) | s(bool,X620) = s(bool,'const.combin.K_2'(s(bool,X619),s(bool,X620))) | s(bool,'T_0') = s(bool,X620) | s(bool,X621) = s(bool,'const.combin.K_2'(s(bool,X622),s(bool,X621))) | s(bool,X618) = s(bool,X621) | s(bool,'F_0') = s(bool,X622)) )),
  inference(superposition,[],[f694,f349])).
fof(f26007,plain,(
  ( ! [X652,X648,X650,X646,X649,X651,X647] : (s(bool,X646) = s(bool,'const.combin.K_2'(s(bool,X647),s(bool,X646))) | s(bool,X647) = s(bool,X648) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X648),s(X649,X650))) | s(bool,X651) = s(bool,'const.combin.K_2'(s(bool,X652),s(bool,X651))) | s(bool,X646) = s(bool,X651) | s(bool,'F_0') = s(bool,X652)) )),
  inference(superposition,[],[f1329,f349])).
fof(f26016,plain,(
  ( ! [X707,X704,X706,X705] : (s(bool,X704) != s(bool,'const.combin.K_2'(s(bool,X705),s(bool,X704))) | s(bool,'T_0') = s(bool,X705) | s(bool,X706) = s(bool,'const.combin.K_2'(s(bool,X707),s(bool,X706))) | s(bool,X704) = s(bool,X706) | s(bool,'F_0') = s(bool,X707)) )),
  inference(superposition,[],[f2006,f349])).
fof(f26017,plain,(
  ( ! [X712,X708,X710,X713,X709,X711] : (s(bool,X708) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X709))),s(bool,X708))) | s(bool,X709) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X710,X711))) | s(bool,X712) = s(bool,'const.combin.K_2'(s(bool,X713),s(bool,X712))) | s(bool,X708) = s(bool,X712) | s(bool,'F_0') = s(bool,X713)) )),
  inference(superposition,[],[f2047,f349])).
fof(f26020,plain,(
  ( ! [X728,X724,X726,X729,X725,X727] : (s(bool,X724) = s(bool,'const.combin.K_2'(s(bool,X725),s(bool,X724))) | s(bool,X725) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X726,X727))) | s(bool,X728) = s(bool,'const.combin.K_2'(s(bool,X729),s(bool,X728))) | s(bool,X724) = s(bool,X728) | s(bool,'F_0') = s(bool,X729)) )),
  inference(superposition,[],[f2256,f349])).
fof(f26024,plain,(
  ( ! [X749,X745,X747,X748,X750,X746] : (s(bool,X745) != s(bool,'const.combin.K_2'(s(bool,X746),s(bool,X745))) | s(bool,'T_0') = s(bool,happ(s(fun(X747,bool),'const.combin.K_1'(s(bool,X746))),s(X747,X748))) | s(bool,X749) = s(bool,'const.combin.K_2'(s(bool,X750),s(bool,X749))) | s(bool,X745) = s(bool,X749) | s(bool,'F_0') = s(bool,X750)) )),
  inference(superposition,[],[f2451,f349])).
fof(f26036,plain,(
  ( ! [X814,X812,X815,X813] : (s(bool,X812) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X813))),s(bool,X812))) | s(bool,'T_0') = s(bool,X813) | s(bool,X814) = s(bool,'const.combin.K_2'(s(bool,X815),s(bool,X814))) | s(bool,X812) = s(bool,X814) | s(bool,'F_0') = s(bool,X815)) )),
  inference(superposition,[],[f9230,f349])).
fof(f26039,plain,(
  ( ! [X831,X829,X830,X828,X832,X827] : (s(bool,X827) = s(bool,'const.combin.K_2'(s(bool,X828),s(bool,X827))) | s(bool,X828) = s(bool,happ(s(fun(X829,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X829,X830))) | s(bool,X831) = s(bool,'const.combin.K_2'(s(bool,X832),s(bool,X831))) | s(bool,X827) = s(bool,X831) | s(bool,'F_0') = s(bool,X832)) )),
  inference(superposition,[],[f9837,f349])).
fof(f26268,plain,(
  ( ! [X1418,X1420,X1422,X1419,X1421] : (s(bool,'T_0') != s(bool,f(s(X1418,sK12(X1419,X1420,bool,X1418)))) | s(fun(X1418,bool),X1419) = s(fun(X1418,bool),X1420) | s(bool,X1421) = s(bool,'const.combin.K_2'(s(bool,X1422),s(bool,X1421))) | s(bool,X1421) = s(bool,g(s(X1418,sK12(X1419,X1420,bool,X1418)))) | s(bool,'F_0') = s(bool,X1422)) )),
  inference(superposition,[],[f146,f349])).
fof(f26270,plain,(
  ( ! [X1428,X1430,X1429,X1431,X1432] : (s(bool,'T_0') = s(bool,X1428) | s(bool,X1431) = s(bool,'const.combin.K_2'(s(bool,X1432),s(bool,X1431))) | s(bool,X1431) = s(bool,'const.combin.K_2'(s(bool,X1428),s(X1429,X1430))) | s(bool,'F_0') = s(bool,X1432)) )),
  inference(superposition,[],[f139,f349])).
fof(f26271,plain,(
  ( ! [X1434,X1436,X1433,X1435,X1437] : (s(X1435,f(s(bool,'T_0'))) != s(X1435,g(s(bool,'T_0'))) | s(fun(bool,X1435),X1433) = s(fun(bool,X1435),X1434) | s(bool,X1436) = s(bool,'const.combin.K_2'(s(bool,X1437),s(bool,X1436))) | s(bool,X1436) = s(bool,sK12(X1433,X1434,X1435,bool)) | s(bool,'F_0') = s(bool,X1437)) )),
  inference(superposition,[],[f146,f349])).
fof(f26274,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2)) )),
  inference(equality_factoring,[],[f349])).
fof(f26294,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f26284])).
fof(f26284,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1)) )),
  inference(equality_factoring,[],[f349])).
fof(f26295,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,X0) | s(bool,'F_0') = s(bool,X1)) )),
  inference(condensation,[],[f26281])).
fof(f26281,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X2)) )),
  inference(equality_factoring,[],[f349])).
fof(f26366,plain,(
  ( ! [X963,X961,X965,X962,X960,X966,X964] : (s(bool,'T_0') = s(bool,happ(s(fun(X963,bool),'const.combin.K_1'(s(bool,X960))),s(X963,X964))) | s(bool,X965) = s(bool,'const.combin.K_2'(s(bool,X966),s(bool,X965))) | s(bool,X965) = s(bool,'const.combin.K_2'(s(bool,X960),s(X961,X962))) | s(bool,'F_0') = s(bool,X966)) )),
  inference(trivial_inequality_removal,[],[f26189])).
fof(f26189,plain,(
  ( ! [X963,X961,X965,X962,X960,X966,X964] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(X963,bool),'const.combin.K_1'(s(bool,X960))),s(X963,X964))) | s(bool,X965) = s(bool,'const.combin.K_2'(s(bool,X966),s(bool,X965))) | s(bool,X965) = s(bool,'const.combin.K_2'(s(bool,X960),s(X961,X962))) | s(bool,'F_0') = s(bool,X966)) )),
  inference(superposition,[],[f2451,f349])).
fof(f26398,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,X2))) | s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X3)) )),
  inference(condensation,[],[f26397])).
fof(f26397,plain,(
  ( ! [X436,X438,X440,X437,X439] : (s(bool,X436) != s(bool,X437) | s(bool,'T_0') = s(bool,X438) | s(bool,'T_0') = s(bool,X437) | s(bool,X439) = s(bool,'const.combin.K_2'(s(bool,X440),s(bool,X439))) | s(bool,X436) = s(bool,X439) | s(bool,'F_0') = s(bool,X440)) )),
  inference(duplicate_literal_removal,[],[f25972])).
fof(f25972,plain,(
  ( ! [X436,X438,X440,X437,X439] : (s(bool,X436) != s(bool,X437) | s(bool,'T_0') = s(bool,X438) | s(bool,'T_0') = s(bool,X438) | s(bool,'T_0') = s(bool,X437) | s(bool,X439) = s(bool,'const.combin.K_2'(s(bool,X440),s(bool,X439))) | s(bool,X436) = s(bool,X439) | s(bool,'F_0') = s(bool,X440)) )),
  inference(superposition,[],[f3667,f349])).
fof(f26464,plain,(
  ( ! [X536,X538,X534,X537,X539,X535] : (s(bool,X535) != s(bool,X536) | s(bool,X534) = s(bool,'const.combin.K_2'(s(bool,X536),s(X537,X538))) | s(bool,'T_0') = s(bool,X534) | s(bool,X535) = s(bool,'const.combin.K_2'(s(bool,X539),s(bool,X535))) | s(bool,'F_0') = s(bool,X539)) )),
  inference(duplicate_literal_removal,[],[f25748])).
fof(f25748,plain,(
  ( ! [X536,X538,X534,X537,X539,X535] : (s(bool,X535) != s(bool,X536) | s(bool,X534) = s(bool,'const.combin.K_2'(s(bool,X536),s(X537,X538))) | s(bool,'T_0') = s(bool,X534) | s(bool,X535) = s(bool,'const.combin.K_2'(s(bool,X539),s(bool,X535))) | s(bool,'T_0') = s(bool,X534) | s(bool,'F_0') = s(bool,X539)) )),
  inference(superposition,[],[f21223,f349])).
fof(f26468,plain,(
  ( ! [X466,X461,X463,X465,X462,X464] : (s(bool,X462) != s(bool,happ(s(fun(X463,bool),'const.combin.K_1'(s(bool,X464))),s(X463,X465))) | s(bool,X461) = s(bool,X464) | s(bool,'T_0') = s(bool,X461) | s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,X466),s(bool,X462))) | s(bool,'F_0') = s(bool,X466)) )),
  inference(duplicate_literal_removal,[],[f25736])).
fof(f25736,plain,(
  ( ! [X466,X461,X463,X465,X462,X464] : (s(bool,X462) != s(bool,happ(s(fun(X463,bool),'const.combin.K_1'(s(bool,X464))),s(X463,X465))) | s(bool,X461) = s(bool,X464) | s(bool,'T_0') = s(bool,X461) | s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,X466),s(bool,X462))) | s(bool,'T_0') = s(bool,X461) | s(bool,'F_0') = s(bool,X466)) )),
  inference(superposition,[],[f7500,f349])).
fof(f26471,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,X2) | s(bool,X0) = s(bool,X2) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,X1))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(condensation,[],[f26470])).
fof(f26470,plain,(
  ( ! [X412,X410,X413,X409,X411] : (s(bool,X410) != s(bool,X411) | s(bool,X411) = s(bool,X412) | s(bool,'T_0') = s(bool,X412) | s(bool,'T_0') = s(bool,X409) | s(bool,X410) = s(bool,'const.combin.K_2'(s(bool,X413),s(bool,X410))) | s(bool,'F_0') = s(bool,X413)) )),
  inference(duplicate_literal_removal,[],[f25727])).
fof(f25727,plain,(
  ( ! [X412,X410,X413,X409,X411] : (s(bool,X410) != s(bool,X411) | s(bool,X411) = s(bool,X412) | s(bool,'T_0') = s(bool,X412) | s(bool,'T_0') = s(bool,X409) | s(bool,X410) = s(bool,'const.combin.K_2'(s(bool,X413),s(bool,X410))) | s(bool,'T_0') = s(bool,X409) | s(bool,'F_0') = s(bool,X413)) )),
  inference(superposition,[],[f3667,f349])).
fof(f26472,plain,(
  ( ! [X372,X374,X368,X370,X367,X373,X369,X371] : (s(bool,X368) != s(bool,'const.combin.K_2'(s(bool,X369),s(X370,X371))) | s(bool,X367) = s(bool,'const.combin.K_2'(s(bool,X369),s(X372,X373))) | s(bool,'T_0') = s(bool,X367) | s(bool,X368) = s(bool,'const.combin.K_2'(s(bool,X374),s(bool,X368))) | s(bool,'F_0') = s(bool,X374)) )),
  inference(duplicate_literal_removal,[],[f25721])).
fof(f25721,plain,(
  ( ! [X372,X374,X368,X370,X367,X373,X369,X371] : (s(bool,X368) != s(bool,'const.combin.K_2'(s(bool,X369),s(X370,X371))) | s(bool,X367) = s(bool,'const.combin.K_2'(s(bool,X369),s(X372,X373))) | s(bool,'T_0') = s(bool,X367) | s(bool,X368) = s(bool,'const.combin.K_2'(s(bool,X374),s(bool,X368))) | s(bool,'T_0') = s(bool,X367) | s(bool,'F_0') = s(bool,X374)) )),
  inference(superposition,[],[f3370,f349])).
fof(f26477,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,X0),s(X4,X5))) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X6),s(bool,X1))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(condensation,[],[f26476])).
fof(f26476,plain,(
  ( ! [X294,X300,X296,X298,X295,X301,X297,X299] : (s(bool,'const.combin.K_2'(s(bool,X295),s(X296,X297))) = s(bool,'const.combin.K_2'(s(bool,X298),s(X299,X300))) | s(bool,'T_0') = s(bool,X294) | s(bool,'T_0') = s(bool,X298) | s(bool,X295) = s(bool,'const.combin.K_2'(s(bool,X301),s(bool,X295))) | s(bool,'F_0') = s(bool,X301)) )),
  inference(duplicate_literal_removal,[],[f25710])).
fof(f25710,plain,(
  ( ! [X294,X300,X296,X298,X295,X301,X297,X299] : (s(bool,'const.combin.K_2'(s(bool,X295),s(X296,X297))) = s(bool,'const.combin.K_2'(s(bool,X298),s(X299,X300))) | s(bool,'T_0') = s(bool,X294) | s(bool,'T_0') = s(bool,X298) | s(bool,X295) = s(bool,'const.combin.K_2'(s(bool,X301),s(bool,X295))) | s(bool,'T_0') = s(bool,X294) | s(bool,'F_0') = s(bool,X301)) )),
  inference(superposition,[],[f1981,f349])).
fof(f26482,plain,(
  ( ! [X198,X202,X200,X199,X197,X201] : (s(bool,X198) != s(bool,'const.combin.K_2'(s(bool,X199),s(X200,X201))) | s(bool,X197) = s(bool,X199) | s(bool,'T_0') = s(bool,X197) | s(bool,X198) = s(bool,'const.combin.K_2'(s(bool,X202),s(bool,X198))) | s(bool,'F_0') = s(bool,X202)) )),
  inference(duplicate_literal_removal,[],[f25696])).
fof(f25696,plain,(
  ( ! [X198,X202,X200,X199,X197,X201] : (s(bool,X198) != s(bool,'const.combin.K_2'(s(bool,X199),s(X200,X201))) | s(bool,X197) = s(bool,X199) | s(bool,'T_0') = s(bool,X197) | s(bool,X198) = s(bool,'const.combin.K_2'(s(bool,X202),s(bool,X198))) | s(bool,'T_0') = s(bool,X197) | s(bool,'F_0') = s(bool,X202)) )),
  inference(superposition,[],[f1163,f349])).
fof(f26602,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X0))),s(X2,X3))) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X1))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(condensation,[],[f26601])).
fof(f26601,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,X65) = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X63))),s(X62,X64))) | s(bool,X65) = s(bool,'const.combin.K_2'(s(bool,X66),s(bool,X65))) | s(bool,'T_0') = s(bool,X61) | s(bool,'F_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X63)) )),
  inference(duplicate_literal_removal,[],[f25109])).
fof(f25109,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (s(bool,X65) = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X63))),s(X62,X64))) | s(bool,X65) = s(bool,'const.combin.K_2'(s(bool,X66),s(bool,X65))) | s(bool,'T_0') = s(bool,X61) | s(bool,'F_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f349,f303])).
fof(f27272,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) = s(bool,X2) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X2)) )),
  inference(forward_demodulation,[],[f25909,f139])).
fof(f25909,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f110,f349])).
fof(f27653,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282])).
fof(f27666,plain,(
  ( ! [X866,X864,X863,X861,X867,X865,X862] : (s(bool,X866) = s(bool,'const.combin.K_2'(s(bool,X861),s(X862,X863))) | s(bool,'F_0') = s(bool,X867) | s(bool,X866) = s(bool,'const.combin.K_2'(s(bool,X867),s(bool,X866))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X861),s(X864,X865)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178])).
fof(f27670,plain,(
  ( ! [X771,X775,X773,X776,X770,X774,X772] : (s(bool,'F_0') = s(bool,X776) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X771),s(X773,X774))) | s(bool,X775) = s(bool,'const.combin.K_2'(s(bool,X776),s(bool,X775))) | s(bool,X775) = s(bool,happ(s(fun(X770,bool),'const.combin.K_1'(s(bool,X771))),s(X770,X772)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165])).
fof(f27697,plain,(
  ( ! [X765,X761,X763,X759,X764,X760,X762] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X763,X764))) | s(bool,'F_0') = s(bool,X765) | s(bool,X760) = s(bool,happ(s(fun(X761,bool),'const.combin.K_1'(s(bool,X759))),s(X761,X762))) | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X765),s(bool,X759)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782])).
fof(f27698,plain,(
  ( ! [X757,X753,X755,X756,X758,X754] : (s(bool,X754) != s(bool,happ(s(fun(X755,bool),'const.combin.K_1'(s(bool,X753))),s(X755,X756))) | s(bool,X753) = s(bool,'const.combin.K_2'(s(bool,X758),s(bool,X753))) | s(bool,X754) = s(bool,X757) | s(bool,'F_0') = s(bool,X758) | s(bool,'T_0') = s(bool,X757)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781])).
fof(f27701,plain,(
  ( ! [X724,X726,X722,X725,X727,X723] : (s(bool,X724) = s(bool,happ(s(fun(X725,bool),'const.combin.K_1'(s(bool,X723))),s(X725,X726))) | s(bool,'F_0') = s(bool,X727) | s(bool,X722) = s(bool,'const.combin.K_2'(s(bool,X727),s(bool,X722))) | s(bool,'T_0') = s(bool,X724) | s(bool,X722) != s(bool,X723)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776])).
fof(f27703,plain,(
  ( ! [X668,X670,X673,X667,X669,X671,X672] : (s(bool,'F_0') = s(bool,X673) | s(bool,X668) = s(bool,'const.combin.K_2'(s(bool,X667),s(X669,X670))) | s(bool,X667) = s(bool,'const.combin.K_2'(s(bool,X673),s(bool,X667))) | s(bool,'T_0') = s(bool,happ(s(fun(X671,bool),'const.combin.K_1'(s(bool,X668))),s(X671,X672)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768])).
fof(f27720,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f27719])).
fof(f27719,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'F_0') = s(bool,X0)) )),
  inference(condensation,[],[f27718])).
fof(f27718,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X4),s(X5,X6))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'F_0') = s(bool,X4)) )),
  inference(forward_demodulation,[],[f27717,f139])).
fof(f27717,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X3))),s(X5,X6))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(condensation,[],[f27716])).
fof(f27716,plain,(
  ( ! [X441,X436,X438,X440,X442,X437,X439,X435] : (s(bool,X436) = s(bool,X437) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X437),s(X438,X439))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X435),s(bool,X436))),s(X440,X441))) | s(bool,'T_0') = s(bool,X442) | s(bool,'F_0') = s(bool,X435)) )),
  inference(subsumption_resolution,[],[f25305,f4162])).
fof(f25305,plain,(
  ( ! [X441,X436,X438,X440,X442,X437,X439,X435] : (s(bool,X436) = s(bool,X437) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X437),s(X438,X439))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X435),s(bool,X436))),s(X440,X441))) | s(bool,X436) = s(bool,X442) | s(bool,'T_0') = s(bool,X442) | s(bool,'F_0') = s(bool,X435)) )),
  inference(superposition,[],[f1329,f349])).
fof(f27754,plain,(
  ( ! [X146,X149,X147,X145,X148] : (s(bool,'T_0') = s(bool,X147) | s(bool,X145) = s(bool,X148) | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X148))) | s(bool,X146) = s(bool,'const.combin.K_2'(s(bool,X145),s(bool,X146))) | s(bool,X146) = s(bool,X147) | s(bool,'F_0') = s(bool,X149)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876])).
fof(f27949,plain,(
  ( ! [X356,X358,X357] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X356),s(X357,X358))) | s(bool,'T_0') = s(bool,X356)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948])).
fof(f28133,plain,(
  ( ! [X4,X0,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1,X4))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f28132,f139])).
fof(f28132,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X2,X3))))),s(X1,X4)))) )),
  inference(condensation,[],[f28131])).
fof(f28131,plain,(
  ( ! [X90,X88,X87,X91,X89,X86] : (s(bool,X89) = s(bool,happ(s(fun(X90,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X87,X88))))),s(X90,X91))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,X89)) )),
  inference(subsumption_resolution,[],[f8650,f9230])).
fof(f8650,plain,(
  ( ! [X92,X90,X88,X87,X93,X91,X89,X86] : (s(bool,X89) = s(bool,happ(s(fun(X90,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X87,X88))))),s(X90,X91))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,X89) | s(bool,'T_0') = s(bool,happ(s(fun(X92,bool),'const.combin.K_1'(s(bool,X86))),s(X92,X93)))) )),
  inference(superposition,[],[f303,f2047])).
fof(f28198,plain,(
  ( ! [X167,X163,X166,X168] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X166),s(X167,X168))) | s(bool,X163) = s(bool,X166) | s(bool,'T_0') = s(bool,X163)) )),
  inference(forward_demodulation,[],[f28197,f139])).
fof(f28197,plain,(
  ( ! [X167,X165,X163,X166,X164,X168] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X164,X165))) != s(bool,'const.combin.K_2'(s(bool,X166),s(X167,X168))) | s(bool,X163) = s(bool,X166) | s(bool,'T_0') = s(bool,X163)) )),
  inference(subsumption_resolution,[],[f6009,f9230])).
fof(f6009,plain,(
  ( ! [X167,X165,X163,X169,X166,X164,X170,X168] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X164,X165))) != s(bool,'const.combin.K_2'(s(bool,X166),s(X167,X168))) | s(bool,X163) = s(bool,X166) | s(bool,'T_0') = s(bool,X163) | s(bool,'T_0') = s(bool,happ(s(fun(X169,bool),'const.combin.K_1'(s(bool,X163))),s(X169,X170)))) )),
  inference(superposition,[],[f1163,f2047])).
fof(f28209,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f10405,f10314,f9555,f9379,f28133,f28144,f28150,f7595,f28176,f28191,f28198,f28208])).
fof(f6711,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(X3,sK12(X4,X5,bool,X3)))) | s(fun(X3,bool),X4) = s(fun(X3,bool),X5) | s(bool,X6) = s(bool,g(s(X3,sK12(X4,X5,bool,X3)))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f146,f180])).
fof(f6712,plain,(
  ( ! [X10,X8,X7,X9] : (s(bool,X10) != s(bool,f(s(X7,sK12(X8,X9,bool,X7)))) | s(fun(X7,bool),X8) = s(fun(X7,bool),X9) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,g(s(X7,sK12(X8,X9,bool,X7))))) )),
  inference(superposition,[],[f146,f180])).
fof(f6715,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,X22) != s(bool,f(s(X19,sK12(X20,X21,bool,X19)))) | s(fun(X19,bool),X20) = s(fun(X19,bool),X21) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X19,sK12(X20,X21,bool,X19)))),s(X23,X24)))) )),
  inference(superposition,[],[f146,f279])).
fof(f6716,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X28) != s(bool,f(s(X25,sK12(X26,X27,bool,X25)))) | s(fun(X25,bool),X26) = s(fun(X25,bool),X27) | s(bool,'T_0') = s(bool,g(s(X25,sK12(X26,X27,bool,X25)))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X28),s(X29,X30)))) )),
  inference(superposition,[],[f146,f279])).
fof(f6717,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s(bool,'T_0') != s(bool,f(s(X31,sK12(X32,X33,bool,X31)))) | s(fun(X31,bool),X32) = s(fun(X31,bool),X33) | s(bool,X34) = s(bool,g(s(X31,sK12(X32,X33,bool,X31)))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X34),s(X35,X36)))) )),
  inference(superposition,[],[f146,f279])).
fof(f6718,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s(bool,'const.combin.K_2'(s(bool,X40),s(X41,X42))) != s(bool,f(s(X37,sK12(X38,X39,bool,X37)))) | s(fun(X37,bool),X38) = s(fun(X37,bool),X39) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,g(s(X37,sK12(X38,X39,bool,X37))))) )),
  inference(superposition,[],[f146,f302])).
fof(f7086,plain,(
  ( ! [X850,X848,X852,X847,X851,X849] : (s(bool,X850) != s(bool,f(s(X847,sK12(X848,X849,bool,X847)))) | s(fun(X847,bool),X848) = s(fun(X847,bool),X849) | s(bool,'T_0') = s(bool,X850) | s(bool,'T_0') = s(bool,happ(s(fun(X851,bool),'const.combin.K_1'(s(bool,g(s(X847,sK12(X848,X849,bool,X847)))))),s(X851,X852)))) )),
  inference(superposition,[],[f146,f280])).
fof(f7217,plain,(
  ( ! [X831,X829,X833,X830,X834,X832] : (s(bool,X832) != s(bool,f(s(X829,sK12(X830,X831,bool,X829)))) | s(fun(X829,bool),X830) = s(fun(X829,bool),X831) | s(bool,'T_0') = s(bool,g(s(X829,sK12(X830,X831,bool,X829)))) | s(bool,'T_0') = s(bool,happ(s(fun(X833,bool),'const.combin.K_1'(s(bool,X832))),s(X833,X834)))) )),
  inference(superposition,[],[f146,f280])).
fof(f7411,plain,(
  ( ! [X790,X795,X793,X791,X794,X792] : (s(bool,'T_0') != s(bool,f(s(X790,sK12(X791,X792,bool,X790)))) | s(fun(X790,bool),X791) = s(fun(X790,bool),X792) | s(bool,X793) = s(bool,g(s(X790,sK12(X791,X792,bool,X790)))) | s(bool,'T_0') = s(bool,happ(s(fun(X794,bool),'const.combin.K_1'(s(bool,X793))),s(X794,X795)))) )),
  inference(superposition,[],[f146,f280])).
fof(f16176,plain,(
  ( ! [X1697,X1699,X1701,X1703,X1696,X1698,X1700,X1702] : (s(bool,X1699) != s(bool,f(s(X1696,sK12(X1697,X1698,bool,X1696)))) | s(fun(X1696,bool),X1697) = s(fun(X1696,bool),X1698) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X1696,sK12(X1697,X1698,bool,X1696)))),s(X1700,X1701))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1699),s(X1702,X1703)))) )),
  inference(superposition,[],[f146,f1329])).
fof(f1981,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'const.combin.K_2'(s(bool,X0),s(X4,X5))) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f1980])).
fof(f1980,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) = s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46)) )),
  inference(duplicate_literal_removal,[],[f1726])).
fof(f1726,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) = s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f302,f302])).
fof(f3457,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) != s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,X45) = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46)) )),
  inference(duplicate_literal_removal,[],[f3330])).
fof(f3330,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) != s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,X45) = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f1163,f302])).
fof(f18010,plain,(
  ( ! [X509,X505,X507,X508,X510,X504,X506,X503] : (s(bool,'const.combin.K_2'(s(bool,X503),s(X509,X510))) = s(bool,'const.combin.K_2'(s(bool,X506),s(X507,X508))) | s(bool,'T_0') = s(bool,X506) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X503),s(X504,X505)))) )),
  inference(superposition,[],[f1981,f139])).
fof(f18663,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,X0),s(X4,X5))) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),'const.combin.K_1'(s(bool,X1))),s(X6,X7)))) )),
  inference(condensation,[],[f18662])).
fof(f18662,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X75,X73] : (s(bool,'const.combin.K_2'(s(bool,X71),s(X72,X73))) = s(bool,'const.combin.K_2'(s(bool,X74),s(X75,X76))) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,X74) | s(bool,'T_0') = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X71))),s(X77,X78)))) )),
  inference(duplicate_literal_removal,[],[f17779])).
fof(f17779,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X75,X73] : (s(bool,'const.combin.K_2'(s(bool,X71),s(X72,X73))) = s(bool,'const.combin.K_2'(s(bool,X74),s(X75,X76))) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,X74) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X71))),s(X77,X78)))) )),
  inference(superposition,[],[f1981,f280])).
fof(f21026,plain,(
  ( ! [X532,X528,X530,X526,X533,X529,X531,X527] : (s(bool,X526) != s(bool,'const.combin.K_2'(s(bool,X529),s(X530,X531))) | s(bool,'const.combin.K_2'(s(bool,X526),s(X527,X528))) = s(bool,'const.combin.K_2'(s(bool,X529),s(X532,X533))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X526),s(X527,X528)))) )),
  inference(superposition,[],[f3370,f139])).
fof(f21261,plain,(
  ( ! [X94,X92,X90,X88,X95,X93,X91,X89,X96] : (s(bool,'const.combin.K_2'(s(bool,X89),s(X90,X91))) != s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94))) | s(bool,X88) = s(bool,'const.combin.K_2'(s(bool,X92),s(X95,X96))) | s(bool,'T_0') = s(bool,X88) | s(bool,'T_0') = s(bool,X89)) )),
  inference(duplicate_literal_removal,[],[f20983])).
fof(f20983,plain,(
  ( ! [X94,X92,X90,X88,X95,X93,X91,X89,X96] : (s(bool,'const.combin.K_2'(s(bool,X89),s(X90,X91))) != s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94))) | s(bool,X88) = s(bool,'const.combin.K_2'(s(bool,X92),s(X95,X96))) | s(bool,'T_0') = s(bool,X88) | s(bool,'T_0') = s(bool,X89) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f3370,f302])).
fof(f21640,plain,(
  ( ! [X420,X422,X418,X421,X423,X419] : (s(bool,X418) != s(bool,X421) | s(bool,'const.combin.K_2'(s(bool,X418),s(X419,X420))) = s(bool,'const.combin.K_2'(s(bool,X421),s(X422,X423))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X418),s(X419,X420)))) )),
  inference(superposition,[],[f21223,f139])).
fof(f6703,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(X21,f(s(bool,X22))) != s(X21,g(s(bool,X22))) | s(fun(bool,X21),X19) = s(fun(bool,X21),X20) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK12(X19,X20,X21,bool)),s(X23,X24)))) )),
  inference(superposition,[],[f146,f279])).
fof(f7089,plain,(
  ( ! [X866,X870,X868,X867,X865,X869] : (s(X867,f(s(bool,X868))) != s(X867,g(s(bool,X868))) | s(fun(bool,X867),X865) = s(fun(bool,X867),X866) | s(bool,'T_0') = s(bool,X868) | s(bool,'T_0') = s(bool,happ(s(fun(X869,bool),'const.combin.K_1'(s(bool,sK12(X865,X866,X867,bool)))),s(X869,X870)))) )),
  inference(superposition,[],[f146,f280])).
fof(f26363,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,X0))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(condensation,[],[f26362])).
fof(f26362,plain,(
  ( ! [X1040,X1039,X1037,X1041,X1038] : (s(bool,X1039) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1037,X1038))) | s(bool,X1040) = s(bool,'const.combin.K_2'(s(bool,X1041),s(bool,X1040))) | s(bool,X1040) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1037,X1038))) | s(bool,'F_0') = s(bool,X1041)) )),
  inference(trivial_inequality_removal,[],[f26200])).
fof(f26200,plain,(
  ( ! [X1040,X1039,X1037,X1041,X1038] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X1039) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1037,X1038))) | s(bool,X1040) = s(bool,'const.combin.K_2'(s(bool,X1041),s(bool,X1040))) | s(bool,X1040) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1037,X1038))) | s(bool,'F_0') = s(bool,X1041)) )),
  inference(superposition,[],[f2193,f349])).
fof(f25989,plain,(
  ( ! [X553,X551,X552,X550] : (s(bool,X550) = s(bool,'const.combin.K_2'(s(bool,X551),s(bool,X550))) | s(bool,'F_0') = s(bool,X551) | s(bool,X552) = s(bool,'const.combin.K_2'(s(bool,X553),s(bool,X552))) | s(bool,X550) = s(bool,X552) | s(bool,'F_0') = s(bool,X553)) )),
  inference(superposition,[],[f182,f349])).
fof(f2193,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2)))) )),
  inference(equality_factoring,[],[f1978])).
fof(f28208,plain,(
  ( ! [X36] : (~p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X36)) )),
  inference(forward_demodulation,[],[f28207,f139])).
fof(f28207,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X37,X38)))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f5993,f9230])).
fof(f5993,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X37,X38)))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,happ(s(fun(X39,bool),'const.combin.K_1'(s(bool,X36))),s(X39,X40)))) )),
  inference(superposition,[],[f183,f2047])).
fof(f7595,plain,(
  ( ! [X509,X511,X516,X512,X514,X510,X513,X515] : (s(bool,'T_0') = s(bool,happ(s(fun(X512,bool),'const.combin.K_1'(s(bool,X509))),s(X512,X513))) | s(bool,X514) = s(bool,'const.combin.K_2'(s(bool,X509),s(X510,X511))) | s(bool,'T_0') = s(bool,happ(s(fun(X515,bool),'const.combin.K_1'(s(bool,X514))),s(X515,X516)))) )),
  inference(trivial_inequality_removal,[],[f7367])).
fof(f7367,plain,(
  ( ! [X509,X511,X516,X512,X514,X510,X513,X515] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,'T_0') = s(bool,happ(s(fun(X512,bool),'const.combin.K_1'(s(bool,X509))),s(X512,X513))) | s(bool,X514) = s(bool,'const.combin.K_2'(s(bool,X509),s(X510,X511))) | s(bool,'T_0') = s(bool,happ(s(fun(X515,bool),'const.combin.K_1'(s(bool,X514))),s(X515,X516)))) )),
  inference(superposition,[],[f2451,f280])).
fof(f10314,plain,(
  ( ! [X239,X237,X235,X238,X236] : (s(bool,'T_0') != s(bool,happ(s(fun(X238,bool),'const.combin.K_1'(s(bool,X236))),s(X238,X239))) | s(bool,'T_0') = s(bool,happ(s(fun(X235,bool),'const.combin.K_1'(s(bool,X236))),s(X235,X237)))) )),
  inference(superposition,[],[f9230,f159])).
fof(f10405,plain,(
  ( ! [X85,X83,X81,X86,X84,X82] : (s(bool,'T_0') = s(bool,X82) | s(bool,X84) = s(bool,happ(s(fun(X81,bool),'const.combin.K_1'(s(bool,X82))),s(X81,X83))) | s(bool,'T_0') = s(bool,happ(s(fun(X85,bool),'const.combin.K_1'(s(bool,X84))),s(X85,X86)))) )),
  inference(trivial_inequality_removal,[],[f10397])).
fof(f10397,plain,(
  ( ! [X85,X83,X81,X86,X84,X82] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,'T_0') = s(bool,X82) | s(bool,X84) = s(bool,happ(s(fun(X81,bool),'const.combin.K_1'(s(bool,X82))),s(X81,X83))) | s(bool,'T_0') = s(bool,happ(s(fun(X85,bool),'const.combin.K_1'(s(bool,X84))),s(X85,X86)))) )),
  inference(superposition,[],[f9230,f280])).
fof(f12305,plain,(
  ( ! [X146,X144,X149,X145] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X149) = s(bool,happ(s(fun(X144,bool),'const.combin.K_1'(s(bool,X145))),s(X144,X146))) | s(bool,'T_0') = s(bool,X149)) )),
  inference(forward_demodulation,[],[f12304,f159])).
fof(f12304,plain,(
  ( ! [X146,X144,X149,X147,X145,X148] : (s(bool,'F_0') != s(bool,happ(s(fun(X147,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X147,X148))) | s(bool,X149) = s(bool,happ(s(fun(X144,bool),'const.combin.K_1'(s(bool,X145))),s(X144,X146))) | s(bool,'T_0') = s(bool,X149)) )),
  inference(subsumption_resolution,[],[f12125,f3699])).
fof(f12125,plain,(
  ( ! [X146,X144,X149,X147,X145,X148] : (s(bool,'F_0') != s(bool,happ(s(fun(X147,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X147,X148))) | s(bool,X149) = s(bool,happ(s(fun(X144,bool),'const.combin.K_1'(s(bool,X145))),s(X144,X146))) | s(bool,'T_0') = s(bool,X149) | s(bool,'F_0') = s(bool,X145)) )),
  inference(superposition,[],[f11995,f215])).
fof(f12311,plain,(
  ( ! [X177,X173,X174,X172] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X177) = s(bool,happ(s(fun(X172,bool),'const.combin.K_1'(s(bool,X173))),s(X172,X174))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(forward_demodulation,[],[f12310,f159])).
fof(f12310,plain,(
  ( ! [X177,X175,X173,X176,X174,X172] : (s(bool,'F_0') != s(bool,happ(s(fun(X175,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X175,X176))) | s(bool,X177) = s(bool,happ(s(fun(X172,bool),'const.combin.K_1'(s(bool,X173))),s(X172,X174))) | s(bool,'T_0') = s(bool,X177)) )),
  inference(subsumption_resolution,[],[f12129,f3539])).
fof(f12129,plain,(
  ( ! [X177,X175,X173,X178,X176,X174,X172,X179] : (s(bool,'F_0') != s(bool,happ(s(fun(X175,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X175,X176))) | s(bool,X177) = s(bool,happ(s(fun(X172,bool),'const.combin.K_1'(s(bool,X173))),s(X172,X174))) | s(bool,'T_0') = s(bool,X177) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X173),s(X178,X179)))) )),
  inference(superposition,[],[f11995,f556])).
fof(f12315,plain,(
  ( ! [X210,X208,X213,X209] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X213) = s(bool,'const.combin.K_2'(s(bool,X208),s(X209,X210))) | s(bool,'T_0') = s(bool,X213)) )),
  inference(forward_demodulation,[],[f12314,f159])).
fof(f12314,plain,(
  ( ! [X212,X210,X208,X213,X211,X209] : (s(bool,'F_0') != s(bool,happ(s(fun(X211,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X211,X212))) | s(bool,X213) = s(bool,'const.combin.K_2'(s(bool,X208),s(X209,X210))) | s(bool,'T_0') = s(bool,X213)) )),
  inference(subsumption_resolution,[],[f12134,f3698])).
fof(f12134,plain,(
  ( ! [X212,X210,X208,X213,X211,X209] : (s(bool,'F_0') != s(bool,happ(s(fun(X211,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X211,X212))) | s(bool,X213) = s(bool,'const.combin.K_2'(s(bool,X208),s(X209,X210))) | s(bool,'T_0') = s(bool,X213) | s(bool,'F_0') = s(bool,X208)) )),
  inference(superposition,[],[f11995,f182])).
fof(f12317,plain,(
  ( ! [X216,X215,X219,X214] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X219) = s(bool,'const.combin.K_2'(s(bool,X214),s(X215,X216))) | s(bool,'T_0') = s(bool,X219)) )),
  inference(forward_demodulation,[],[f12316,f159])).
fof(f12316,plain,(
  ( ! [X218,X216,X215,X219,X217,X214] : (s(bool,'F_0') != s(bool,happ(s(fun(X217,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X217,X218))) | s(bool,X219) = s(bool,'const.combin.K_2'(s(bool,X214),s(X215,X216))) | s(bool,'T_0') = s(bool,X219)) )),
  inference(subsumption_resolution,[],[f12135,f3538])).
fof(f12135,plain,(
  ( ! [X218,X216,X220,X215,X219,X217,X221,X214] : (s(bool,'F_0') != s(bool,happ(s(fun(X217,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X217,X218))) | s(bool,X219) = s(bool,'const.combin.K_2'(s(bool,X214),s(X215,X216))) | s(bool,'T_0') = s(bool,X219) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X214),s(X220,X221)))) )),
  inference(superposition,[],[f11995,f232])).
fof(f12318,plain,(
  ( ! [X231,X237,X235,X230,X236,X232] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X235) = s(bool,'const.combin.K_2'(s(bool,X230),s(X231,X232))) | s(bool,'T_0') = s(bool,X235) | s(bool,'F_0') = s(bool,happ(s(fun(X236,bool),'const.combin.K_1'(s(bool,X230))),s(X236,X237)))) )),
  inference(forward_demodulation,[],[f12137,f159])).
fof(f12137,plain,(
  ( ! [X231,X237,X235,X233,X230,X236,X234,X232] : (s(bool,'F_0') != s(bool,happ(s(fun(X233,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X233,X234))) | s(bool,X235) = s(bool,'const.combin.K_2'(s(bool,X230),s(X231,X232))) | s(bool,'T_0') = s(bool,X235) | s(bool,'F_0') = s(bool,happ(s(fun(X236,bool),'const.combin.K_1'(s(bool,X230))),s(X236,X237)))) )),
  inference(superposition,[],[f11995,f233])).
fof(f12325,plain,(
  ( ! [X280,X279,X275,X281,X276,X274] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X279) = s(bool,'const.combin.K_2'(s(bool,X274),s(X275,X276))) | s(bool,'T_0') = s(bool,X279) | s(bool,X274) = s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X280,X281)))) )),
  inference(forward_demodulation,[],[f12143,f159])).
fof(f12143,plain,(
  ( ! [X280,X277,X279,X275,X281,X276,X278,X274] : (s(bool,'F_0') != s(bool,happ(s(fun(X277,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X277,X278))) | s(bool,X279) = s(bool,'const.combin.K_2'(s(bool,X274),s(X275,X276))) | s(bool,'T_0') = s(bool,X279) | s(bool,X274) = s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X280,X281)))) )),
  inference(superposition,[],[f11995,f9837])).
fof(f12222,plain,(
  ( ! [X24,X23,X21,X25] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X21) = s(bool,X23) | s(bool,'T_0') = s(bool,X23) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X21),s(X24,X25)))) )),
  inference(superposition,[],[f11995,f556])).
fof(f12223,plain,(
  ( ! [X30,X31,X29,X27] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X27) = s(bool,X29) | s(bool,'T_0') = s(bool,X29) | s(bool,X27) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X30,X31)))) )),
  inference(superposition,[],[f11995,f2047])).
fof(f28086,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42))) | s(bool,X36) != s(bool,X37) | s(bool,X38) = s(bool,happ(s(fun(X39,bool),'const.combin.K_1'(s(bool,X37))),s(X39,X40))) | s(bool,'T_0') = s(bool,X38)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359])).
fof(f12359,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X36) != s(bool,X37) | s(bool,X38) = s(bool,happ(s(fun(X39,bool),'const.combin.K_1'(s(bool,X37))),s(X39,X40))) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42)))) )),
  inference(superposition,[],[f3699,f279])).
fof(f28085,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,X59) = s(bool,happ(s(fun(X60,bool),'const.combin.K_1'(s(bool,X58))),s(X60,X61))) | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63))) | s(bool,X57) != s(bool,X58) | s(bool,'T_0') = s(bool,X59)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362])).
fof(f12362,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,X57) != s(bool,X58) | s(bool,X59) = s(bool,happ(s(fun(X60,bool),'const.combin.K_1'(s(bool,X58))),s(X60,X61))) | s(bool,'T_0') = s(bool,X59) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63)))) )),
  inference(superposition,[],[f3699,f280])).
fof(f28073,plain,(
  ( ! [X127,X125,X128,X129] : (s(bool,X127) = s(bool,happ(s(fun(X128,bool),'const.combin.K_1'(s(bool,X125))),s(X128,X129))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X127) | s(bool,'F_0') = s(bool,X125)) )),
  inference(forward_demodulation,[],[f12383,f159])).
fof(f12383,plain,(
  ( ! [X127,X125,X128,X126,X124,X129] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X127) = s(bool,happ(s(fun(X128,bool),'const.combin.K_1'(s(bool,happ(s(fun(X124,bool),'const.combin.K_1'(s(bool,X125))),s(X124,X126))))),s(X128,X129))) | s(bool,'T_0') = s(bool,X127) | s(bool,'F_0') = s(bool,X125)) )),
  inference(superposition,[],[f3699,f215])).
fof(f28067,plain,(
  ( ! [X158,X156,X159,X157,X155,X153] : (s(bool,X155) = s(bool,happ(s(fun(X156,bool),'const.combin.K_1'(s(bool,X153))),s(X156,X157))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X155) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X153),s(X158,X159)))) )),
  inference(forward_demodulation,[],[f12387,f159])).
fof(f12387,plain,(
  ( ! [X158,X156,X154,X152,X159,X157,X155,X153] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X155) = s(bool,happ(s(fun(X156,bool),'const.combin.K_1'(s(bool,happ(s(fun(X152,bool),'const.combin.K_1'(s(bool,X153))),s(X152,X154))))),s(X156,X157))) | s(bool,'T_0') = s(bool,X155) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X153),s(X158,X159)))) )),
  inference(superposition,[],[f3699,f556])).
fof(f28065,plain,(
  ( ! [X167,X165,X163,X161,X166,X164] : (s(bool,X163) = s(bool,happ(s(fun(X164,bool),'const.combin.K_1'(s(bool,X161))),s(X164,X165))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X163) | s(bool,X161) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X166,X167)))) )),
  inference(forward_demodulation,[],[f12388,f159])).
fof(f12388,plain,(
  ( ! [X167,X165,X163,X161,X166,X164,X162,X160] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X163) = s(bool,happ(s(fun(X164,bool),'const.combin.K_1'(s(bool,happ(s(fun(X160,bool),'const.combin.K_1'(s(bool,X161))),s(X160,X162))))),s(X164,X165))) | s(bool,'T_0') = s(bool,X163) | s(bool,X161) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X166,X167)))) )),
  inference(superposition,[],[f3699,f2047])).
fof(f28063,plain,(
  ( ! [X191,X192,X188,X193] : (s(bool,X191) = s(bool,happ(s(fun(X192,bool),'const.combin.K_1'(s(bool,X188))),s(X192,X193))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(forward_demodulation,[],[f12392,f139])).
fof(f12392,plain,(
  ( ! [X191,X189,X192,X190,X188,X193] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X191) = s(bool,happ(s(fun(X192,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))))),s(X192,X193))) | s(bool,'T_0') = s(bool,X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(superposition,[],[f3699,f182])).
fof(f28061,plain,(
  ( ! [X198,X194,X200,X199,X197,X201] : (s(bool,X197) = s(bool,happ(s(fun(X198,bool),'const.combin.K_1'(s(bool,X194))),s(X198,X199))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X197) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X194),s(X200,X201)))) )),
  inference(forward_demodulation,[],[f12393,f139])).
fof(f12393,plain,(
  ( ! [X198,X196,X194,X200,X199,X197,X195,X201] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X197) = s(bool,happ(s(fun(X198,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X194),s(X195,X196))))),s(X198,X199))) | s(bool,'T_0') = s(bool,X197) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X194),s(X200,X201)))) )),
  inference(superposition,[],[f3699,f232])).
fof(f28059,plain,(
  ( ! [X210,X216,X215,X213,X217,X214] : (s(bool,X213) = s(bool,happ(s(fun(X214,bool),'const.combin.K_1'(s(bool,X210))),s(X214,X215))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X213) | s(bool,'F_0') = s(bool,happ(s(fun(X216,bool),'const.combin.K_1'(s(bool,X210))),s(X216,X217)))) )),
  inference(forward_demodulation,[],[f12395,f139])).
fof(f12395,plain,(
  ( ! [X212,X210,X216,X215,X213,X211,X217,X214] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X213) = s(bool,happ(s(fun(X214,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X210),s(X211,X212))))),s(X214,X215))) | s(bool,'T_0') = s(bool,X213) | s(bool,'F_0') = s(bool,happ(s(fun(X216,bool),'const.combin.K_1'(s(bool,X210))),s(X216,X217)))) )),
  inference(superposition,[],[f3699,f233])).
fof(f28053,plain,(
  ( ! [X253,X251,X249,X246,X252,X250] : (s(bool,X249) = s(bool,happ(s(fun(X250,bool),'const.combin.K_1'(s(bool,X246))),s(X250,X251))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X249) | s(bool,X246) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X252,X253)))) )),
  inference(forward_demodulation,[],[f12400,f139])).
fof(f12400,plain,(
  ( ! [X253,X251,X249,X246,X252,X250,X248,X247] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X249) = s(bool,happ(s(fun(X250,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X246),s(X247,X248))))),s(X250,X251))) | s(bool,'T_0') = s(bool,X249) | s(bool,X246) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X252,X253)))) )),
  inference(superposition,[],[f3699,f2256])).
fof(f28051,plain,(
  ( ! [X261,X257,X259,X260,X254,X258] : (s(bool,X257) = s(bool,happ(s(fun(X258,bool),'const.combin.K_1'(s(bool,X254))),s(X258,X259))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X257) | s(bool,X254) = s(bool,happ(s(fun(X260,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X260,X261)))) )),
  inference(forward_demodulation,[],[f12401,f139])).
fof(f12401,plain,(
  ( ! [X255,X261,X257,X259,X260,X254,X256,X258] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X257) = s(bool,happ(s(fun(X258,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X254),s(X255,X256))))),s(X258,X259))) | s(bool,'T_0') = s(bool,X257) | s(bool,X254) = s(bool,happ(s(fun(X260,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X260,X261)))) )),
  inference(superposition,[],[f3699,f9837])).
fof(f28050,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X37) != s(bool,happ(s(fun(X38,bool),'const.combin.K_1'(s(bool,X36))),s(X38,X39))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42))) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572])).
fof(f12572,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X37) != s(bool,happ(s(fun(X38,bool),'const.combin.K_1'(s(bool,X36))),s(X38,X39))) | s(bool,'T_0') = s(bool,X40) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42)))) )),
  inference(superposition,[],[f9770,f279])).
fof(f28049,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,'T_0') = s(bool,X61) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63))) | s(bool,X58) != s(bool,happ(s(fun(X59,bool),'const.combin.K_1'(s(bool,X57))),s(X59,X60)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575])).
fof(f12575,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,X58) != s(bool,happ(s(fun(X59,bool),'const.combin.K_1'(s(bool,X57))),s(X59,X60))) | s(bool,'T_0') = s(bool,X61) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63)))) )),
  inference(superposition,[],[f9770,f280])).
fof(f13742,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f13289,f139])).
fof(f13289,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X2,X3))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f13288])).
fof(f13288,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f13209])).
fof(f13209,plain,(
  ( ! [X391,X393,X395,X390,X396,X392,X394] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X393,X394))) | s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,X390),s(X391,X392))) | s(bool,'T_0') = s(bool,X395) | s(bool,X396) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X396))) | s(bool,'T_0') = s(bool,X396)) )),
  inference(superposition,[],[f3461,f694])).
fof(f13287,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f13286])).
fof(f13286,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f13210])).
fof(f13210,plain,(
  ( ! [X397,X399,X401,X398,X400] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X400) = s(bool,'const.combin.K_2'(s(bool,X397),s(X398,X399))) | s(bool,'T_0') = s(bool,X400) | s(bool,X401) = s(bool,'const.combin.K_2'(s(bool,X397),s(bool,X401))) | s(bool,'T_0') = s(bool,X401)) )),
  inference(superposition,[],[f3598,f694])).
fof(f28031,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f28030])).
fof(f28030,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f28029])).
fof(f28029,plain,(
  ( ! [X414,X420,X418,X417,X419] : (s(bool,X417) = s(bool,'const.combin.K_2'(s(bool,X414),s(X418,X419))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X417) | s(bool,X420) = s(bool,'const.combin.K_2'(s(bool,X414),s(bool,X420))) | s(bool,'T_0') = s(bool,X420)) )),
  inference(forward_demodulation,[],[f13213,f139])).
fof(f13213,plain,(
  ( ! [X414,X420,X416,X418,X415,X417,X419] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X417) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X414),s(X415,X416))),s(X418,X419))) | s(bool,'T_0') = s(bool,X417) | s(bool,X420) = s(bool,'const.combin.K_2'(s(bool,X414),s(bool,X420))) | s(bool,'T_0') = s(bool,X420)) )),
  inference(superposition,[],[f3698,f694])).
fof(f28027,plain,(
  ( ! [X424,X426,X421,X425,X427] : (s(bool,X424) = s(bool,happ(s(fun(X425,bool),'const.combin.K_1'(s(bool,X421))),s(X425,X426))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X424) | s(bool,X427) = s(bool,'const.combin.K_2'(s(bool,X421),s(bool,X427))) | s(bool,'T_0') = s(bool,X427)) )),
  inference(forward_demodulation,[],[f13214,f139])).
fof(f13214,plain,(
  ( ! [X422,X424,X426,X421,X423,X425,X427] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X424) = s(bool,happ(s(fun(X425,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X421),s(X422,X423))))),s(X425,X426))) | s(bool,'T_0') = s(bool,X424) | s(bool,X427) = s(bool,'const.combin.K_2'(s(bool,X421),s(bool,X427))) | s(bool,'T_0') = s(bool,X427)) )),
  inference(superposition,[],[f3699,f694])).
fof(f13753,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f13280,f159])).
fof(f13280,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f13279])).
fof(f13279,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f13228])).
fof(f13228,plain,(
  ( ! [X524,X520,X522,X518,X521,X523,X519] : (s(bool,'F_0') != s(bool,happ(s(fun(X521,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X521,X522))) | s(bool,X523) = s(bool,'const.combin.K_2'(s(bool,X518),s(X519,X520))) | s(bool,'T_0') = s(bool,X523) | s(bool,X524) = s(bool,'const.combin.K_2'(s(bool,X518),s(bool,X524))) | s(bool,'T_0') = s(bool,X524)) )),
  inference(superposition,[],[f11995,f694])).
fof(f17511,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,X2) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X3,X4)))) )),
  inference(condensation,[],[f17510])).
fof(f17510,plain,(
  ( ! [X453,X455,X457,X452,X454,X456] : (s(bool,X453) != s(bool,X454) | s(bool,X454) = s(bool,X455) | s(bool,'T_0') = s(bool,X455) | s(bool,'T_0') = s(bool,X452) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X453),s(X456,X457)))) )),
  inference(subsumption_resolution,[],[f16231,f2006])).
fof(f16231,plain,(
  ( ! [X453,X455,X457,X459,X452,X454,X456,X458] : (s(bool,X453) != s(bool,X454) | s(bool,X454) = s(bool,X455) | s(bool,'T_0') = s(bool,X455) | s(bool,'T_0') = s(bool,X452) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X453),s(X456,X457))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X452),s(X458,X459)))) )),
  inference(superposition,[],[f3667,f1329])).
fof(f16265,plain,(
  ( ! [X765,X767,X771,X769,X773,X764,X766,X770,X768,X772] : (s(bool,X765) = s(bool,'const.combin.K_2'(s(bool,X764),s(X766,X767))) | s(bool,'T_0') = s(bool,happ(s(fun(X768,bool),'const.combin.K_1'(s(bool,X765))),s(X768,X769))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X764),s(X770,X771))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X772,X773)))) )),
  inference(superposition,[],[f2047,f1329])).
fof(f17627,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'T_0') != s(bool,X1)) )),
  inference(condensation,[],[f17626])).
fof(f17626,plain,(
  ( ! [X109,X107,X110,X108] : (s(bool,'T_0') != s(bool,X107) | s(bool,'T_0') = s(bool,happ(s(fun(X108,bool),'const.combin.K_1'(s(bool,X107))),s(X108,X109))) | s(bool,'T_0') = s(bool,X110)) )),
  inference(subsumption_resolution,[],[f16387,f2006])).
fof(f16387,plain,(
  ( ! [X111,X109,X107,X112,X110,X108] : (s(bool,'T_0') != s(bool,X107) | s(bool,'T_0') = s(bool,happ(s(fun(X108,bool),'const.combin.K_1'(s(bool,X107))),s(X108,X109))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X110),s(X111,X112))) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f1384,f1329])).
fof(f17706,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(subsumption_resolution,[],[f16518,f2006])).
fof(f16518,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(equality_factoring,[],[f1329])).
fof(f27948,plain,(
  ( ! [X356,X358,X362,X357,X353,X361] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X356),s(X357,X358))) | s(bool,'T_0') = s(bool,X356) | s(bool,'T_0') = s(bool,happ(s(fun(X361,bool),'const.combin.K_1'(s(bool,X353))),s(X361,X362)))) )),
  inference(forward_demodulation,[],[f27947,f139])).
fof(f27947,plain,(
  ( ! [X356,X358,X360,X362,X357,X359,X353,X361] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X359,X360))) = s(bool,'const.combin.K_2'(s(bool,X356),s(X357,X358))) | s(bool,'T_0') = s(bool,X356) | s(bool,'T_0') = s(bool,happ(s(fun(X361,bool),'const.combin.K_1'(s(bool,X353))),s(X361,X362)))) )),
  inference(subsumption_resolution,[],[f17995,f2451])).
fof(f17995,plain,(
  ( ! [X356,X358,X354,X360,X362,X357,X359,X353,X355,X361] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X359,X360))) = s(bool,'const.combin.K_2'(s(bool,X356),s(X357,X358))) | s(bool,'T_0') = s(bool,X356) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X353),s(X354,X355))) | s(bool,'T_0') = s(bool,happ(s(fun(X361,bool),'const.combin.K_1'(s(bool,X353))),s(X361,X362)))) )),
  inference(superposition,[],[f1981,f556])).
fof(f27900,plain,(
  ( ! [X241,X239,X235,X240] : (s(bool,X239) = s(bool,'const.combin.K_2'(s(bool,X235),s(X240,X241))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X239) | s(bool,'F_0') = s(bool,X235)) )),
  inference(forward_demodulation,[],[f22624,f159])).
fof(f22624,plain,(
  ( ! [X241,X239,X235,X240,X236,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X239) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X234,bool),'const.combin.K_1'(s(bool,X235))),s(X234,X236))),s(X240,X241))) | s(bool,'T_0') = s(bool,X239) | s(bool,'F_0') = s(bool,X235)) )),
  inference(forward_demodulation,[],[f22383,f139])).
fof(f22383,plain,(
  ( ! [X241,X239,X237,X235,X240,X238,X236,X234] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X237,X238))) | s(bool,X239) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X234,bool),'const.combin.K_1'(s(bool,X235))),s(X234,X236))),s(X240,X241))) | s(bool,'T_0') = s(bool,X239) | s(bool,'F_0') = s(bool,X235)) )),
  inference(superposition,[],[f3538,f215])).
fof(f27894,plain,(
  ( ! [X271,X277,X279,X275,X276,X278] : (s(bool,X275) = s(bool,'const.combin.K_2'(s(bool,X271),s(X276,X277))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X275) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X271),s(X278,X279)))) )),
  inference(forward_demodulation,[],[f22631,f159])).
fof(f22631,plain,(
  ( ! [X271,X277,X279,X275,X270,X276,X278,X272] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X275) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X270,bool),'const.combin.K_1'(s(bool,X271))),s(X270,X272))),s(X276,X277))) | s(bool,'T_0') = s(bool,X275) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X271),s(X278,X279)))) )),
  inference(forward_demodulation,[],[f22387,f139])).
fof(f22387,plain,(
  ( ! [X271,X277,X279,X273,X275,X270,X276,X278,X272,X274] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X273,X274))) | s(bool,X275) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X270,bool),'const.combin.K_1'(s(bool,X271))),s(X270,X272))),s(X276,X277))) | s(bool,'T_0') = s(bool,X275) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X271),s(X278,X279)))) )),
  inference(superposition,[],[f3538,f556])).
fof(f27892,plain,(
  ( ! [X288,X285,X287,X281,X289,X286] : (s(bool,X285) = s(bool,'const.combin.K_2'(s(bool,X281),s(X286,X287))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X285) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289)))) )),
  inference(forward_demodulation,[],[f22632,f159])).
fof(f22632,plain,(
  ( ! [X280,X282,X288,X285,X287,X281,X289,X286] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X285) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,X281))),s(X280,X282))),s(X286,X287))) | s(bool,'T_0') = s(bool,X285) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289)))) )),
  inference(forward_demodulation,[],[f22388,f139])).
fof(f22388,plain,(
  ( ! [X280,X282,X288,X285,X287,X281,X283,X289,X284,X286] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X283,X284))) | s(bool,X285) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,X281))),s(X280,X282))),s(X286,X287))) | s(bool,'T_0') = s(bool,X285) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289)))) )),
  inference(superposition,[],[f3538,f2047])).
fof(f27890,plain,(
  ( ! [X321,X323,X316,X322] : (s(bool,X321) = s(bool,'const.combin.K_2'(s(bool,X316),s(X322,X323))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X321) | s(bool,'F_0') = s(bool,X316)) )),
  inference(forward_demodulation,[],[f22640,f139])).
fof(f22640,plain,(
  ( ! [X321,X323,X316,X318,X322,X317] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X321) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318))),s(X322,X323))) | s(bool,'T_0') = s(bool,X321) | s(bool,'F_0') = s(bool,X316)) )),
  inference(forward_demodulation,[],[f22392,f139])).
fof(f22392,plain,(
  ( ! [X321,X323,X316,X318,X320,X322,X317,X319] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X319,X320))) | s(bool,X321) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318))),s(X322,X323))) | s(bool,'T_0') = s(bool,X321) | s(bool,'F_0') = s(bool,X316)) )),
  inference(superposition,[],[f3538,f182])).
fof(f27888,plain,(
  ( ! [X333,X329,X331,X324,X332,X330] : (s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X324),s(X330,X331))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X329) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X324),s(X332,X333)))) )),
  inference(forward_demodulation,[],[f22641,f139])).
fof(f22641,plain,(
  ( ! [X325,X333,X329,X331,X324,X326,X332,X330] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X324),s(X325,X326))),s(X330,X331))) | s(bool,'T_0') = s(bool,X329) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X324),s(X332,X333)))) )),
  inference(forward_demodulation,[],[f22393,f139])).
fof(f22393,plain,(
  ( ! [X325,X327,X333,X329,X331,X324,X326,X332,X328,X330] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X327,X328))) | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X324),s(X325,X326))),s(X330,X331))) | s(bool,'T_0') = s(bool,X329) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X324),s(X332,X333)))) )),
  inference(superposition,[],[f3538,f232])).
fof(f27886,plain,(
  ( ! [X350,X344,X352,X349,X351,X353] : (s(bool,X349) = s(bool,'const.combin.K_2'(s(bool,X344),s(X350,X351))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X349) | s(bool,'F_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) )),
  inference(forward_demodulation,[],[f22644,f139])).
fof(f22644,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X353] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X349) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X344),s(X345,X346))),s(X350,X351))) | s(bool,'T_0') = s(bool,X349) | s(bool,'F_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) )),
  inference(forward_demodulation,[],[f22395,f139])).
fof(f22395,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X347,X353,X348] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X347,X348))) | s(bool,X349) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X344),s(X345,X346))),s(X350,X351))) | s(bool,'T_0') = s(bool,X349) | s(bool,'F_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) )),
  inference(superposition,[],[f3538,f233])).
fof(f27880,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f27879])).
fof(f27879,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f27878])).
fof(f27878,plain,(
  ( ! [X397,X395,X390,X396,X398] : (s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,X390),s(X396,X397))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X395) | s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X398))) | s(bool,'T_0') = s(bool,X398)) )),
  inference(forward_demodulation,[],[f22653,f139])).
fof(f22653,plain,(
  ( ! [X391,X397,X395,X390,X396,X398,X392] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X390),s(X391,X392))),s(X396,X397))) | s(bool,'T_0') = s(bool,X395) | s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X398))) | s(bool,'T_0') = s(bool,X398)) )),
  inference(forward_demodulation,[],[f22400,f139])).
fof(f22400,plain,(
  ( ! [X391,X397,X393,X395,X390,X396,X398,X392,X394] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X393,X394))) | s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X390),s(X391,X392))),s(X396,X397))) | s(bool,'T_0') = s(bool,X395) | s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X398))) | s(bool,'T_0') = s(bool,X398)) )),
  inference(superposition,[],[f3538,f694])).
fof(f27870,plain,(
  ( ! [X492,X494,X496,X487,X493,X495] : (s(bool,X492) = s(bool,'const.combin.K_2'(s(bool,X487),s(X493,X494))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X492) | s(bool,X487) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X495,X496)))) )),
  inference(forward_demodulation,[],[f22671,f139])).
fof(f22671,plain,(
  ( ! [X492,X494,X488,X496,X487,X493,X495,X489] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X492) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X487),s(X488,X489))),s(X493,X494))) | s(bool,'T_0') = s(bool,X492) | s(bool,X487) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X495,X496)))) )),
  inference(forward_demodulation,[],[f22409,f139])).
fof(f22409,plain,(
  ( ! [X492,X494,X488,X490,X496,X487,X493,X495,X489,X491] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X490,X491))) | s(bool,X492) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X487),s(X488,X489))),s(X493,X494))) | s(bool,'T_0') = s(bool,X492) | s(bool,X487) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X495,X496)))) )),
  inference(superposition,[],[f3538,f2256])).
fof(f27868,plain,(
  ( ! [X505,X502,X504,X506,X503,X497] : (s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,X497),s(X503,X504))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X502) | s(bool,X497) = s(bool,happ(s(fun(X505,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X505,X506)))) )),
  inference(forward_demodulation,[],[f22672,f139])).
fof(f22672,plain,(
  ( ! [X499,X505,X502,X498,X504,X506,X503,X497] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X497),s(X498,X499))),s(X503,X504))) | s(bool,'T_0') = s(bool,X502) | s(bool,X497) = s(bool,happ(s(fun(X505,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X505,X506)))) )),
  inference(forward_demodulation,[],[f22410,f139])).
fof(f22410,plain,(
  ( ! [X499,X505,X500,X502,X498,X504,X506,X501,X503,X497] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X500,X501))) | s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X497),s(X498,X499))),s(X503,X504))) | s(bool,'T_0') = s(bool,X502) | s(bool,X497) = s(bool,happ(s(fun(X505,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X505,X506)))) )),
  inference(superposition,[],[f3538,f9837])).
fof(f22513,plain,(
  ( ! [X4,X0,X5,X3] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X0),s(X4,X5))) | s(bool,'T_0') = s(bool,X3) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f3538,f182])).
fof(f22514,plain,(
  ( ! [X6,X12,X10,X13,X11,X9] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X9) = s(bool,'const.combin.K_2'(s(bool,X6),s(X10,X11))) | s(bool,'T_0') = s(bool,X9) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X6),s(X12,X13)))) )),
  inference(superposition,[],[f3538,f232])).
fof(f22516,plain,(
  ( ! [X28,X26,X29,X27,X25,X22] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X25) = s(bool,'const.combin.K_2'(s(bool,X22),s(X26,X27))) | s(bool,'T_0') = s(bool,X25) | s(bool,'F_0') = s(bool,happ(s(fun(X28,bool),'const.combin.K_1'(s(bool,X22))),s(X28,X29)))) )),
  inference(superposition,[],[f3538,f233])).
fof(f22567,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f22566])).
fof(f22566,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f22521])).
fof(f22521,plain,(
  ( ! [X61,X64,X62,X58,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X61) = s(bool,'const.combin.K_2'(s(bool,X58),s(X62,X63))) | s(bool,'T_0') = s(bool,X61) | s(bool,X64) = s(bool,'const.combin.K_2'(s(bool,X58),s(bool,X64))) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f3538,f694])).
fof(f22530,plain,(
  ( ! [X144,X142,X140,X143,X141,X137] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X140) = s(bool,'const.combin.K_2'(s(bool,X137),s(X141,X142))) | s(bool,'T_0') = s(bool,X140) | s(bool,X137) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X143,X144)))) )),
  inference(superposition,[],[f3538,f2256])).
fof(f22531,plain,(
  ( ! [X152,X151,X149,X145,X150,X148] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X145),s(X149,X150))) | s(bool,'T_0') = s(bool,X148) | s(bool,X145) = s(bool,happ(s(fun(X151,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X151,X152)))) )),
  inference(superposition,[],[f3538,f9837])).
fof(f22562,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f22561])).
fof(f22561,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f22537])).
fof(f22537,plain,(
  ( ! [X191,X189,X194,X192,X190,X188,X193] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X191) = s(bool,'const.combin.K_2'(s(bool,X188),s(X192,X193))) | s(bool,'T_0') = s(bool,X191) | s(bool,X194) = s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f3538,f180])).
fof(f22560,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f22559])).
fof(f22559,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f22540])).
fof(f22540,plain,(
  ( ! [X212,X210,X215,X213,X211,X209,X214] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X212) = s(bool,'const.combin.K_2'(s(bool,X209),s(X213,X214))) | s(bool,'T_0') = s(bool,X212) | s(bool,X215) = s(bool,'const.combin.K_2'(s(bool,X209),s(X210,X211))) | s(bool,'T_0') = s(bool,X215)) )),
  inference(superposition,[],[f3538,f180])).
fof(f27851,plain,(
  ( ! [X241,X239,X237,X242,X240,X238,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X237) = s(bool,'const.combin.K_2'(s(bool,X234),s(X238,X239))) | s(bool,'T_0') = s(bool,X237) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X240),s(X241,X242)))) )),
  inference(subsumption_resolution,[],[f22543,f21263])).
fof(f22543,plain,(
  ( ! [X241,X239,X237,X235,X242,X240,X238,X236,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X237) = s(bool,'const.combin.K_2'(s(bool,X234),s(X238,X239))) | s(bool,'T_0') = s(bool,X237) | s(bool,X240) = s(bool,'const.combin.K_2'(s(bool,X234),s(X235,X236))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X240),s(X241,X242)))) )),
  inference(superposition,[],[f3538,f279])).
fof(f27849,plain,(
  ( ! [X261,X269,X265,X267,X268,X264,X266] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X264) = s(bool,'const.combin.K_2'(s(bool,X261),s(X265,X266))) | s(bool,'T_0') = s(bool,X264) | s(bool,'T_0') = s(bool,happ(s(fun(X268,bool),'const.combin.K_1'(s(bool,X267))),s(X268,X269)))) )),
  inference(subsumption_resolution,[],[f22546,f21262])).
fof(f22546,plain,(
  ( ! [X261,X263,X269,X265,X267,X262,X268,X264,X266] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X264) = s(bool,'const.combin.K_2'(s(bool,X261),s(X265,X266))) | s(bool,'T_0') = s(bool,X264) | s(bool,X267) = s(bool,'const.combin.K_2'(s(bool,X261),s(X262,X263))) | s(bool,'T_0') = s(bool,happ(s(fun(X268,bool),'const.combin.K_1'(s(bool,X267))),s(X268,X269)))) )),
  inference(superposition,[],[f3538,f280])).
fof(f23007,plain,(
  ( ! [X271,X277,X279,X275,X270,X276,X278,X272] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X275),s(X276,X277))) | s(bool,X275) = s(bool,happ(s(fun(X270,bool),'const.combin.K_1'(s(bool,X271))),s(X270,X272))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X271),s(X278,X279)))) )),
  inference(forward_demodulation,[],[f22752,f139])).
fof(f22752,plain,(
  ( ! [X271,X277,X279,X273,X275,X270,X276,X278,X272,X274] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X273,X274))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X275),s(X276,X277))) | s(bool,X275) = s(bool,happ(s(fun(X270,bool),'const.combin.K_1'(s(bool,X271))),s(X270,X272))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X271),s(X278,X279)))) )),
  inference(superposition,[],[f3624,f556])).
fof(f23013,plain,(
  ( ! [X325,X333,X329,X331,X324,X326,X332,X330] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X329),s(X330,X331))) | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X324),s(X325,X326))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X324),s(X332,X333)))) )),
  inference(forward_demodulation,[],[f22758,f139])).
fof(f22758,plain,(
  ( ! [X325,X327,X333,X329,X331,X324,X326,X332,X328,X330] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X327,X328))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X329),s(X330,X331))) | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X324),s(X325,X326))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X324),s(X332,X333)))) )),
  inference(superposition,[],[f3624,f232])).
fof(f23014,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X353] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X349),s(X350,X351))) | s(bool,X349) = s(bool,'const.combin.K_2'(s(bool,X344),s(X345,X346))) | s(bool,'F_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) )),
  inference(forward_demodulation,[],[f22760,f139])).
fof(f22760,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X347,X353,X348] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X347,X348))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X349),s(X350,X351))) | s(bool,X349) = s(bool,'const.combin.K_2'(s(bool,X344),s(X345,X346))) | s(bool,'F_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) )),
  inference(superposition,[],[f3624,f233])).
fof(f23035,plain,(
  ( ! [X492,X494,X488,X496,X487,X493,X495,X489] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X492),s(X493,X494))) | s(bool,X492) = s(bool,'const.combin.K_2'(s(bool,X487),s(X488,X489))) | s(bool,X487) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X495,X496)))) )),
  inference(forward_demodulation,[],[f22774,f139])).
fof(f22774,plain,(
  ( ! [X492,X494,X488,X490,X496,X487,X493,X495,X489,X491] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X490,X491))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X492),s(X493,X494))) | s(bool,X492) = s(bool,'const.combin.K_2'(s(bool,X487),s(X488,X489))) | s(bool,X487) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X495,X496)))) )),
  inference(superposition,[],[f3624,f2256])).
fof(f23036,plain,(
  ( ! [X499,X505,X502,X498,X504,X506,X503,X497] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X502),s(X503,X504))) | s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,X497),s(X498,X499))) | s(bool,X497) = s(bool,happ(s(fun(X505,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X505,X506)))) )),
  inference(forward_demodulation,[],[f22775,f139])).
fof(f22775,plain,(
  ( ! [X499,X505,X500,X502,X498,X504,X506,X501,X503,X497] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X500,X501))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X502),s(X503,X504))) | s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,X497),s(X498,X499))) | s(bool,X497) = s(bool,happ(s(fun(X505,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X505,X506)))) )),
  inference(superposition,[],[f3624,f9837])).
fof(f22878,plain,(
  ( ! [X4,X0,X5,X3] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,X0) = s(bool,X3) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f3624,f182])).
fof(f22879,plain,(
  ( ! [X6,X12,X10,X13,X11,X9] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X9),s(X10,X11))) | s(bool,X6) = s(bool,X9) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X6),s(X12,X13)))) )),
  inference(superposition,[],[f3624,f232])).
fof(f22881,plain,(
  ( ! [X28,X26,X29,X27,X25,X22] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X25),s(X26,X27))) | s(bool,X22) = s(bool,X25) | s(bool,'F_0') = s(bool,happ(s(fun(X28,bool),'const.combin.K_1'(s(bool,X22))),s(X28,X29)))) )),
  inference(superposition,[],[f3624,f233])).
fof(f24876,plain,(
  ( ! [X146,X149,X147,X145,X148] : (s(bool,X146) = s(bool,'const.combin.K_2'(s(bool,X145),s(bool,X146))) | s(bool,X146) = s(bool,X147) | s(bool,'T_0') = s(bool,X147) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X148))) | s(bool,X145) = s(bool,X148) | s(bool,'F_0') = s(bool,X149)) )),
  inference(superposition,[],[f349,f349])).
fof(f26796,plain,(
  ( ! [X372,X368,X370,X367,X369,X371] : (s(bool,X368) = s(bool,'const.combin.K_2'(s(bool,X369),s(bool,X368))) | s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X367),s(bool,X368))) | s(bool,'T_0') = s(bool,X370) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X367),s(X371,X372))) | s(bool,'T_0') = s(bool,X368)) )),
  inference(subsumption_resolution,[],[f24977,f3698])).
fof(f24977,plain,(
  ( ! [X372,X368,X370,X367,X369,X371] : (s(bool,X368) = s(bool,'const.combin.K_2'(s(bool,X369),s(bool,X368))) | s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X367),s(bool,X368))) | s(bool,'T_0') = s(bool,X370) | s(bool,'F_0') = s(bool,X369) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X367),s(X371,X372))) | s(bool,'T_0') = s(bool,X368)) )),
  inference(superposition,[],[f349,f694])).
fof(f25768,plain,(
  ( ! [X668,X670,X673,X667,X669,X671,X672] : (s(bool,X668) = s(bool,'const.combin.K_2'(s(bool,X667),s(X669,X670))) | s(bool,'T_0') = s(bool,happ(s(fun(X671,bool),'const.combin.K_1'(s(bool,X668))),s(X671,X672))) | s(bool,X667) = s(bool,'const.combin.K_2'(s(bool,X673),s(bool,X667))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X673)) )),
  inference(superposition,[],[f2047,f349])).
fof(f25776,plain,(
  ( ! [X724,X726,X722,X725,X727,X723] : (s(bool,X722) != s(bool,X723) | s(bool,X724) = s(bool,happ(s(fun(X725,bool),'const.combin.K_1'(s(bool,X723))),s(X725,X726))) | s(bool,'T_0') = s(bool,X724) | s(bool,X722) = s(bool,'const.combin.K_2'(s(bool,X727),s(bool,X722))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X727)) )),
  inference(superposition,[],[f3699,f349])).
fof(f25781,plain,(
  ( ! [X757,X753,X755,X756,X758,X754] : (s(bool,X754) != s(bool,happ(s(fun(X755,bool),'const.combin.K_1'(s(bool,X753))),s(X755,X756))) | s(bool,'T_0') = s(bool,X757) | s(bool,X754) = s(bool,X757) | s(bool,X753) = s(bool,'const.combin.K_2'(s(bool,X758),s(bool,X753))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X758)) )),
  inference(superposition,[],[f9770,f349])).
fof(f25782,plain,(
  ( ! [X765,X761,X763,X759,X764,X760,X762] : (s(bool,X760) = s(bool,happ(s(fun(X761,bool),'const.combin.K_1'(s(bool,X759))),s(X761,X762))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X763,X764))) | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X765),s(bool,X759))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X765)) )),
  inference(superposition,[],[f9837,f349])).
fof(f27311,plain,(
  ( ! [X377,X379,X380,X376,X378,X373] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X376) = s(bool,'const.combin.K_2'(s(bool,X373),s(X377,X378))) | s(bool,'T_0') = s(bool,X376) | s(bool,X379) = s(bool,'const.combin.K_2'(s(bool,X380),s(bool,X379))) | s(bool,'F_0') = s(bool,X380)) )),
  inference(forward_demodulation,[],[f27310,f139])).
fof(f27310,plain,(
  ( ! [X377,X379,X374,X380,X376,X378,X373,X375] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X374,X375))) | s(bool,X376) = s(bool,'const.combin.K_2'(s(bool,X373),s(X377,X378))) | s(bool,'T_0') = s(bool,X376) | s(bool,X379) = s(bool,'const.combin.K_2'(s(bool,X380),s(bool,X379))) | s(bool,'F_0') = s(bool,X380)) )),
  inference(subsumption_resolution,[],[f26102,f26464])).
fof(f26102,plain,(
  ( ! [X377,X379,X374,X380,X376,X378,X373,X375] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X374,X375))) | s(bool,X376) = s(bool,'const.combin.K_2'(s(bool,X373),s(X377,X378))) | s(bool,'T_0') = s(bool,X376) | s(bool,X379) = s(bool,'const.combin.K_2'(s(bool,X380),s(bool,X379))) | s(bool,X373) = s(bool,X379) | s(bool,'F_0') = s(bool,X380)) )),
  inference(superposition,[],[f3538,f349])).
fof(f26103,plain,(
  ( ! [X383,X382,X384,X381] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X381) = s(bool,X382) | s(bool,'T_0') = s(bool,X382) | s(bool,X383) = s(bool,'const.combin.K_2'(s(bool,X384),s(bool,X383))) | s(bool,X381) = s(bool,X383) | s(bool,'F_0') = s(bool,X384)) )),
  inference(superposition,[],[f3598,f349])).
fof(f27679,plain,(
  ( ! [X389,X391,X385,X388,X390,X392] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X388),s(X389,X390))) | s(bool,X385) = s(bool,X388) | s(bool,X391) = s(bool,'const.combin.K_2'(s(bool,X392),s(bool,X391))) | s(bool,X385) = s(bool,X391) | s(bool,'F_0') = s(bool,X392)) )),
  inference(forward_demodulation,[],[f26104,f139])).
fof(f26104,plain,(
  ( ! [X389,X391,X385,X387,X388,X390,X386,X392] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X386,X387))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X388),s(X389,X390))) | s(bool,X385) = s(bool,X388) | s(bool,X391) = s(bool,'const.combin.K_2'(s(bool,X392),s(bool,X391))) | s(bool,X385) = s(bool,X391) | s(bool,'F_0') = s(bool,X392)) )),
  inference(superposition,[],[f3624,f349])).
fof(f26107,plain,(
  ( ! [X408,X405,X407,X403,X404,X406] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X404) = s(bool,'const.combin.K_2'(s(bool,X403),s(X405,X406))) | s(bool,'T_0') = s(bool,X404) | s(bool,X407) = s(bool,'const.combin.K_2'(s(bool,X408),s(bool,X407))) | s(bool,X403) = s(bool,X407) | s(bool,'F_0') = s(bool,X408)) )),
  inference(superposition,[],[f3698,f349])).
fof(f26108,plain,(
  ( ! [X412,X414,X410,X413,X409,X411] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X410) = s(bool,happ(s(fun(X411,bool),'const.combin.K_1'(s(bool,X409))),s(X411,X412))) | s(bool,'T_0') = s(bool,X410) | s(bool,X413) = s(bool,'const.combin.K_2'(s(bool,X414),s(bool,X413))) | s(bool,X409) = s(bool,X413) | s(bool,'F_0') = s(bool,X414)) )),
  inference(superposition,[],[f3699,f349])).
fof(f26165,plain,(
  ( ! [X771,X775,X773,X776,X770,X774,X772] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X771),s(X773,X774))) | s(bool,X775) = s(bool,'const.combin.K_2'(s(bool,X776),s(bool,X775))) | s(bool,X775) = s(bool,happ(s(fun(X770,bool),'const.combin.K_1'(s(bool,X771))),s(X770,X772))) | s(bool,'F_0') = s(bool,X776)) )),
  inference(superposition,[],[f233,f349])).
fof(f26171,plain,(
  ( ! [X819,X817,X818,X816,X820,X815] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X816) = s(bool,X818) | s(bool,'T_0') = s(bool,X818) | s(bool,X819) = s(bool,'const.combin.K_2'(s(bool,X820),s(bool,X819))) | s(bool,X819) = s(bool,happ(s(fun(X815,bool),'const.combin.K_1'(s(bool,X816))),s(X815,X817))) | s(bool,'F_0') = s(bool,X820)) )),
  inference(superposition,[],[f11995,f349])).
fof(f26178,plain,(
  ( ! [X866,X864,X863,X861,X867,X865,X862] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X861),s(X864,X865))) | s(bool,X866) = s(bool,'const.combin.K_2'(s(bool,X867),s(bool,X866))) | s(bool,X866) = s(bool,'const.combin.K_2'(s(bool,X861),s(X862,X863))) | s(bool,'F_0') = s(bool,X867)) )),
  inference(superposition,[],[f232,f349])).
fof(f26191,plain,(
  ( ! [X978,X976,X980,X975,X979,X977] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X975) = s(bool,X978) | s(bool,'T_0') = s(bool,X978) | s(bool,X979) = s(bool,'const.combin.K_2'(s(bool,X980),s(bool,X979))) | s(bool,X979) = s(bool,'const.combin.K_2'(s(bool,X975),s(X976,X977))) | s(bool,'F_0') = s(bool,X980)) )),
  inference(superposition,[],[f3461,f349])).
fof(f26193,plain,(
  ( ! [X990,X994,X992,X996,X991,X989,X995,X993] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X992),s(X993,X994))) | s(bool,X989) = s(bool,X992) | s(bool,X995) = s(bool,'const.combin.K_2'(s(bool,X996),s(bool,X995))) | s(bool,X995) = s(bool,'const.combin.K_2'(s(bool,X989),s(X990,X991))) | s(bool,'F_0') = s(bool,X996)) )),
  inference(superposition,[],[f3624,f349])).
fof(f26365,plain,(
  ( ! [X1002,X1000,X1004,X1003,X1001,X1005] : (s(bool,'T_0') = s(bool,X1001) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1000),s(X1002,X1003))) | s(bool,X1004) = s(bool,'const.combin.K_2'(s(bool,X1005),s(bool,X1004))) | s(bool,X1004) = s(bool,'const.combin.K_2'(s(bool,X1000),s(bool,X1001))) | s(bool,'F_0') = s(bool,X1005)) )),
  inference(duplicate_literal_removal,[],[f26194])).
fof(f26194,plain,(
  ( ! [X1002,X1000,X1004,X1003,X1001,X1005] : (s(bool,'T_0') = s(bool,X1001) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1000),s(X1002,X1003))) | s(bool,'T_0') = s(bool,X1001) | s(bool,X1004) = s(bool,'const.combin.K_2'(s(bool,X1005),s(bool,X1004))) | s(bool,X1004) = s(bool,'const.combin.K_2'(s(bool,X1000),s(bool,X1001))) | s(bool,'F_0') = s(bool,X1005)) )),
  inference(superposition,[],[f694,f349])).
fof(f26282,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'F_0')) )),
  inference(equality_factoring,[],[f349])).
fof(f27652,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f26288,f180])).
fof(f26288,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f349])).
fof(f25030,plain,(
  ( ! [X255,X254,X256] : (s(bool,X254) = s(bool,X255) | s(bool,X255) = s(bool,X256) | s(bool,'T_0') = s(bool,X256) | s(bool,'F_0') = s(bool,X254)) )),
  inference(superposition,[],[f349,f139])).
fof(f26698,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f26697])).
fof(f26697,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f26696])).
fof(f26696,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,X4) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(bool,X4))) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X3) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f24852,f3598])).
fof(f24852,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,X4) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(bool,X4))) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,'F_0') = s(bool,X3) | s(bool,X3) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f349,f180])).
fof(f22240,plain,(
  ( ! [X4,X5,X3] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X3) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X4),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X3))),s('type.closSem.state'(X4),X5)))))) )),
  inference(superposition,[],[f132,f159])).
fof(f22239,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X20),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X17),X19))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X17),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X20),s('type.closSem.state'(X17),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X18),s('type.closSem.state'(X17),X19)))))))) )),
  inference(superposition,[],[f132,f126])).
fof(f22238,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X16),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X13),X15))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X13),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X16),s('type.closSem.state'(X13),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X14),s('type.closSem.state'(X13),X15)))))))) )),
  inference(superposition,[],[f132,f128])).
fof(f22237,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X12),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X9),X11))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X8),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X12),s('type.closSem.state'(X8),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X9),'type.ffi.ffi_state'(X8)),X10),s('type.closSem.state'(X9),X11)))))))) )),
  inference(superposition,[],[f132,f144])).
fof(f22236,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X7),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X4),X6))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X4),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X7),s('type.closSem.state'(X4),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X5),s('type.closSem.state'(X4),X6)))))))) )),
  inference(superposition,[],[f132,f121])).
fof(f22235,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X3),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X1),s('type.closSem.state'(X0),X2))))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X3),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X1),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2)))))))) )),
  inference(superposition,[],[f132,f132])).
fof(f21830,plain,(
  ( ! [X4,X5,X3] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X4),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X4),X5)))))) )),
  inference(superposition,[],[f131,f159])).
fof(f21829,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X20),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X17),X19))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X17),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X20),s('type.closSem.state'(X17),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X18),s('type.closSem.state'(X17),X19)))))))) )),
  inference(superposition,[],[f131,f124])).
fof(f21828,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X13),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X16),s('type.closSem.state'(X13),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X14),s('type.closSem.state'(X13),X15))))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X16),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X14),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X13),X15)))))))) )),
  inference(superposition,[],[f131,f131])).
fof(f21827,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X9),X11))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X8),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X12),s('type.closSem.state'(X8),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X9),'type.ffi.ffi_state'(X8)),X10),s('type.closSem.state'(X9),X11)))))))) )),
  inference(superposition,[],[f131,f143])).
fof(f21826,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X7),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X4),X6))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X4),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X7),s('type.closSem.state'(X4),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X5),s('type.closSem.state'(X4),X6)))))))) )),
  inference(superposition,[],[f131,f117])).
fof(f21825,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X3),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X1),s('type.closSem.state'(X0),X2)))))))) )),
  inference(superposition,[],[f131,f129])).
fof(f21765,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X6),s('type.list.list'('type.option.option'('type.closSem.v')),X4))) = s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X3),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X6),s('type.closSem.state'(X3),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X4))),s('type.closSem.state'(X3),X5)))))))) )),
  inference(superposition,[],[f130,f21400])).
fof(f21649,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,X77) != s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) | s(bool,X73) = s(bool,'const.combin.K_2'(s(bool,X77),s(X78,X79))) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75)) )),
  inference(duplicate_literal_removal,[],[f21593])).
fof(f21593,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,X77) != s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) | s(bool,X73) = s(bool,'const.combin.K_2'(s(bool,X77),s(X78,X79))) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f21223,f303])).
fof(f21650,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,X70) != s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) | s(bool,X66) = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67)) )),
  inference(duplicate_literal_removal,[],[f21592])).
fof(f21592,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,X70) != s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) | s(bool,X66) = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f21223,f302])).
fof(f21399,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X17),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X20),s('type.closSem.state'(X17),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X18),s('type.closSem.state'(X17),X19))))))) = s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X20),s('type.list.list'('type.option.option'('type.closSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X18),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X17),X19)))))))) )),
  inference(superposition,[],[f130,f130])).
fof(f21223,plain,(
  ( ! [X383,X382,X378,X381] : (s(bool,X378) != s(bool,X381) | s(bool,X381) = s(bool,'const.combin.K_2'(s(bool,X378),s(X382,X383))) | s(bool,'T_0') = s(bool,X381)) )),
  inference(superposition,[],[f3370,f139])).
fof(f21262,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X75,X73] : (s(bool,X71) != s(bool,'const.combin.K_2'(s(bool,X72),s(X73,X74))) | s(bool,X70) = s(bool,'const.combin.K_2'(s(bool,X72),s(X75,X76))) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X71))),s(X77,X78)))) )),
  inference(duplicate_literal_removal,[],[f20981])).
fof(f20981,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X75,X73] : (s(bool,X71) != s(bool,'const.combin.K_2'(s(bool,X72),s(X73,X74))) | s(bool,X70) = s(bool,'const.combin.K_2'(s(bool,X72),s(X75,X76))) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X71))),s(X77,X78)))) )),
  inference(superposition,[],[f3370,f280])).
fof(f21263,plain,(
  ( ! [X47,X45,X43,X50,X48,X46,X44,X51,X49] : (s(bool,X44) != s(bool,'const.combin.K_2'(s(bool,X45),s(X46,X47))) | s(bool,X43) = s(bool,'const.combin.K_2'(s(bool,X45),s(X48,X49))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X44),s(X50,X51)))) )),
  inference(duplicate_literal_removal,[],[f20978])).
fof(f20978,plain,(
  ( ! [X47,X45,X43,X50,X48,X46,X44,X51,X49] : (s(bool,X44) != s(bool,'const.combin.K_2'(s(bool,X45),s(X46,X47))) | s(bool,X43) = s(bool,'const.combin.K_2'(s(bool,X45),s(X48,X49))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X44),s(X50,X51)))) )),
  inference(superposition,[],[f3370,f279])).
fof(f21265,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (s(bool,X14) != s(bool,'const.combin.K_2'(s(bool,X15),s(X16,X17))) | s(bool,X13) = s(bool,'const.combin.K_2'(s(bool,X15),s(X18,X19))) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,X14)) )),
  inference(duplicate_literal_removal,[],[f20974])).
fof(f20974,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (s(bool,X14) != s(bool,'const.combin.K_2'(s(bool,X15),s(X16,X17))) | s(bool,X13) = s(bool,'const.combin.K_2'(s(bool,X15),s(X18,X19))) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f3370,f180])).
fof(f20914,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.ffi.ffi_state'(X8),happ(s(fun('type.ffi.ffi_state'(X4),'type.ffi.ffi_state'(X8)),X9),s('type.ffi.ffi_state'(X4),X6))) = s('type.ffi.ffi_state'(X8),'const.closSem.state_ffi_1'(s('type.closSem.state'(X8),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X4),'type.ffi.ffi_state'(X8)),X9),s('type.closSem.state'(X4),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.closSem.state'(X5),X7)))))))) )),
  inference(superposition,[],[f145,f20790])).
fof(f20790,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.ffi.ffi_state'(X4),X6) = s('type.ffi.ffi_state'(X4),'const.closSem.state_ffi_1'(s('type.closSem.state'(X4),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.closSem.state'(X5),X7)))))) )),
  inference(superposition,[],[f145,f159])).
fof(f20789,plain,(
  ( ! [X24,X23,X21,X25,X22] : (s('type.ffi.ffi_state'(X24),happ(s(fun('type.ffi.ffi_state'(X21),'type.ffi.ffi_state'(X24)),X25),s('type.ffi.ffi_state'(X21),'const.closSem.state_ffi_1'(s('type.closSem.state'(X21),X23))))) = s('type.ffi.ffi_state'(X24),'const.closSem.state_ffi_1'(s('type.closSem.state'(X24),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X21),'type.ffi.ffi_state'(X24)),X25),s('type.closSem.state'(X21),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X22),s('type.closSem.state'(X21),X23)))))))) )),
  inference(superposition,[],[f145,f116])).
fof(f20788,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.ffi.ffi_state'(X19),happ(s(fun('type.ffi.ffi_state'(X16),'type.ffi.ffi_state'(X19)),X20),s('type.ffi.ffi_state'(X16),'const.closSem.state_ffi_1'(s('type.closSem.state'(X16),X18))))) = s('type.ffi.ffi_state'(X19),'const.closSem.state_ffi_1'(s('type.closSem.state'(X19),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X16),'type.ffi.ffi_state'(X19)),X20),s('type.closSem.state'(X16),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X17),s('type.closSem.state'(X16),X18)))))))) )),
  inference(superposition,[],[f145,f122])).
fof(f20787,plain,(
  ( ! [X14,X12,X10,X15,X13,X11] : (s('type.ffi.ffi_state'(X14),'const.closSem.state_ffi_1'(s('type.closSem.state'(X14),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X10),'type.ffi.ffi_state'(X14)),X15),s('type.closSem.state'(X10),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X10)),X12),s('type.closSem.state'(X11),X13))))))) = s('type.ffi.ffi_state'(X14),happ(s(fun('type.ffi.ffi_state'(X10),'type.ffi.ffi_state'(X14)),X15),s('type.ffi.ffi_state'(X10),happ(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X10)),X12),s('type.ffi.ffi_state'(X11),'const.closSem.state_ffi_1'(s('type.closSem.state'(X11),X13)))))))) )),
  inference(superposition,[],[f145,f145])).
fof(f20786,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s('type.ffi.ffi_state'(X8),happ(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X8)),X9),s('type.ffi.ffi_state'(X5),'const.closSem.state_ffi_1'(s('type.closSem.state'(X5),X7))))) = s('type.ffi.ffi_state'(X8),'const.closSem.state_ffi_1'(s('type.closSem.state'(X8),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X8)),X9),s('type.closSem.state'(X5),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X6),s('type.closSem.state'(X5),X7)))))))) )),
  inference(superposition,[],[f145,f113])).
fof(f20785,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X3),happ(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))))) = s('type.ffi.ffi_state'(X3),'const.closSem.state_ffi_1'(s('type.closSem.state'(X3),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X1),s('type.closSem.state'(X0),X2)))))))) )),
  inference(superposition,[],[f145,f125])).
fof(f15492,plain,(
  ( ! [X198,X196,X200,X199,X197,X201] : (s(bool,X196) = s(bool,'const.combin.K_2'(s(bool,X197),s(bool,X196))) | s(bool,X197) = s(bool,X198) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X198),s(X199,X200))) | s(bool,X196) = s(bool,X201) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f1329,f180])).
fof(f15491,plain,(
  ( ! [X191,X189,X194,X192,X190,X188,X195,X193] : (s(bool,X188) = s(bool,'const.combin.K_2'(s(bool,X189),s(bool,X188))) | s(bool,X189) = s(bool,X190) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X190),s(X191,X192))) | s(bool,X188) = s(bool,X193) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X193),s(X194,X195)))) )),
  inference(superposition,[],[f1329,f279])).
fof(f15490,plain,(
  ( ! [X187,X185,X182,X180,X186,X184,X183,X181] : (s(bool,X180) = s(bool,'const.combin.K_2'(s(bool,X181),s(bool,X180))) | s(bool,X181) = s(bool,X182) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X182),s(X183,X184))) | s(bool,X180) = s(bool,X185) | s(bool,'T_0') = s(bool,happ(s(fun(X186,bool),'const.combin.K_1'(s(bool,X185))),s(X186,X187)))) )),
  inference(superposition,[],[f1329,f280])).
fof(f12944,plain,(
  ( ! [X125,X123,X124,X122] : (s(bool,X122) = s(bool,'const.combin.K_2'(s(bool,X123),s(bool,X122))) | s(bool,X124) = s(bool,'const.combin.K_2'(s(bool,X123),s(bool,X124))) | s(bool,'T_0') = s(bool,X124) | s(bool,X122) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f694,f180])).
fof(f12943,plain,(
  ( ! [X121,X118,X116,X120,X119,X117] : (s(bool,X116) = s(bool,'const.combin.K_2'(s(bool,X117),s(bool,X116))) | s(bool,X118) = s(bool,'const.combin.K_2'(s(bool,X117),s(bool,X118))) | s(bool,'T_0') = s(bool,X118) | s(bool,X116) = s(bool,X119) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X119),s(X120,X121)))) )),
  inference(superposition,[],[f694,f279])).
fof(f12942,plain,(
  ( ! [X111,X114,X112,X110,X115,X113] : (s(bool,X110) = s(bool,'const.combin.K_2'(s(bool,X111),s(bool,X110))) | s(bool,X112) = s(bool,'const.combin.K_2'(s(bool,X111),s(bool,X112))) | s(bool,'T_0') = s(bool,X112) | s(bool,X110) = s(bool,X113) | s(bool,'T_0') = s(bool,happ(s(fun(X114,bool),'const.combin.K_1'(s(bool,X113))),s(X114,X115)))) )),
  inference(superposition,[],[f694,f280])).
fof(f11857,plain,(
  ( ! [X313,X315,X310,X312,X314,X311] : (s(bool,X313) != s(bool,happ(s(fun(X314,bool),'const.combin.K_1'(s(bool,X311))),s(X314,X315))) | s(bool,X313) = s(bool,happ(s(fun(X310,bool),'const.combin.K_1'(s(bool,X311))),s(X310,X312))) | s(bool,'T_0') = s(bool,X313)) )),
  inference(superposition,[],[f7500,f159])).
fof(f11856,plain,(
  ( ! [X308,X304,X306,X309,X305,X307] : (s(bool,X307) != s(bool,happ(s(fun(X308,bool),'const.combin.K_1'(s(bool,X304))),s(X308,X309))) | s(bool,X307) = s(bool,'const.combin.K_2'(s(bool,X304),s(X305,X306))) | s(bool,'T_0') = s(bool,X307)) )),
  inference(superposition,[],[f7500,f139])).
fof(f11810,plain,(
  ( ! [X302,X304,X306,X303,X305,X307] : (s(bool,X303) != s(bool,happ(s(fun(X305,bool),'const.combin.K_1'(s(bool,X306))),s(X305,X307))) | s(bool,X306) = s(bool,happ(s(fun(X302,bool),'const.combin.K_1'(s(bool,X303))),s(X302,X304))) | s(bool,'T_0') = s(bool,happ(s(fun(X302,bool),'const.combin.K_1'(s(bool,X303))),s(X302,X304)))) )),
  inference(superposition,[],[f7500,f159])).
fof(f11809,plain,(
  ( ! [X300,X296,X298,X301,X297,X299] : (s(bool,X296) != s(bool,happ(s(fun(X299,bool),'const.combin.K_1'(s(bool,X300))),s(X299,X301))) | s(bool,X300) = s(bool,'const.combin.K_2'(s(bool,X296),s(X297,X298))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X296),s(X297,X298)))) )),
  inference(superposition,[],[f7500,f139])).
fof(f11991,plain,(
  ( ! [X57,X54,X52,X58,X56,X55,X53] : (s(bool,X53) != s(bool,happ(s(fun(X54,bool),'const.combin.K_1'(s(bool,X55))),s(X54,X56))) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,happ(s(fun(X57,bool),'const.combin.K_1'(s(bool,X53))),s(X57,X58)))) )),
  inference(duplicate_literal_removal,[],[f11778])).
fof(f11778,plain,(
  ( ! [X57,X54,X52,X58,X56,X55,X53] : (s(bool,X53) != s(bool,happ(s(fun(X54,bool),'const.combin.K_1'(s(bool,X55))),s(X54,X56))) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,happ(s(fun(X57,bool),'const.combin.K_1'(s(bool,X53))),s(X57,X58)))) )),
  inference(superposition,[],[f7500,f280])).
fof(f10335,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,X89) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X90))),s(bool,X89))) | s(bool,'T_0') = s(bool,X90) | s(bool,X89) = s(bool,X91) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X91),s(X92,X93)))) )),
  inference(superposition,[],[f9230,f279])).
fof(f10334,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s(bool,X84) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X85))),s(bool,X84))) | s(bool,'T_0') = s(bool,X85) | s(bool,X84) = s(bool,X86) | s(bool,'T_0') = s(bool,happ(s(fun(X87,bool),'const.combin.K_1'(s(bool,X86))),s(X87,X88)))) )),
  inference(superposition,[],[f9230,f280])).
fof(f9835,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,X1) = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f9834])).
fof(f9834,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) = s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(duplicate_literal_removal,[],[f9365])).
fof(f9365,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) = s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(superposition,[],[f9157,f280])).
fof(f9837,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f9836])).
fof(f9836,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f9362])).
fof(f9362,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f9157,f279])).
fof(f9075,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X3))),s(X2,X4))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f9074])).
fof(f9074,plain,(
  ( ! [X292,X288,X290,X293,X289,X291] : (s(bool,X292) != s(bool,happ(s(fun(X289,bool),'const.combin.K_1'(s(bool,X290))),s(X289,X291))) | s(bool,X292) = s(bool,X293) | s(bool,'T_0') = s(bool,X293) | s(bool,'T_0') = s(bool,X288) | s(bool,'T_0') = s(bool,X290)) )),
  inference(duplicate_literal_removal,[],[f8805])).
fof(f8805,plain,(
  ( ! [X292,X288,X290,X293,X289,X291] : (s(bool,X292) != s(bool,happ(s(fun(X289,bool),'const.combin.K_1'(s(bool,X290))),s(X289,X291))) | s(bool,X292) = s(bool,X293) | s(bool,'T_0') = s(bool,X293) | s(bool,'T_0') = s(bool,X288) | s(bool,'T_0') = s(bool,X290) | s(bool,'T_0') = s(bool,X288)) )),
  inference(superposition,[],[f3667,f303])).
fof(f9230,plain,(
  ( ! [X4,X0,X3] : (s(bool,'T_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X0))),s(X3,X4))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f9081,f139])).
fof(f9081,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X0))),s(X3,X4)))) )),
  inference(condensation,[],[f9080])).
fof(f9080,plain,(
  ( ! [X187,X185,X188,X186,X184,X183] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X187,X188))) != s(bool,happ(s(fun(X184,bool),'const.combin.K_1'(s(bool,X185))),s(X184,X186))) | s(bool,'T_0') = s(bool,X183) | s(bool,'T_0') = s(bool,X185)) )),
  inference(duplicate_literal_removal,[],[f8790])).
fof(f8790,plain,(
  ( ! [X187,X185,X188,X186,X184,X183] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X187,X188))) != s(bool,happ(s(fun(X184,bool),'const.combin.K_1'(s(bool,X185))),s(X184,X186))) | s(bool,'T_0') = s(bool,X183) | s(bool,'T_0') = s(bool,X185) | s(bool,'T_0') = s(bool,X183)) )),
  inference(superposition,[],[f1175,f303])).
fof(f9157,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f9156])).
fof(f9156,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f8636])).
fof(f8636,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f303,f112])).
fof(f8393,plain,(
  ( ! [X24,X23,X21,X19,X22,X20,X18] : (s(bool,X19) != s(bool,happ(s(fun(X20,bool),'const.combin.K_1'(s(bool,X18))),s(X20,X21))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X19),s(X22,X23))) | s(bool,X18) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f8246,f180])).
fof(f8392,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X9,X16] : (s(bool,X10) != s(bool,happ(s(fun(X11,bool),'const.combin.K_1'(s(bool,X9))),s(X11,X12))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X13,X14))) | s(bool,X9) = s(bool,X15) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X15),s(X16,X17)))) )),
  inference(superposition,[],[f8246,f279])).
fof(f8391,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X0))),s(X2,X3))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X4,X5))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,happ(s(fun(X7,bool),'const.combin.K_1'(s(bool,X6))),s(X7,X8)))) )),
  inference(superposition,[],[f8246,f280])).
fof(f8124,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,X15) != s(bool,happ(s(fun(X16,bool),'const.combin.K_1'(s(bool,X14))),s(X16,X17))) | s(bool,'T_0') = s(bool,X15) | s(bool,X14) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f7512,f180])).
fof(f8123,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s(bool,X8) != s(bool,happ(s(fun(X9,bool),'const.combin.K_1'(s(bool,X7))),s(X9,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,X7) = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X12,X13)))) )),
  inference(superposition,[],[f7512,f279])).
fof(f8122,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X0))),s(X2,X3))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,happ(s(fun(X5,bool),'const.combin.K_1'(s(bool,X4))),s(X5,X6)))) )),
  inference(superposition,[],[f7512,f280])).
fof(f8244,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,X1) != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f8243])).
fof(f8243,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) != s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(duplicate_literal_removal,[],[f8092])).
fof(f8092,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) != s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(superposition,[],[f7512,f280])).
fof(f8246,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f8245])).
fof(f8245,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f8089])).
fof(f8089,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f7512,f279])).
fof(f7500,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f280])).
fof(f7512,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f7494])).
fof(f7494,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f280])).
fof(f7414,plain,(
  ( ! [X810,X808,X812,X811,X809,X813] : (s(X810,f(s(bool,'T_0'))) != s(X810,g(s(bool,'T_0'))) | s(fun(bool,X810),X808) = s(fun(bool,X810),X809) | s(bool,X811) = s(bool,sK12(X808,X809,X810,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(X812,bool),'const.combin.K_1'(s(bool,X811))),s(X812,X813)))) )),
  inference(superposition,[],[f146,f280])).
fof(f7291,plain,(
  ( ! [X476,X472,X474,X471,X475,X473,X470] : (s(bool,X470) != s(bool,'const.combin.K_2'(s(bool,X471),s(bool,X470))) | s(bool,'T_0') = s(bool,happ(s(fun(X472,bool),'const.combin.K_1'(s(bool,X471))),s(X472,X473))) | s(bool,X470) = s(bool,X474) | s(bool,'T_0') = s(bool,happ(s(fun(X475,bool),'const.combin.K_1'(s(bool,X474))),s(X475,X476)))) )),
  inference(superposition,[],[f2451,f280])).
fof(f7283,plain,(
  ( ! [X422,X424,X421,X423,X425] : (s(bool,X421) != s(bool,'const.combin.K_2'(s(bool,X422),s(bool,X421))) | s(bool,'T_0') = s(bool,X422) | s(bool,X421) = s(bool,X423) | s(bool,'T_0') = s(bool,happ(s(fun(X424,bool),'const.combin.K_1'(s(bool,X423))),s(X424,X425)))) )),
  inference(superposition,[],[f2006,f280])).
fof(f7273,plain,(
  ( ! [X364,X360,X362,X365,X361,X363] : (s(bool,X360) = s(bool,'const.combin.K_2'(s(bool,X361),s(bool,X360))) | s(bool,X361) = s(bool,X362) | s(bool,'T_0') = s(bool,X362) | s(bool,X360) = s(bool,X363) | s(bool,'T_0') = s(bool,happ(s(fun(X364,bool),'const.combin.K_1'(s(bool,X363))),s(X364,X365)))) )),
  inference(superposition,[],[f279,f280])).
fof(f7615,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4)))) )),
  inference(condensation,[],[f7614])).
fof(f7614,plain,(
  ( ! [X280,X282,X279,X281,X283,X284] : (s(bool,X279) != s(bool,X280) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,X280) | s(bool,X279) = s(bool,X282) | s(bool,'T_0') = s(bool,happ(s(fun(X283,bool),'const.combin.K_1'(s(bool,X282))),s(X283,X284)))) )),
  inference(duplicate_literal_removal,[],[f7260])).
fof(f7260,plain,(
  ( ! [X280,X282,X279,X281,X283,X284] : (s(bool,X279) != s(bool,X280) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,X280) | s(bool,X279) = s(bool,X282) | s(bool,'T_0') = s(bool,happ(s(fun(X283,bool),'const.combin.K_1'(s(bool,X282))),s(X283,X284)))) )),
  inference(superposition,[],[f3667,f280])).
fof(f7228,plain,(
  ( ! [X54,X52,X50,X48,X56,X55,X53,X51,X49] : (s(bool,X49) != s(bool,'const.combin.K_2'(s(bool,X48),s(X50,X51))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X49),s(X52,X53))) | s(bool,X48) = s(bool,X54) | s(bool,'T_0') = s(bool,happ(s(fun(X55,bool),'const.combin.K_1'(s(bool,X54))),s(X55,X56)))) )),
  inference(superposition,[],[f1455,f280])).
fof(f7227,plain,(
  ( ! [X39,X47,X45,X43,X41,X46,X44,X42,X40] : (s(bool,X40) != s(bool,'const.combin.K_2'(s(bool,X39),s(X41,X42))) | s(bool,'T_0') = s(bool,happ(s(fun(X43,bool),'const.combin.K_1'(s(bool,X40))),s(X43,X44))) | s(bool,X39) = s(bool,X45) | s(bool,'T_0') = s(bool,happ(s(fun(X46,bool),'const.combin.K_1'(s(bool,X45))),s(X46,X47)))) )),
  inference(superposition,[],[f1384,f280])).
fof(f7225,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25] : (s(bool,X26) != s(bool,'const.combin.K_2'(s(bool,X25),s(X27,X28))) | s(bool,'T_0') = s(bool,X26) | s(bool,X25) = s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun(X30,bool),'const.combin.K_1'(s(bool,X29))),s(X30,X31)))) )),
  inference(superposition,[],[f1175,f280])).
fof(f7220,plain,(
  ( ! [X850,X848,X852,X847,X851,X849] : (s(X849,f(s(bool,X850))) != s(X849,g(s(bool,X850))) | s(fun(bool,X849),X847) = s(fun(bool,X849),X848) | s(bool,'T_0') = s(bool,sK12(X847,X848,X849,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(X851,bool),'const.combin.K_1'(s(bool,X850))),s(X851,X852)))) )),
  inference(superposition,[],[f146,f280])).
fof(f6907,plain,(
  ( ! [X107,X105,X106,X104] : (s(bool,X104) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X105))),s(bool,X104))) | s(bool,X105) = s(bool,X106) | s(bool,'T_0') = s(bool,X106) | s(bool,X104) = s(bool,X107) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f280,f180])).
fof(f6906,plain,(
  ( ! [X103,X101,X99,X102,X100,X98] : (s(bool,X98) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X99))),s(bool,X98))) | s(bool,X99) = s(bool,X100) | s(bool,'T_0') = s(bool,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X101),s(X102,X103)))) )),
  inference(superposition,[],[f280,f279])).
fof(f6905,plain,(
  ( ! [X94,X92,X97,X95,X93,X96] : (s(bool,X92) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X93))),s(bool,X92))) | s(bool,X93) = s(bool,X94) | s(bool,'T_0') = s(bool,X94) | s(bool,X92) = s(bool,X95) | s(bool,'T_0') = s(bool,happ(s(fun(X96,bool),'const.combin.K_1'(s(bool,X95))),s(X96,X97)))) )),
  inference(superposition,[],[f280,f280])).
fof(f6887,plain,(
  ( ! [X261,X263,X265,X260,X262,X264] : (s(bool,'T_0') = s(bool,happ(s(fun(X263,bool),'const.combin.K_1'(s(bool,X261))),s(X263,X264))) | s(bool,X265) = s(bool,happ(s(fun(X260,bool),'const.combin.K_1'(s(bool,X261))),s(X260,X262))) | s(bool,'T_0') = s(bool,X265)) )),
  inference(superposition,[],[f280,f159])).
fof(f6813,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s(bool,X16) = s(bool,X17) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,happ(s(fun(X19,bool),'const.combin.K_1'(s(bool,X18))),s(X19,X20))) | s(bool,X16) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f280,f180])).
fof(f6812,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (s(bool,X8) = s(bool,X9) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X11,bool),'const.combin.K_1'(s(bool,X10))),s(X11,X12))) | s(bool,X8) = s(bool,X13) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15)))) )),
  inference(superposition,[],[f280,f279])).
fof(f6811,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),'const.combin.K_1'(s(bool,X5))),s(X6,X7)))) )),
  inference(superposition,[],[f280,f280])).
fof(f6705,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s(X33,f(s(bool,'T_0'))) != s(X33,g(s(bool,'T_0'))) | s(fun(bool,X33),X31) = s(fun(bool,X33),X32) | s(bool,X34) = s(bool,sK12(X31,X32,X33,bool)) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X34),s(X35,X36)))) )),
  inference(superposition,[],[f146,f279])).
fof(f6704,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(X27,f(s(bool,X28))) != s(X27,g(s(bool,X28))) | s(fun(bool,X27),X25) = s(fun(bool,X27),X26) | s(bool,'T_0') = s(bool,sK12(X25,X26,X27,bool)) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X28),s(X29,X30)))) )),
  inference(superposition,[],[f146,f279])).
fof(f6700,plain,(
  ( ! [X10,X8,X7,X9] : (s(X9,f(s(bool,X10))) != s(X9,g(s(bool,X10))) | s(fun(bool,X9),X7) = s(fun(bool,X9),X8) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,sK12(X7,X8,X9,bool))) )),
  inference(superposition,[],[f146,f180])).
fof(f6699,plain,(
  ( ! [X6,X4,X5,X3] : (s(X5,f(s(bool,'T_0'))) != s(X5,g(s(bool,'T_0'))) | s(fun(bool,X5),X3) = s(fun(bool,X5),X4) | s(bool,X6) = s(bool,sK12(X3,X4,X5,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f146,f180])).
fof(f6547,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) != s(bool,'const.combin.K_2'(s(bool,X96),s(bool,X95))) | s(bool,'T_0') = s(bool,happ(s(fun(X97,bool),'const.combin.K_1'(s(bool,X96))),s(X97,X98))) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) )),
  inference(superposition,[],[f2451,f180])).
fof(f6546,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X88))) | s(bool,'T_0') = s(bool,happ(s(fun(X90,bool),'const.combin.K_1'(s(bool,X89))),s(X90,X91))) | s(bool,X88) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f2451,f279])).
fof(f5864,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X3))),s(X4,X5))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),'const.combin.K_1'(s(bool,X2))),s(X6,X7)))) )),
  inference(superposition,[],[f2047,f2047])).
fof(f5500,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s(bool,X10) != s(bool,'const.combin.K_2'(s(bool,X9),s(X11,X12))) | s(bool,'T_0') = s(bool,happ(s(fun(X13,bool),'const.combin.K_1'(s(bool,X10))),s(X13,X14))) | s(bool,X9) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f1384,f180])).
fof(f5499,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,'T_0') = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X1))),s(X4,X5))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X6),s(X7,X8)))) )),
  inference(superposition,[],[f1384,f279])).
fof(f4629,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X0))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f4628])).
fof(f4628,plain,(
  ( ! [X12,X15,X11,X16] : (s(bool,'F_0') = s(bool,happ(s(fun(X15,bool),'const.combin.K_1'(s(bool,X11))),s(X15,X16))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f4251,f2006])).
fof(f4251,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X13,X14))) | s(bool,'F_0') = s(bool,happ(s(fun(X15,bool),'const.combin.K_1'(s(bool,X11))),s(X15,X16))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f233,f180])).
fof(f4155,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s(bool,X138) != s(bool,X140) | s(bool,X141) = s(bool,happ(s(fun(X137,bool),'const.combin.K_1'(s(bool,X138))),s(X137,X139))) | s(bool,'T_0') = s(bool,X141) | s(bool,'T_0') = s(bool,X140)) )),
  inference(superposition,[],[f3667,f159])).
fof(f4162,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X3,X4)))) )),
  inference(condensation,[],[f4161])).
fof(f4161,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(duplicate_literal_removal,[],[f4140])).
fof(f4140,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(superposition,[],[f3667,f279])).
fof(f4128,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s(bool,X133) != s(bool,X135) | s(bool,X135) = s(bool,X136) | s(bool,'T_0') = s(bool,X136) | s(bool,'T_0') = s(bool,happ(s(fun(X132,bool),'const.combin.K_1'(s(bool,X133))),s(X132,X134)))) )),
  inference(superposition,[],[f3667,f159])).
fof(f3844,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(X3,X4))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f3698,f112])).
fof(f3667,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f3598,f112])).
fof(f3598,plain,(
  ( ! [X112,X115] : (s(bool,'F_0') != s(bool,X112) | s(bool,X112) = s(bool,X115) | s(bool,'T_0') = s(bool,X115)) )),
  inference(superposition,[],[f3461,f139])).
fof(f3371,plain,(
  ( ! [X167,X165,X163,X166,X164,X168] : (s(bool,X166) != s(bool,'const.combin.K_2'(s(bool,X164),s(X167,X168))) | s(bool,X166) = s(bool,happ(s(fun(X163,bool),'const.combin.K_1'(s(bool,X164))),s(X163,X165))) | s(bool,'T_0') = s(bool,X166)) )),
  inference(superposition,[],[f1163,f159])).
fof(f3370,plain,(
  ( ! [X158,X161,X159,X157,X162,X160] : (s(bool,X160) != s(bool,'const.combin.K_2'(s(bool,X157),s(X161,X162))) | s(bool,X160) = s(bool,'const.combin.K_2'(s(bool,X157),s(X158,X159))) | s(bool,'T_0') = s(bool,X160)) )),
  inference(superposition,[],[f1163,f139])).
fof(f3344,plain,(
  ( ! [X158,X163,X161,X159,X162,X160] : (s(bool,X159) != s(bool,'const.combin.K_2'(s(bool,X161),s(X162,X163))) | s(bool,X161) = s(bool,happ(s(fun(X158,bool),'const.combin.K_1'(s(bool,X159))),s(X158,X160))) | s(bool,'T_0') = s(bool,happ(s(fun(X158,bool),'const.combin.K_1'(s(bool,X159))),s(X158,X160)))) )),
  inference(superposition,[],[f1163,f159])).
fof(f3343,plain,(
  ( ! [X156,X154,X152,X157,X155,X153] : (s(bool,X152) != s(bool,'const.combin.K_2'(s(bool,X155),s(X156,X157))) | s(bool,X155) = s(bool,'const.combin.K_2'(s(bool,X152),s(X153,X154))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X152),s(X153,X154)))) )),
  inference(superposition,[],[f1163,f139])).
fof(f3461,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f3322])).
fof(f3322,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1163,f112])).
fof(f2465,plain,(
  ( ! [X54,X55,X53] : (s(bool,X53) != s(bool,'const.combin.K_2'(s(bool,X54),s(bool,X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X53) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f2006,f180])).
fof(f2464,plain,(
  ( ! [X52,X50,X48,X51,X49] : (s(bool,X48) != s(bool,'const.combin.K_2'(s(bool,X49),s(bool,X48))) | s(bool,'T_0') = s(bool,X49) | s(bool,X48) = s(bool,X50) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X50),s(X51,X52)))) )),
  inference(superposition,[],[f2006,f279])).
fof(f2451,plain,(
  ( ! [X111,X114,X112,X115,X113] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X112),s(X114,X115))) | s(bool,'T_0') = s(bool,happ(s(fun(X111,bool),'const.combin.K_1'(s(bool,X112))),s(X111,X113)))) )),
  inference(superposition,[],[f2006,f159])).
fof(f2047,plain,(
  ( ! [X111,X114,X112,X115,X113] : (s(bool,X112) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X114,X115))) | s(bool,'T_0') = s(bool,happ(s(fun(X111,bool),'const.combin.K_1'(s(bool,X112))),s(X111,X113)))) )),
  inference(superposition,[],[f1978,f159])).
fof(f2256,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X3,X4)))) )),
  inference(condensation,[],[f2255])).
fof(f2255,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f2033])).
fof(f2033,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f1978,f279])).
fof(f2006,plain,(
  ( ! [X4,X0,X3] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X0),s(X3,X4))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f1926,f139])).
fof(f1926,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) != s(bool,'const.combin.K_2'(s(bool,X0),s(X3,X4)))) )),
  inference(condensation,[],[f1925])).
fof(f1925,plain,(
  ( ! [X99,X97,X95,X100,X98,X96] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X99,X100))) != s(bool,'const.combin.K_2'(s(bool,X96),s(X97,X98))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X96)) )),
  inference(duplicate_literal_removal,[],[f1820])).
fof(f1820,plain,(
  ( ! [X99,X97,X95,X100,X98,X96] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X99,X100))) != s(bool,'const.combin.K_2'(s(bool,X96),s(X97,X98))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X96) | s(bool,'T_0') = s(bool,X95)) )),
  inference(superposition,[],[f1175,f302])).
fof(f1757,plain,(
  ( ! [X127,X125,X123,X126,X124,X122] : (s(bool,X125) = s(bool,'const.combin.K_2'(s(bool,X123),s(X126,X127))) | s(bool,'T_0') = s(bool,happ(s(fun(X122,bool),'const.combin.K_1'(s(bool,X123))),s(X122,X124))) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f302,f159])).
fof(f1978,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f1977])).
fof(f1977,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f1736])).
fof(f1736,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f302,f112])).
fof(f1735,plain,(
  ( ! [X127,X125,X123,X126,X124,X122] : (s(bool,X123) = s(bool,'const.combin.K_2'(s(bool,X125),s(X126,X127))) | s(bool,'T_0') = s(bool,X125) | s(bool,'T_0') = s(bool,happ(s(fun(X122,bool),'const.combin.K_1'(s(bool,X123))),s(X122,X124)))) )),
  inference(superposition,[],[f302,f159])).
fof(f1592,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s(bool,X10) != s(bool,'const.combin.K_2'(s(bool,X9),s(X11,X12))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X13,X14))) | s(bool,X9) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f1455,f180])).
fof(f1591,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X4,X5))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X6),s(X7,X8)))) )),
  inference(superposition,[],[f1455,f279])).
fof(f1386,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s(bool,X8) != s(bool,'const.combin.K_2'(s(bool,X7),s(X9,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,X7) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1175,f180])).
fof(f1385,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X4),s(X5,X6)))) )),
  inference(superposition,[],[f1175,f279])).
fof(f1384,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X92,X93))) | s(bool,'T_0') = s(bool,happ(s(fun(X89,bool),'const.combin.K_1'(s(bool,X90))),s(X89,X91)))) )),
  inference(superposition,[],[f1175,f159])).
fof(f1455,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f1454])).
fof(f1454,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f1372])).
fof(f1372,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f1175,f279])).
fof(f1163,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f279])).
fof(f1175,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f1157])).
fof(f1157,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f279])).
fof(f991,plain,(
  ( ! [X57,X58,X56,X55] : (s(bool,X55) = s(bool,'const.combin.K_2'(s(bool,X56),s(bool,X55))) | s(bool,X56) = s(bool,X57) | s(bool,'T_0') = s(bool,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f279,f180])).
fof(f990,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (s(bool,X49) = s(bool,'const.combin.K_2'(s(bool,X50),s(bool,X49))) | s(bool,X50) = s(bool,X51) | s(bool,'T_0') = s(bool,X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X52),s(X53,X54)))) )),
  inference(superposition,[],[f279,f279])).
fof(f979,plain,(
  ( ! [X118,X116,X114,X117,X115,X113] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X114),s(X116,X117))) | s(bool,X118) = s(bool,happ(s(fun(X113,bool),'const.combin.K_1'(s(bool,X114))),s(X113,X115))) | s(bool,'T_0') = s(bool,X118)) )),
  inference(superposition,[],[f279,f159])).
fof(f959,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (s(bool,'T_0') = s(bool,X71) | s(bool,X73) = s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X73),s(X74,X75)))) )),
  inference(superposition,[],[f279,f159])).
fof(f941,plain,(
  ( ! [X12,X10,X8,X13,X11,X9] : (s(bool,X8) = s(bool,X9) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X11,X12))) | s(bool,X8) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f279,f180])).
fof(f940,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X5),s(X6,X7)))) )),
  inference(superposition,[],[f279,f279])).
fof(f939,plain,(
  ( ! [X103,X107,X105,X102,X106,X104] : (s(bool,X103) = s(bool,X105) | s(bool,'T_0') = s(bool,happ(s(fun(X102,bool),'const.combin.K_1'(s(bool,X103))),s(X102,X104))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X105),s(X106,X107)))) )),
  inference(superposition,[],[f279,f159])).
fof(f1329,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5)))) )),
  inference(condensation,[],[f1328])).
fof(f1328,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'T_0') = s(bool,X39) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X38),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(duplicate_literal_removal,[],[f907])).
fof(f907,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'T_0') = s(bool,X39) | s(bool,'T_0') = s(bool,X39) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X38),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(superposition,[],[f279,f279])).
fof(f694,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X48) = s(bool,'const.combin.K_2'(s(bool,X49),s(bool,X48))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f232,f112])).
fof(f670,plain,(
  ( ! [X39,X36,X40] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X39,X40))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f232,f139])).
fof(f557,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'T_0') = s(bool,happ(s(fun(X48,bool),'const.combin.K_1'(s(bool,X46))),s(X48,X49))) | s(bool,'F_0') = s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,X46))),s(X45,X47)))) )),
  inference(superposition,[],[f215,f159])).
fof(f556,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,'T_0') = s(bool,happ(s(fun(X43,bool),'const.combin.K_1'(s(bool,X40))),s(X43,X44))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X40),s(X41,X42)))) )),
  inference(superposition,[],[f215,f139])).
fof(f346,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f110,f180])).
fof(f303,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,X24) = s(bool,happ(s(fun(X21,bool),'const.combin.K_1'(s(bool,X22))),s(X21,X23))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f180,f159])).
fof(f302,plain,(
  ( ! [X19,X17,X20,X18] : (s(bool,X20) = s(bool,'const.combin.K_2'(s(bool,X17),s(X18,X19))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f180,f139])).
fof(f292,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f180,f180])).
fof(f280,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,happ(s(fun(X28,bool),'const.combin.K_1'(s(bool,X29))),s(X28,X30)))) )),
  inference(superposition,[],[f180,f159])).
fof(f279,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,X24) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X24),s(X25,X26)))) )),
  inference(superposition,[],[f180,f139])).
fof(f233,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X17),s(X19,X20))) | s(bool,'F_0') = s(bool,happ(s(fun(X16,bool),'const.combin.K_1'(s(bool,X17))),s(X16,X18)))) )),
  inference(superposition,[],[f182,f159])).
fof(f232,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X14,X15))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X12,X13)))) )),
  inference(superposition,[],[f182,f139])).
fof(f215,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X5))),s(X4,X6))) | s(bool,'F_0') = s(bool,X5)) )),
  inference(superposition,[],[f159,f112])).
fof(f183,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f111,f112])).
fof(f182,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X3,X4))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f112,f139])).
fof(f180,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f112,f112])).
fof(f146,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK12(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK12(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK12(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK12(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12])],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.closSem.state_literal_|49||49|',aHL_EXT)).
fof(f145,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.closSem.state_ffi_1'(s('type.closSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.closSem.state_ffi_1'(s('type.closSem.state'(X1),X2)))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.closSem.state_ffi_1'(s('type.closSem.state'(X1),X2)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X7,X6] : ! [X18,X19] : s('type.ffi.ffi_state'(X7),'const.closSem.state_ffi_1'(s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X19),s('type.closSem.state'(X6),X18))))) = s('type.ffi.ffi_state'(X7),happ(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X19),s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_85_prove_ltb')).
fof(f144,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X1),X2))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X1),X2))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X1),X2))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7,X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_8|49|_prove_ltb')).
fof(f143,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X1),X2))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X1),X2))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X1),X2))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_68_prove_ltb')).
fof(f141,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X1),X2))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X1),X2))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X1),X2))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.closSem.state'(X1),X2)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X7,X6] : ! [X18,X19] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X18))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_77_prove_ltb')).
fof(f134,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f136,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f137,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.state'(X0),X1) != s('type.closSem.state'(X0),X2) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f138,plain,(
  ( ! [X2,X0,X1] : (s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),X2) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X2))) | s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) != s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f132,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X19),s('type.closSem.state'(X6),X18))))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X19),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_87_prove_ltb')).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18))))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),happ(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X19),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_84_prove_ltb')).
fof(f129,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_7|48|_prove_ltb')).
fof(f128,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_8|48|_prove_ltb')).
fof(f126,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_79_prove_ltb')).
fof(f125,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X18,X19] : s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X18))) = s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_74_prove_ltb')).
fof(f124,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_67_prove_ltb')).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X18,X19] : s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X18))) = s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_72_prove_ltb')).
fof(f121,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_82_prove_ltb')).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X18,X19] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X18))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_78_prove_ltb')).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X18,X19] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X19),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X18))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_86_prove_ltb')).
fof(f118,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X18,X19] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X18))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_76_prove_ltb')).
fof(f117,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X18,X19] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),X18))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_69_prove_ltb')).
fof(f116,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X18,X19] : s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X18))) = s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_7|49|_prove_ltb')).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),X1))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X0),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X18,X19] : s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),X18))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(X6),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_75_prove_ltb')).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.closSem.state_ffi_1'(s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.closSem.state'(X0),X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X18,X19] : s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),X18))) = s('type.ffi.ffi_state'(X6),'const.closSem.state_ffi_1'(s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X19),s('type.closSem.state'(X6),X18)))))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.closSem_73_prove_ltb')).
fof(f112,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.closSem.state_literal_|49||49|',aHL_BOOL_CASES)).
fof(f111,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closSem.state_literal_|49||49|',aHL_FALSITY)).
fof(f110,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.closSem.state_literal_|49||49|',aHL_TRUTH)).
fof(f29535,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f556,f557,f634,f635,f636,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1735,f1978,f1757,f2006,f2256,f2047,f2451,f2464,f2465,f3461,f3343,f3344,f3370,f3371,f3598,f3667,f3844,f4128,f4162,f4155,f4629,f5499,f5500,f5864,f6546,f6547,f6699,f6700,f6704,f6705,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7220,f7225,f7227,f7228,f7615,f7273,f7283,f7291,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9157,f9230,f9075,f9837,f9835,f9891,f9893,f9898,f9900,f10334,f10335,f11991,f11809,f11810,f11856,f11857,f12942,f12943,f12944,f15490,f15491,f15492,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f26698,f26717,f26686,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f26505,f27186,f27188,f27189,f27192,f26487,f26481,f27200,f27201,f26478,f26473,f27203,f27204,f27206,f26469,f26467,f27209,f26466,f26465,f27211,f26399,f27285,f27286,f26393,f26019,f27341,f27342,f26364,f27343,f26291,f26290,f27652,f26282,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26178,f26172,f26171,f27669,f26165,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f25781,f25776,f25768,f27704,f25252,f26796,f24959,f24877,f24876,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f27948,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f10405,f10314,f9555,f9379,f28150,f7595,f28176,f28191,f28208,f2193,f25989,f26363,f7089,f6703,f21640,f21261,f21026,f18663,f18010,f3457,f1981,f16176,f7411,f7217,f7086,f6718,f6717,f6716,f6715,f6712,f6711,f28209,f28198,f28133,f27949,f27754,f27720,f27703,f27701,f27698,f27697,f27670,f27666,f27653,f27272,f26602,f26482,f26477,f26472,f26471,f26468,f26464,f26398,f26366,f26295,f26294,f26274,f26271,f26270,f26268,f26039,f26036,f26024,f26020,f26017,f26016,f26007,f26002,f25999,f25996,f25995,f25991,f25990,f25920,f25919,f25917,f25916,f25914,f25908,f25905,f25661,f25658,f25166,f25165,f25164,f25163,f24982,f24981,f22996,f22781,f22780,f12564,f12563,f10543,f10542,f10541,f9770,f7287,f7284,f7275,f7269,f7268,f7267,f6728,f6727,f6725,f6724,f6710,f6698,f5939,f5938,f5015,f5014,f3699,f3698,f3624,f3539,f3538,f2686,f2685,f1101,f1100,f1099,f653,f565,f349,f28144,f25994,f21641,f21260,f21027,f12280,f12278,f12148,f12147,f11995,f11990,f11989,f9164,f9162,f9082,f8880,f7272,f4292,f4291,f16179,f147,f29324,f29325,f29343,f29344,f29360,f29361,f29371,f29372,f29491,f29488,f29382])).
fof(f29534,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f556,f557,f634,f635,f636,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1735,f1978,f1757,f2006,f2256,f2047,f2451,f2464,f2465,f3461,f3343,f3344,f3370,f3371,f3598,f3667,f3844,f4128,f4162,f4155,f4629,f5499,f5500,f5864,f6546,f6547,f6699,f6700,f6704,f6705,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7220,f7225,f7227,f7228,f7615,f7273,f7283,f7291,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9157,f9230,f9075,f9837,f9835,f9891,f9893,f9898,f9900,f10334,f10335,f11991,f11809,f11810,f11856,f11857,f12942,f12943,f12944,f15490,f15491,f15492,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f26698,f26717,f26686,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f26505,f27186,f27188,f27189,f27192,f26487,f26481,f27200,f27201,f26478,f26473,f27203,f27204,f27206,f26469,f26467,f27209,f26466,f26465,f27211,f26399,f27285,f27286,f26393,f26019,f27341,f27342,f26364,f27343,f26291,f26290,f27652,f26282,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26178,f26172,f26171,f27669,f26165,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f25781,f25776,f25768,f27704,f25252,f26796,f24959,f24877,f24876,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f27948,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f10405,f10314,f9555,f9379,f28150,f7595,f28176,f28191,f28208,f2193,f25989,f26363,f7089,f6703,f21640,f21261,f21026,f18663,f18010,f3457,f1981,f16176,f7411,f7217,f7086,f6718,f6717,f6716,f6715,f6712,f6711,f28209,f28198,f28133,f27949,f27754,f27720,f27703,f27701,f27698,f27697,f27670,f27666,f27653,f27272,f26602,f26482,f26477,f26472,f26471,f26468,f26464,f26398,f26366,f26295,f26294,f26274,f26271,f26270,f26268,f26039,f26036,f26024,f26020,f26017,f26016,f26007,f26002,f25999,f25996,f25995,f25991,f25990,f25920,f25919,f25917,f25916,f25914,f25908,f25905,f25661,f25658,f25166,f25165,f25164,f25163,f24982,f24981,f22996,f22781,f22780,f12564,f12563,f10543,f10542,f10541,f9770,f7287,f7284,f7275,f7269,f7268,f7267,f6728,f6727,f6725,f6724,f6710,f6698,f5939,f5938,f5015,f5014,f3699,f3698,f3624,f3539,f3538,f2686,f2685,f1101,f1100,f1099,f653,f565,f349,f28144,f25994,f21641,f21260,f21027,f12280,f12278,f12148,f12147,f11995,f11990,f11989,f9164,f9162,f9082,f8880,f7272,f4292,f4291,f16179,f147,f29324,f29325,f29343,f29344,f29360,f29361,f29371,f29372,f29491,f29488])).
fof(f29489,plain,(
  $false | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f29488,f156])).
fof(f29383,plain,(
  $false | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f29382,f156])).
fof(f29310,plain,(
  $false | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f29309,f156])).
fof(f28864,plain,(
  $false | ($spl0 | $spl4 | $spl9)),
  inference(subsumption_resolution,[],[f28863,f156])).
fof(f28863,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28862,f159])).
fof(f28862,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28861,f159])).
fof(f28861,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28860,f119])).
fof(f28860,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28859,f119])).
fof(f28859,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28858,f141])).
fof(f28858,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28857,f141])).
fof(f28857,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28856,f118])).
fof(f28856,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28855,f118])).
fof(f28855,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28631,f114])).
fof(f28631,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4)),
  inference(superposition,[],[f114,f24844])).
fof(f24844,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f147,f151])).
fof(f28768,plain,(
  $false | ($spl0 | $spl4 | $spl9)),
  inference(subsumption_resolution,[],[f28767,f156])).
fof(f28767,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28766,f159])).
fof(f28766,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28765,f159])).
fof(f28765,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28764,f119])).
fof(f28764,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28763,f119])).
fof(f28763,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28762,f141])).
fof(f28762,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28761,f141])).
fof(f28761,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28760,f118])).
fof(f28760,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28759,f118])).
fof(f28759,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28758,f114])).
fof(f28758,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28621,f114])).
fof(f28621,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4)),
  inference(unit_resulting_resolution,[],[f24844,f136])).
fof(f28701,plain,(
  $false | ($spl0 | $spl4 | $spl9)),
  inference(subsumption_resolution,[],[f28700,f156])).
fof(f28700,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28699,f159])).
fof(f28699,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28698,f159])).
fof(f28698,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28697,f119])).
fof(f28697,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28696,f119])).
fof(f28696,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28695,f141])).
fof(f28695,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28694,f141])).
fof(f28694,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28693,f118])).
fof(f28693,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28692,f118])).
fof(f28692,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28691,f114])).
fof(f28691,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28626,f114])).
fof(f28626,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4)),
  inference(unit_resulting_resolution,[],[f24844,f136])).
fof(f28594,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f783,f28287])).
fof(f28287,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f556,f557,f634,f635,f636,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7089,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9157,f9082,f9230,f9075,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841,f27842,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f27857,f27858,f27859,f27860,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27873,f27874,f27876,f27877,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f22180,f27902,f22179,f27903,f27904,f27906,f27908,f27909,f27910,f27912,f27913,f22165,f27914,f22163,f27915,f22162,f27916,f22158,f22157,f27917,f27920,f22153,f27921,f27922,f27923,f22196,f27925,f27927,f21958,f21957,f21952,f27930,f27931,f27936,f27937,f27938,f27939,f27940,f27941,f27942,f27943,f18010,f27948,f27949,f17706,f27953,f27954,f27957,f27959,f27960,f27961,f27962,f17691,f17627,f27969,f27970,f27971,f27972,f16277,f27973,f16275,f16273,f16272,f16270,f16269,f16268,f27978,f16265,f27979,f17511,f16079,f16077,f16076,f16073,f28009,f28010,f28013,f28015,f28016,f28017,f28018,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12324,f28104,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12313,f28108,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f12288,f28115,f28120,f10405,f10314,f9555,f9379,f28133,f28144,f28150,f7595,f28157,f28164,f28176,f28183,f28191,f28198,f28208,f28209,f28239,f28241,f28243,f28262,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f7086,f7217,f7411,f8880,f16176,f25658,f25905,f26268,f9162,f11989,f349,f565,f653,f1099,f1100,f1101,f2193])).
fof(f28262,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X37) != s(bool,'const.combin.K_2'(s(bool,X36),s(X38,X39))) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42)))) ) | $spl24),
  inference(subsumption_resolution,[],[f3973,f12288])).
fof(f3973,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X37) != s(bool,'const.combin.K_2'(s(bool,X36),s(X38,X39))) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42)))) ) | $spl24),
  inference(superposition,[],[f3839,f279])).
fof(f28243,plain,(
  ( ! [X134,X140,X139] : (s(bool,'T_0') = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,X134))),s(X139,X140))) | s(bool,'F_0') = s(bool,X134)) ) | $spl24),
  inference(forward_demodulation,[],[f28242,f139])).
fof(f28242,plain,(
  ( ! [X134,X140,X136,X135,X139] : (s(bool,'T_0') = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X134),s(X135,X136))))),s(X139,X140))) | s(bool,'F_0') = s(bool,X134)) ) | $spl24),
  inference(subsumption_resolution,[],[f5403,f12288])).
fof(f5403,plain,(
  ( ! [X134,X140,X136,X135,X139] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X134),s(X135,X136))))),s(X139,X140))) | s(bool,'F_0') = s(bool,X134)) )),
  inference(forward_demodulation,[],[f5078,f139])).
fof(f5078,plain,(
  ( ! [X134,X140,X138,X136,X135,X139,X137] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X137,X138))) | s(bool,'T_0') = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X134),s(X135,X136))))),s(X139,X140))) | s(bool,'F_0') = s(bool,X134)) )),
  inference(superposition,[],[f556,f182])).
fof(f28241,plain,(
  ( ! [X146,X149,X147,X141,X148] : (s(bool,'T_0') = s(bool,happ(s(fun(X146,bool),'const.combin.K_1'(s(bool,X141))),s(X146,X147))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X141),s(X148,X149)))) ) | $spl24),
  inference(forward_demodulation,[],[f28240,f139])).
fof(f28240,plain,(
  ( ! [X146,X142,X149,X147,X143,X141,X148] : (s(bool,'T_0') = s(bool,happ(s(fun(X146,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X141),s(X142,X143))))),s(X146,X147))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X141),s(X148,X149)))) ) | $spl24),
  inference(subsumption_resolution,[],[f5406,f12288])).
fof(f5406,plain,(
  ( ! [X146,X142,X149,X147,X143,X141,X148] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X146,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X141),s(X142,X143))))),s(X146,X147))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X141),s(X148,X149)))) )),
  inference(forward_demodulation,[],[f5079,f139])).
fof(f5079,plain,(
  ( ! [X146,X144,X142,X149,X147,X145,X143,X141,X148] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X144,X145))) | s(bool,'T_0') = s(bool,happ(s(fun(X146,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X141),s(X142,X143))))),s(X146,X147))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X141),s(X148,X149)))) )),
  inference(superposition,[],[f556,f232])).
fof(f28239,plain,(
  ( ! [X167,X165,X159,X166,X164] : (s(bool,'T_0') = s(bool,happ(s(fun(X164,bool),'const.combin.K_1'(s(bool,X159))),s(X164,X165))) | s(bool,'F_0') = s(bool,happ(s(fun(X166,bool),'const.combin.K_1'(s(bool,X159))),s(X166,X167)))) ) | $spl24),
  inference(forward_demodulation,[],[f28238,f139])).
fof(f28238,plain,(
  ( ! [X167,X165,X161,X159,X166,X164,X160] : (s(bool,'T_0') = s(bool,happ(s(fun(X164,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X159),s(X160,X161))))),s(X164,X165))) | s(bool,'F_0') = s(bool,happ(s(fun(X166,bool),'const.combin.K_1'(s(bool,X159))),s(X166,X167)))) ) | $spl24),
  inference(subsumption_resolution,[],[f5409,f12288])).
fof(f5409,plain,(
  ( ! [X167,X165,X161,X159,X166,X164,X160] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X164,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X159),s(X160,X161))))),s(X164,X165))) | s(bool,'F_0') = s(bool,happ(s(fun(X166,bool),'const.combin.K_1'(s(bool,X159))),s(X166,X167)))) )),
  inference(forward_demodulation,[],[f5081,f139])).
fof(f5081,plain,(
  ( ! [X167,X165,X163,X161,X159,X166,X164,X162,X160] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X162,X163))) | s(bool,'T_0') = s(bool,happ(s(fun(X164,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X159),s(X160,X161))))),s(X164,X165))) | s(bool,'F_0') = s(bool,happ(s(fun(X166,bool),'const.combin.K_1'(s(bool,X159))),s(X166,X167)))) )),
  inference(superposition,[],[f556,f233])).
fof(f28183,plain,(
  ( ! [X161,X159,X155,X162,X160] : (s(bool,'T_0') = s(bool,happ(s(fun(X159,bool),'const.combin.K_1'(s(bool,X155))),s(X159,X160))) | s(bool,X155) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X161,X162)))) ) | $spl24),
  inference(forward_demodulation,[],[f28182,f159])).
fof(f28182,plain,(
  ( ! [X156,X154,X161,X159,X155,X162,X160] : (s(bool,'T_0') = s(bool,happ(s(fun(X159,bool),'const.combin.K_1'(s(bool,happ(s(fun(X154,bool),'const.combin.K_1'(s(bool,X155))),s(X154,X156))))),s(X159,X160))) | s(bool,X155) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X161,X162)))) ) | $spl24),
  inference(subsumption_resolution,[],[f6465,f12288])).
fof(f6465,plain,(
  ( ! [X156,X154,X161,X159,X155,X162,X160] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X159,bool),'const.combin.K_1'(s(bool,happ(s(fun(X154,bool),'const.combin.K_1'(s(bool,X155))),s(X154,X156))))),s(X159,X160))) | s(bool,X155) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X161,X162)))) )),
  inference(forward_demodulation,[],[f6196,f139])).
fof(f6196,plain,(
  ( ! [X158,X156,X154,X161,X159,X157,X155,X162,X160] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X157,X158))) | s(bool,'T_0') = s(bool,happ(s(fun(X159,bool),'const.combin.K_1'(s(bool,happ(s(fun(X154,bool),'const.combin.K_1'(s(bool,X155))),s(X154,X156))))),s(X159,X160))) | s(bool,X155) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X161,X162)))) )),
  inference(superposition,[],[f556,f2047])).
fof(f28164,plain,(
  ( ! [X420,X422,X418,X421,X423,X417,X419] : (s(bool,X418) != s(bool,'const.combin.K_2'(s(bool,X417),s(X419,X420))) | s(bool,X418) = s(bool,X421) | s(bool,'T_0') = s(bool,X421) | s(bool,'T_0') = s(bool,happ(s(fun(X422,bool),'const.combin.K_1'(s(bool,X417))),s(X422,X423)))) ) | $spl24),
  inference(subsumption_resolution,[],[f7155,f12288])).
fof(f7155,plain,(
  ( ! [X420,X422,X418,X421,X423,X417,X419] : (s(bool,X418) != s(bool,'const.combin.K_2'(s(bool,X417),s(X419,X420))) | s(bool,X418) = s(bool,X421) | s(bool,'T_0') = s(bool,X421) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X422,bool),'const.combin.K_1'(s(bool,X417))),s(X422,X423)))) ) | $spl24),
  inference(superposition,[],[f3839,f280])).
fof(f28157,plain,(
  ( ! [X436,X438,X434,X440,X437,X439,X433,X435] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X434),s(X436,X437))) | s(bool,X438) = s(bool,happ(s(fun(X433,bool),'const.combin.K_1'(s(bool,X434))),s(X433,X435))) | s(bool,'T_0') = s(bool,happ(s(fun(X439,bool),'const.combin.K_1'(s(bool,X438))),s(X439,X440)))) ) | $spl24),
  inference(subsumption_resolution,[],[f7359,f12288])).
fof(f7359,plain,(
  ( ! [X436,X438,X434,X440,X437,X439,X433,X435] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X434),s(X436,X437))) | s(bool,X438) = s(bool,happ(s(fun(X433,bool),'const.combin.K_1'(s(bool,X434))),s(X433,X435))) | s(bool,'T_0') = s(bool,happ(s(fun(X439,bool),'const.combin.K_1'(s(bool,X438))),s(X439,X440)))) )),
  inference(superposition,[],[f233,f280])).
fof(f28120,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X67,X73] : (s(bool,X68) = s(bool,happ(s(fun(X69,bool),'const.combin.K_1'(s(bool,X67))),s(X69,X70))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X68),s(X71,X72))) | s(bool,'T_0') = s(bool,happ(s(fun(X73,bool),'const.combin.K_1'(s(bool,X67))),s(X73,X74)))) ) | $spl24),
  inference(subsumption_resolution,[],[f10663,f12288])).
fof(f10663,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X67,X73] : (s(bool,X68) = s(bool,happ(s(fun(X69,bool),'const.combin.K_1'(s(bool,X67))),s(X69,X70))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X68),s(X71,X72))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X73,bool),'const.combin.K_1'(s(bool,X67))),s(X73,X74)))) )),
  inference(superposition,[],[f9837,f280])).
fof(f28115,plain,(
  ( ! [X313,X315,X312,X314,X307] : (s(bool,'T_0') = s(bool,happ(s(fun(X312,bool),'const.combin.K_1'(s(bool,X307))),s(X312,X313))) | s(bool,X307) = s(bool,happ(s(fun(X314,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X314,X315)))) ) | $spl24),
  inference(forward_demodulation,[],[f28114,f139])).
fof(f28114,plain,(
  ( ! [X313,X315,X308,X312,X314,X309,X307] : (s(bool,'T_0') = s(bool,happ(s(fun(X312,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X307),s(X308,X309))))),s(X312,X313))) | s(bool,X307) = s(bool,happ(s(fun(X314,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X314,X315)))) ) | $spl24),
  inference(subsumption_resolution,[],[f11356,f12288])).
fof(f11356,plain,(
  ( ! [X313,X315,X308,X312,X314,X309,X307] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X312,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X307),s(X308,X309))))),s(X312,X313))) | s(bool,X307) = s(bool,happ(s(fun(X314,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X314,X315)))) )),
  inference(forward_demodulation,[],[f10801,f139])).
fof(f10801,plain,(
  ( ! [X313,X315,X308,X310,X312,X314,X309,X311,X307] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X310,X311))) | s(bool,'T_0') = s(bool,happ(s(fun(X312,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X307),s(X308,X309))))),s(X312,X313))) | s(bool,X307) = s(bool,happ(s(fun(X314,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X314,X315)))) )),
  inference(superposition,[],[f556,f9837])).
fof(f12288,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl24),
  inference(forward_demodulation,[],[f12096,f159])).
fof(f12096,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X0,X1)))) ) | $spl24),
  inference(unit_resulting_resolution,[],[f2276,f2276,f11995])).
fof(f12313,plain,(
  ( ! [X185,X182,X180,X181] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X185) = s(bool,happ(s(fun(X180,bool),'const.combin.K_1'(s(bool,X181))),s(X180,X182))) | s(bool,'T_0') = s(bool,X185)) ) | $spl24),
  inference(forward_demodulation,[],[f12312,f159])).
fof(f12312,plain,(
  ( ! [X185,X182,X180,X184,X183,X181] : (s(bool,'F_0') != s(bool,happ(s(fun(X183,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X183,X184))) | s(bool,X185) = s(bool,happ(s(fun(X180,bool),'const.combin.K_1'(s(bool,X181))),s(X180,X182))) | s(bool,'T_0') = s(bool,X185)) ) | $spl24),
  inference(subsumption_resolution,[],[f12130,f3965])).
fof(f12130,plain,(
  ( ! [X187,X185,X182,X180,X186,X184,X183,X181] : (s(bool,'F_0') != s(bool,happ(s(fun(X183,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X183,X184))) | s(bool,X185) = s(bool,happ(s(fun(X180,bool),'const.combin.K_1'(s(bool,X181))),s(X180,X182))) | s(bool,'T_0') = s(bool,X185) | s(bool,X181) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X186,X187)))) )),
  inference(superposition,[],[f11995,f2047])).
fof(f12324,plain,(
  ( ! [X271,X267,X268,X266] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X266),s(X267,X268))) | s(bool,'T_0') = s(bool,X271)) ) | $spl24),
  inference(forward_demodulation,[],[f12323,f159])).
fof(f12323,plain,(
  ( ! [X269,X271,X267,X268,X270,X266] : (s(bool,'F_0') != s(bool,happ(s(fun(X269,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X269,X270))) | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X266),s(X267,X268))) | s(bool,'T_0') = s(bool,X271)) ) | $spl24),
  inference(subsumption_resolution,[],[f12142,f3964])).
fof(f12142,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X266,X272] : (s(bool,'F_0') != s(bool,happ(s(fun(X269,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X269,X270))) | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X266),s(X267,X268))) | s(bool,'T_0') = s(bool,X271) | s(bool,X266) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X272,X273)))) )),
  inference(superposition,[],[f11995,f2256])).
fof(f28017,plain,(
  ( ! [X600,X602,X598,X601,X603,X597,X599] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X600) = s(bool,'const.combin.K_2'(s(bool,X597),s(X598,X599))) | s(bool,'T_0') = s(bool,X600) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X601),s(X602,X603)))) ) | $spl24),
  inference(subsumption_resolution,[],[f15916,f24236])).
fof(f15916,plain,(
  ( ! [X600,X602,X598,X601,X603,X597,X599] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X600) = s(bool,'const.combin.K_2'(s(bool,X597),s(X598,X599))) | s(bool,'T_0') = s(bool,X600) | s(bool,X597) = s(bool,X601) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X601),s(X602,X603)))) )),
  inference(superposition,[],[f3598,f1329])).
fof(f28015,plain,(
  ( ! [X625,X627,X623,X628,X624,X626,X620] : (s(bool,X623) = s(bool,'const.combin.K_2'(s(bool,X620),s(X624,X625))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X623) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X626),s(X627,X628)))) ) | $spl24),
  inference(subsumption_resolution,[],[f28014,f24236])).
fof(f28014,plain,(
  ( ! [X625,X627,X623,X628,X624,X626,X620] : (s(bool,X623) = s(bool,'const.combin.K_2'(s(bool,X620),s(X624,X625))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X623) | s(bool,X620) = s(bool,X626) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X626),s(X627,X628)))) )),
  inference(forward_demodulation,[],[f15919,f139])).
fof(f15919,plain,(
  ( ! [X625,X627,X621,X623,X628,X624,X626,X620,X622] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X623) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X620),s(X621,X622))),s(X624,X625))) | s(bool,'T_0') = s(bool,X623) | s(bool,X620) = s(bool,X626) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X626),s(X627,X628)))) )),
  inference(superposition,[],[f3698,f1329])).
fof(f28009,plain,(
  ( ! [X761,X759,X755,X760,X762,X756,X754] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X754),s(X755,X756))) | s(bool,'T_0') = s(bool,X759) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X761,X762)))) ) | $spl24),
  inference(forward_demodulation,[],[f28008,f159])).
fof(f28008,plain,(
  ( ! [X761,X757,X759,X755,X760,X762,X756,X758,X754] : (s(bool,'F_0') != s(bool,happ(s(fun(X757,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X757,X758))) | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X754),s(X755,X756))) | s(bool,'T_0') = s(bool,X759) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X761,X762)))) ) | $spl24),
  inference(subsumption_resolution,[],[f15934,f24236])).
fof(f15934,plain,(
  ( ! [X761,X757,X759,X755,X760,X762,X756,X758,X754] : (s(bool,'F_0') != s(bool,happ(s(fun(X757,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X757,X758))) | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X754),s(X755,X756))) | s(bool,'T_0') = s(bool,X759) | s(bool,X754) = s(bool,X760) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X761,X762)))) )),
  inference(superposition,[],[f11995,f1329])).
fof(f27979,plain,(
  ( ! [X765,X767,X771,X769,X764,X766,X770,X768] : (s(bool,X765) = s(bool,'const.combin.K_2'(s(bool,X764),s(X766,X767))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X764),s(X770,X771))) | s(bool,'T_0') = s(bool,happ(s(fun(X768,bool),'const.combin.K_1'(s(bool,X765))),s(X768,X769)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841,f27842,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f27857,f27858,f27859,f27860,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27873,f27874,f27876,f27877,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f22180,f27902,f22179,f27903,f27904,f27906,f27908,f27909,f27910,f27912,f27913,f22165,f27914,f22163,f27915,f22162,f27916,f22158,f22157,f27917,f27920,f22153,f27921,f27922,f27923,f22196,f27925,f27927,f21958,f21957,f21952,f27930,f27931,f27936,f27937,f27938,f27939,f27940,f27941,f27942,f27943,f18010,f27948,f27949,f17706,f27953,f27954,f27957,f27959,f27960,f27961,f27962,f17691,f17627,f27969,f27970,f27971,f27972,f16277,f27973,f16275,f16273,f16272,f16270,f16269,f16268,f27978,f16265])).
fof(f27978,plain,(
  ( ! [X796,X795,X793,X794,X792] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X792),s(X795,X796))) | s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X792),s(X793,X794)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841,f27842,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f27857,f27858,f27859,f27860,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27873,f27874,f27876,f27877,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f22180,f27902,f22179,f27903,f27904,f27906,f27908,f27909,f27910,f27912,f27913,f22165,f27914,f22163,f27915,f22162,f27916,f22158,f22157,f27917,f27920,f22153,f27921,f27922,f27923,f22196,f27925,f27927,f21958,f21957,f21952,f27930,f27931,f27936,f27937,f27938,f27939,f27940,f27941,f27942,f27943,f18010,f27948,f27949,f17706,f27953,f27954,f27957,f27959,f27960,f27961,f27962,f17691,f17627,f27969,f27970,f27971,f27972,f16277,f27973,f16275,f16273,f16272,f16270,f16269,f16268])).
fof(f16268,plain,(
  ( ! [X798,X796,X795,X793,X797,X794,X792] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X792),s(X793,X794))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X792),s(X795,X796))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X797,X798)))) ) | $spl24),
  inference(superposition,[],[f2276,f1329])).
fof(f27973,plain,(
  ( ! [X874,X872,X875,X873,X871] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X871),s(X874,X875))) | s(bool,'T_0') != s(bool,happ(s(fun(X872,bool),'const.combin.K_1'(s(bool,X871))),s(X872,X873)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841,f27842,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f27857,f27858,f27859,f27860,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27873,f27874,f27876,f27877,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f22180,f27902,f22179,f27903,f27904,f27906,f27908,f27909,f27910,f27912,f27913,f22165,f27914,f22163,f27915,f22162,f27916,f22158,f22157,f27917,f27920,f22153,f27921,f27922,f27923,f22196,f27925,f27927,f21958,f21957,f21952,f27930,f27931,f27936,f27937,f27938,f27939,f27940,f27941,f27942,f27943,f18010,f27948,f27949,f17706,f27953,f27954,f27957,f27959,f27960,f27961,f27962,f17691,f17627,f27969,f27970,f27971,f27972,f16277])).
fof(f16277,plain,(
  ( ! [X874,X872,X876,X875,X873,X877,X871] : (s(bool,'T_0') != s(bool,happ(s(fun(X872,bool),'const.combin.K_1'(s(bool,X871))),s(X872,X873))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X871),s(X874,X875))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X876,X877)))) ) | $spl24),
  inference(superposition,[],[f9907,f1329])).
fof(f27961,plain,(
  ( ! [X600,X602,X598,X601,X603,X597,X599] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X600) = s(bool,'const.combin.K_2'(s(bool,X597),s(X598,X599))) | s(bool,'T_0') = s(bool,X600) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X601),s(X602,X603)))) ) | $spl24),
  inference(subsumption_resolution,[],[f16443,f24236])).
fof(f16443,plain,(
  ( ! [X600,X602,X598,X601,X603,X597,X599] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X600) = s(bool,'const.combin.K_2'(s(bool,X597),s(X598,X599))) | s(bool,'T_0') = s(bool,X600) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X601),s(X602,X603))) | s(bool,X597) = s(bool,X601)) )),
  inference(superposition,[],[f3598,f1329])).
fof(f27959,plain,(
  ( ! [X625,X627,X623,X628,X624,X626,X620] : (s(bool,X623) = s(bool,'const.combin.K_2'(s(bool,X620),s(X624,X625))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X623) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X626),s(X627,X628)))) ) | $spl24),
  inference(subsumption_resolution,[],[f27958,f24236])).
fof(f27958,plain,(
  ( ! [X625,X627,X623,X628,X624,X626,X620] : (s(bool,X623) = s(bool,'const.combin.K_2'(s(bool,X620),s(X624,X625))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X623) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X626),s(X627,X628))) | s(bool,X620) = s(bool,X626)) )),
  inference(forward_demodulation,[],[f16446,f139])).
fof(f16446,plain,(
  ( ! [X625,X627,X621,X623,X628,X624,X626,X620,X622] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X623) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X620),s(X621,X622))),s(X624,X625))) | s(bool,'T_0') = s(bool,X623) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X626),s(X627,X628))) | s(bool,X620) = s(bool,X626)) )),
  inference(superposition,[],[f3698,f1329])).
fof(f27953,plain,(
  ( ! [X761,X759,X755,X760,X762,X756,X754] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X754),s(X755,X756))) | s(bool,'T_0') = s(bool,X759) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X761,X762)))) ) | $spl24),
  inference(forward_demodulation,[],[f27952,f159])).
fof(f27952,plain,(
  ( ! [X761,X757,X759,X755,X760,X762,X756,X758,X754] : (s(bool,'F_0') != s(bool,happ(s(fun(X757,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X757,X758))) | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X754),s(X755,X756))) | s(bool,'T_0') = s(bool,X759) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X761,X762)))) ) | $spl24),
  inference(subsumption_resolution,[],[f16461,f24236])).
fof(f16461,plain,(
  ( ! [X761,X757,X759,X755,X760,X762,X756,X758,X754] : (s(bool,'F_0') != s(bool,happ(s(fun(X757,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X757,X758))) | s(bool,X759) = s(bool,'const.combin.K_2'(s(bool,X754),s(X755,X756))) | s(bool,'T_0') = s(bool,X759) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X761,X762))) | s(bool,X754) = s(bool,X760)) )),
  inference(superposition,[],[f11995,f1329])).
fof(f27943,plain,(
  ( ! [X315,X308,X306,X314,X307] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X314,X315))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308)))) ) | $spl24),
  inference(global_subsumption,[],[f27942,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27942,plain,(
  ( ! [X313,X315,X308,X306,X312,X314,X309,X307] : (s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308))) = s(bool,'const.combin.K_2'(s(bool,X309),s(X312,X313))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X314,X315)))) ) | $spl24),
  inference(subsumption_resolution,[],[f21004,f24369])).
fof(f21004,plain,(
  ( ! [X313,X315,X308,X310,X306,X312,X314,X309,X311,X307] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X309),s(X310,X311))) | s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308))) = s(bool,'const.combin.K_2'(s(bool,X309),s(X312,X313))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X314,X315)))) )),
  inference(superposition,[],[f3370,f232])).
fof(f27941,plain,(
  ( ! [X327,X335,X326,X334,X328] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X326),s(X327,X328))) | s(bool,'F_0') = s(bool,happ(s(fun(X334,bool),'const.combin.K_1'(s(bool,X326))),s(X334,X335)))) ) | $spl24),
  inference(global_subsumption,[],[f27940,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27940,plain,(
  ( ! [X327,X333,X335,X329,X326,X332,X334,X328] : (s(bool,'const.combin.K_2'(s(bool,X326),s(X327,X328))) = s(bool,'const.combin.K_2'(s(bool,X329),s(X332,X333))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X326),s(X327,X328))) | s(bool,'F_0') = s(bool,happ(s(fun(X334,bool),'const.combin.K_1'(s(bool,X326))),s(X334,X335)))) ) | $spl24),
  inference(subsumption_resolution,[],[f21006,f24369])).
fof(f21006,plain,(
  ( ! [X327,X333,X335,X329,X331,X326,X332,X334,X328,X330] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X329),s(X330,X331))) | s(bool,'const.combin.K_2'(s(bool,X326),s(X327,X328))) = s(bool,'const.combin.K_2'(s(bool,X329),s(X332,X333))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X326),s(X327,X328))) | s(bool,'F_0') = s(bool,happ(s(fun(X334,bool),'const.combin.K_1'(s(bool,X326))),s(X334,X335)))) )),
  inference(superposition,[],[f3370,f233])).
fof(f27939,plain,(
  ( ! [X478,X469,X471,X477,X470] : (s(bool,X469) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X477,X478))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X469),s(X470,X471)))) ) | $spl24),
  inference(global_subsumption,[],[f27938,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27938,plain,(
  ( ! [X476,X478,X472,X469,X471,X475,X477,X470] : (s(bool,'const.combin.K_2'(s(bool,X469),s(X470,X471))) = s(bool,'const.combin.K_2'(s(bool,X472),s(X475,X476))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X469),s(X470,X471))) | s(bool,X469) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X477,X478)))) ) | $spl24),
  inference(subsumption_resolution,[],[f21020,f24369])).
fof(f21020,plain,(
  ( ! [X476,X478,X472,X474,X469,X471,X475,X477,X473,X470] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X472),s(X473,X474))) | s(bool,'const.combin.K_2'(s(bool,X469),s(X470,X471))) = s(bool,'const.combin.K_2'(s(bool,X472),s(X475,X476))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X469),s(X470,X471))) | s(bool,X469) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X477,X478)))) )),
  inference(superposition,[],[f3370,f2256])).
fof(f27937,plain,(
  ( ! [X480,X488,X479,X487,X481] : (s(bool,X479) = s(bool,happ(s(fun(X487,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X487,X488))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X479),s(X480,X481)))) ) | $spl24),
  inference(global_subsumption,[],[f27936,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27936,plain,(
  ( ! [X486,X480,X482,X488,X479,X485,X487,X481] : (s(bool,'const.combin.K_2'(s(bool,X479),s(X480,X481))) = s(bool,'const.combin.K_2'(s(bool,X482),s(X485,X486))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X479),s(X480,X481))) | s(bool,X479) = s(bool,happ(s(fun(X487,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X487,X488)))) ) | $spl24),
  inference(subsumption_resolution,[],[f21021,f24369])).
fof(f21021,plain,(
  ( ! [X484,X486,X480,X482,X488,X479,X485,X487,X481,X483] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X482),s(X483,X484))) | s(bool,'const.combin.K_2'(s(bool,X479),s(X480,X481))) = s(bool,'const.combin.K_2'(s(bool,X482),s(X485,X486))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X479),s(X480,X481))) | s(bool,X479) = s(bool,happ(s(fun(X487,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X487,X488)))) )),
  inference(superposition,[],[f3370,f9837])).
fof(f27931,plain,(
  ( ! [X532,X533,X529] : (s(bool,'T_0') = s(bool,X529) | s(bool,X529) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X532,X533)))) ) | $spl24),
  inference(global_subsumption,[],[f27930,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27930,plain,(
  ( ! [X532,X534,X528,X533,X535,X529] : (s(bool,X529) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X532,X533))) | s(bool,'T_0') = s(bool,X529) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X528),s(X534,X535)))) ) | $spl24),
  inference(forward_demodulation,[],[f27929,f139])).
fof(f27929,plain,(
  ( ! [X532,X534,X528,X526,X533,X535,X529,X527] : (s(bool,X529) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X526,X527))),s(X532,X533))) | s(bool,'T_0') = s(bool,X529) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X528),s(X534,X535)))) ) | $spl24),
  inference(subsumption_resolution,[],[f21085,f24369])).
fof(f21085,plain,(
  ( ! [X532,X534,X528,X530,X526,X533,X535,X529,X531,X527] : (s(bool,X529) != s(bool,'const.combin.K_2'(s(bool,X528),s(X530,X531))) | s(bool,X529) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X526,X527))),s(X532,X533))) | s(bool,'T_0') = s(bool,X529) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X528),s(X534,X535)))) )),
  inference(superposition,[],[f3370,f2256])).
fof(f27922,plain,(
  ( ! [X61,X59,X64,X62,X60,X65,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X60),s(X61,X62))) | s(bool,'T_0') = s(bool,happ(s(fun(X64,bool),'const.combin.K_1'(s(bool,X63))),s(X64,X65)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22140,f23678])).
fof(f22140,plain,(
  ( ! [X61,X59,X64,X62,X60,X65,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X59) = s(bool,X60) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X60),s(X61,X62))) | s(bool,X59) = s(bool,X63) | s(bool,'T_0') = s(bool,happ(s(fun(X64,bool),'const.combin.K_1'(s(bool,X63))),s(X64,X65)))) ) | $spl24),
  inference(superposition,[],[f22065,f280])).
fof(f22153,plain,(
  ( ! [X165,X163,X161,X164,X162,X160] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X163) = s(bool,happ(s(fun(X160,bool),'const.combin.K_1'(s(bool,X161))),s(X160,X162))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X163),s(X164,X165))) | s(bool,'F_0') = s(bool,X161)) ) | $spl24),
  inference(superposition,[],[f22065,f215])).
fof(f22157,plain,(
  ( ! [X191,X189,X194,X192,X190,X188,X195,X193] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X191) = s(bool,happ(s(fun(X188,bool),'const.combin.K_1'(s(bool,X189))),s(X188,X190))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X191),s(X192,X193))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X189),s(X194,X195)))) ) | $spl24),
  inference(superposition,[],[f22065,f556])).
fof(f22162,plain,(
  ( ! [X229,X227,X225,X228,X226,X224] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X227) = s(bool,'const.combin.K_2'(s(bool,X224),s(X225,X226))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X227),s(X228,X229))) | s(bool,'F_0') = s(bool,X224)) ) | $spl24),
  inference(superposition,[],[f22065,f182])).
fof(f22163,plain,(
  ( ! [X231,X237,X235,X233,X230,X236,X234,X232] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X233) = s(bool,'const.combin.K_2'(s(bool,X230),s(X231,X232))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X233),s(X234,X235))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X230),s(X236,X237)))) ) | $spl24),
  inference(superposition,[],[f22065,f232])).
fof(f22165,plain,(
  ( ! [X253,X251,X249,X246,X252,X250,X248,X247] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X249) = s(bool,'const.combin.K_2'(s(bool,X246),s(X247,X248))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X249),s(X250,X251))) | s(bool,'F_0') = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X246))),s(X252,X253)))) ) | $spl24),
  inference(superposition,[],[f22065,f233])).
fof(f27912,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5)))) ) | $spl24),
  inference(condensation,[],[f27911])).
fof(f27911,plain,(
  ( ! [X255,X257,X259,X260,X254,X256,X258] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X257) = s(bool,'const.combin.K_2'(s(bool,X254),s(X255,X256))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X257),s(X258,X259))) | s(bool,'T_0') = s(bool,X260)) ) | $spl24),
  inference(subsumption_resolution,[],[f22166,f24405])).
fof(f22166,plain,(
  ( ! [X255,X257,X259,X260,X254,X256,X258] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X257) = s(bool,'const.combin.K_2'(s(bool,X254),s(X255,X256))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X257),s(X258,X259))) | s(bool,X254) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) ) | $spl24),
  inference(superposition,[],[f22065,f279])).
fof(f27909,plain,(
  ( ! [X282,X288,X285,X287,X286] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X286,X287))) | s(bool,X288) = s(bool,'const.combin.K_2'(s(bool,X282),s(bool,X288))) | s(bool,'T_0') = s(bool,X288)) ) | $spl24),
  inference(subsumption_resolution,[],[f22170,f21263])).
fof(f22170,plain,(
  ( ! [X282,X288,X285,X287,X283,X284,X286] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X285) = s(bool,'const.combin.K_2'(s(bool,X282),s(X283,X284))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X286,X287))) | s(bool,X288) = s(bool,'const.combin.K_2'(s(bool,X282),s(bool,X288))) | s(bool,'T_0') = s(bool,X288)) ) | $spl24),
  inference(superposition,[],[f22065,f694])).
fof(f27903,plain,(
  ( ! [X364,X366,X362,X365,X361,X363] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X364),s(X365,X366))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X364) = s(bool,'const.combin.K_2'(s(bool,X361),s(X362,X363)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841,f27842,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f27857,f27858,f27859,f27860,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27873,f27874,f27876,f27877,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f22180,f27902,f22179])).
fof(f22179,plain,(
  ( ! [X364,X366,X362,X368,X365,X367,X361,X363] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X364) = s(bool,'const.combin.K_2'(s(bool,X361),s(X362,X363))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X364),s(X365,X366))) | s(bool,X361) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X367,X368)))) ) | $spl24),
  inference(superposition,[],[f22065,f2256])).
fof(f22180,plain,(
  ( ! [X372,X374,X370,X376,X373,X375,X369,X371] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X372) = s(bool,'const.combin.K_2'(s(bool,X369),s(X370,X371))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X372),s(X373,X374))) | s(bool,X369) = s(bool,happ(s(fun(X375,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X375,X376)))) ) | $spl24),
  inference(superposition,[],[f22065,f9837])).
fof(f27876,plain,(
  ( ! [X428,X430,X426,X421,X429,X431,X427] : (s(bool,X426) = s(bool,'const.combin.K_2'(s(bool,X421),s(X427,X428))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X426) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) ) | $spl24),
  inference(subsumption_resolution,[],[f27875,f24236])).
fof(f27875,plain,(
  ( ! [X428,X430,X426,X421,X429,X431,X427] : (s(bool,X426) = s(bool,'const.combin.K_2'(s(bool,X421),s(X427,X428))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X426) | s(bool,X421) = s(bool,X429) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) )),
  inference(forward_demodulation,[],[f22658,f139])).
fof(f22658,plain,(
  ( ! [X422,X428,X430,X426,X421,X423,X429,X431,X427] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X426) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X421),s(X422,X423))),s(X427,X428))) | s(bool,'T_0') = s(bool,X426) | s(bool,X421) = s(bool,X429) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) )),
  inference(forward_demodulation,[],[f22403,f139])).
fof(f22403,plain,(
  ( ! [X422,X428,X430,X424,X426,X421,X423,X429,X431,X425,X427] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X424,X425))) | s(bool,X426) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X421),s(X422,X423))),s(X427,X428))) | s(bool,'T_0') = s(bool,X426) | s(bool,X421) = s(bool,X429) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) )),
  inference(superposition,[],[f3538,f1329])).
fof(f27873,plain,(
  ( ! [X441,X438,X432,X440,X442,X437,X439] : (s(bool,X437) = s(bool,'const.combin.K_2'(s(bool,X432),s(X438,X439))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X437) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X440),s(X441,X442)))) ) | $spl24),
  inference(subsumption_resolution,[],[f27872,f24236])).
fof(f27872,plain,(
  ( ! [X441,X438,X432,X440,X442,X437,X439] : (s(bool,X437) = s(bool,'const.combin.K_2'(s(bool,X432),s(X438,X439))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X437) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X440),s(X441,X442))) | s(bool,X432) = s(bool,X440)) )),
  inference(forward_demodulation,[],[f22659,f139])).
fof(f22659,plain,(
  ( ! [X441,X438,X432,X434,X440,X442,X437,X439,X433] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X437) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X432),s(X433,X434))),s(X438,X439))) | s(bool,'T_0') = s(bool,X437) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X440),s(X441,X442))) | s(bool,X432) = s(bool,X440)) )),
  inference(forward_demodulation,[],[f22404,f139])).
fof(f22404,plain,(
  ( ! [X441,X436,X438,X432,X434,X440,X442,X437,X439,X433,X435] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X435,X436))) | s(bool,X437) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X432),s(X433,X434))),s(X438,X439))) | s(bool,'T_0') = s(bool,X437) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X440),s(X441,X442))) | s(bool,X432) = s(bool,X440)) )),
  inference(superposition,[],[f3538,f1329])).
fof(f27859,plain,(
  ( ! [X90,X88,X87,X83,X91,X89,X86] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X86) = s(bool,'const.combin.K_2'(s(bool,X83),s(X87,X88))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X90,X91)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22524,f24236])).
fof(f22524,plain,(
  ( ! [X90,X88,X87,X83,X91,X89,X86] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X86) = s(bool,'const.combin.K_2'(s(bool,X83),s(X87,X88))) | s(bool,'T_0') = s(bool,X86) | s(bool,X83) = s(bool,X89) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X90,X91)))) )),
  inference(superposition,[],[f3538,f1329])).
fof(f27857,plain,(
  ( ! [X92,X99,X97,X95,X100,X98,X96] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X95) = s(bool,'const.combin.K_2'(s(bool,X92),s(X96,X97))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X98),s(X99,X100)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22525,f24236])).
fof(f22525,plain,(
  ( ! [X92,X99,X97,X95,X100,X98,X96] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X95) = s(bool,'const.combin.K_2'(s(bool,X92),s(X96,X97))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X98),s(X99,X100))) | s(bool,X92) = s(bool,X98)) )),
  inference(superposition,[],[f3538,f1329])).
fof(f27841,plain,(
  ( ! [X87,X85,X83,X79,X86,X84,X82] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X82),s(X83,X84))) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) ) | $spl24),
  inference(forward_demodulation,[],[f27840,f139])).
fof(f27840,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X80,X81))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X82),s(X83,X84))) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22731,f23678])).
fof(f22731,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X80,X81))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X82),s(X83,X84))) | s(bool,X79) = s(bool,X82) | s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) )),
  inference(superposition,[],[f3624,f280])).
fof(f23000,plain,(
  ( ! [X241,X239,X235,X240,X236,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X239),s(X240,X241))) | s(bool,X239) = s(bool,happ(s(fun(X234,bool),'const.combin.K_1'(s(bool,X235))),s(X234,X236)))) ) | $spl24),
  inference(forward_demodulation,[],[f22999,f139])).
fof(f22999,plain,(
  ( ! [X241,X239,X237,X235,X240,X238,X236,X234] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X237,X238))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X239),s(X240,X241))) | s(bool,X239) = s(bool,happ(s(fun(X234,bool),'const.combin.K_1'(s(bool,X235))),s(X234,X236)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22748,f22092])).
fof(f22748,plain,(
  ( ! [X241,X239,X237,X235,X240,X238,X236,X234] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X237,X238))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X239),s(X240,X241))) | s(bool,X239) = s(bool,happ(s(fun(X234,bool),'const.combin.K_1'(s(bool,X235))),s(X234,X236))) | s(bool,'F_0') = s(bool,X235)) )),
  inference(superposition,[],[f3624,f215])).
fof(f23012,plain,(
  ( ! [X321,X323,X316,X318,X322,X317] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X321),s(X322,X323))) | s(bool,X321) = s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318)))) ) | $spl24),
  inference(forward_demodulation,[],[f23011,f139])).
fof(f23011,plain,(
  ( ! [X321,X323,X316,X318,X320,X322,X317,X319] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X319,X320))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X321),s(X322,X323))) | s(bool,X321) = s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22757,f22185])).
fof(f22757,plain,(
  ( ! [X321,X323,X316,X318,X320,X322,X317,X319] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X319,X320))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X321),s(X322,X323))) | s(bool,X321) = s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318))) | s(bool,'F_0') = s(bool,X316)) )),
  inference(superposition,[],[f3624,f182])).
fof(f27815,plain,(
  ( ! [X222,X231,X229,X227,X223,X230,X228,X224] : (s(bool,X227) = s(bool,happ(s(fun(X222,bool),'const.combin.K_1'(s(bool,X223))),s(X222,X224))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X227),s(X228,X229))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X223),s(X230,X231)))) ) | $spl24),
  inference(subsumption_resolution,[],[f23536,f139])).
fof(f23536,plain,(
  ( ! [X222,X231,X229,X227,X225,X223,X230,X228,X226,X224] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X225,X226))) | s(bool,X227) = s(bool,happ(s(fun(X222,bool),'const.combin.K_1'(s(bool,X223))),s(X222,X224))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X227),s(X228,X229))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X223),s(X230,X231)))) ) | $spl24),
  inference(superposition,[],[f22109,f233])).
fof(f23569,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,X1) = s(bool,X4) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X4),s(X5,X6))) | s(bool,'T_0') = s(bool,X0)) ) | $spl24),
  inference(superposition,[],[f22109,f112])).
fof(f27814,plain,(
  ( ! [X12,X10,X8,X7,X11,X9] : (s(bool,X7) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X8,X9))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X11,X12))) | s(bool,X7) = s(bool,X10)) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570])).
fof(f23570,plain,(
  ( ! [X12,X10,X8,X7,X11,X9] : (s(bool,X7) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X8,X9))) | s(bool,X7) = s(bool,X10) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X11,X12))) | s(bool,'T_0') = s(bool,'F_0')) ) | $spl24),
  inference(superposition,[],[f22109,f112])).
fof(f27812,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X78) = s(bool,X81) | s(bool,X78) != s(bool,'const.combin.K_2'(s(bool,X77),s(X79,X80))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X81),s(X82,X83))) | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579])).
fof(f23579,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X78) != s(bool,'const.combin.K_2'(s(bool,X77),s(X79,X80))) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X81),s(X82,X83))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85)))) ) | $spl24),
  inference(superposition,[],[f22109,f280])).
fof(f23611,plain,(
  ( ! [X218,X222,X220,X219,X221] : (s(bool,X219) != s(bool,'const.combin.K_2'(s(bool,X218),s(bool,X218))) | s(bool,X219) = s(bool,X220) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X220),s(X221,X222))) | s(bool,'T_0') = s(bool,X218)) ) | $spl24),
  inference(superposition,[],[f22109,f112])).
fof(f23678,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s(bool,X2) != s(bool,X3) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X4),s(X5,X6))) | s(bool,'T_0') = s(bool,happ(s(fun(X7,bool),'const.combin.K_1'(s(bool,X2))),s(X7,X8)))) ) | $spl24),
  inference(superposition,[],[f22109,f2047])).
fof(f23679,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X16] : (s(bool,X11) != s(bool,X12) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X16,X17)))) ) | $spl24),
  inference(superposition,[],[f22109,f2256])).
fof(f24369,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X4,X5)))) ) | $spl24),
  inference(condensation,[],[f24368])).
fof(f24368,plain,(
  ( ! [X492,X494,X488,X487,X493,X495,X491] : (s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,X487),s(X492,X493))) | s(bool,'T_0') = s(bool,X491) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X487),s(X494,X495))) | s(bool,'T_0') = s(bool,X488)) ) | $spl24),
  inference(forward_demodulation,[],[f24367,f139])).
fof(f24367,plain,(
  ( ! [X492,X494,X488,X487,X493,X495,X491] : (s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X487),s(bool,X488))),s(X492,X493))) | s(bool,'T_0') = s(bool,X491) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X487),s(X494,X495))) | s(bool,'T_0') = s(bool,X488)) ) | $spl24),
  inference(subsumption_resolution,[],[f24121,f1978])).
fof(f24121,plain,(
  ( ! [X492,X494,X488,X490,X487,X493,X495,X489,X491] : (s(bool,X488) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X489,X490))) | s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X487),s(bool,X488))),s(X492,X493))) | s(bool,'T_0') = s(bool,X491) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X487),s(X494,X495))) | s(bool,'T_0') = s(bool,X488)) ) | $spl24),
  inference(superposition,[],[f3964,f694])).
fof(f24235,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s(bool,X2) != s(bool,X3) | s(bool,X4) = s(bool,'const.combin.K_2'(s(bool,X3),s(X5,X6))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,happ(s(fun(X7,bool),'const.combin.K_1'(s(bool,X2))),s(X7,X8)))) ) | $spl24),
  inference(superposition,[],[f3964,f2047])).
fof(f24236,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X16] : (s(bool,X11) != s(bool,X12) | s(bool,X13) = s(bool,'const.combin.K_2'(s(bool,X12),s(X14,X15))) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X16,X17)))) ) | $spl24),
  inference(superposition,[],[f3964,f2256])).
fof(f27785,plain,(
  ( ! [X212,X210,X213,X211,X209,X207] : (s(bool,X209) = s(bool,'const.combin.K_2'(s(bool,X207),s(X210,X211))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X209),s(X212,X213))) | s(bool,'F_0') = s(bool,X207)) ) | $spl24),
  inference(forward_demodulation,[],[f24442,f159])).
fof(f24442,plain,(
  ( ! [X212,X210,X208,X206,X213,X211,X209,X207] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X209) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X206,bool),'const.combin.K_1'(s(bool,X207))),s(X206,X208))),s(X210,X211))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X209),s(X212,X213))) | s(bool,'F_0') = s(bool,X207)) ) | $spl24),
  inference(superposition,[],[f22185,f215])).
fof(f27779,plain,(
  ( ! [X255,X253,X257,X259,X261,X260,X256,X258] : (s(bool,X255) = s(bool,'const.combin.K_2'(s(bool,X253),s(X256,X257))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X255),s(X258,X259))) | s(bool,X253) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X260,X261)))) ) | $spl24),
  inference(forward_demodulation,[],[f24447,f159])).
fof(f24447,plain,(
  ( ! [X255,X253,X257,X259,X261,X260,X254,X252,X256,X258] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X255) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X253))),s(X252,X254))),s(X256,X257))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X255),s(X258,X259))) | s(bool,X253) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X260,X261)))) ) | $spl24),
  inference(superposition,[],[f22185,f2047])).
fof(f27777,plain,(
  ( ! [X292,X294,X288,X293,X295,X291] : (s(bool,X291) = s(bool,'const.combin.K_2'(s(bool,X288),s(X292,X293))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X291),s(X294,X295))) | s(bool,'F_0') = s(bool,X288)) ) | $spl24),
  inference(forward_demodulation,[],[f24451,f139])).
fof(f24451,plain,(
  ( ! [X292,X294,X288,X290,X293,X295,X289,X291] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X291) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X288),s(X289,X290))),s(X292,X293))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X291),s(X294,X295))) | s(bool,'F_0') = s(bool,X288)) ) | $spl24),
  inference(superposition,[],[f22185,f182])).
fof(f27773,plain,(
  ( ! [X325,X321,X323,X316,X324,X320,X322,X319] : (s(bool,X319) = s(bool,'const.combin.K_2'(s(bool,X316),s(X320,X321))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X319),s(X322,X323))) | s(bool,'F_0') = s(bool,happ(s(fun(X324,bool),'const.combin.K_1'(s(bool,X316))),s(X324,X325)))) ) | $spl24),
  inference(forward_demodulation,[],[f24454,f139])).
fof(f24454,plain,(
  ( ! [X325,X321,X323,X316,X318,X324,X320,X322,X317,X319] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X319) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318))),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X319),s(X322,X323))) | s(bool,'F_0') = s(bool,happ(s(fun(X324,bool),'const.combin.K_1'(s(bool,X316))),s(X324,X325)))) ) | $spl24),
  inference(superposition,[],[f22185,f233])).
fof(f24520,plain,(
  ( ! [X350,X344,X352,X349,X351,X347,X353,X348] : (s(bool,X347) = s(bool,'const.combin.K_2'(s(bool,X344),s(X348,X349))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X347),s(X350,X351))) | s(bool,'T_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) ) | $spl24),
  inference(forward_demodulation,[],[f24478,f139])).
fof(f24478,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X347,X353,X348] : (s(bool,X347) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X344),s(X345,X346))),s(X348,X349))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X347),s(X350,X351))) | s(bool,'T_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) ) | $spl24),
  inference(trivial_inequality_removal,[],[f24457])).
fof(f24457,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X347,X353,X348] : (s(bool,'F_0') != s(bool,'F_0') | s(bool,X347) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X344),s(X345,X346))),s(X348,X349))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X347),s(X350,X351))) | s(bool,'T_0') = s(bool,happ(s(fun(X352,bool),'const.combin.K_1'(s(bool,X344))),s(X352,X353)))) ) | $spl24),
  inference(superposition,[],[f22185,f556])).
fof(f27757,plain,(
  ( ! [X466,X463,X459,X465,X467,X462,X468,X464] : (s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,X459),s(X463,X464))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X462),s(X465,X466))) | s(bool,X459) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X467,X468)))) ) | $spl24),
  inference(forward_demodulation,[],[f24468,f139])).
fof(f24468,plain,(
  ( ! [X466,X461,X463,X459,X465,X467,X460,X462,X468,X464] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X459),s(X460,X461))),s(X463,X464))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X462),s(X465,X466))) | s(bool,X459) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X467,X468)))) ) | $spl24),
  inference(superposition,[],[f22185,f2256])).
fof(f24536,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X3),s(X6,X7)))) ) | $spl24),
  inference(condensation,[],[f24535])).
fof(f24535,plain,(
  ( ! [X484,X486,X480,X482,X479,X485,X487,X481,X483] : (s(bool,X481) = s(bool,'const.combin.K_2'(s(bool,X479),s(X482,X483))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X481),s(X484,X485))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X479),s(X486,X487))) | s(bool,'T_0') = s(bool,X480)) ) | $spl24),
  inference(forward_demodulation,[],[f24534,f139])).
fof(f24534,plain,(
  ( ! [X484,X486,X480,X482,X479,X485,X487,X481,X483] : (s(bool,X481) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X479),s(bool,X480))),s(X482,X483))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X481),s(X484,X485))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X479),s(X486,X487))) | s(bool,'T_0') = s(bool,X480)) ) | $spl24),
  inference(subsumption_resolution,[],[f24470,f112])).
fof(f24470,plain,(
  ( ! [X484,X486,X480,X482,X479,X485,X487,X481,X483] : (s(bool,'F_0') != s(bool,X480) | s(bool,X481) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X479),s(bool,X480))),s(X482,X483))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X481),s(X484,X485))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X479),s(X486,X487))) | s(bool,'T_0') = s(bool,X480)) ) | $spl24),
  inference(superposition,[],[f22185,f694])).
fof(f27711,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X0)) ) | $spl24),
  inference(condensation,[],[f27710])).
fof(f27710,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | $spl24),
  inference(condensation,[],[f27709])).
fof(f27709,plain,(
  ( ! [X606,X602,X607,X603,X608] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X603),s(X606,X607))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X608),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X602) | s(bool,'F_0') = s(bool,X608)) ) | $spl24),
  inference(subsumption_resolution,[],[f25513,f27706])).
fof(f25513,plain,(
  ( ! [X606,X602,X605,X607,X603,X608,X604] : (s(bool,X603) != s(bool,'const.combin.K_2'(s(bool,X602),s(X604,X605))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X603),s(X606,X607))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X608),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X602) | s(bool,'F_0') = s(bool,X608)) )),
  inference(superposition,[],[f1455,f349])).
fof(f27706,plain,(
  ( ! [X557,X559,X560,X556,X558,X554] : (s(bool,'T_0') = s(bool,X554) | s(bool,X556) = s(bool,'const.combin.K_2'(s(bool,X554),s(X557,X558))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X556),s(X559,X560)))) ) | $spl24),
  inference(global_subsumption,[],[f27705,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704])).
fof(f27705,plain,(
  ( ! [X561,X557,X559,X555,X560,X556,X558,X554] : (s(bool,X556) = s(bool,'const.combin.K_2'(s(bool,X554),s(X557,X558))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X556),s(X559,X560))) | s(bool,X555) = s(bool,'const.combin.K_2'(s(bool,X561),s(bool,X555))) | s(bool,'T_0') = s(bool,X554) | s(bool,'F_0') = s(bool,X561)) ) | $spl24),
  inference(subsumption_resolution,[],[f25751,f27672])).
fof(f25751,plain,(
  ( ! [X561,X557,X559,X555,X560,X556,X558,X554] : (s(bool,'F_0') != s(bool,X555) | s(bool,X556) = s(bool,'const.combin.K_2'(s(bool,X554),s(X557,X558))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X556),s(X559,X560))) | s(bool,X555) = s(bool,'const.combin.K_2'(s(bool,X561),s(bool,X555))) | s(bool,'T_0') = s(bool,X554) | s(bool,'F_0') = s(bool,X561)) ) | $spl24),
  inference(superposition,[],[f22185,f349])).
fof(f27702,plain,(
  ( ! [X689,X687,X688,X686] : (s(bool,'F_0') = s(bool,X689) | s(bool,X686) = s(bool,'const.combin.K_2'(s(bool,X689),s(bool,X686))) | s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X686),s(X687,X688)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771])).
fof(f25771,plain,(
  ( ! [X689,X687,X688,X686] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X686),s(X687,X688))) | s(bool,X686) = s(bool,'const.combin.K_2'(s(bool,X689),s(bool,X686))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X689)) ) | $spl24),
  inference(superposition,[],[f2276,f349])).
fof(f27700,plain,(
  ( ! [X736,X738,X734,X737,X739,X735] : (s(bool,X734) = s(bool,'const.combin.K_2'(s(bool,X739),s(bool,X734))) | s(bool,'F_0') = s(bool,X739) | s(bool,X735) = s(bool,X738) | s(bool,'T_0') = s(bool,X738) | s(bool,X735) != s(bool,'const.combin.K_2'(s(bool,X734),s(X736,X737)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778])).
fof(f25778,plain,(
  ( ! [X736,X738,X734,X737,X739,X735] : (s(bool,X735) != s(bool,'const.combin.K_2'(s(bool,X734),s(X736,X737))) | s(bool,X735) = s(bool,X738) | s(bool,'T_0') = s(bool,X738) | s(bool,X734) = s(bool,'const.combin.K_2'(s(bool,X739),s(bool,X734))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X739)) ) | $spl24),
  inference(superposition,[],[f3839,f349])).
fof(f27699,plain,(
  ( ! [X745,X747,X741,X743,X744,X746,X740,X742] : (s(bool,'T_0') = s(bool,X744) | s(bool,X744) = s(bool,'const.combin.K_2'(s(bool,X741),s(X745,X746))) | s(bool,'F_0') = s(bool,X747) | s(bool,X740) = s(bool,'const.combin.K_2'(s(bool,X747),s(bool,X740))) | s(bool,X741) != s(bool,'const.combin.K_2'(s(bool,X740),s(X742,X743)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779])).
fof(f25779,plain,(
  ( ! [X745,X747,X741,X743,X744,X746,X740,X742] : (s(bool,X741) != s(bool,'const.combin.K_2'(s(bool,X740),s(X742,X743))) | s(bool,X744) = s(bool,'const.combin.K_2'(s(bool,X741),s(X745,X746))) | s(bool,'T_0') = s(bool,X744) | s(bool,X740) = s(bool,'const.combin.K_2'(s(bool,X747),s(bool,X740))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X747)) ) | $spl24),
  inference(superposition,[],[f3964,f349])).
fof(f27696,plain,(
  ( ! [X767,X769,X766,X768] : (s(bool,'T_0') != s(bool,happ(s(fun(X767,bool),'const.combin.K_1'(s(bool,X766))),s(X767,X768))) | s(bool,X766) = s(bool,'const.combin.K_2'(s(bool,X769),s(bool,X766))) | s(bool,'F_0') = s(bool,X769)) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783])).
fof(f25783,plain,(
  ( ! [X767,X769,X766,X768] : (s(bool,'T_0') != s(bool,happ(s(fun(X767,bool),'const.combin.K_1'(s(bool,X766))),s(X767,X768))) | s(bool,X766) = s(bool,'const.combin.K_2'(s(bool,X769),s(bool,X766))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X769)) ) | $spl24),
  inference(superposition,[],[f9907,f349])).
fof(f27695,plain,(
  ( ! [X779,X777,X775,X778,X776,X774] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X776),s(X777,X778))) | s(bool,X774) = s(bool,'const.combin.K_2'(s(bool,X779),s(bool,X774))) | s(bool,X774) != s(bool,X775) | s(bool,X775) = s(bool,X776) | s(bool,'F_0') = s(bool,X779)) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784])).
fof(f25784,plain,(
  ( ! [X779,X777,X775,X778,X776,X774] : (s(bool,X774) != s(bool,X775) | s(bool,X775) = s(bool,X776) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X776),s(X777,X778))) | s(bool,X774) = s(bool,'const.combin.K_2'(s(bool,X779),s(bool,X774))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X779)) ) | $spl24),
  inference(superposition,[],[f22065,f349])).
fof(f27694,plain,(
  ( ! [X786,X784,X783,X781,X787,X785,X782,X780] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X784),s(X785,X786))) | s(bool,'F_0') = s(bool,X787) | s(bool,X781) = s(bool,X784) | s(bool,X780) = s(bool,'const.combin.K_2'(s(bool,X787),s(bool,X780))) | s(bool,X781) != s(bool,'const.combin.K_2'(s(bool,X780),s(X782,X783)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785])).
fof(f25785,plain,(
  ( ! [X786,X784,X783,X781,X787,X785,X782,X780] : (s(bool,X781) != s(bool,'const.combin.K_2'(s(bool,X780),s(X782,X783))) | s(bool,X781) = s(bool,X784) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X784),s(X785,X786))) | s(bool,X780) = s(bool,'const.combin.K_2'(s(bool,X787),s(bool,X780))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X787)) ) | $spl24),
  inference(superposition,[],[f22109,f349])).
fof(f27693,plain,(
  ( ! [X790,X788,X795,X793,X791,X789,X794,X792] : (s(bool,X788) = s(bool,'const.combin.K_2'(s(bool,X795),s(bool,X788))) | s(bool,X788) != s(bool,X789) | s(bool,'F_0') = s(bool,X795) | s(bool,X790) = s(bool,'const.combin.K_2'(s(bool,X789),s(X791,X792))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X790),s(X793,X794)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786])).
fof(f25786,plain,(
  ( ! [X790,X788,X795,X793,X791,X789,X794,X792] : (s(bool,X788) != s(bool,X789) | s(bool,X790) = s(bool,'const.combin.K_2'(s(bool,X789),s(X791,X792))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X790),s(X793,X794))) | s(bool,X788) = s(bool,'const.combin.K_2'(s(bool,X795),s(bool,X788))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X795)) ) | $spl24),
  inference(superposition,[],[f22185,f349])).
fof(f25844,plain,(
  ( ! [X1170,X1168,X1172,X1167,X1171,X1169] : (s(bool,X1167) != s(bool,X1168) | s(bool,X1167) = s(bool,X1169) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1169),s(X1170,X1171))) | s(bool,X1168) = s(bool,'const.combin.K_2'(s(bool,X1172),s(bool,X1168))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X1167))) | s(bool,'F_0') = s(bool,X1172)) ) | $spl24),
  inference(superposition,[],[f2358,f349])).
fof(f26127,plain,(
  ( ! [X528,X524,X526,X529,X525,X527] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X524) = s(bool,X525) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X525),s(X526,X527))) | s(bool,X528) = s(bool,'const.combin.K_2'(s(bool,X529),s(bool,X528))) | s(bool,X524) = s(bool,X528) | s(bool,'F_0') = s(bool,X529)) ) | $spl24),
  inference(superposition,[],[f22065,f349])).
fof(f26129,plain,(
  ( ! [X540,X542,X538,X545,X541,X543,X539,X544] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X539) = s(bool,'const.combin.K_2'(s(bool,X538),s(X540,X541))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X539),s(X542,X543))) | s(bool,X544) = s(bool,'const.combin.K_2'(s(bool,X545),s(bool,X544))) | s(bool,X538) = s(bool,X544) | s(bool,'F_0') = s(bool,X545)) ) | $spl24),
  inference(superposition,[],[f22185,f349])).
fof(f27672,plain,(
  ( ! [X765,X766] : (s(bool,'F_0') = s(bool,X765) | s(bool,X765) = s(bool,'const.combin.K_2'(s(bool,X766),s(bool,X765))) | s(bool,'F_0') = s(bool,X766)) ) | $spl24),
  inference(global_subsumption,[],[f27671,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670])).
fof(f27671,plain,(
  ( ! [X765,X761,X763,X759,X764,X766,X760,X762] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X763,X764))) | s(bool,X765) = s(bool,'const.combin.K_2'(s(bool,X766),s(bool,X765))) | s(bool,X760) = s(bool,'const.combin.K_2'(s(bool,X759),s(X761,X762))) | s(bool,'F_0') = s(bool,X765) | s(bool,'F_0') = s(bool,X766)) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164])).
fof(f26164,plain,(
  ( ! [X765,X761,X763,X759,X764,X766,X760,X762] : (s(bool,'T_0') != s(bool,X759) | s(bool,X760) = s(bool,'const.combin.K_2'(s(bool,X759),s(X761,X762))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X760),s(X763,X764))) | s(bool,X765) = s(bool,'const.combin.K_2'(s(bool,X766),s(bool,X765))) | s(bool,'F_0') = s(bool,X765) | s(bool,'F_0') = s(bool,X766)) ) | $spl24),
  inference(superposition,[],[f22185,f349])).
fof(f26374,plain,(
  ( ! [X848,X847,X849,X846] : (s(bool,X848) = s(bool,'const.combin.K_2'(s(bool,X849),s(bool,X848))) | s(bool,X848) = s(bool,happ(s(fun(X846,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X846,X847))) | s(bool,'F_0') = s(bool,X849)) ) | $spl24),
  inference(trivial_inequality_removal,[],[f26176])).
fof(f26176,plain,(
  ( ! [X848,X847,X849,X846] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X848) = s(bool,'const.combin.K_2'(s(bool,X849),s(bool,X848))) | s(bool,X848) = s(bool,happ(s(fun(X846,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X846,X847))) | s(bool,'F_0') = s(bool,X849)) ) | $spl24),
  inference(superposition,[],[f9907,f349])).
fof(f26040,plain,(
  ( ! [X835,X833,X834] : (s(bool,X833) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,'F_0'))),s(bool,X833))) | s(bool,X834) = s(bool,'const.combin.K_2'(s(bool,X835),s(bool,X834))) | s(bool,X833) = s(bool,X834) | s(bool,'F_0') = s(bool,X835)) ) | $spl24),
  inference(superposition,[],[f9907,f349])).
fof(f26022,plain,(
  ( ! [X736,X738,X737] : (s(bool,X736) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X736))) | s(bool,X737) = s(bool,'const.combin.K_2'(s(bool,X738),s(bool,X737))) | s(bool,X736) = s(bool,X737) | s(bool,'F_0') = s(bool,X738)) ) | $spl24),
  inference(superposition,[],[f2276,f349])).
fof(f27103,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X6),s(bool,X3))) | s(bool,'F_0') = s(bool,X6)) ) | $spl24),
  inference(condensation,[],[f27102])).
fof(f27102,plain,(
  ( ! [X561,X557,X559,X555,X560,X556,X558,X554] : (s(bool,X556) = s(bool,'const.combin.K_2'(s(bool,X554),s(X557,X558))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X556),s(X559,X560))) | s(bool,X554) = s(bool,'const.combin.K_2'(s(bool,X561),s(bool,X554))) | s(bool,'T_0') = s(bool,X555) | s(bool,'F_0') = s(bool,X561)) ) | $spl24),
  inference(subsumption_resolution,[],[f25504,f112])).
fof(f25504,plain,(
  ( ! [X561,X557,X559,X555,X560,X556,X558,X554] : (s(bool,'F_0') != s(bool,X555) | s(bool,X556) = s(bool,'const.combin.K_2'(s(bool,X554),s(X557,X558))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X556),s(X559,X560))) | s(bool,X554) = s(bool,'const.combin.K_2'(s(bool,X561),s(bool,X554))) | s(bool,'T_0') = s(bool,X555) | s(bool,'F_0') = s(bool,X561)) ) | $spl24),
  inference(superposition,[],[f22185,f349])).
fof(f24405,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X5,X6))) | s(bool,'T_0') = s(bool,X0)) ) | $spl24),
  inference(superposition,[],[f22185,f112])).
fof(f23568,plain,(
  ( ! [X536,X538,X532,X534,X537,X539,X533,X535] : (s(bool,X533) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X535,X536))) | s(bool,X537) = s(bool,happ(s(fun(X532,bool),'const.combin.K_1'(s(bool,X533))),s(X532,X534))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X537),s(X538,X539)))) ) | $spl24),
  inference(superposition,[],[f22109,f159])).
fof(f23567,plain,(
  ( ! [X528,X530,X524,X526,X529,X531,X525,X527] : (s(bool,X524) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X527,X528))) | s(bool,X529) = s(bool,'const.combin.K_2'(s(bool,X524),s(X525,X526))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X529),s(X530,X531)))) ) | $spl24),
  inference(superposition,[],[f22109,f139])).
fof(f22185,plain,(
  ( ! [X408,X410,X407,X409,X411,X406] : (s(bool,'F_0') != s(bool,X406) | s(bool,X409) = s(bool,'const.combin.K_2'(s(bool,X406),s(X407,X408))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X409),s(X410,X411)))) ) | $spl24),
  inference(superposition,[],[f22065,f139])).
fof(f22065,plain,(
  ( ! [X292,X294,X293,X295] : (s(bool,'F_0') != s(bool,X292) | s(bool,X292) = s(bool,X293) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X293),s(X294,X295)))) ) | $spl24),
  inference(superposition,[],[f2358,f139])).
fof(f22110,plain,(
  ( ! [X280,X282,X279,X281,X283,X278] : (s(bool,X278) != s(bool,happ(s(fun(X279,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X279,X280))) | s(bool,X278) = s(bool,X281) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X281),s(X282,X283)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22063,f2276])).
fof(f22063,plain,(
  ( ! [X280,X282,X279,X281,X283,X278] : (s(bool,X278) != s(bool,happ(s(fun(X279,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X279,X280))) | s(bool,X278) = s(bool,X281) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X281),s(X282,X283))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X278)))) ) | $spl24),
  inference(superposition,[],[f2358,f9157])).
fof(f22109,plain,(
  ( ! [X263,X265,X267,X262,X264,X266] : (s(bool,X262) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X263,X264))) | s(bool,X262) = s(bool,X265) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X265),s(X266,X267)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22108,f9907])).
fof(f22108,plain,(
  ( ! [X263,X269,X265,X267,X262,X268,X264,X266] : (s(bool,'T_0') = s(bool,happ(s(fun(X268,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X268,X269))) | s(bool,X262) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X263,X264))) | s(bool,X262) = s(bool,X265) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X265),s(X266,X267)))) ) | $spl24),
  inference(forward_demodulation,[],[f22061,f139])).
fof(f22061,plain,(
  ( ! [X263,X269,X265,X267,X262,X268,X264,X266] : (s(bool,X262) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X263,X264))) | s(bool,X262) = s(bool,X265) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X265),s(X266,X267))) | s(bool,'T_0') = s(bool,happ(s(fun(X268,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X262))))),s(X268,X269)))) ) | $spl24),
  inference(superposition,[],[f2358,f2047])).
fof(f22106,plain,(
  ( ! [X218,X216,X215,X213,X219,X217,X214] : (s(bool,X213) != s(bool,happ(s(fun(X214,bool),'const.combin.K_1'(s(bool,X215))),s(X214,X216))) | s(bool,X213) = s(bool,X217) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X217),s(X218,X219))) | s(bool,'T_0') = s(bool,X215)) ) | $spl24),
  inference(subsumption_resolution,[],[f22055,f2276])).
fof(f22055,plain,(
  ( ! [X218,X216,X215,X213,X219,X217,X214] : (s(bool,X213) != s(bool,happ(s(fun(X214,bool),'const.combin.K_1'(s(bool,X215))),s(X214,X216))) | s(bool,X213) = s(bool,X217) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X217),s(X218,X219))) | s(bool,'T_0') = s(bool,X215) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X213)))) ) | $spl24),
  inference(superposition,[],[f2358,f303])).
fof(f22092,plain,(
  ( ! [X436,X432,X434,X437,X433,X435] : (s(bool,'F_0') != s(bool,X433) | s(bool,X435) = s(bool,happ(s(fun(X432,bool),'const.combin.K_1'(s(bool,X433))),s(X432,X434))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X435),s(X436,X437)))) ) | $spl24),
  inference(forward_demodulation,[],[f22019,f139])).
fof(f22019,plain,(
  ( ! [X436,X432,X434,X437,X433,X435] : (s(bool,X433) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X433))) | s(bool,X435) = s(bool,happ(s(fun(X432,bool),'const.combin.K_1'(s(bool,X433))),s(X432,X434))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X435),s(X436,X437)))) ) | $spl24),
  inference(superposition,[],[f2358,f159])).
fof(f22018,plain,(
  ( ! [X428,X430,X426,X429,X431,X427] : (s(bool,X426) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X426))) | s(bool,X429) = s(bool,'const.combin.K_2'(s(bool,X426),s(X427,X428))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) ) | $spl24),
  inference(superposition,[],[f2358,f139])).
fof(f10065,plain,(
  ( ! [X70,X72,X71,X69] : (s(bool,X69) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,'F_0'))),s(bool,X69))) | s(bool,X69) = s(bool,X70) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72)))) ) | $spl24),
  inference(superposition,[],[f9907,f279])).
fof(f10064,plain,(
  ( ! [X68,X66,X67,X65] : (s(bool,X65) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,'F_0'))),s(bool,X65))) | s(bool,X65) = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun(X67,bool),'const.combin.K_1'(s(bool,X66))),s(X67,X68)))) ) | $spl24),
  inference(superposition,[],[f9907,f280])).
fof(f9907,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3)))) ) | $spl24),
  inference(subsumption_resolution,[],[f9764,f2276])).
fof(f9764,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X0,X1))) | s(bool,'T_0') != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3)))) )),
  inference(condensation,[],[f9579])).
fof(f9579,plain,(
  ( ! [X546,X549,X545,X547,X548] : (s(bool,'T_0') != s(bool,happ(s(fun(X547,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X547,X548))) | s(bool,X549) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X545,X546))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X545,X546)))) )),
  inference(superposition,[],[f2193,f9157])).
fof(f7619,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,X3) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X3))) | s(bool,X1) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f7618])).
fof(f7618,plain,(
  ( ! [X251,X249,X250,X248,X247] : (s(bool,X247) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X247))) | s(bool,'T_0') = s(bool,X248) | s(bool,X247) = s(bool,X249) | s(bool,'T_0') = s(bool,happ(s(fun(X250,bool),'const.combin.K_1'(s(bool,X249))),s(X250,X251)))) ) | $spl24),
  inference(duplicate_literal_removal,[],[f7255])).
fof(f7255,plain,(
  ( ! [X251,X249,X250,X248,X247] : (s(bool,X247) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X247))) | s(bool,'T_0') = s(bool,X248) | s(bool,'T_0') = s(bool,X248) | s(bool,X247) = s(bool,X249) | s(bool,'T_0') = s(bool,happ(s(fun(X250,bool),'const.combin.K_1'(s(bool,X249))),s(X250,X251)))) ) | $spl24),
  inference(superposition,[],[f2359,f280])).
fof(f3965,plain,(
  ( ! [X158,X156,X159,X157,X155,X160] : (s(bool,X156) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X158,X159))) | s(bool,X160) = s(bool,happ(s(fun(X155,bool),'const.combin.K_1'(s(bool,X156))),s(X155,X157))) | s(bool,'T_0') = s(bool,X160)) ) | $spl24),
  inference(superposition,[],[f3839,f159])).
fof(f3964,plain,(
  ( ! [X154,X152,X151,X149,X153,X150] : (s(bool,X149) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X152,X153))) | s(bool,X154) = s(bool,'const.combin.K_2'(s(bool,X149),s(X150,X151))) | s(bool,'T_0') = s(bool,X154)) ) | $spl24),
  inference(superposition,[],[f3839,f139])).
fof(f3839,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,X64) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X65,X66))) | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) ) | $spl24),
  inference(subsumption_resolution,[],[f3810,f2276])).
fof(f3810,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,X64) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X65,X66))) | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X64)))) ) | $spl24),
  inference(superposition,[],[f2359,f1978])).
fof(f3838,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,X59) != s(bool,'const.combin.K_2'(s(bool,X60),s(X61,X62))) | s(bool,X59) = s(bool,X63) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,X60)) ) | $spl24),
  inference(subsumption_resolution,[],[f3809,f2276])).
fof(f3809,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,X59) != s(bool,'const.combin.K_2'(s(bool,X60),s(X61,X62))) | s(bool,X59) = s(bool,X63) | s(bool,'T_0') = s(bool,X63) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X59)))) ) | $spl24),
  inference(superposition,[],[f2359,f302])).
fof(f3790,plain,(
  ( ! [X109,X107,X110,X108] : (s(bool,X107) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X107))) | s(bool,X110) = s(bool,'const.combin.K_2'(s(bool,X107),s(X108,X109))) | s(bool,'T_0') = s(bool,X110)) ) | $spl24),
  inference(superposition,[],[f2359,f139])).
fof(f2359,plain,(
  ( ! [X41,X40] : (s(bool,X40) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X40))) | s(bool,X40) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl24),
  inference(superposition,[],[f2276,f180])).
fof(f2358,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,X36) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X36))) | s(bool,X36) = s(bool,X37) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X37),s(X38,X39)))) ) | $spl24),
  inference(superposition,[],[f2276,f279])).
fof(f28573,plain,(
  $false | ($spl24 | $spl28 | $spl88)),
  inference(subsumption_resolution,[],[f28287,f28535])).
fof(f28535,plain,(
  ( ! [X152] : (s(bool,'T_0') = s(bool,X152)) ) | ($spl28 | $spl88)),
  inference(global_subsumption,[],[f27753,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f556,f557,f634,f635,f636,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1735,f1978,f1757,f2006,f2256,f2047,f2451,f2464,f2465,f3461,f3343,f3344,f3370,f3371,f3598,f3667,f3844,f4128,f4162,f4155,f4629,f5499,f5500,f5864,f6546,f6547,f6699,f6700,f6704,f6705,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7220,f7225,f7227,f7228,f7615,f7273,f7283,f7291,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9157,f9230,f9075,f9837,f9835,f9891,f9893,f9898,f9900,f10334,f10335,f11991,f11809,f11810,f11856,f11857,f12942,f12943,f12944,f15490,f15491,f15492,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f26698,f26717,f26686,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f26505,f27186,f27188,f27189,f27192,f26487,f26481,f27200,f27201,f26478,f26473,f27203,f27204,f27206,f26469,f26467,f27209,f26466,f26465,f27211,f26399,f27285,f27286,f26393,f26019,f27341,f27342,f26364,f27343,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f10405,f10314,f9555,f9379,f28133,f28144,f28150,f7595,f28176,f28191,f28198,f28208,f28209,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f7086,f7217,f7411,f8880,f16176,f25658,f25905,f26268,f9162,f11989,f349,f565,f653,f1099,f1100,f1101,f2193,f2685,f2686,f3538,f3539,f3624,f3698,f3699,f4291,f4292,f5014,f5015,f5938,f5939,f6698,f6724,f6725,f7267,f7268,f7269,f7272,f7275,f7284,f7287,f9770,f10541,f10542,f10543,f11995,f12147,f12148,f12278,f12280,f12563,f12564,f22780,f22781,f24981,f24982,f25163,f25164,f25165,f25166,f25661,f25908,f25914,f25916,f25917,f25919,f25920,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26020,f26024,f26036,f26039,f26271,f26274,f26294,f26363,f26398,f26464,f26468,f26471,f26472,f26477,f26482,f26602,f27272,f9082,f9164,f11990,f21027,f21260,f21641,f1981,f3457,f18663,f21026,f21261,f21640,f6703,f7089,f16179,f9899])).
fof(f28572,plain,(
  $false | ($spl28 | $spl88)),
  inference(subsumption_resolution,[],[f28571,f110])).
fof(f28571,plain,(
  ~p(s(bool,'T_0')) | ($spl28 | $spl88)),
  inference(forward_demodulation,[],[f28209,f28535])).
fof(f28539,plain,(
  $false | ($spl24 | $spl28 | $spl88)),
  inference(subsumption_resolution,[],[f9907,f28535])).
fof(f28532,plain,(
  $false | ($spl12 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f9907,f28528])).
fof(f28528,plain,(
  ( ! [X868] : (s(bool,'T_0') = s(bool,X868)) ) | ($spl12 | $spl28)),
  inference(global_subsumption,[],[f28527,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f556,f557,f634,f635,f636,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1735,f1978,f1757,f2006,f2256,f2047,f2451,f2464,f2465,f3461,f3343,f3344,f3370,f3371,f3598,f3667,f3844,f4128,f4162,f4155,f4629,f5499,f5500,f5864,f6546,f6547,f6699,f6700,f6704,f6705,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7220,f7225,f7227,f7228,f7615,f7273,f7283,f7291,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9157,f9230,f9075,f9837,f9835,f9891,f9893,f9898,f9900,f10334,f10335,f11991,f11809,f11810,f11856,f11857,f12942,f12943,f12944,f15490,f15491,f15492,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f26698,f26717,f26686,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f26505,f27186,f27188,f27189,f27192,f26487,f26481,f27200,f27201,f26478,f26473,f27203,f27204,f27206,f26469,f26467,f27209,f26466,f26465,f27211,f26399,f27285,f27286,f26393,f26019,f27341,f27342,f26364,f27343,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305,f28110,f12303,f28113,f12291,f12290,f10405,f10314,f9555,f9379,f28133,f28144,f28150,f7595,f28176,f28191,f28198,f28208,f28209,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f7086,f7217,f7411,f8880,f16176,f25658,f25905,f26268,f9162,f11989,f349,f565,f653,f1099,f1100,f1101,f2193,f2685,f2686,f3538,f3539,f3624,f3698,f3699,f4291,f4292,f5014,f5015,f5938,f5939,f6698,f6724,f6725,f7267,f7268,f7269,f7272,f7275,f7284,f7287,f9770,f10541,f10542,f10543,f11995,f12147,f12148,f12278,f12280,f12563,f12564,f22780,f22781,f24981,f24982,f25163,f25164,f25165,f25166,f25661,f25908,f25914,f25916,f25917,f25919,f25920,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26020,f26024,f26036,f26039,f26271,f26274,f26294,f26363,f26398,f26464,f26468,f26471,f26472,f26477,f26482,f26602,f27272,f9082,f9164,f11990,f21027,f21260,f21641,f1981,f3457,f18663,f21026,f21261,f21640,f6703,f7089,f16179,f9899])).
fof(f28527,plain,(
  ( ! [X866,X870,X868,X867,X865,X869] : (s(bool,'T_0') = s(bool,happ(s(fun(X869,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X869,X870))) | s(X867,f(s(bool,X868))) != s(X867,g(s(bool,X868))) | s(fun(bool,X867),X865) = s(fun(bool,X867),X866) | s(bool,'T_0') = s(bool,X868)) ) | $spl12),
  inference(forward_demodulation,[],[f7089,f192])).
fof(f28531,plain,(
  $false | ($spl12 | $spl28)),
  inference(subsumption_resolution,[],[f28530,f110])).
fof(f28530,plain,(
  ~p(s(bool,'T_0')) | ($spl12 | $spl28)),
  inference(forward_demodulation,[],[f28209,f28528])).
fof(f28529,plain,(
  $false | ($spl12 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f28287,f28528])).
fof(f28507,plain,(
  $false | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f28461,f28322])).
fof(f28322,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl30),
  inference(condensation,[],[f28321])).
fof(f28321,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X1)) ) | $spl30),
  inference(subsumption_resolution,[],[f28317,f279])).
fof(f28317,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1)) ) | $spl30),
  inference(condensation,[],[f28292])).
fof(f28292,plain,(
  ( ! [X175,X173,X171,X169,X174] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X173),s(X174,X175))) | s(bool,X169) = s(bool,X173) | s(bool,'T_0') = s(bool,X169) | s(bool,'T_0') = s(bool,X171)) ) | $spl30),
  inference(backward_demodulation,[],[f9901,f9082])).
fof(f28461,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2)))) ) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f28322,f28287])).
fof(f28506,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f28458,f110])).
fof(f28458,plain,(
  ~p(s(bool,'T_0')) | $spl30),
  inference(backward_demodulation,[],[f28322,f28209])).
fof(f28498,plain,(
  $false | ($spl24 | $spl30)),
  inference(subsumption_resolution,[],[f28359,f28322])).
fof(f28359,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X2,X3)))) ) | ($spl24 | $spl30)),
  inference(backward_demodulation,[],[f28322,f9907])).
fof(f2275,plain,(
  ( ! [X96] : (s(bool,'T_0') = s(bool,X96)) ) | $spl22),
  inference(cnf_transformation,[],[f2275_D])).
fof(f2275_D,plain,(
  ( ! [X96] : (s(bool,'T_0') = s(bool,X96)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2276,plain,(
  ( ! [X97,X98] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98)))) ) | $spl24),
  inference(cnf_transformation,[],[f2276_D])).
fof(f2276_D,plain,(
  ( ! [X97,X98] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f28191,plain,(
  ( ! [X218,X222,X221] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X221,X222))) | s(bool,'T_0') = s(bool,X218)) )),
  inference(forward_demodulation,[],[f28190,f139])).
fof(f28190,plain,(
  ( ! [X218,X222,X220,X219,X221] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X219,X220))),s(X221,X222))) | s(bool,'T_0') = s(bool,X218)) )),
  inference(subsumption_resolution,[],[f6016,f9230])).
fof(f6016,plain,(
  ( ! [X218,X222,X220,X219,X223,X221,X224] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X219,X220))),s(X221,X222))) | s(bool,'T_0') = s(bool,X218) | s(bool,'T_0') = s(bool,happ(s(fun(X223,bool),'const.combin.K_1'(s(bool,X218))),s(X223,X224)))) )),
  inference(superposition,[],[f2006,f2047])).
fof(f28176,plain,(
  ( ! [X61,X64,X65] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X64,X65))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(forward_demodulation,[],[f28175,f139])).
fof(f28175,plain,(
  ( ! [X61,X64,X62,X65,X63] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X62,X63))),s(X64,X65))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f6506,f9230])).
fof(f6506,plain,(
  ( ! [X61,X66,X64,X62,X67,X65,X63] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X62,X63))),s(X64,X65))) | s(bool,'T_0') = s(bool,happ(s(fun(X66,bool),'const.combin.K_1'(s(bool,X61))),s(X66,X67))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f2451,f1978])).
fof(f28150,plain,(
  ( ! [X68,X66,X67] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X67,X68))) | s(bool,'T_0') = s(bool,X66)) )),
  inference(forward_demodulation,[],[f28149,f159])).
fof(f28149,plain,(
  ( ! [X70,X68,X66,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X67,X68))) != s(bool,happ(s(fun(X69,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X69,X70))) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f8096,f9230])).
fof(f8096,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X67,X68))) != s(bool,happ(s(fun(X69,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X69,X70))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun(X71,bool),'const.combin.K_1'(s(bool,X66))),s(X71,X72)))) )),
  inference(superposition,[],[f7512,f2047])).
fof(f28125,plain,(
  ( ! [X399,X395,X396,X394,X400] : (s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X399,X400))) | s(bool,'T_0') = s(bool,happ(s(fun(X394,bool),'const.combin.K_1'(s(bool,X395))),s(X394,X396)))) ) | $spl146),
  inference(cnf_transformation,[],[f28125_D])).
fof(f28125_D,plain,(
  ( ! [X399,X395,X396,X394,X400] : (s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X399,X400))) | s(bool,'T_0') = s(bool,happ(s(fun(X394,bool),'const.combin.K_1'(s(bool,X395))),s(X394,X396)))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f27813,plain,(
  ( ! [X76,X75] : (s(bool,'T_0') = s(bool,happ(s(fun(X75,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X75,X76)))) ) | $spl124),
  inference(cnf_transformation,[],[f27813_D])).
fof(f27813_D,plain,(
  ( ! [X76,X75] : (s(bool,'T_0') = s(bool,happ(s(fun(X75,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X75,X76)))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f9379,plain,(
  ( ! [X142,X140,X138,X143,X141,X139,X137] : (s(bool,'T_0') = s(bool,happ(s(fun(X140,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X140,X141))) | s(bool,'T_0') = s(bool,happ(s(fun(X137,bool),'const.combin.K_1'(s(bool,X138))),s(X137,X139))) | s(bool,X138) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X142,X143)))) )),
  inference(superposition,[],[f9157,f2047])).
fof(f9555,plain,(
  ( ! [X397,X399,X395,X396,X398,X394,X400] : (s(bool,'T_0') = s(bool,happ(s(fun(X397,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X397,X398))) | s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X399,X400))) | s(bool,'T_0') = s(bool,happ(s(fun(X394,bool),'const.combin.K_1'(s(bool,X395))),s(X394,X396)))) )),
  inference(superposition,[],[f2047,f9157])).
fof(f194,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl15),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f12290,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f12286,f159])).
fof(f12286,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2)))) )),
  inference(condensation,[],[f12285])).
fof(f12285,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f12284])).
fof(f12284,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f12103])).
fof(f12103,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun(X5,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X5,X6))) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f11995,f180])).
fof(f12291,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f12283,f159])).
fof(f12283,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2)))) )),
  inference(condensation,[],[f12282])).
fof(f12282,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f12281])).
fof(f12281,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f12106])).
fof(f12106,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'F_0') != s(bool,happ(s(fun(X20,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X20,X21))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22) | s(bool,X19) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f11995,f180])).
fof(f27763,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3)) ) | $spl94),
  inference(cnf_transformation,[],[f27763_D])).
fof(f27763_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3)) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f28113,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f28112,f159])).
fof(f28112,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f28111])).
fof(f28111,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'F_0') != s(bool,happ(s(fun(X39,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X39,X40))) | s(bool,'T_0') = s(bool,X41) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(subsumption_resolution,[],[f12109,f4162])).
fof(f12109,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'F_0') != s(bool,happ(s(fun(X39,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X39,X40))) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(superposition,[],[f11995,f279])).
fof(f9901,plain,(
  ( ! [X499,X498,X493] : (s(bool,'T_0') = s(bool,happ(s(fun(X498,bool),'const.combin.K_1'(s(bool,X493))),s(X498,X499)))) ) | $spl30),
  inference(cnf_transformation,[],[f9901_D])).
fof(f9901_D,plain,(
  ( ! [X499,X498,X493] : (s(bool,'T_0') = s(bool,happ(s(fun(X498,bool),'const.combin.K_1'(s(bool,X493))),s(X498,X499)))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f12303,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2)))) )),
  inference(forward_demodulation,[],[f12302,f159])).
fof(f12302,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f12301])).
fof(f12301,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X4))),s(X3,X5)))) )),
  inference(condensation,[],[f12300])).
fof(f12300,plain,(
  ( ! [X61,X59,X64,X62,X60,X65,X63] : (s(bool,'F_0') != s(bool,happ(s(fun(X60,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X60,X61))) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62) | s(bool,'T_0') = s(bool,happ(s(fun(X64,bool),'const.combin.K_1'(s(bool,X63))),s(X64,X65)))) )),
  inference(subsumption_resolution,[],[f12112,f4128])).
fof(f12112,plain,(
  ( ! [X61,X59,X64,X62,X60,X65,X63] : (s(bool,'F_0') != s(bool,happ(s(fun(X60,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X60,X61))) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62) | s(bool,X59) = s(bool,X63) | s(bool,'T_0') = s(bool,happ(s(fun(X64,bool),'const.combin.K_1'(s(bool,X63))),s(X64,X65)))) )),
  inference(superposition,[],[f11995,f280])).
fof(f28110,plain,(
  ( ! [X149] : (s(bool,'T_0') = s(bool,X149) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311,f28109,f12309,f12305])).
fof(f12309,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f12308,f159])).
fof(f12308,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2)))) )),
  inference(duplicate_literal_removal,[],[f12307])).
fof(f12307,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f12306])).
fof(f12306,plain,(
  ( ! [X163,X161,X159,X164,X162] : (s(bool,'F_0') != s(bool,happ(s(fun(X161,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X161,X162))) | s(bool,'T_0') = s(bool,X163) | s(bool,X159) = s(bool,X164) | s(bool,'T_0') = s(bool,X164)) )),
  inference(subsumption_resolution,[],[f12127,f8124])).
fof(f12127,plain,(
  ( ! [X158,X163,X161,X159,X164,X162,X160] : (s(bool,'F_0') != s(bool,happ(s(fun(X161,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X161,X162))) | s(bool,X163) = s(bool,happ(s(fun(X158,bool),'const.combin.K_1'(s(bool,X159))),s(X158,X160))) | s(bool,'T_0') = s(bool,X163) | s(bool,X159) = s(bool,X164) | s(bool,'T_0') = s(bool,X164)) )),
  inference(superposition,[],[f11995,f280])).
fof(f28109,plain,(
  ( ! [X177] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X177)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107,f12311])).
fof(f28108,plain,(
  ( ! [X185] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X185)) ) | $spl24),
  inference(global_subsumption,[],[f12313,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315,f28107])).
fof(f28107,plain,(
  ( ! [X213] : (s(bool,'T_0') = s(bool,X213) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317,f28106,f12315])).
fof(f28106,plain,(
  ( ! [X219] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X219)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318,f28105,f12317])).
fof(f28105,plain,(
  ( ! [X235] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X235)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103,f12322,f12318])).
fof(f12322,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f12321,f159])).
fof(f12321,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2)))) )),
  inference(duplicate_literal_removal,[],[f12320])).
fof(f12320,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f12319])).
fof(f12319,plain,(
  ( ! [X243,X241,X244,X242,X238] : (s(bool,'F_0') != s(bool,happ(s(fun(X241,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X241,X242))) | s(bool,'T_0') = s(bool,X243) | s(bool,X238) = s(bool,X244) | s(bool,'T_0') = s(bool,X244)) )),
  inference(subsumption_resolution,[],[f12138,f1386])).
fof(f12138,plain,(
  ( ! [X243,X241,X239,X244,X242,X240,X238] : (s(bool,'F_0') != s(bool,happ(s(fun(X241,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X241,X242))) | s(bool,X243) = s(bool,'const.combin.K_2'(s(bool,X238),s(X239,X240))) | s(bool,'T_0') = s(bool,X243) | s(bool,X238) = s(bool,X244) | s(bool,'T_0') = s(bool,X244)) )),
  inference(superposition,[],[f11995,f279])).
fof(f28104,plain,(
  ( ! [X271] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X271)) ) | $spl24),
  inference(global_subsumption,[],[f12324,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325,f28103])).
fof(f28103,plain,(
  ( ! [X279] : (s(bool,'T_0') = s(bool,X279) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222,f28100,f12250,f28102,f12325])).
fof(f28102,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f28101])).
fof(f28101,plain,(
  ( ! [X3,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X1) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f12218,f3598])).
fof(f12218,plain,(
  ( ! [X3,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X1) = s(bool,X3) | s(bool,'T_0') = s(bool,X3) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f11995,f215])).
fof(f12250,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f12249])).
fof(f12249,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f12248])).
fof(f12248,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f12220])).
fof(f12220,plain,(
  ( ! [X14,X13,X11] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X11) = s(bool,X13) | s(bool,'T_0') = s(bool,X13) | s(bool,X11) = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f11995,f280])).
fof(f28100,plain,(
  ( ! [X23] : (s(bool,'T_0') = s(bool,X23) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223,f28099,f12222])).
fof(f28099,plain,(
  ( ! [X29] : (s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073,f28074,f28076,f28078,f28081,f28084,f12362,f28085,f12359,f28086,f28089,f28092,f28095,f28098,f12223])).
fof(f28098,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f28097])).
fof(f28097,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f28096])).
fof(f28096,plain,(
  ( ! [X54,X53,X51] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f12228,f8124])).
fof(f12228,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53) | s(bool,X54) = s(bool,happ(s(fun(X50,bool),'const.combin.K_1'(s(bool,X51))),s(X50,X52))) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f11995,f180])).
fof(f28095,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f28094])).
fof(f28094,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f28093])).
fof(f28093,plain,(
  ( ! [X68,X66,X69] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X66) = s(bool,X68) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) )),
  inference(subsumption_resolution,[],[f12231,f8124])).
fof(f12231,plain,(
  ( ! [X68,X66,X69,X67,X65] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X66) = s(bool,X68) | s(bool,'T_0') = s(bool,X68) | s(bool,X69) = s(bool,happ(s(fun(X65,bool),'const.combin.K_1'(s(bool,X66))),s(X65,X67))) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f11995,f180])).
fof(f9899,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) ) | $spl28),
  inference(cnf_transformation,[],[f9899_D])).
fof(f9899_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f28092,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f28091])).
fof(f28091,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3)))) )),
  inference(condensation,[],[f28090])).
fof(f28090,plain,(
  ( ! [X90,X88,X87,X85,X89] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X85) = s(bool,X87) | s(bool,'T_0') = s(bool,X87) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X88),s(X89,X90)))) )),
  inference(subsumption_resolution,[],[f12234,f8393])).
fof(f12234,plain,(
  ( ! [X90,X88,X87,X85,X89,X86,X84] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X85) = s(bool,X87) | s(bool,'T_0') = s(bool,X87) | s(bool,X88) = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X85))),s(X84,X86))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X88),s(X89,X90)))) )),
  inference(superposition,[],[f11995,f279])).
fof(f28089,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f28088])).
fof(f28088,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3)))) )),
  inference(condensation,[],[f28087])).
fof(f28087,plain,(
  ( ! [X111,X109,X110,X108,X106] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X106) = s(bool,X108) | s(bool,'T_0') = s(bool,X108) | s(bool,'T_0') = s(bool,happ(s(fun(X110,bool),'const.combin.K_1'(s(bool,X109))),s(X110,X111)))) )),
  inference(subsumption_resolution,[],[f12237,f11991])).
fof(f12237,plain,(
  ( ! [X111,X109,X107,X105,X110,X108,X106] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X106) = s(bool,X108) | s(bool,'T_0') = s(bool,X108) | s(bool,X109) = s(bool,happ(s(fun(X105,bool),'const.combin.K_1'(s(bool,X106))),s(X105,X107))) | s(bool,'T_0') = s(bool,happ(s(fun(X110,bool),'const.combin.K_1'(s(bool,X109))),s(X110,X111)))) )),
  inference(superposition,[],[f11995,f280])).
fof(f28084,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f28083])).
fof(f28083,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f28082])).
fof(f28082,plain,(
  ( ! [X4,X8,X5] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X5) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f12365,f8124])).
fof(f12365,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X5) = s(bool,happ(s(fun(X6,bool),'const.combin.K_1'(s(bool,X4))),s(X6,X7))) | s(bool,'T_0') = s(bool,X5) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f3699,f180])).
fof(f28081,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f28080])).
fof(f28080,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f28079])).
fof(f28079,plain,(
  ( ! [X23,X19,X20] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X20) | s(bool,X19) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) )),
  inference(subsumption_resolution,[],[f12368,f8124])).
fof(f12368,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X20) = s(bool,happ(s(fun(X21,bool),'const.combin.K_1'(s(bool,X19))),s(X21,X22))) | s(bool,'T_0') = s(bool,X20) | s(bool,X19) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f3699,f180])).
fof(f28078,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f28077])).
fof(f28077,plain,(
  ( ! [X39,X43,X38,X44,X42] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X39) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(subsumption_resolution,[],[f12371,f8123])).
fof(f12371,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X39) = s(bool,happ(s(fun(X40,bool),'const.combin.K_1'(s(bool,X38))),s(X40,X41))) | s(bool,'T_0') = s(bool,X39) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(superposition,[],[f3699,f279])).
fof(f27788,plain,(
  ( ! [X87,X85,X79,X86] : (s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) ) | $spl100),
  inference(cnf_transformation,[],[f27788_D])).
fof(f27788_D,plain,(
  ( ! [X87,X85,X79,X86] : (s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f28076,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X1) = s(bool,X3)) )),
  inference(condensation,[],[f28075])).
fof(f28075,plain,(
  ( ! [X59,X64,X60,X65,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X60) | s(bool,X59) = s(bool,X63) | s(bool,'T_0') = s(bool,happ(s(fun(X64,bool),'const.combin.K_1'(s(bool,X63))),s(X64,X65)))) )),
  inference(subsumption_resolution,[],[f12374,f8122])).
fof(f12374,plain,(
  ( ! [X61,X59,X64,X62,X60,X65,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X60) = s(bool,happ(s(fun(X61,bool),'const.combin.K_1'(s(bool,X59))),s(X61,X62))) | s(bool,'T_0') = s(bool,X60) | s(bool,X59) = s(bool,X63) | s(bool,'T_0') = s(bool,happ(s(fun(X64,bool),'const.combin.K_1'(s(bool,X63))),s(X64,X65)))) )),
  inference(superposition,[],[f3699,f280])).
fof(f28074,plain,(
  ( ! [X127] : (s(bool,'T_0') = s(bool,X127) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067,f28068,f28072,f28073])).
fof(f28072,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f28071])).
fof(f28071,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f28070])).
fof(f28070,plain,(
  ( ! [X144,X141,X139] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X141) | s(bool,X139) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(subsumption_resolution,[],[f28069,f8124])).
fof(f28069,plain,(
  ( ! [X144,X142,X143,X141,X139] : (s(bool,X141) = s(bool,happ(s(fun(X142,bool),'const.combin.K_1'(s(bool,X139))),s(X142,X143))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X141) | s(bool,X139) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(forward_demodulation,[],[f12385,f159])).
fof(f12385,plain,(
  ( ! [X144,X142,X140,X138,X143,X141,X139] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X141) = s(bool,happ(s(fun(X142,bool),'const.combin.K_1'(s(bool,happ(s(fun(X138,bool),'const.combin.K_1'(s(bool,X139))),s(X138,X140))))),s(X142,X143))) | s(bool,'T_0') = s(bool,X141) | s(bool,X139) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(superposition,[],[f3699,f280])).
fof(f28068,plain,(
  ( ! [X155] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X155)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065,f28066,f28067])).
fof(f28066,plain,(
  ( ! [X163] : (s(bool,'T_0') = s(bool,X163) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063,f28064,f28065])).
fof(f28064,plain,(
  ( ! [X191] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X191)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061,f28062,f28063])).
fof(f28062,plain,(
  ( ! [X197] : (s(bool,'T_0') = s(bool,X197) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059,f28060,f28061])).
fof(f28060,plain,(
  ( ! [X213] : (s(bool,'T_0') = s(bool,X213) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053,f28054,f28058,f28059])).
fof(f28058,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f28057])).
fof(f28057,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f28056])).
fof(f28056,plain,(
  ( ! [X218,X221,X224] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X221) | s(bool,X218) = s(bool,X224) | s(bool,'T_0') = s(bool,X224)) )),
  inference(subsumption_resolution,[],[f28055,f8124])).
fof(f28055,plain,(
  ( ! [X218,X222,X223,X221,X224] : (s(bool,X221) = s(bool,happ(s(fun(X222,bool),'const.combin.K_1'(s(bool,X218))),s(X222,X223))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X221) | s(bool,X218) = s(bool,X224) | s(bool,'T_0') = s(bool,X224)) )),
  inference(forward_demodulation,[],[f12396,f139])).
fof(f12396,plain,(
  ( ! [X218,X222,X220,X219,X223,X221,X224] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X221) = s(bool,happ(s(fun(X222,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X218),s(X219,X220))))),s(X222,X223))) | s(bool,'T_0') = s(bool,X221) | s(bool,X218) = s(bool,X224) | s(bool,'T_0') = s(bool,X224)) )),
  inference(superposition,[],[f3699,f279])).
fof(f28054,plain,(
  ( ! [X249] : (s(bool,'T_0') = s(bool,X249) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051,f28052,f28053])).
fof(f28052,plain,(
  ( ! [X257] : (s(bool,'T_0') = s(bool,X257) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742,f28034,f28040,f12575,f28049,f12572,f28050,f28051])).
fof(f28040,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f28039])).
fof(f28039,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f28038])).
fof(f28038,plain,(
  ( ! [X61,X57,X60] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f13159,f1386])).
fof(f13159,plain,(
  ( ! [X61,X57,X60] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60) | s(bool,X61) = s(bool,'const.combin.K_2'(s(bool,X57),s(bool,X61))) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f3461,f694])).
fof(f28034,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287,f28033,f13742])).
fof(f28033,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031,f28032,f13287])).
fof(f28032,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027,f28028,f28031])).
fof(f28028,plain,(
  ( ! [X424] : (s(bool,'T_0') = s(bool,X424) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753,f28026,f28027])).
fof(f28026,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013,f17282,f28025,f13753])).
fof(f28025,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f28024])).
fof(f28024,plain,(
  ( ! [X94,X92,X88,X93,X91] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X91) | s(bool,X88) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(subsumption_resolution,[],[f15858,f4162])).
fof(f15858,plain,(
  ( ! [X94,X92,X88,X93,X91] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X88) = s(bool,X91) | s(bool,'T_0') = s(bool,X91) | s(bool,X88) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f3461,f1329])).
fof(f17282,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f17281,f139])).
fof(f17281,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f17280])).
fof(f17280,plain,(
  ( ! [X596,X592,X594,X588,X593,X595,X591] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X591,X592))) | s(bool,'T_0') = s(bool,X593) | s(bool,X588) = s(bool,X594) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X594),s(X595,X596)))) )),
  inference(subsumption_resolution,[],[f15915,f1385])).
fof(f15915,plain,(
  ( ! [X596,X592,X594,X588,X590,X593,X595,X589,X591] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X591,X592))) | s(bool,X593) = s(bool,'const.combin.K_2'(s(bool,X588),s(X589,X590))) | s(bool,'T_0') = s(bool,X593) | s(bool,X588) = s(bool,X594) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X594),s(X595,X596)))) )),
  inference(superposition,[],[f3461,f1329])).
fof(f28018,plain,(
  ( ! [X600] : (s(bool,'T_0') = s(bool,X600) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f28017,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013])).
fof(f28016,plain,(
  ( ! [X623] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X623)) ) | $spl24),
  inference(global_subsumption,[],[f28015,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076,f28013])).
fof(f28013,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f28012])).
fof(f28012,plain,(
  ( ! [X635,X629,X636,X632,X637] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X632) | s(bool,X629) = s(bool,X635) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X635),s(X636,X637)))) )),
  inference(subsumption_resolution,[],[f28011,f8123])).
fof(f28011,plain,(
  ( ! [X633,X635,X629,X636,X632,X634,X637] : (s(bool,X632) = s(bool,happ(s(fun(X633,bool),'const.combin.K_1'(s(bool,X629))),s(X633,X634))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X632) | s(bool,X629) = s(bool,X635) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X635),s(X636,X637)))) )),
  inference(forward_demodulation,[],[f15920,f139])).
fof(f15920,plain,(
  ( ! [X633,X635,X629,X631,X636,X632,X634,X630,X637] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X632) = s(bool,happ(s(fun(X633,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X629),s(X630,X631))))),s(X633,X634))) | s(bool,'T_0') = s(bool,X632) | s(bool,X629) = s(bool,X635) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X635),s(X636,X637)))) )),
  inference(superposition,[],[f3699,f1329])).
fof(f28010,plain,(
  ( ! [X759] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X759)) ) | $spl24),
  inference(global_subsumption,[],[f28009,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957,f17691,f17627,f27969,f27972,f16275,f16272,f16270,f16265,f17511,f16079,f16076])).
fof(f783,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X25,X26)))) ) | $spl20),
  inference(cnf_transformation,[],[f783_D])).
fof(f783_D,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X25,X26)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f27977,plain,(
  ( ! [X802,X800,X799,X803,X801] : (s(bool,X800) != s(bool,'const.combin.K_2'(s(bool,X799),s(bool,X800))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X799),s(X802,X803))) | s(bool,'T_0') = s(bool,X801) | s(bool,X800) = s(bool,X801)) ) | $spl144),
  inference(cnf_transformation,[],[f27977_D])).
fof(f27977_D,plain,(
  ( ! [X802,X800,X799,X803,X801] : (s(bool,X800) != s(bool,'const.combin.K_2'(s(bool,X799),s(bool,X800))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X799),s(X802,X803))) | s(bool,'T_0') = s(bool,X801) | s(bool,X800) = s(bool,X801)) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f16073,plain,(
  ( ! [X802,X800,X804,X799,X803,X801,X805] : (s(bool,X800) != s(bool,'const.combin.K_2'(s(bool,X799),s(bool,X800))) | s(bool,X800) = s(bool,X801) | s(bool,'T_0') = s(bool,X801) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X802,X803))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X799),s(X804,X805)))) ) | $spl24),
  inference(superposition,[],[f2359,f1329])).
fof(f27976,plain,(
  ( ! [X831,X829,X826,X830,X828,X832,X827] : (s(bool,X826) != s(bool,X827) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X826),s(X831,X832))) | s(bool,'T_0') = s(bool,X828) | s(bool,X828) = s(bool,happ(s(fun(X829,bool),'const.combin.K_1'(s(bool,X827))),s(X829,X830)))) ) | $spl142),
  inference(cnf_transformation,[],[f27976_D])).
fof(f27976_D,plain,(
  ( ! [X831,X829,X826,X830,X828,X832,X827] : (s(bool,X826) != s(bool,X827) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X826),s(X831,X832))) | s(bool,'T_0') = s(bool,X828) | s(bool,X828) = s(bool,happ(s(fun(X829,bool),'const.combin.K_1'(s(bool,X827))),s(X829,X830)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f16076,plain,(
  ( ! [X831,X829,X833,X826,X830,X828,X834,X832,X827] : (s(bool,X826) != s(bool,X827) | s(bool,X828) = s(bool,happ(s(fun(X829,bool),'const.combin.K_1'(s(bool,X827))),s(X829,X830))) | s(bool,'T_0') = s(bool,X828) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X831,X832))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X826),s(X833,X834)))) )),
  inference(superposition,[],[f3699,f1329])).
fof(f27975,plain,(
  ( ! [X841,X835,X839,X837,X840,X838,X836] : (s(bool,X836) != s(bool,'const.combin.K_2'(s(bool,X835),s(X837,X838))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X835),s(X840,X841))) | s(bool,'T_0') = s(bool,X839) | s(bool,X836) = s(bool,X839)) ) | $spl140),
  inference(cnf_transformation,[],[f27975_D])).
fof(f27975_D,plain,(
  ( ! [X841,X835,X839,X837,X840,X838,X836] : (s(bool,X836) != s(bool,'const.combin.K_2'(s(bool,X835),s(X837,X838))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X835),s(X840,X841))) | s(bool,'T_0') = s(bool,X839) | s(bool,X836) = s(bool,X839)) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f16077,plain,(
  ( ! [X843,X841,X835,X839,X837,X842,X840,X838,X836] : (s(bool,X836) != s(bool,'const.combin.K_2'(s(bool,X835),s(X837,X838))) | s(bool,X836) = s(bool,X839) | s(bool,'T_0') = s(bool,X839) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X840,X841))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X835),s(X842,X843)))) ) | $spl24),
  inference(superposition,[],[f3839,f1329])).
fof(f27974,plain,(
  ( ! [X854,X852,X857,X855,X853,X858,X856] : (s(bool,X853) != s(bool,happ(s(fun(X854,bool),'const.combin.K_1'(s(bool,X852))),s(X854,X855))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X852),s(X857,X858))) | s(bool,X853) = s(bool,X856) | s(bool,'T_0') = s(bool,X856)) ) | $spl138),
  inference(cnf_transformation,[],[f27974_D])).
fof(f27974_D,plain,(
  ( ! [X854,X852,X857,X855,X853,X858,X856] : (s(bool,X853) != s(bool,happ(s(fun(X854,bool),'const.combin.K_1'(s(bool,X852))),s(X854,X855))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X852),s(X857,X858))) | s(bool,X853) = s(bool,X856) | s(bool,'T_0') = s(bool,X856)) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f16079,plain,(
  ( ! [X860,X854,X852,X859,X857,X855,X853,X858,X856] : (s(bool,X853) != s(bool,happ(s(fun(X854,bool),'const.combin.K_1'(s(bool,X852))),s(X854,X855))) | s(bool,'T_0') = s(bool,X856) | s(bool,X853) = s(bool,X856) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X857,X858))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X852),s(X859,X860)))) )),
  inference(superposition,[],[f9770,f1329])).
fof(f16269,plain,(
  ( ! [X802,X800,X804,X799,X803,X801,X805] : (s(bool,X800) != s(bool,'const.combin.K_2'(s(bool,X799),s(bool,X800))) | s(bool,X800) = s(bool,X801) | s(bool,'T_0') = s(bool,X801) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X799),s(X802,X803))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X804,X805)))) ) | $spl24),
  inference(superposition,[],[f2359,f1329])).
fof(f27728,plain,(
  ( ! [X146,X144,X142,X145,X143] : (s(bool,X142) != s(bool,X143) | s(bool,'T_0') = s(bool,X146) | s(bool,X142) = s(bool,X146) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X143),s(X144,X145)))) ) | $spl86),
  inference(cnf_transformation,[],[f27728_D])).
fof(f27728_D,plain,(
  ( ! [X146,X144,X142,X145,X143] : (s(bool,X142) != s(bool,X143) | s(bool,'T_0') = s(bool,X146) | s(bool,X142) = s(bool,X146) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X143),s(X144,X145)))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f16270,plain,(
  ( ! [X810,X814,X812,X816,X811,X815,X813] : (s(bool,X810) != s(bool,X811) | s(bool,X811) = s(bool,X812) | s(bool,'T_0') = s(bool,X812) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X810),s(X813,X814))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X815,X816)))) )),
  inference(superposition,[],[f3598,f1329])).
fof(f16272,plain,(
  ( ! [X831,X829,X833,X826,X830,X828,X834,X832,X827] : (s(bool,X826) != s(bool,X827) | s(bool,X828) = s(bool,happ(s(fun(X829,bool),'const.combin.K_1'(s(bool,X827))),s(X829,X830))) | s(bool,'T_0') = s(bool,X828) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X826),s(X831,X832))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X833,X834)))) )),
  inference(superposition,[],[f3699,f1329])).
fof(f16273,plain,(
  ( ! [X843,X841,X835,X839,X837,X842,X840,X838,X836] : (s(bool,X836) != s(bool,'const.combin.K_2'(s(bool,X835),s(X837,X838))) | s(bool,X836) = s(bool,X839) | s(bool,'T_0') = s(bool,X839) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X835),s(X840,X841))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X842,X843)))) ) | $spl24),
  inference(superposition,[],[f3839,f1329])).
fof(f16275,plain,(
  ( ! [X860,X854,X852,X859,X857,X855,X853,X858,X856] : (s(bool,X853) != s(bool,happ(s(fun(X854,bool),'const.combin.K_1'(s(bool,X852))),s(X854,X855))) | s(bool,'T_0') = s(bool,X856) | s(bool,X853) = s(bool,X856) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X852),s(X857,X858))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X859,X860)))) )),
  inference(superposition,[],[f9770,f1329])).
fof(f27972,plain,(
  ( ! [X1002,X1006,X1004,X1008,X1003,X1007,X1005] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1007,X1008))) | s(bool,X1002) != s(bool,X1003) | s(bool,'T_0') = s(bool,X1004) | s(bool,X1003) = s(bool,X1004) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1002),s(X1005,X1006)))) )),
  inference(forward_demodulation,[],[f16291,f159])).
fof(f16291,plain,(
  ( ! [X1002,X1000,X1006,X1004,X1008,X1003,X1001,X1007,X1005] : (s(bool,X1002) != s(bool,X1003) | s(bool,'T_0') = s(bool,X1004) | s(bool,X1003) = s(bool,X1004) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1002),s(X1005,X1006))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X1000,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1000,X1001))),s(X1007,X1008)))) )),
  inference(superposition,[],[f9770,f1329])).
fof(f27971,plain,(
  ( ! [X1258,X1256,X1260,X1254,X1259,X1257,X1255] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1259,X1260))) | s(bool,X1254) != s(bool,X1255) | s(bool,X1255) = s(bool,X1256) | s(bool,'T_0') = s(bool,X1256) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1254),s(X1257,X1258)))) ) | $spl24),
  inference(forward_demodulation,[],[f16318,f139])).
fof(f16318,plain,(
  ( ! [X1258,X1256,X1260,X1254,X1252,X1259,X1257,X1255,X1253] : (s(bool,X1254) != s(bool,X1255) | s(bool,X1255) = s(bool,X1256) | s(bool,'T_0') = s(bool,X1256) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1254),s(X1257,X1258))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1252,X1253))),s(X1259,X1260)))) ) | $spl24),
  inference(superposition,[],[f3839,f1329])).
fof(f27970,plain,(
  ( ! [X1296,X1298,X1300,X1294,X1297,X1299,X1295] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1299,X1300))) | s(bool,X1294) != s(bool,X1295) | s(bool,X1294) = s(bool,X1296) | s(bool,'T_0') = s(bool,X1296) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1295),s(X1297,X1298)))) ) | $spl24),
  inference(forward_demodulation,[],[f16323,f139])).
fof(f16323,plain,(
  ( ! [X1296,X1298,X1300,X1294,X1297,X1299,X1295] : (s(bool,X1294) != s(bool,X1295) | s(bool,X1294) = s(bool,X1296) | s(bool,'T_0') = s(bool,X1296) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1295),s(X1297,X1298))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X1294))),s(X1299,X1300)))) ) | $spl24),
  inference(superposition,[],[f2359,f1329])).
fof(f27969,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f27968])).
fof(f27968,plain,(
  ( ! [X94,X92,X88,X93,X91] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94))) | s(bool,X88) = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f16385,f4162])).
fof(f16385,plain,(
  ( ! [X94,X92,X88,X93,X91] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X88) = s(bool,X91) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94))) | s(bool,X88) = s(bool,X92)) )),
  inference(superposition,[],[f3461,f1329])).
fof(f17691,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f17690,f139])).
fof(f17690,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f17689])).
fof(f17689,plain,(
  ( ! [X596,X592,X594,X588,X593,X595,X591] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X591,X592))) | s(bool,'T_0') = s(bool,X593) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X594),s(X595,X596))) | s(bool,X588) = s(bool,X594)) )),
  inference(subsumption_resolution,[],[f16442,f1385])).
fof(f16442,plain,(
  ( ! [X596,X592,X594,X588,X590,X593,X595,X589,X591] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X591,X592))) | s(bool,X593) = s(bool,'const.combin.K_2'(s(bool,X588),s(X589,X590))) | s(bool,'T_0') = s(bool,X593) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X594),s(X595,X596))) | s(bool,X588) = s(bool,X594)) )),
  inference(superposition,[],[f3461,f1329])).
fof(f27962,plain,(
  ( ! [X600] : (s(bool,'T_0') = s(bool,X600) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f27961,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957])).
fof(f27960,plain,(
  ( ! [X623] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X623)) ) | $spl24),
  inference(global_subsumption,[],[f27959,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706,f27957])).
fof(f27957,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f27956])).
fof(f27956,plain,(
  ( ! [X635,X629,X636,X632,X637] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X632) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X635),s(X636,X637))) | s(bool,X629) = s(bool,X635)) )),
  inference(subsumption_resolution,[],[f27955,f8123])).
fof(f27955,plain,(
  ( ! [X633,X635,X629,X636,X632,X634,X637] : (s(bool,X632) = s(bool,happ(s(fun(X633,bool),'const.combin.K_1'(s(bool,X629))),s(X633,X634))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X632) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X635),s(X636,X637))) | s(bool,X629) = s(bool,X635)) )),
  inference(forward_demodulation,[],[f16447,f139])).
fof(f16447,plain,(
  ( ! [X633,X635,X629,X631,X636,X632,X634,X630,X637] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X632) = s(bool,happ(s(fun(X633,bool),'const.combin.K_1'(s(bool,'const.combin.K_2'(s(bool,X629),s(X630,X631))))),s(X633,X634))) | s(bool,'T_0') = s(bool,X632) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X635),s(X636,X637))) | s(bool,X629) = s(bool,X635)) )),
  inference(superposition,[],[f3699,f1329])).
fof(f27954,plain,(
  ( ! [X759] : (s(bool,'T_0') = s(bool,X759) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f27953,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f18010,f27948,f27949,f17706])).
fof(f193,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl14),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f27928,plain,(
  ( ! [X94,X92,X90,X95,X93,X91,X89] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X90))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X94,X95))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X91),s(X92,X93))) | s(bool,X90) = s(bool,X91)) ) | $spl136),
  inference(cnf_transformation,[],[f27928_D])).
fof(f27928_D,plain,(
  ( ! [X94,X92,X90,X95,X93,X91,X89] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X90))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X94,X95))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X91),s(X92,X93))) | s(bool,X90) = s(bool,X91)) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f21952,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X37) != s(bool,'const.combin.K_2'(s(bool,X36),s(bool,X37))) | s(bool,X37) = s(bool,X38) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X38),s(X39,X40))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42)))) ) | $spl24),
  inference(superposition,[],[f2358,f279])).
fof(f21957,plain,(
  ( ! [X80,X88,X87,X85,X83,X81,X86,X84,X82] : (s(bool,X81) != s(bool,'const.combin.K_2'(s(bool,X80),s(bool,X81))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X82),s(X83,X84))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X85,X86))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X80),s(X87,X88)))) ) | $spl24),
  inference(superposition,[],[f2358,f1329])).
fof(f21958,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X89,X96] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X90))) | s(bool,X90) = s(bool,X91) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X91),s(X92,X93))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X94,X95))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X96,X97)))) ) | $spl24),
  inference(superposition,[],[f2358,f1329])).
fof(f27927,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27926])).
fof(f27926,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X5),s(X6,X7))) | s(bool,'T_0') = s(bool,X8)) ) | $spl24),
  inference(subsumption_resolution,[],[f22131,f4162])).
fof(f22131,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X5),s(X6,X7))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) ) | $spl24),
  inference(superposition,[],[f22065,f180])).
fof(f27925,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27924])).
fof(f27924,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X19) = s(bool,X20) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X20),s(X21,X22))) | s(bool,'T_0') = s(bool,X23)) ) | $spl24),
  inference(subsumption_resolution,[],[f22134,f4162])).
fof(f22134,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X19) = s(bool,X20) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X20),s(X21,X22))) | s(bool,X19) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) ) | $spl24),
  inference(superposition,[],[f22065,f180])).
fof(f22196,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(condensation,[],[f22195])).
fof(f22195,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X4,X5)))) ) | $spl24),
  inference(condensation,[],[f22137])).
fof(f22137,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X38) = s(bool,X39) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X39),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) ) | $spl24),
  inference(superposition,[],[f22065,f279])).
fof(f27923,plain,(
  ( ! [X61,X59,X62,X60] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X60),s(X61,X62))) | s(bool,X59) = s(bool,X60) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841,f27842,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f27857,f27858,f27859,f27860,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27873,f27874,f27876,f27877,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605,f22180,f27902,f22179,f27903,f27904,f27906,f27908,f27909,f27910,f27912,f27913,f22165,f27914,f22163,f27915,f22162,f27916,f22158,f22157,f27917,f27920,f22153,f27921,f27922])).
fof(f192,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f27921,plain,(
  ( ! [X161] : (s(bool,'F_0') = s(bool,X161) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f22153,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27920,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(duplicate_literal_removal,[],[f27919])).
fof(f27919,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) ) | $spl24),
  inference(condensation,[],[f27918])).
fof(f27918,plain,(
  ( ! [X177,X175,X180,X178,X179] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X177),s(X178,X179))) | s(bool,X175) = s(bool,X180) | s(bool,'T_0') = s(bool,X180)) ) | $spl24),
  inference(subsumption_resolution,[],[f22155,f8393])).
fof(f22155,plain,(
  ( ! [X177,X175,X180,X178,X176,X174,X179] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X177) = s(bool,happ(s(fun(X174,bool),'const.combin.K_1'(s(bool,X175))),s(X174,X176))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X177),s(X178,X179))) | s(bool,X175) = s(bool,X180) | s(bool,'T_0') = s(bool,X180)) ) | $spl24),
  inference(superposition,[],[f22065,f280])).
fof(f27917,plain,(
  ( ! [X191,X192,X193] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X191),s(X192,X193))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f22157,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27837,plain,(
  ( ! [X280,X282,X288,X285,X287,X281,X289,X286] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X286,X287))) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289))) | s(bool,X285) = s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,X281))),s(X280,X282)))) ) | $spl134),
  inference(cnf_transformation,[],[f27837_D])).
fof(f27837_D,plain,(
  ( ! [X280,X282,X288,X285,X287,X281,X289,X286] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X286,X287))) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289))) | s(bool,X285) = s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,X281))),s(X280,X282)))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f22158,plain,(
  ( ! [X198,X196,X202,X200,X199,X197,X203,X201] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X199) = s(bool,happ(s(fun(X196,bool),'const.combin.K_1'(s(bool,X197))),s(X196,X198))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X199),s(X200,X201))) | s(bool,X197) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X202,X203)))) ) | $spl24),
  inference(superposition,[],[f22065,f2047])).
fof(f27916,plain,(
  ( ! [X224] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X224)) ) | $spl24),
  inference(global_subsumption,[],[f22162,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27915,plain,(
  ( ! [X235,X233,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X233),s(X234,X235)))) ) | $spl24),
  inference(global_subsumption,[],[f22163,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27914,plain,(
  ( ! [X251,X249,X250] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X249),s(X250,X251)))) ) | $spl24),
  inference(global_subsumption,[],[f22165,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27913,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) ) | $spl24),
  inference(global_subsumption,[],[f27912,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27910,plain,(
  ( ! [X288] : (s(bool,'T_0') = s(bool,X288) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f27909,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27908,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27907])).
fof(f27907,plain,(
  ( ! [X313,X315,X310,X312,X314,X311,X307] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X310),s(X311,X312))) | s(bool,X307) = s(bool,X313) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X313),s(X314,X315)))) ) | $spl24),
  inference(subsumption_resolution,[],[f22173,f1591])).
fof(f22173,plain,(
  ( ! [X313,X315,X308,X310,X312,X314,X309,X311,X307] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X310) = s(bool,'const.combin.K_2'(s(bool,X307),s(X308,X309))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X310),s(X311,X312))) | s(bool,X307) = s(bool,X313) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X313),s(X314,X315)))) ) | $spl24),
  inference(superposition,[],[f22065,f1329])).
fof(f27906,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27905])).
fof(f27905,plain,(
  ( ! [X321,X323,X316,X324,X320,X322,X319] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X319),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X322),s(X323,X324))) | s(bool,X316) = s(bool,X322)) ) | $spl24),
  inference(subsumption_resolution,[],[f22174,f1591])).
fof(f22174,plain,(
  ( ! [X321,X323,X316,X318,X324,X320,X322,X317,X319] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X319) = s(bool,'const.combin.K_2'(s(bool,X316),s(X317,X318))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X319),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X322),s(X323,X324))) | s(bool,X316) = s(bool,X322)) ) | $spl24),
  inference(superposition,[],[f22065,f1329])).
fof(f27904,plain,(
  ( ! [X364,X366,X365] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X364),s(X365,X366))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f27903,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f27902,plain,(
  ( ! [X372,X374,X373] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X372),s(X373,X374))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f22180,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900,f27901,f22619,f22614,f22609,f22605])).
fof(f22605,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f22604,f139])).
fof(f22604,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2)))) )),
  inference(duplicate_literal_removal,[],[f22603])).
fof(f22603,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f22602])).
fof(f22602,plain,(
  ( ! [X6,X12,X8,X7,X9] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X7,X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,X6) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f22357,f1386])).
fof(f22357,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X7,X8))) | s(bool,X9) = s(bool,'const.combin.K_2'(s(bool,X6),s(X10,X11))) | s(bool,'T_0') = s(bool,X9) | s(bool,X6) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f3538,f180])).
fof(f22609,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f22608,f139])).
fof(f22608,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2)))) )),
  inference(duplicate_literal_removal,[],[f22607])).
fof(f22607,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f22606])).
fof(f22606,plain,(
  ( ! [X30,X28,X33,X29,X27] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X28,X29))) | s(bool,'T_0') = s(bool,X30) | s(bool,X27) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f22360,f1386])).
fof(f22360,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X28,X29))) | s(bool,X30) = s(bool,'const.combin.K_2'(s(bool,X27),s(X31,X32))) | s(bool,'T_0') = s(bool,X30) | s(bool,X27) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f3538,f180])).
fof(f22614,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f22613,f139])).
fof(f22613,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f22612])).
fof(f22612,plain,(
  ( ! [X59,X54,X52,X60,X58,X55,X53] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X53,X54))) | s(bool,'T_0') = s(bool,X55) | s(bool,X52) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(subsumption_resolution,[],[f22363,f1385])).
fof(f22363,plain,(
  ( ! [X59,X57,X54,X52,X60,X58,X56,X55,X53] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X53,X54))) | s(bool,X55) = s(bool,'const.combin.K_2'(s(bool,X52),s(X56,X57))) | s(bool,'T_0') = s(bool,X55) | s(bool,X52) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(superposition,[],[f3538,f279])).
fof(f22619,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,X1) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f22618,f139])).
fof(f22618,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X1) = s(bool,X5)) )),
  inference(condensation,[],[f22617])).
fof(f22617,plain,(
  ( ! [X80,X87,X85,X81,X79,X86,X82] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X80,X81))) | s(bool,'T_0') = s(bool,X82) | s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) )),
  inference(subsumption_resolution,[],[f22366,f7225])).
fof(f22366,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X80,X81))) | s(bool,X82) = s(bool,'const.combin.K_2'(s(bool,X79),s(X83,X84))) | s(bool,'T_0') = s(bool,X82) | s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) )),
  inference(superposition,[],[f3538,f280])).
fof(f27901,plain,(
  ( ! [X239] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X239)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894,f27895,f27899,f27900])).
fof(f27899,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f27898])).
fof(f27898,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f27897])).
fof(f27897,plain,(
  ( ! [X253,X257,X260] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X257) | s(bool,X253) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) )),
  inference(subsumption_resolution,[],[f27896,f1386])).
fof(f27896,plain,(
  ( ! [X253,X257,X259,X260,X258] : (s(bool,X257) = s(bool,'const.combin.K_2'(s(bool,X253),s(X258,X259))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X257) | s(bool,X253) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) )),
  inference(forward_demodulation,[],[f22627,f159])).
fof(f22627,plain,(
  ( ! [X253,X257,X259,X260,X254,X252,X258] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X257) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X253))),s(X252,X254))),s(X258,X259))) | s(bool,'T_0') = s(bool,X257) | s(bool,X253) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) )),
  inference(forward_demodulation,[],[f22385,f139])).
fof(f22385,plain,(
  ( ! [X255,X253,X257,X259,X260,X254,X256,X252,X258] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X255,X256))) | s(bool,X257) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X253))),s(X252,X254))),s(X258,X259))) | s(bool,'T_0') = s(bool,X257) | s(bool,X253) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) )),
  inference(superposition,[],[f3538,f280])).
fof(f27895,plain,(
  ( ! [X275] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X275)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892,f27893,f27894])).
fof(f27893,plain,(
  ( ! [X285] : (s(bool,'T_0') = s(bool,X285) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890,f27891,f27892])).
fof(f27891,plain,(
  ( ! [X321] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X321)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888,f27889,f27890])).
fof(f27889,plain,(
  ( ! [X329] : (s(bool,'T_0') = s(bool,X329) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886,f27887,f27888])).
fof(f27887,plain,(
  ( ! [X349] : (s(bool,'T_0') = s(bool,X349) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880,f27881,f27885,f27886])).
fof(f27885,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f27884])).
fof(f27884,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f27883])).
fof(f27883,plain,(
  ( ! [X354,X362,X359] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X359) | s(bool,X354) = s(bool,X362) | s(bool,'T_0') = s(bool,X362)) )),
  inference(subsumption_resolution,[],[f27882,f1386])).
fof(f27882,plain,(
  ( ! [X354,X360,X362,X359,X361] : (s(bool,X359) = s(bool,'const.combin.K_2'(s(bool,X354),s(X360,X361))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X359) | s(bool,X354) = s(bool,X362) | s(bool,'T_0') = s(bool,X362)) )),
  inference(forward_demodulation,[],[f22645,f139])).
fof(f22645,plain,(
  ( ! [X356,X354,X360,X362,X359,X355,X361] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X359) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X354),s(X355,X356))),s(X360,X361))) | s(bool,'T_0') = s(bool,X359) | s(bool,X354) = s(bool,X362) | s(bool,'T_0') = s(bool,X362)) )),
  inference(forward_demodulation,[],[f22396,f139])).
fof(f22396,plain,(
  ( ! [X356,X358,X354,X360,X362,X357,X359,X355,X361] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X357,X358))) | s(bool,X359) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X354),s(X355,X356))),s(X360,X361))) | s(bool,'T_0') = s(bool,X359) | s(bool,X354) = s(bool,X362) | s(bool,'T_0') = s(bool,X362)) )),
  inference(superposition,[],[f3538,f279])).
fof(f27881,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871,f27880])).
fof(f27877,plain,(
  ( ! [X426] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X426)) ) | $spl24),
  inference(global_subsumption,[],[f27876,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871])).
fof(f27874,plain,(
  ( ! [X437] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X437)) ) | $spl24),
  inference(global_subsumption,[],[f27873,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870,f27871])).
fof(f27871,plain,(
  ( ! [X492] : (s(bool,'T_0') = s(bool,X492) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868,f27869,f27870])).
fof(f27869,plain,(
  ( ! [X502] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X502)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513,f27867,f27868])).
fof(f27867,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514,f27866,f22513])).
fof(f27866,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X9)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516,f27865,f22514])).
fof(f27865,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X25)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567,f27861,f27864,f22516])).
fof(f27864,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(duplicate_literal_removal,[],[f27863])).
fof(f27863,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f27862])).
fof(f27862,plain,(
  ( ! [X30,X33,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X33) | s(bool,X30) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f22517,f1386])).
fof(f22517,plain,(
  ( ! [X30,X35,X33,X36,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X33) = s(bool,'const.combin.K_2'(s(bool,X30),s(X34,X35))) | s(bool,'T_0') = s(bool,X33) | s(bool,X30) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f3538,f279])).
fof(f27861,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856,f22567])).
fof(f27860,plain,(
  ( ! [X86] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X86)) ) | $spl24),
  inference(global_subsumption,[],[f27859,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856])).
fof(f27858,plain,(
  ( ! [X95] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X95)) ) | $spl24),
  inference(global_subsumption,[],[f27857,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530,f27856])).
fof(f27856,plain,(
  ( ! [X140] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X140)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531,f27855,f22530])).
fof(f27855,plain,(
  ( ! [X148] : (s(bool,'T_0') = s(bool,X148) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562,f27854,f22531])).
fof(f27854,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560,f27853,f22562])).
fof(f27853,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851,f27852,f22560])).
fof(f27852,plain,(
  ( ! [X237] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X237)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849,f27850,f27851])).
fof(f27850,plain,(
  ( ! [X264] : (s(bool,'T_0') = s(bool,X264) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004,f22996,f22990,f27845,f27848,f27849])).
fof(f27848,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f27847,f139])).
fof(f27847,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f27846])).
fof(f27846,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X7,X8))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X9),s(X10,X11))) | s(bool,X6) = s(bool,X9) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f22722,f4162])).
fof(f22722,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X7,X8))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X9),s(X10,X11))) | s(bool,X6) = s(bool,X9) | s(bool,X6) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f3624,f180])).
fof(f27845,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f27844,f139])).
fof(f27844,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f27843])).
fof(f27843,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X28,X29))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X30),s(X31,X32))) | s(bool,X27) = s(bool,X30) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f22725,f4162])).
fof(f22725,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X28,X29))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X30),s(X31,X32))) | s(bool,X27) = s(bool,X30) | s(bool,X27) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f3624,f180])).
fof(f22990,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f22974,f139])).
fof(f22974,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(duplicate_literal_removal,[],[f22973])).
fof(f22973,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f22728])).
fof(f22728,plain,(
  ( ! [X59,X57,X54,X52,X60,X58,X56,X55,X53] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X53,X54))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X55),s(X56,X57))) | s(bool,X52) = s(bool,X55) | s(bool,X52) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(superposition,[],[f3624,f279])).
fof(f27842,plain,(
  ( ! [X83,X79,X84,X82] : (s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X82),s(X83,X84))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035,f27833,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23012,f27836,f23008,f23007,f27838,f23004,f23000,f27839,f22996,f27841])).
fof(f27839,plain,(
  ( ! [X241,X239,X240] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X239),s(X240,X241)))) ) | $spl24),
  inference(global_subsumption,[],[f23000,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007,f27838,f23004])).
fof(f23004,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(forward_demodulation,[],[f23003,f139])).
fof(f23003,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4)))) )),
  inference(duplicate_literal_removal,[],[f23002])).
fof(f23002,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f23001])).
fof(f23001,plain,(
  ( ! [X255,X253,X257,X259,X260,X256,X258] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X255,X256))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X257),s(X258,X259))) | s(bool,X253) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) )),
  inference(subsumption_resolution,[],[f22750,f8393])).
fof(f22750,plain,(
  ( ! [X255,X253,X257,X259,X260,X254,X256,X258,X252] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X255,X256))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X257),s(X258,X259))) | s(bool,X257) = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X253))),s(X252,X254))) | s(bool,X253) = s(bool,X260) | s(bool,'T_0') = s(bool,X260)) )),
  inference(superposition,[],[f3624,f280])).
fof(f27838,plain,(
  ( ! [X277,X275,X276] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X275),s(X276,X277)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835,f23008,f23007])).
fof(f23008,plain,(
  ( ! [X280,X282,X288,X285,X287,X281,X289,X286] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X286,X287))) | s(bool,X285) = s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,X281))),s(X280,X282))) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289)))) )),
  inference(forward_demodulation,[],[f22753,f139])).
fof(f22753,plain,(
  ( ! [X280,X282,X288,X285,X287,X281,X283,X289,X284,X286] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X283,X284))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X286,X287))) | s(bool,X285) = s(bool,happ(s(fun(X280,bool),'const.combin.K_1'(s(bool,X281))),s(X280,X282))) | s(bool,X281) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X288,X289)))) )),
  inference(superposition,[],[f3624,f2047])).
fof(f27836,plain,(
  ( ! [X321,X323,X322] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X321),s(X322,X323)))) ) | $spl24),
  inference(global_subsumption,[],[f23012,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013,f27835])).
fof(f27835,plain,(
  ( ! [X329,X331,X330] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X329),s(X330,X331)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014,f27834,f23013])).
fof(f27834,plain,(
  ( ! [X350,X349,X351] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X349),s(X350,X351)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878,f27831,f23036,f23035,f23032,f23029,f23022,f23018,f23014])).
fof(f23018,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(forward_demodulation,[],[f23017,f139])).
fof(f23017,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4)))) )),
  inference(duplicate_literal_removal,[],[f23016])).
fof(f23016,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f23015])).
fof(f23015,plain,(
  ( ! [X358,X354,X360,X362,X357,X359,X361] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X357,X358))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X359),s(X360,X361))) | s(bool,X354) = s(bool,X362) | s(bool,'T_0') = s(bool,X362)) )),
  inference(subsumption_resolution,[],[f22761,f1592])).
fof(f22761,plain,(
  ( ! [X356,X358,X354,X360,X362,X357,X359,X355,X361] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X357,X358))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X359),s(X360,X361))) | s(bool,X359) = s(bool,'const.combin.K_2'(s(bool,X354),s(X355,X356))) | s(bool,X354) = s(bool,X362) | s(bool,'T_0') = s(bool,X362)) )),
  inference(superposition,[],[f3624,f279])).
fof(f27769,plain,(
  ( ! [X362,X370] : (s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X370))) | s(bool,'T_0') = s(bool,X370)) ) | $spl96),
  inference(cnf_transformation,[],[f27769_D])).
fof(f27769_D,plain,(
  ( ! [X362,X370] : (s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X370))) | s(bool,'T_0') = s(bool,X370)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f23022,plain,(
  ( ! [X397,X395,X390,X396,X398] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X395),s(X396,X397))) | s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X398))) | s(bool,'T_0') = s(bool,X398)) )),
  inference(forward_demodulation,[],[f23021,f139])).
fof(f23021,plain,(
  ( ! [X397,X393,X395,X390,X396,X398,X394] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X393,X394))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X395),s(X396,X397))) | s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X398))) | s(bool,'T_0') = s(bool,X398)) )),
  inference(subsumption_resolution,[],[f22765,f21263])).
fof(f22765,plain,(
  ( ! [X391,X397,X393,X395,X390,X396,X398,X392,X394] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X393,X394))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X395),s(X396,X397))) | s(bool,X395) = s(bool,'const.combin.K_2'(s(bool,X390),s(X391,X392))) | s(bool,X398) = s(bool,'const.combin.K_2'(s(bool,X390),s(bool,X398))) | s(bool,'T_0') = s(bool,X398)) )),
  inference(superposition,[],[f3624,f694])).
fof(f23029,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f23028,f139])).
fof(f23028,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f23027])).
fof(f23027,plain,(
  ( ! [X428,X430,X424,X426,X421,X429,X431,X425,X427] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X424,X425))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X426),s(X427,X428))) | s(bool,X421) = s(bool,X429) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) )),
  inference(subsumption_resolution,[],[f22768,f1591])).
fof(f22768,plain,(
  ( ! [X422,X428,X430,X424,X426,X421,X423,X429,X431,X425,X427] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X424,X425))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X426),s(X427,X428))) | s(bool,X426) = s(bool,'const.combin.K_2'(s(bool,X421),s(X422,X423))) | s(bool,X421) = s(bool,X429) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X429),s(X430,X431)))) )),
  inference(superposition,[],[f3624,f1329])).
fof(f23032,plain,(
  ( ! [X2,X0,X5,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X5)) )),
  inference(forward_demodulation,[],[f23031,f139])).
fof(f23031,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,X0) = s(bool,X5)) )),
  inference(condensation,[],[f23030])).
fof(f23030,plain,(
  ( ! [X441,X436,X438,X432,X440,X442,X437,X439,X435] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X435,X436))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X437),s(X438,X439))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X440),s(X441,X442))) | s(bool,X432) = s(bool,X440)) )),
  inference(subsumption_resolution,[],[f22769,f1591])).
fof(f22769,plain,(
  ( ! [X441,X436,X438,X432,X434,X440,X442,X437,X439,X433,X435] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X435,X436))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X437),s(X438,X439))) | s(bool,X437) = s(bool,'const.combin.K_2'(s(bool,X432),s(X433,X434))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X440),s(X441,X442))) | s(bool,X432) = s(bool,X440)) )),
  inference(superposition,[],[f3624,f1329])).
fof(f27759,plain,(
  ( ! [X466,X463,X459,X465,X462,X464] : (s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,X459),s(X463,X464))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X462),s(X465,X466)))) ) | $spl92),
  inference(cnf_transformation,[],[f27759_D])).
fof(f27759_D,plain,(
  ( ! [X466,X463,X459,X465,X462,X464] : (s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,X459),s(X463,X464))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X462),s(X465,X466)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f27833,plain,(
  ( ! [X492,X494,X488,X487,X493,X489] : (s(bool,X492) = s(bool,'const.combin.K_2'(s(bool,X487),s(X488,X489))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X492),s(X493,X494))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036,f27832,f23035])).
fof(f27832,plain,(
  ( ! [X499,X502,X498,X504,X503,X497] : (s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,X497),s(X498,X499))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X502),s(X503,X504))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879,f27830,f22878,f27831,f23036])).
fof(f27831,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f27818,f27820,f22896,f22926,f22928,f27828,f22881,f22879,f22878])).
fof(f27830,plain,(
  ( ! [X6,X10,X11,X9] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X9),s(X10,X11))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X6) = s(bool,X9)) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881,f27829,f22879])).
fof(f27829,plain,(
  ( ! [X26,X27,X25,X22] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X25),s(X26,X27))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779,f27780,f27781,f27784,f27785,f27786,f27787,f27790,f27792,f27794,f24418,f24417,f27796,f24415,f24412,f27800,f27802,f24267,f24264,f24236,f24235,f24140,f24139,f24137,f24134,f24369,f27806,f27808,f23712,f23710,f23707,f23701,f23697,f23696,f23683,f23679,f23678,f23611,f23582,f23581,f23579,f27812,f23578,f23576,f23575,f23573,f23572,f23570,f27814,f23569,f27815,f23321,f23320,f23318,f23315,f27818,f27820,f27821,f27823,f22896,f27825,f22926,f22928,f27826,f27828,f22881])).
fof(f27828,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f27827])).
fof(f27827,plain,(
  ( ! [X30,X35,X33,X36,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X33),s(X34,X35))) | s(bool,X30) = s(bool,X33) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f22882,f4162])).
fof(f22882,plain,(
  ( ! [X30,X35,X33,X36,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X33),s(X34,X35))) | s(bool,X30) = s(bool,X33) | s(bool,X30) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f3624,f279])).
fof(f27826,plain,(
  ( ! [X61,X64,X62,X58,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X61),s(X62,X63))) | s(bool,X64) = s(bool,'const.combin.K_2'(s(bool,X58),s(bool,X64))) | s(bool,'T_0') = s(bool,X64)) ) | $spl24),
  inference(subsumption_resolution,[],[f22886,f24236])).
fof(f22886,plain,(
  ( ! [X61,X64,X62,X58,X63] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X61),s(X62,X63))) | s(bool,X58) = s(bool,X61) | s(bool,X64) = s(bool,'const.combin.K_2'(s(bool,X58),s(bool,X64))) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f3624,f694])).
fof(f22928,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f22927])).
fof(f22927,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3) | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f22889])).
fof(f22889,plain,(
  ( ! [X90,X88,X87,X83,X91,X89,X86] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X86),s(X87,X88))) | s(bool,X83) = s(bool,X86) | s(bool,X83) = s(bool,X89) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X90,X91)))) )),
  inference(superposition,[],[f3624,f1329])).
fof(f22926,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f22925])).
fof(f22925,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3) | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f22890])).
fof(f22890,plain,(
  ( ! [X92,X99,X97,X95,X100,X98,X96] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X95),s(X96,X97))) | s(bool,X92) = s(bool,X95) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X98),s(X99,X100))) | s(bool,X92) = s(bool,X98)) )),
  inference(superposition,[],[f3624,f1329])).
fof(f27825,plain,(
  ( ! [X142,X140,X141,X137] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X140),s(X141,X142))) | s(bool,X137) = s(bool,X140)) ) | $spl24),
  inference(subsumption_resolution,[],[f22895,f27814])).
fof(f22895,plain,(
  ( ! [X144,X142,X140,X143,X141,X137] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X140),s(X141,X142))) | s(bool,X137) = s(bool,X140) | s(bool,X137) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X143,X144)))) )),
  inference(superposition,[],[f3624,f2256])).
fof(f27824,plain,(
  ( ! [X152,X151,X149,X145,X150,X148] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X148),s(X149,X150))) | s(bool,X145) = s(bool,happ(s(fun(X151,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X151,X152))) | s(bool,X145) = s(bool,X148)) ) | $spl132),
  inference(cnf_transformation,[],[f27824_D])).
fof(f27824_D,plain,(
  ( ! [X152,X151,X149,X145,X150,X148] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X148),s(X149,X150))) | s(bool,X145) = s(bool,happ(s(fun(X151,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X151,X152))) | s(bool,X145) = s(bool,X148)) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f22896,plain,(
  ( ! [X152,X151,X149,X145,X150,X148] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X148),s(X149,X150))) | s(bool,X145) = s(bool,X148) | s(bool,X145) = s(bool,happ(s(fun(X151,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X151,X152)))) )),
  inference(superposition,[],[f3624,f9837])).
fof(f27822,plain,(
  ( ! [X210,X215,X211,X209] : (s(bool,X215) = s(bool,'const.combin.K_2'(s(bool,X209),s(X210,X211))) | s(bool,'T_0') = s(bool,X215)) ) | $spl130),
  inference(cnf_transformation,[],[f27822_D])).
fof(f27822_D,plain,(
  ( ! [X210,X215,X211,X209] : (s(bool,X215) = s(bool,'const.combin.K_2'(s(bool,X209),s(X210,X211))) | s(bool,'T_0') = s(bool,X215)) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f27823,plain,(
  ( ! [X191,X189,X194,X192,X190,X188,X193] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X191),s(X192,X193))) | s(bool,X194) = s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))) | s(bool,'T_0') = s(bool,X194)) ) | $spl24),
  inference(subsumption_resolution,[],[f22902,f24236])).
fof(f22902,plain,(
  ( ! [X191,X189,X194,X192,X190,X188,X193] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X191),s(X192,X193))) | s(bool,X188) = s(bool,X191) | s(bool,X194) = s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))) | s(bool,'T_0') = s(bool,X194)) )),
  inference(superposition,[],[f3624,f180])).
fof(f27821,plain,(
  ( ! [X212,X210,X215,X213,X211,X209,X214] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X212),s(X213,X214))) | s(bool,X215) = s(bool,'const.combin.K_2'(s(bool,X209),s(X210,X211))) | s(bool,'T_0') = s(bool,X215)) ) | $spl24),
  inference(subsumption_resolution,[],[f22905,f24236])).
fof(f22905,plain,(
  ( ! [X212,X210,X215,X213,X211,X209,X214] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X212),s(X213,X214))) | s(bool,X209) = s(bool,X212) | s(bool,X215) = s(bool,'const.combin.K_2'(s(bool,X209),s(X210,X211))) | s(bool,'T_0') = s(bool,X215)) )),
  inference(superposition,[],[f3624,f180])).
fof(f27820,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f27819])).
fof(f27819,plain,(
  ( ! [X241,X239,X237,X242,X240,X238,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X237),s(X238,X239))) | s(bool,X234) = s(bool,X237) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X240),s(X241,X242)))) )),
  inference(subsumption_resolution,[],[f22908,f1591])).
fof(f22908,plain,(
  ( ! [X241,X239,X237,X235,X242,X240,X238,X236,X234] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X237),s(X238,X239))) | s(bool,X234) = s(bool,X237) | s(bool,X240) = s(bool,'const.combin.K_2'(s(bool,X234),s(X235,X236))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X240),s(X241,X242)))) )),
  inference(superposition,[],[f3624,f279])).
fof(f27818,plain,(
  ( ! [X261,X269,X265,X267,X268,X264,X266] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X264),s(X265,X266))) | s(bool,X261) = s(bool,X264) | s(bool,'T_0') = s(bool,happ(s(fun(X268,bool),'const.combin.K_1'(s(bool,X267))),s(X268,X269)))) )),
  inference(subsumption_resolution,[],[f22911,f5499])).
fof(f22911,plain,(
  ( ! [X261,X263,X269,X265,X267,X262,X268,X264,X266] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X264),s(X265,X266))) | s(bool,X261) = s(bool,X264) | s(bool,X267) = s(bool,'const.combin.K_2'(s(bool,X261),s(X262,X263))) | s(bool,'T_0') = s(bool,happ(s(fun(X268,bool),'const.combin.K_1'(s(bool,X267))),s(X268,X269)))) )),
  inference(superposition,[],[f3624,f280])).
fof(f27816,plain,(
  ( ! [X94,X92,X90,X95,X93,X91,X89] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X90))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X94,X95))) | s(bool,'T_0') = s(bool,X91) | s(bool,X91) = s(bool,'const.combin.K_2'(s(bool,X90),s(X92,X93)))) ) | $spl126),
  inference(cnf_transformation,[],[f27816_D])).
fof(f27816_D,plain,(
  ( ! [X94,X92,X90,X95,X93,X91,X89] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X90))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X94,X95))) | s(bool,'T_0') = s(bool,X91) | s(bool,X91) = s(bool,'const.combin.K_2'(s(bool,X90),s(X92,X93)))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f23315,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s(bool,X37) != s(bool,'const.combin.K_2'(s(bool,X36),s(bool,X37))) | s(bool,X38) = s(bool,'const.combin.K_2'(s(bool,X37),s(X39,X40))) | s(bool,'T_0') = s(bool,X38) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X41,X42)))) ) | $spl24),
  inference(superposition,[],[f3790,f279])).
fof(f27817,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,X58) != s(bool,'const.combin.K_2'(s(bool,X57),s(bool,X58))) | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63))) | s(bool,'T_0') = s(bool,X59) | s(bool,X59) = s(bool,'const.combin.K_2'(s(bool,X58),s(X60,X61)))) ) | $spl128),
  inference(cnf_transformation,[],[f27817_D])).
fof(f27817_D,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,X58) != s(bool,'const.combin.K_2'(s(bool,X57),s(bool,X58))) | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63))) | s(bool,'T_0') = s(bool,X59) | s(bool,X59) = s(bool,'const.combin.K_2'(s(bool,X58),s(X60,X61)))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f23318,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s(bool,X58) != s(bool,'const.combin.K_2'(s(bool,X57),s(bool,X58))) | s(bool,X59) = s(bool,'const.combin.K_2'(s(bool,X58),s(X60,X61))) | s(bool,'T_0') = s(bool,X59) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X62,bool),'const.combin.K_1'(s(bool,X57))),s(X62,X63)))) ) | $spl24),
  inference(superposition,[],[f3790,f280])).
fof(f23320,plain,(
  ( ! [X80,X88,X87,X85,X83,X81,X86,X84,X82] : (s(bool,X81) != s(bool,'const.combin.K_2'(s(bool,X80),s(bool,X81))) | s(bool,X82) = s(bool,'const.combin.K_2'(s(bool,X81),s(X83,X84))) | s(bool,'T_0') = s(bool,X82) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X85,X86))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X80),s(X87,X88)))) ) | $spl24),
  inference(superposition,[],[f3790,f1329])).
fof(f23321,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X89,X96] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X90))) | s(bool,X91) = s(bool,'const.combin.K_2'(s(bool,X90),s(X92,X93))) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X89),s(X94,X95))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X96,X97)))) ) | $spl24),
  inference(superposition,[],[f3790,f1329])).
fof(f27708,plain,(
  ( ! [X786,X784,X783,X781,X785,X782,X780] : (s(bool,X781) != s(bool,'const.combin.K_2'(s(bool,X780),s(X782,X783))) | s(bool,'T_0') = s(bool,X780) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X784),s(X785,X786))) | s(bool,X781) = s(bool,X784)) ) | $spl84),
  inference(cnf_transformation,[],[f27708_D])).
fof(f27708_D,plain,(
  ( ! [X786,X784,X783,X781,X785,X782,X780] : (s(bool,X781) != s(bool,'const.combin.K_2'(s(bool,X780),s(X782,X783))) | s(bool,'T_0') = s(bool,X780) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X784),s(X785,X786))) | s(bool,X781) = s(bool,X784)) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f23572,plain,(
  ( ! [X26,X24,X23,X21,X25,X22,X20] : (s(bool,X21) != s(bool,'const.combin.K_2'(s(bool,X20),s(X22,X23))) | s(bool,X21) = s(bool,X24) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X24),s(X25,X26))) | s(bool,'T_0') = s(bool,X20) | s(bool,'T_0') = s(bool,'F_0')) ) | $spl24),
  inference(superposition,[],[f22109,f180])).
fof(f23573,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(bool,X28) != s(bool,'const.combin.K_2'(s(bool,X27),s(X29,X30))) | s(bool,X28) = s(bool,X31) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X31),s(X32,X33))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X27)) ) | $spl24),
  inference(superposition,[],[f22109,f180])).
fof(f23575,plain,(
  ( ! [X47,X45,X43,X41,X48,X46,X44,X42,X49] : (s(bool,X42) != s(bool,'const.combin.K_2'(s(bool,X41),s(X43,X44))) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X45),s(X46,X47))) | s(bool,'T_0') = s(bool,X41) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X48,X49)))) ) | $spl24),
  inference(superposition,[],[f22109,f279])).
fof(f27811,plain,(
  ( ! [X123,X121,X118,X116,X122,X120,X119,X117,X115] : (s(bool,X116) != s(bool,'const.combin.K_2'(s(bool,X115),s(X117,X118))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X119),s(X120,X121))) | s(bool,X116) = s(bool,X119)) ) | $spl122),
  inference(cnf_transformation,[],[f27811_D])).
fof(f27811_D,plain,(
  ( ! [X123,X121,X118,X116,X122,X120,X119,X117,X115] : (s(bool,X116) != s(bool,'const.combin.K_2'(s(bool,X115),s(X117,X118))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X119),s(X120,X121))) | s(bool,X116) = s(bool,X119)) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f23576,plain,(
  ( ! [X57,X54,X52,X50,X58,X56,X55,X53,X51] : (s(bool,X51) != s(bool,'const.combin.K_2'(s(bool,X50),s(X52,X53))) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X54),s(X55,X56))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X50),s(X57,X58)))) ) | $spl24),
  inference(superposition,[],[f22109,f279])).
fof(f23578,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X75,X73] : (s(bool,X69) != s(bool,'const.combin.K_2'(s(bool,X68),s(X70,X71))) | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X72),s(X73,X74))) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,happ(s(fun(X75,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X75,X76)))) ) | $spl24),
  inference(superposition,[],[f22109,f280])).
fof(f23581,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X104,X113] : (s(bool,X105) != s(bool,'const.combin.K_2'(s(bool,X104),s(X106,X107))) | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X108),s(X109,X110))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X111,X112))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X104),s(X113,X114)))) ) | $spl24),
  inference(superposition,[],[f22109,f1329])).
fof(f23582,plain,(
  ( ! [X125,X123,X121,X118,X116,X124,X122,X120,X119,X117,X115] : (s(bool,X116) != s(bool,'const.combin.K_2'(s(bool,X115),s(X117,X118))) | s(bool,X116) = s(bool,X119) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X119),s(X120,X121))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X124,X125)))) ) | $spl24),
  inference(superposition,[],[f22109,f1329])).
fof(f27810,plain,(
  ( ! [X189,X187,X190,X188] : (s(bool,'F_0') != s(bool,X187) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))) | s(bool,X187) = s(bool,X188)) ) | $spl120),
  inference(cnf_transformation,[],[f27810_D])).
fof(f27810_D,plain,(
  ( ! [X189,X187,X190,X188] : (s(bool,'F_0') != s(bool,X187) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))) | s(bool,X187) = s(bool,X188)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f23683,plain,(
  ( ! [X45,X43,X41,X46,X44,X42] : (s(bool,'F_0') != s(bool,X41) | s(bool,X41) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X45,X46)))) ) | $spl24),
  inference(superposition,[],[f22109,f232])).
fof(f23696,plain,(
  ( ! [X146,X152,X151,X149,X147,X150,X148] : (s(bool,X149) != s(bool,'const.combin.K_2'(s(bool,X146),s(X147,X148))) | s(bool,X149) = s(bool,X150) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X150),s(X151,X152))) | s(bool,'T_0') = s(bool,X146) | s(bool,'T_0') = s(bool,'F_0')) ) | $spl24),
  inference(superposition,[],[f22109,f1981])).
fof(f23697,plain,(
  ( ! [X158,X156,X161,X159,X157,X155,X160] : (s(bool,X158) != s(bool,'const.combin.K_2'(s(bool,X155),s(X156,X157))) | s(bool,X158) = s(bool,X159) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X159),s(X160,X161))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X155)) ) | $spl24),
  inference(superposition,[],[f22109,f1981])).
fof(f23701,plain,(
  ( ! [X189,X187,X185,X190,X188,X186] : (s(bool,'F_0') != s(bool,X187) | s(bool,X187) = s(bool,X188) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X188),s(X189,X190))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X185,X186)))) ) | $spl24),
  inference(superposition,[],[f22109,f112])).
fof(f27807,plain,(
  ( ! [X315,X321,X316,X318,X320,X317,X319] : (s(bool,X315) != s(bool,X316) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X317),s(X318,X319))) | s(bool,X316) = s(bool,X317)) ) | $spl116),
  inference(cnf_transformation,[],[f27807_D])).
fof(f27807_D,plain,(
  ( ! [X315,X321,X316,X318,X320,X317,X319] : (s(bool,X315) != s(bool,X316) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X317),s(X318,X319))) | s(bool,X316) = s(bool,X317)) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f23707,plain,(
  ( ! [X231,X229,X235,X233,X230,X228,X236,X234,X232] : (s(bool,X230) != s(bool,X231) | s(bool,X231) = s(bool,X232) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X232),s(X233,X234))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X228,X229))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X230),s(X235,X236)))) ) | $spl24),
  inference(superposition,[],[f22109,f279])).
fof(f27809,plain,(
  ( ! [X261,X263,X257,X259,X260,X262,X258] : (s(bool,X257) != s(bool,X258) | s(bool,'T_0') = s(bool,happ(s(fun(X262,bool),'const.combin.K_1'(s(bool,X257))),s(X262,X263))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X259),s(X260,X261))) | s(bool,X258) = s(bool,X259)) ) | $spl118),
  inference(cnf_transformation,[],[f27809_D])).
fof(f27809_D,plain,(
  ( ! [X261,X263,X257,X259,X260,X262,X258] : (s(bool,X257) != s(bool,X258) | s(bool,'T_0') = s(bool,happ(s(fun(X262,bool),'const.combin.K_1'(s(bool,X257))),s(X262,X263))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X259),s(X260,X261))) | s(bool,X258) = s(bool,X259)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f23710,plain,(
  ( ! [X261,X255,X257,X259,X263,X260,X262,X256,X258] : (s(bool,X257) != s(bool,X258) | s(bool,X258) = s(bool,X259) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X259),s(X260,X261))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X255,X256))) | s(bool,'T_0') = s(bool,happ(s(fun(X262,bool),'const.combin.K_1'(s(bool,X257))),s(X262,X263)))) ) | $spl24),
  inference(superposition,[],[f22109,f280])).
fof(f23712,plain,(
  ( ! [X280,X277,X279,X273,X275,X281,X276,X278,X274] : (s(bool,X278) != s(bool,'const.combin.K_2'(s(bool,X275),s(X276,X277))) | s(bool,X278) = s(bool,X279) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X279),s(X280,X281))) | s(bool,'T_0') = s(bool,X275) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X273,X274)))) ) | $spl24),
  inference(superposition,[],[f22109,f302])).
fof(f27808,plain,(
  ( ! [X308,X310,X304,X306,X312,X309,X311,X305,X307] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X309,X310))) | s(bool,X304) != s(bool,X305) | s(bool,X305) = s(bool,X306) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X304),s(X311,X312)))) ) | $spl24),
  inference(forward_demodulation,[],[f23715,f139])).
fof(f23715,plain,(
  ( ! [X302,X308,X310,X304,X306,X312,X303,X309,X311,X305,X307] : (s(bool,X304) != s(bool,X305) | s(bool,X305) = s(bool,X306) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X306),s(X307,X308))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X302,X303))),s(X309,X310))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X304),s(X311,X312)))) ) | $spl24),
  inference(superposition,[],[f22109,f1329])).
fof(f27806,plain,(
  ( ! [X315,X321,X323,X316,X318,X320,X322,X317,X319] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X322,X323))) | s(bool,X315) != s(bool,X316) | s(bool,X316) = s(bool,X317) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X317),s(X318,X319))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321)))) ) | $spl24),
  inference(forward_demodulation,[],[f23716,f139])).
fof(f23716,plain,(
  ( ! [X313,X315,X321,X323,X316,X318,X314,X320,X322,X317,X319] : (s(bool,X315) != s(bool,X316) | s(bool,X316) = s(bool,X317) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X317),s(X318,X319))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X313,X314))),s(X322,X323)))) ) | $spl24),
  inference(superposition,[],[f22109,f1329])).
fof(f27804,plain,(
  ( ! [X123,X121,X118,X116,X122,X120,X119,X117,X115] : (s(bool,X116) != s(bool,'const.combin.K_2'(s(bool,X115),s(X117,X118))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,X119) | s(bool,X119) = s(bool,'const.combin.K_2'(s(bool,X116),s(X120,X121)))) ) | $spl112),
  inference(cnf_transformation,[],[f27804_D])).
fof(f27804_D,plain,(
  ( ! [X123,X121,X118,X116,X122,X120,X119,X117,X115] : (s(bool,X116) != s(bool,'const.combin.K_2'(s(bool,X115),s(X117,X118))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,X119) | s(bool,X119) = s(bool,'const.combin.K_2'(s(bool,X116),s(X120,X121)))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f24134,plain,(
  ( ! [X57,X54,X52,X50,X58,X56,X55,X53,X51] : (s(bool,X51) != s(bool,'const.combin.K_2'(s(bool,X50),s(X52,X53))) | s(bool,X54) = s(bool,'const.combin.K_2'(s(bool,X51),s(X55,X56))) | s(bool,'T_0') = s(bool,X54) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X50),s(X57,X58)))) ) | $spl24),
  inference(superposition,[],[f3964,f279])).
fof(f27805,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X78) != s(bool,'const.combin.K_2'(s(bool,X77),s(X79,X80))) | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85))) | s(bool,'T_0') = s(bool,X81) | s(bool,X81) = s(bool,'const.combin.K_2'(s(bool,X78),s(X82,X83)))) ) | $spl114),
  inference(cnf_transformation,[],[f27805_D])).
fof(f27805_D,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X78) != s(bool,'const.combin.K_2'(s(bool,X77),s(X79,X80))) | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85))) | s(bool,'T_0') = s(bool,X81) | s(bool,X81) = s(bool,'const.combin.K_2'(s(bool,X78),s(X82,X83)))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f24137,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X78) != s(bool,'const.combin.K_2'(s(bool,X77),s(X79,X80))) | s(bool,X81) = s(bool,'const.combin.K_2'(s(bool,X78),s(X82,X83))) | s(bool,'T_0') = s(bool,X81) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85)))) ) | $spl24),
  inference(superposition,[],[f3964,f280])).
fof(f24139,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X104,X113] : (s(bool,X105) != s(bool,'const.combin.K_2'(s(bool,X104),s(X106,X107))) | s(bool,X108) = s(bool,'const.combin.K_2'(s(bool,X105),s(X109,X110))) | s(bool,'T_0') = s(bool,X108) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X111,X112))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X104),s(X113,X114)))) ) | $spl24),
  inference(superposition,[],[f3964,f1329])).
fof(f24140,plain,(
  ( ! [X125,X123,X121,X118,X116,X124,X122,X120,X119,X117,X115] : (s(bool,X116) != s(bool,'const.combin.K_2'(s(bool,X115),s(X117,X118))) | s(bool,X119) = s(bool,'const.combin.K_2'(s(bool,X116),s(X120,X121))) | s(bool,'T_0') = s(bool,X119) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X124,X125)))) ) | $spl24),
  inference(superposition,[],[f3964,f1329])).
fof(f27801,plain,(
  ( ! [X315,X321,X316,X318,X320,X317,X319] : (s(bool,X315) != s(bool,X316) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321))) | s(bool,'T_0') = s(bool,X317) | s(bool,X317) = s(bool,'const.combin.K_2'(s(bool,X316),s(X318,X319)))) ) | $spl108),
  inference(cnf_transformation,[],[f27801_D])).
fof(f27801_D,plain,(
  ( ! [X315,X321,X316,X318,X320,X317,X319] : (s(bool,X315) != s(bool,X316) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321))) | s(bool,'T_0') = s(bool,X317) | s(bool,X317) = s(bool,'const.combin.K_2'(s(bool,X316),s(X318,X319)))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f24264,plain,(
  ( ! [X231,X229,X235,X233,X230,X228,X236,X234,X232] : (s(bool,X230) != s(bool,X231) | s(bool,X232) = s(bool,'const.combin.K_2'(s(bool,X231),s(X233,X234))) | s(bool,'T_0') = s(bool,X232) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X228,X229))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X230),s(X235,X236)))) ) | $spl24),
  inference(superposition,[],[f3964,f279])).
fof(f27803,plain,(
  ( ! [X261,X263,X257,X259,X260,X262,X258] : (s(bool,X257) != s(bool,X258) | s(bool,'T_0') = s(bool,happ(s(fun(X262,bool),'const.combin.K_1'(s(bool,X257))),s(X262,X263))) | s(bool,'T_0') = s(bool,X259) | s(bool,X259) = s(bool,'const.combin.K_2'(s(bool,X258),s(X260,X261)))) ) | $spl110),
  inference(cnf_transformation,[],[f27803_D])).
fof(f27803_D,plain,(
  ( ! [X261,X263,X257,X259,X260,X262,X258] : (s(bool,X257) != s(bool,X258) | s(bool,'T_0') = s(bool,happ(s(fun(X262,bool),'const.combin.K_1'(s(bool,X257))),s(X262,X263))) | s(bool,'T_0') = s(bool,X259) | s(bool,X259) = s(bool,'const.combin.K_2'(s(bool,X258),s(X260,X261)))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f24267,plain,(
  ( ! [X261,X255,X257,X259,X263,X260,X262,X256,X258] : (s(bool,X257) != s(bool,X258) | s(bool,X259) = s(bool,'const.combin.K_2'(s(bool,X258),s(X260,X261))) | s(bool,'T_0') = s(bool,X259) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X255,X256))) | s(bool,'T_0') = s(bool,happ(s(fun(X262,bool),'const.combin.K_1'(s(bool,X257))),s(X262,X263)))) ) | $spl24),
  inference(superposition,[],[f3964,f280])).
fof(f27802,plain,(
  ( ! [X308,X310,X304,X306,X312,X309,X311,X305,X307] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X309,X310))) | s(bool,X304) != s(bool,X305) | s(bool,X306) = s(bool,'const.combin.K_2'(s(bool,X305),s(X307,X308))) | s(bool,'T_0') = s(bool,X306) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X304),s(X311,X312)))) ) | $spl24),
  inference(forward_demodulation,[],[f24272,f139])).
fof(f24272,plain,(
  ( ! [X302,X308,X310,X304,X306,X312,X303,X309,X311,X305,X307] : (s(bool,X304) != s(bool,X305) | s(bool,X306) = s(bool,'const.combin.K_2'(s(bool,X305),s(X307,X308))) | s(bool,'T_0') = s(bool,X306) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X302,X303))),s(X309,X310))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X304),s(X311,X312)))) ) | $spl24),
  inference(superposition,[],[f3964,f1329])).
fof(f27800,plain,(
  ( ! [X315,X321,X323,X316,X318,X320,X322,X317,X319] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X322,X323))) | s(bool,X315) != s(bool,X316) | s(bool,X317) = s(bool,'const.combin.K_2'(s(bool,X316),s(X318,X319))) | s(bool,'T_0') = s(bool,X317) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321)))) ) | $spl24),
  inference(forward_demodulation,[],[f24273,f139])).
fof(f24273,plain,(
  ( ! [X313,X315,X321,X323,X316,X318,X314,X320,X322,X317,X319] : (s(bool,X315) != s(bool,X316) | s(bool,X317) = s(bool,'const.combin.K_2'(s(bool,X316),s(X318,X319))) | s(bool,'T_0') = s(bool,X317) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X315),s(X320,X321))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X313,X314))),s(X322,X323)))) ) | $spl24),
  inference(superposition,[],[f3964,f1329])).
fof(f27795,plain,(
  ( ! [X123,X121,X118,X116,X122,X120,X119,X117,X115] : (s(bool,X115) != s(bool,X116) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X117),s(X120,X121))) | s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,X116),s(X118,X119)))) ) | $spl102),
  inference(cnf_transformation,[],[f27795_D])).
fof(f27795_D,plain,(
  ( ! [X123,X121,X118,X116,X122,X120,X119,X117,X115] : (s(bool,X115) != s(bool,X116) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X117),s(X120,X121))) | s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,X116),s(X118,X119)))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f24412,plain,(
  ( ! [X57,X54,X52,X50,X58,X56,X55,X53,X51] : (s(bool,X50) != s(bool,X51) | s(bool,X52) = s(bool,'const.combin.K_2'(s(bool,X51),s(X53,X54))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X52),s(X55,X56))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X50),s(X57,X58)))) ) | $spl24),
  inference(superposition,[],[f22185,f279])).
fof(f27798,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X77) != s(bool,X78) | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X79),s(X82,X83))) | s(bool,X79) = s(bool,'const.combin.K_2'(s(bool,X78),s(X80,X81)))) ) | $spl106),
  inference(cnf_transformation,[],[f27798_D])).
fof(f27798_D,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X77) != s(bool,X78) | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X79),s(X82,X83))) | s(bool,X79) = s(bool,'const.combin.K_2'(s(bool,X78),s(X80,X81)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f24415,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s(bool,X77) != s(bool,X78) | s(bool,X79) = s(bool,'const.combin.K_2'(s(bool,X78),s(X80,X81))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X79),s(X82,X83))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(X84,bool),'const.combin.K_1'(s(bool,X77))),s(X84,X85)))) ) | $spl24),
  inference(superposition,[],[f22185,f280])).
fof(f27797,plain,(
  ( ! [X94,X92,X93] : (s(bool,'F_0') = s(bool,X92) | s(bool,'T_0') = s(bool,happ(s(fun(X93,bool),'const.combin.K_1'(s(bool,X92))),s(X93,X94)))) ) | $spl104),
  inference(cnf_transformation,[],[f27797_D])).
fof(f27797_D,plain,(
  ( ! [X94,X92,X93] : (s(bool,'F_0') = s(bool,X92) | s(bool,'T_0') = s(bool,happ(s(fun(X93,bool),'const.combin.K_1'(s(bool,X92))),s(X93,X94)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f27796,plain,(
  ( ! [X94,X92,X90,X88,X87,X93,X91,X89,X86] : (s(bool,X87) = s(bool,'const.combin.K_2'(s(bool,X86),s(X88,X89))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X87),s(X90,X91))) | s(bool,'F_0') = s(bool,X92) | s(bool,'T_0') = s(bool,happ(s(fun(X93,bool),'const.combin.K_1'(s(bool,X92))),s(X93,X94)))) ) | $spl24),
  inference(subsumption_resolution,[],[f24416,f27706])).
fof(f24416,plain,(
  ( ! [X94,X92,X90,X88,X87,X93,X91,X89,X86] : (s(bool,'T_0') != s(bool,X86) | s(bool,X87) = s(bool,'const.combin.K_2'(s(bool,X86),s(X88,X89))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X87),s(X90,X91))) | s(bool,'F_0') = s(bool,X92) | s(bool,'T_0') = s(bool,happ(s(fun(X93,bool),'const.combin.K_1'(s(bool,X92))),s(X93,X94)))) ) | $spl24),
  inference(superposition,[],[f22185,f280])).
fof(f24417,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X104,X113] : (s(bool,X104) != s(bool,X105) | s(bool,X106) = s(bool,'const.combin.K_2'(s(bool,X105),s(X107,X108))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X106),s(X109,X110))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X111,X112))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X104),s(X113,X114)))) ) | $spl24),
  inference(superposition,[],[f22185,f1329])).
fof(f24418,plain,(
  ( ! [X125,X123,X121,X118,X116,X124,X122,X120,X119,X117,X115] : (s(bool,X115) != s(bool,X116) | s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,X116),s(X118,X119))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X117),s(X120,X121))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X115),s(X122,X123))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X124,X125)))) ) | $spl24),
  inference(superposition,[],[f22185,f1329])).
fof(f27794,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5)))) ) | $spl24),
  inference(condensation,[],[f27793])).
fof(f27793,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X7) = s(bool,'const.combin.K_2'(s(bool,X6),s(X8,X9))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X7),s(X10,X11))) | s(bool,'T_0') = s(bool,X12)) ) | $spl24),
  inference(subsumption_resolution,[],[f24420,f24405])).
fof(f24420,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X7) = s(bool,'const.combin.K_2'(s(bool,X6),s(X8,X9))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X7),s(X10,X11))) | s(bool,X6) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) ) | $spl24),
  inference(superposition,[],[f22185,f180])).
fof(f27792,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5)))) ) | $spl24),
  inference(condensation,[],[f27791])).
fof(f27791,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X28) = s(bool,'const.combin.K_2'(s(bool,X27),s(X29,X30))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X28),s(X31,X32))) | s(bool,'T_0') = s(bool,X33)) ) | $spl24),
  inference(subsumption_resolution,[],[f24423,f24405])).
fof(f24423,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X28) = s(bool,'const.combin.K_2'(s(bool,X27),s(X29,X30))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X28),s(X31,X32))) | s(bool,X27) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) ) | $spl24),
  inference(superposition,[],[f22185,f180])).
fof(f27790,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27789])).
fof(f27789,plain,(
  ( ! [X59,X57,X52,X60,X58,X56,X53] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X53),s(X56,X57))) | s(bool,X52) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) ) | $spl24),
  inference(subsumption_resolution,[],[f24426,f1591])).
fof(f24426,plain,(
  ( ! [X59,X57,X54,X52,X60,X58,X56,X55,X53] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X53) = s(bool,'const.combin.K_2'(s(bool,X52),s(X54,X55))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X53),s(X56,X57))) | s(bool,X52) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) ) | $spl24),
  inference(superposition,[],[f22185,f279])).
fof(f27787,plain,(
  ( ! [X80,X87,X85,X83,X79,X86,X84] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X80),s(X83,X84))) | s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) ) | $spl24),
  inference(subsumption_resolution,[],[f24429,f7228])).
fof(f24429,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X79),s(X81,X82))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X80),s(X83,X84))) | s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,happ(s(fun(X86,bool),'const.combin.K_1'(s(bool,X85))),s(X86,X87)))) ) | $spl24),
  inference(superposition,[],[f22185,f280])).
fof(f27786,plain,(
  ( ! [X207] : (s(bool,'F_0') = s(bool,X207) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f27785,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754])).
fof(f27784,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(condensation,[],[f27783])).
fof(f27783,plain,(
  ( ! [X231,X229,X227,X225,X230,X228,X232] : (s(bool,X227) = s(bool,'const.combin.K_2'(s(bool,X225),s(X228,X229))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X227),s(X230,X231))) | s(bool,'T_0') = s(bool,X232)) ) | $spl24),
  inference(subsumption_resolution,[],[f27782,f24405])).
fof(f27782,plain,(
  ( ! [X231,X229,X227,X225,X230,X228,X232] : (s(bool,X227) = s(bool,'const.combin.K_2'(s(bool,X225),s(X228,X229))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X227),s(X230,X231))) | s(bool,X225) = s(bool,X232) | s(bool,'T_0') = s(bool,X232)) ) | $spl24),
  inference(forward_demodulation,[],[f24444,f159])).
fof(f24444,plain,(
  ( ! [X231,X229,X227,X225,X230,X228,X226,X224,X232] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X227) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X224,bool),'const.combin.K_1'(s(bool,X225))),s(X224,X226))),s(X228,X229))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X227),s(X230,X231))) | s(bool,X225) = s(bool,X232) | s(bool,'T_0') = s(bool,X232)) ) | $spl24),
  inference(superposition,[],[f22185,f280])).
fof(f27776,plain,(
  ( ! [X300,X302,X296,X304,X301,X303,X299,X305] : (s(bool,X299) = s(bool,'const.combin.K_2'(s(bool,X296),s(X300,X301))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X296),s(X304,X305))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X299),s(X302,X303)))) ) | $spl98),
  inference(cnf_transformation,[],[f27776_D])).
fof(f27776_D,plain,(
  ( ! [X300,X302,X296,X304,X301,X303,X299,X305] : (s(bool,X299) = s(bool,'const.combin.K_2'(s(bool,X296),s(X300,X301))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X296),s(X304,X305))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X299),s(X302,X303)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f27781,plain,(
  ( ! [X243,X251,X249,X246,X250,X248,X247,X245] : (s(bool,X245) = s(bool,'const.combin.K_2'(s(bool,X243),s(X246,X247))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X245),s(X248,X249))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X243),s(X250,X251)))) ) | $spl24),
  inference(forward_demodulation,[],[f24446,f159])).
fof(f24446,plain,(
  ( ! [X243,X251,X249,X246,X244,X242,X250,X248,X247,X245] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X245) = s(bool,'const.combin.K_2'(s(bool,happ(s(fun(X242,bool),'const.combin.K_1'(s(bool,X243))),s(X242,X244))),s(X246,X247))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X245),s(X248,X249))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X243),s(X250,X251)))) ) | $spl24),
  inference(superposition,[],[f22185,f556])).
fof(f27780,plain,(
  ( ! [X255,X253,X257,X259,X256,X258] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X255),s(X258,X259))) | s(bool,X255) = s(bool,'const.combin.K_2'(s(bool,X253),s(X256,X257)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773,f27774,f27775,f27777,f27778,f27779])).
fof(f27778,plain,(
  ( ! [X288] : (s(bool,'F_0') = s(bool,X288) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f27777,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f27265,f25782,f27697,f25781,f27698,f25776,f27701,f25768,f27703,f27704,f27720,f25252,f26796,f24959,f24877,f24876,f27754])).
fof(f27775,plain,(
  ( ! [X300,X302,X296,X304,X301,X303,X299,X305] : (s(bool,X299) = s(bool,'const.combin.K_2'(s(bool,X296),s(X300,X301))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X299),s(X302,X303))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X296),s(X304,X305)))) ) | $spl24),
  inference(forward_demodulation,[],[f24452,f139])).
fof(f24452,plain,(
  ( ! [X300,X302,X296,X298,X304,X301,X303,X297,X299,X305] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X299) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X296),s(X297,X298))),s(X300,X301))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X299),s(X302,X303))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X296),s(X304,X305)))) ) | $spl24),
  inference(superposition,[],[f22185,f232])).
fof(f27774,plain,(
  ( ! [X321,X323,X316,X320,X322,X319] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X319),s(X322,X323))) | s(bool,X319) = s(bool,'const.combin.K_2'(s(bool,X316),s(X320,X321))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757,f27758,f27762,f27766,f27768,f24520,f27772,f27773])).
fof(f27772,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(condensation,[],[f27771])).
fof(f27771,plain,(
  ( ! [X333,X329,X331,X326,X332,X334,X330] : (s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X326),s(X330,X331))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X329),s(X332,X333))) | s(bool,'T_0') = s(bool,X334)) ) | $spl24),
  inference(subsumption_resolution,[],[f27770,f24405])).
fof(f27770,plain,(
  ( ! [X333,X329,X331,X326,X332,X334,X330] : (s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X326),s(X330,X331))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X329),s(X332,X333))) | s(bool,X326) = s(bool,X334) | s(bool,'T_0') = s(bool,X334)) ) | $spl24),
  inference(forward_demodulation,[],[f24455,f139])).
fof(f24455,plain,(
  ( ! [X327,X333,X329,X331,X326,X332,X334,X328,X330] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X326),s(X327,X328))),s(X330,X331))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X329),s(X332,X333))) | s(bool,X326) = s(bool,X334) | s(bool,'T_0') = s(bool,X334)) ) | $spl24),
  inference(superposition,[],[f22185,f279])).
fof(f27768,plain,(
  ( ! [X362,X368,X370,X365,X369] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X365),s(X368,X369))) | s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X370))) | s(bool,'T_0') = s(bool,X370)) ) | $spl24),
  inference(subsumption_resolution,[],[f27767,f21263])).
fof(f27767,plain,(
  ( ! [X366,X362,X368,X370,X365,X367,X369] : (s(bool,X365) = s(bool,'const.combin.K_2'(s(bool,X362),s(X366,X367))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X365),s(X368,X369))) | s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X370))) | s(bool,'T_0') = s(bool,X370)) ) | $spl24),
  inference(forward_demodulation,[],[f24459,f139])).
fof(f24459,plain,(
  ( ! [X364,X366,X362,X368,X370,X365,X367,X363,X369] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X365) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X362),s(X363,X364))),s(X366,X367))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X365),s(X368,X369))) | s(bool,X370) = s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X370))) | s(bool,'T_0') = s(bool,X370)) ) | $spl24),
  inference(superposition,[],[f22185,f694])).
fof(f27766,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27765])).
fof(f27765,plain,(
  ( ! [X399,X393,X401,X403,X396,X400,X402] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X396),s(X399,X400))) | s(bool,X393) = s(bool,X401) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X401),s(X402,X403)))) ) | $spl24),
  inference(subsumption_resolution,[],[f27764,f1591])).
fof(f27764,plain,(
  ( ! [X397,X399,X393,X401,X403,X396,X398,X400,X402] : (s(bool,X396) = s(bool,'const.combin.K_2'(s(bool,X393),s(X397,X398))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X396),s(X399,X400))) | s(bool,X393) = s(bool,X401) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X401),s(X402,X403)))) ) | $spl24),
  inference(forward_demodulation,[],[f24462,f139])).
fof(f24462,plain,(
  ( ! [X397,X399,X393,X395,X401,X403,X396,X398,X394,X400,X402] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X396) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X393),s(X394,X395))),s(X397,X398))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X396),s(X399,X400))) | s(bool,X393) = s(bool,X401) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X401),s(X402,X403)))) ) | $spl24),
  inference(superposition,[],[f22185,f1329])).
fof(f27762,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f27761])).
fof(f27761,plain,(
  ( ! [X412,X414,X410,X407,X413,X411,X404] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X407),s(X410,X411))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X412),s(X413,X414))) | s(bool,X404) = s(bool,X412)) ) | $spl24),
  inference(subsumption_resolution,[],[f27760,f1591])).
fof(f27760,plain,(
  ( ! [X412,X414,X408,X410,X407,X413,X409,X411,X404] : (s(bool,X407) = s(bool,'const.combin.K_2'(s(bool,X404),s(X408,X409))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X407),s(X410,X411))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X412),s(X413,X414))) | s(bool,X404) = s(bool,X412)) ) | $spl24),
  inference(forward_demodulation,[],[f24463,f139])).
fof(f24463,plain,(
  ( ! [X412,X414,X408,X410,X405,X407,X413,X409,X411,X404,X406] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X407) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X404),s(X405,X406))),s(X408,X409))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X407),s(X410,X411))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X412),s(X413,X414))) | s(bool,X404) = s(bool,X412)) ) | $spl24),
  inference(superposition,[],[f22185,f1329])).
fof(f27758,plain,(
  ( ! [X466,X463,X459,X465,X462,X464] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X462) = s(bool,'const.combin.K_2'(s(bool,X459),s(X463,X464))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X462),s(X465,X466)))) ) | $spl24),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2276,f2358,f2359,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3790,f3838,f3839,f3844,f3964,f3965,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7619,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f9907,f10064,f10065,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22018,f22092,f22106,f22109,f22110,f22065,f22185,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f23567,f23568,f24405,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27103,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f27281,f26400,f26399,f27285,f27286,f26398,f27287,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26022,f26024,f26036,f26039,f26040,f27341,f27342,f26374,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f26164,f27671,f27672,f26129,f27673,f26127,f27674,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311,f27683,f27309,f25844,f25842,f27685,f27265,f25786,f27693,f25785,f27694,f25784,f27695,f25783,f27696,f25782,f27697,f25781,f27698,f25779,f27699,f25778,f27700,f25776,f27701,f25771,f27702,f25768,f27703,f27704,f27705,f27706,f25538,f27711,f27720,f25252,f26796,f24959,f24877,f24876,f27754,f24536,f27755,f27757])).
fof(f27756,plain,(
  ( ! [X476,X478,X472,X474,X469,X475,X477,X473] : (s(bool,X472) = s(bool,'const.combin.K_2'(s(bool,X469),s(X473,X474))) | s(bool,X469) = s(bool,happ(s(fun(X477,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X477,X478))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X472),s(X475,X476)))) ) | $spl90),
  inference(cnf_transformation,[],[f27756_D])).
fof(f27756_D,plain,(
  ( ! [X476,X478,X472,X474,X469,X475,X477,X473] : (s(bool,X472) = s(bool,'const.combin.K_2'(s(bool,X469),s(X473,X474))) | s(bool,X469) = s(bool,happ(s(fun(X477,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X477,X478))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X472),s(X475,X476)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f27755,plain,(
  ( ! [X476,X478,X472,X474,X469,X475,X477,X473] : (s(bool,X472) = s(bool,'const.combin.K_2'(s(bool,X469),s(X473,X474))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X472),s(X475,X476))) | s(bool,X469) = s(bool,happ(s(fun(X477,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X477,X478)))) ) | $spl24),
  inference(forward_demodulation,[],[f24469,f139])).
fof(f24469,plain,(
  ( ! [X476,X478,X472,X474,X469,X471,X475,X477,X473,X470] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X472) = s(bool,'const.combin.K_2'(s(bool,'const.combin.K_2'(s(bool,X469),s(X470,X471))),s(X473,X474))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X472),s(X475,X476))) | s(bool,X469) = s(bool,happ(s(fun(X477,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X477,X478)))) ) | $spl24),
  inference(superposition,[],[f22185,f9837])).
fof(f27753,plain,(
  ( ! [X154,X152,X151,X155,X153,X150] : (s(bool,X151) = s(bool,'const.combin.K_2'(s(bool,X150),s(bool,X151))) | s(bool,'T_0') = s(bool,happ(s(fun(X154,bool),'const.combin.K_1'(s(bool,X153))),s(X154,X155))) | s(bool,X150) = s(bool,X153) | s(bool,'T_0') = s(bool,X152) | s(bool,X151) = s(bool,X152)) ) | $spl88),
  inference(cnf_transformation,[],[f27753_D])).
fof(f27753_D,plain,(
  ( ! [X154,X152,X151,X155,X153,X150] : (s(bool,X151) = s(bool,'const.combin.K_2'(s(bool,X150),s(bool,X151))) | s(bool,'T_0') = s(bool,happ(s(fun(X154,bool),'const.combin.K_1'(s(bool,X153))),s(X154,X155))) | s(bool,X150) = s(bool,X153) | s(bool,'T_0') = s(bool,X152) | s(bool,X151) = s(bool,X152)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f24877,plain,(
  ( ! [X154,X152,X151,X155,X153,X150] : (s(bool,X151) = s(bool,'const.combin.K_2'(s(bool,X150),s(bool,X151))) | s(bool,X151) = s(bool,X152) | s(bool,'T_0') = s(bool,X152) | s(bool,'T_0') = s(bool,'F_0') | s(bool,X150) = s(bool,X153) | s(bool,'T_0') = s(bool,happ(s(fun(X154,bool),'const.combin.K_1'(s(bool,X153))),s(X154,X155)))) )),
  inference(superposition,[],[f349,f280])).
fof(f27686,plain,(
  ( ! [X1064,X1068,X1067,X1065,X1069,X1063] : (s(bool,X1067) = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1068,X1069))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1064,X1065))) | s(bool,'T_0') = s(bool,X1067)) ) | $spl80),
  inference(cnf_transformation,[],[f27686_D])).
fof(f27686_D,plain,(
  ( ! [X1064,X1068,X1067,X1065,X1069,X1063] : (s(bool,X1067) = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1068,X1069))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1064,X1065))) | s(bool,'T_0') = s(bool,X1067)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f27707,plain,(
  ( ! [X787] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X787),s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X787)) ) | $spl82),
  inference(cnf_transformation,[],[f27707_D])).
fof(f27707_D,plain,(
  ( ! [X787] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X787),s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X787)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f24959,plain,(
  ( ! [X243,X241,X246,X244,X242,X240,X245] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X243),s(bool,'F_0'))) | s(bool,X244) = s(bool,'const.combin.K_2'(s(bool,X240),s(X241,X242))) | s(bool,'T_0') = s(bool,X244) | s(bool,'F_0') = s(bool,X243) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X240),s(X245,X246)))) )),
  inference(superposition,[],[f349,f232])).
fof(f25252,plain,(
  ( ! [X146,X144,X142,X145,X143] : (s(bool,X142) != s(bool,X143) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X143),s(X144,X145))) | s(bool,X142) = s(bool,X146) | s(bool,'T_0') = s(bool,X146) | s(bool,'T_0') = s(bool,'F_0')) )),
  inference(superposition,[],[f1455,f349])).
fof(f25538,plain,(
  ( ! [X786,X784,X783,X781,X787,X785,X782,X780] : (s(bool,X781) != s(bool,'const.combin.K_2'(s(bool,X780),s(X782,X783))) | s(bool,X781) = s(bool,X784) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X784),s(X785,X786))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X787),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X780) | s(bool,'F_0') = s(bool,X787)) ) | $spl24),
  inference(superposition,[],[f22109,f349])).
fof(f27187,plain,(
  ( ! [X26,X25] : (s(bool,X25) = s(bool,X26) | s(bool,'F_0') = s(bool,X26) | ~p(s(bool,X25))) ) | $spl44),
  inference(cnf_transformation,[],[f27187_D])).
fof(f27187_D,plain,(
  ( ! [X26,X25] : (s(bool,X25) = s(bool,X26) | s(bool,'F_0') = s(bool,X26) | ~p(s(bool,X25))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f27704,plain,(
  ( ! [X656,X655] : (s(bool,X655) = s(bool,X656) | ~p(s(bool,X655)) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X656)) )),
  inference(forward_demodulation,[],[f25764,f139])).
fof(f25764,plain,(
  ( ! [X656,X655] : (~p(s(bool,X655)) | s(bool,X655) = s(bool,'const.combin.K_2'(s(bool,X656),s(bool,X655))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,X656)) )),
  inference(superposition,[],[f111,f349])).
fof(f27661,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X2)))) ) | $spl74),
  inference(cnf_transformation,[],[f27661_D])).
fof(f27661_D,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X2)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f27265,plain,(
  ( ! [X1050,X1054,X1052,X1056,X1051,X1049,X1055,X1053] : (s(bool,X1053) = s(bool,'const.combin.K_2'(s(bool,X1049),s(X1054,X1055))) | s(bool,'T_0') = s(bool,X1053) | s(bool,X1052) = s(bool,'const.combin.K_2'(s(bool,X1056),s(bool,X1052))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1049),s(X1050,X1051))) | s(bool,'F_0') = s(bool,X1056)) )),
  inference(subsumption_resolution,[],[f25826,f349])).
fof(f25826,plain,(
  ( ! [X1050,X1054,X1052,X1056,X1051,X1049,X1055,X1053] : (s(bool,X1052) != s(bool,X1053) | s(bool,X1053) = s(bool,'const.combin.K_2'(s(bool,X1049),s(X1054,X1055))) | s(bool,'T_0') = s(bool,X1053) | s(bool,X1052) = s(bool,'const.combin.K_2'(s(bool,X1056),s(bool,X1052))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1049),s(X1050,X1051))) | s(bool,'F_0') = s(bool,X1056)) )),
  inference(superposition,[],[f3370,f349])).
fof(f27685,plain,(
  ( ! [X1066,X1064,X1070,X1068,X1067,X1065,X1069,X1063] : (s(bool,X1067) = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1068,X1069))) | s(bool,'T_0') = s(bool,X1067) | s(bool,X1066) = s(bool,'const.combin.K_2'(s(bool,X1070),s(bool,X1066))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1064,X1065))) | s(bool,'F_0') = s(bool,X1070)) ) | $spl24),
  inference(subsumption_resolution,[],[f25828,f27672])).
fof(f25828,plain,(
  ( ! [X1066,X1064,X1070,X1068,X1067,X1065,X1069,X1063] : (s(bool,'F_0') != s(bool,X1066) | s(bool,X1067) = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1068,X1069))) | s(bool,'T_0') = s(bool,X1067) | s(bool,X1066) = s(bool,'const.combin.K_2'(s(bool,X1070),s(bool,X1066))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1063),s(X1064,X1065))) | s(bool,'F_0') = s(bool,X1070)) )),
  inference(superposition,[],[f3538,f349])).
fof(f27684,plain,(
  ( ! [X1155,X1159,X1157,X1160,X1158,X1156] : (s(bool,X1155) != s(bool,X1156) | s(bool,'F_0') = s(bool,X1160) | s(bool,X1155) = s(bool,'const.combin.K_2'(s(bool,X1160),s(bool,X1155))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1157),s(X1158,X1159))) | s(bool,X1156) = s(bool,X1157)) ) | $spl78),
  inference(cnf_transformation,[],[f27684_D])).
fof(f27684_D,plain,(
  ( ! [X1155,X1159,X1157,X1160,X1158,X1156] : (s(bool,X1155) != s(bool,X1156) | s(bool,'F_0') = s(bool,X1160) | s(bool,X1155) = s(bool,'const.combin.K_2'(s(bool,X1160),s(bool,X1155))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1157),s(X1158,X1159))) | s(bool,X1156) = s(bool,X1157)) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f25842,plain,(
  ( ! [X1155,X1153,X1159,X1157,X1160,X1154,X1158,X1156] : (s(bool,X1155) != s(bool,X1156) | s(bool,X1156) = s(bool,X1157) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1157),s(X1158,X1159))) | s(bool,X1155) = s(bool,'const.combin.K_2'(s(bool,X1160),s(bool,X1155))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1153,X1154))) | s(bool,'F_0') = s(bool,X1160)) ) | $spl24),
  inference(superposition,[],[f22109,f349])).
fof(f27309,plain,(
  ( ! [X4,X0,X3] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X3))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(forward_demodulation,[],[f27308,f139])).
fof(f27308,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X3))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(condensation,[],[f27307])).
fof(f27307,plain,(
  ( ! [X372,X368,X370,X367,X369,X371] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X368,X369))) | s(bool,X367) = s(bool,X370) | s(bool,'T_0') = s(bool,X370) | s(bool,X371) = s(bool,'const.combin.K_2'(s(bool,X372),s(bool,X371))) | s(bool,'F_0') = s(bool,X372)) )),
  inference(subsumption_resolution,[],[f26101,f26471])).
fof(f26101,plain,(
  ( ! [X372,X368,X370,X367,X369,X371] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X368,X369))) | s(bool,X367) = s(bool,X370) | s(bool,'T_0') = s(bool,X370) | s(bool,X371) = s(bool,'const.combin.K_2'(s(bool,X372),s(bool,X371))) | s(bool,X367) = s(bool,X371) | s(bool,'F_0') = s(bool,X372)) )),
  inference(superposition,[],[f3461,f349])).
fof(f27683,plain,(
  ( ! [X379,X380,X376] : (s(bool,X379) = s(bool,'const.combin.K_2'(s(bool,X380),s(bool,X379))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X380) | s(bool,'T_0') = s(bool,X376)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103,f27682,f27311])).
fof(f27682,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X2)) )),
  inference(condensation,[],[f27681])).
fof(f27681,plain,(
  ( ! [X383,X382,X384,X381] : (s(bool,X383) = s(bool,'const.combin.K_2'(s(bool,X384),s(bool,X383))) | s(bool,'F_0') = s(bool,X384) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X381) = s(bool,X383) | s(bool,'T_0') = s(bool,X382)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679,f27680,f26103])).
fof(f27680,plain,(
  ( ! [X392] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X392)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107,f27678,f27679])).
fof(f27678,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f27677])).
fof(f27677,plain,(
  ( ! [X408,X407,X403,X404] : (s(bool,'F_0') = s(bool,X408) | s(bool,X403) = s(bool,X407) | s(bool,'T_0') = s(bool,X404) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X407) = s(bool,'const.combin.K_2'(s(bool,X408),s(bool,X407)))) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108,f27676,f26107])).
fof(f27676,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X0))) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f27675])).
fof(f27675,plain,(
  ( ! [X414,X410,X413,X409] : (s(bool,'F_0') = s(bool,X414) | s(bool,'T_0') = s(bool,X410) | s(bool,X413) = s(bool,'const.combin.K_2'(s(bool,X414),s(bool,X413))) | s(bool,'T_0') != s(bool,'F_0') | s(bool,X409) = s(bool,X413)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670,f27319,f26108])).
fof(f27319,plain,(
  ( ! [X4,X0,X3] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X0) | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X3))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(forward_demodulation,[],[f27318,f159])).
fof(f27318,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X3))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(condensation,[],[f27317])).
fof(f27317,plain,(
  ( ! [X509,X511,X507,X508,X510,X506] : (s(bool,'F_0') != s(bool,happ(s(fun(X507,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X507,X508))) | s(bool,X506) = s(bool,X509) | s(bool,'T_0') = s(bool,X509) | s(bool,X510) = s(bool,'const.combin.K_2'(s(bool,X511),s(bool,X510))) | s(bool,'F_0') = s(bool,X511)) )),
  inference(subsumption_resolution,[],[f26124,f26471])).
fof(f26124,plain,(
  ( ! [X509,X511,X507,X508,X510,X506] : (s(bool,'F_0') != s(bool,happ(s(fun(X507,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X507,X508))) | s(bool,X506) = s(bool,X509) | s(bool,'T_0') = s(bool,X509) | s(bool,X510) = s(bool,'const.combin.K_2'(s(bool,X511),s(bool,X510))) | s(bool,X506) = s(bool,X510) | s(bool,'F_0') = s(bool,X511)) )),
  inference(superposition,[],[f11995,f349])).
fof(f27674,plain,(
  ( ! [X529] : (s(bool,'F_0') = s(bool,X529) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f26127,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670])).
fof(f27673,plain,(
  ( ! [X545] : (s(bool,'F_0') = s(bool,X545) | s(bool,'T_0') != s(bool,'F_0')) ) | $spl24),
  inference(global_subsumption,[],[f26129,f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171,f27669,f26165,f27670])).
fof(f27669,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X2))) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f27668])).
fof(f27668,plain,(
  ( ! [X819,X818,X816,X820] : (s(bool,'F_0') = s(bool,X820) | s(bool,X816) = s(bool,X818) | s(bool,'T_0') = s(bool,X818) | s(bool,X819) = s(bool,'const.combin.K_2'(s(bool,X820),s(bool,X819))) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191,f27660,f26366,f26178,f27666,f26172,f26171])).
fof(f27667,plain,(
  ( ! [X821,X826,X822,X827] : (s(bool,X826) = s(bool,'const.combin.K_2'(s(bool,X827),s(bool,X826))) | s(bool,'F_0') = s(bool,X827) | s(bool,X826) = s(bool,happ(s(fun(X821,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X821,X822)))) ) | $spl76),
  inference(cnf_transformation,[],[f27667_D])).
fof(f27667_D,plain,(
  ( ! [X821,X826,X822,X827] : (s(bool,X826) = s(bool,'const.combin.K_2'(s(bool,X827),s(bool,X826))) | s(bool,'F_0') = s(bool,X827) | s(bool,X826) = s(bool,happ(s(fun(X821,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X821,X822)))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f27655,plain,(
  ( ! [X1017,X1015,X1016] : (s(bool,'T_0') != s(bool,X1015) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1015),s(X1016,X1017)))) ) | $spl68),
  inference(cnf_transformation,[],[f27655_D])).
fof(f27655_D,plain,(
  ( ! [X1017,X1015,X1016] : (s(bool,'T_0') != s(bool,X1015) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1015),s(X1016,X1017)))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f26172,plain,(
  ( ! [X825,X823,X821,X826,X824,X822,X827] : (s(bool,'T_0') != s(bool,X823) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X823),s(X824,X825))) | s(bool,X826) = s(bool,'const.combin.K_2'(s(bool,X827),s(bool,X826))) | s(bool,X826) = s(bool,happ(s(fun(X821,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X821,X822))) | s(bool,'F_0') = s(bool,X827)) )),
  inference(superposition,[],[f8246,f349])).
fof(f27660,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(bool,X2))) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(condensation,[],[f27659])).
fof(f27659,plain,(
  ( ! [X978,X980,X975,X979] : (s(bool,'F_0') = s(bool,X980) | s(bool,X979) = s(bool,'const.combin.K_2'(s(bool,X980),s(bool,X979))) | s(bool,X975) = s(bool,X978) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X978)) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193,f27657,f26192,f26191])).
fof(f27658,plain,(
  ( ! [X984,X988,X982,X987,X985,X983,X981,X986] : (s(bool,X984) = s(bool,'const.combin.K_2'(s(bool,X981),s(X985,X986))) | s(bool,'F_0') = s(bool,X988) | s(bool,X987) = s(bool,'const.combin.K_2'(s(bool,X988),s(bool,X987))) | s(bool,X987) = s(bool,'const.combin.K_2'(s(bool,X981),s(X982,X983))) | s(bool,'T_0') = s(bool,X984)) ) | $spl72),
  inference(cnf_transformation,[],[f27658_D])).
fof(f27658_D,plain,(
  ( ! [X984,X988,X982,X987,X985,X983,X981,X986] : (s(bool,X984) = s(bool,'const.combin.K_2'(s(bool,X981),s(X985,X986))) | s(bool,'F_0') = s(bool,X988) | s(bool,X987) = s(bool,'const.combin.K_2'(s(bool,X988),s(bool,X987))) | s(bool,X987) = s(bool,'const.combin.K_2'(s(bool,X981),s(X982,X983))) | s(bool,'T_0') = s(bool,X984)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f26192,plain,(
  ( ! [X984,X988,X982,X987,X985,X983,X981,X986] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X984) = s(bool,'const.combin.K_2'(s(bool,X981),s(X985,X986))) | s(bool,'T_0') = s(bool,X984) | s(bool,X987) = s(bool,'const.combin.K_2'(s(bool,X988),s(bool,X987))) | s(bool,X987) = s(bool,'const.combin.K_2'(s(bool,X981),s(X982,X983))) | s(bool,'F_0') = s(bool,X988)) )),
  inference(superposition,[],[f3538,f349])).
fof(f27657,plain,(
  ( ! [X996] : (s(bool,'F_0') = s(bool,X996) | s(bool,'T_0') != s(bool,'F_0')) )),
  inference(global_subsumption,[],[f109,f108,f107,f106,f105,f104,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f123,f124,f125,f126,f127,f128,f129,f130,f131,f132,f138,f137,f136,f135,f134,f133,f139,f159,f141,f142,f143,f144,f145,f146,f180,f182,f183,f191,f215,f232,f233,f279,f280,f292,f302,f303,f346,f349,f556,f557,f565,f634,f635,f636,f653,f670,f694,f1329,f939,f940,f941,f959,f979,f990,f991,f1099,f1100,f1101,f1175,f1163,f1455,f1384,f1385,f1386,f1591,f1592,f1981,f1735,f1978,f1757,f2006,f2256,f2047,f2193,f2451,f2464,f2465,f2685,f2686,f3461,f3457,f3343,f3344,f3370,f3371,f3624,f3538,f3539,f3598,f3667,f3698,f3699,f3844,f4128,f4162,f4155,f4629,f4291,f4292,f5014,f5015,f5499,f5500,f5864,f5938,f5939,f6546,f6547,f6698,f6699,f6700,f6703,f6704,f6705,f6724,f6725,f6710,f6711,f6712,f6715,f6716,f6717,f6718,f6727,f6728,f6811,f6812,f6813,f6887,f6905,f6906,f6907,f7086,f7089,f7217,f7220,f7225,f7227,f7228,f7615,f7267,f7268,f7269,f7272,f7273,f7275,f7283,f7284,f7287,f7291,f7411,f7414,f7512,f7500,f8246,f8244,f8122,f8123,f8124,f8391,f8392,f8393,f9164,f9162,f9157,f9082,f9230,f9075,f8880,f9837,f9835,f9770,f9891,f9893,f9898,f9900,f10334,f10335,f10541,f10542,f10543,f11995,f11991,f11990,f11989,f11809,f11810,f11856,f11857,f12280,f12278,f12147,f12148,f12563,f12564,f12942,f12943,f12944,f15490,f15491,f15492,f16176,f16179,f18663,f20785,f20786,f20787,f20788,f20789,f20790,f20914,f21265,f21263,f21262,f21261,f21260,f21026,f21027,f21223,f21395,f21396,f21397,f21398,f21399,f21400,f21650,f21649,f21640,f21641,f21765,f21825,f21826,f21827,f21828,f21829,f21830,f22235,f22236,f22237,f22238,f22239,f22240,f22780,f22781,f26698,f26717,f26686,f24981,f24982,f26826,f25030,f26644,f26864,f26866,f26868,f26870,f26871,f26872,f26880,f26881,f26884,f26613,f26602,f26600,f26597,f26893,f26894,f26596,f26895,f26897,f26901,f26595,f26907,f25163,f25164,f25165,f25166,f26580,f26578,f26926,f26575,f26928,f26929,f26569,f27062,f27063,f27064,f27065,f27068,f27081,f27082,f27094,f27129,f27131,f27132,f27147,f27148,f27149,f27159,f27172,f25658,f25661,f26505,f27186,f27188,f27189,f27192,f26487,f26482,f26481,f27200,f27201,f26478,f26477,f26473,f27203,f27204,f27206,f26472,f26471,f26469,f26468,f26467,f27209,f26466,f26465,f27211,f26464,f25905,f25908,f27272,f25914,f25916,f25917,f25919,f25920,f26399,f27285,f27286,f26398,f26393,f25989,f25990,f25991,f25994,f25995,f25996,f25999,f26002,f26007,f26016,f26017,f26019,f26020,f26024,f26036,f26039,f27341,f27342,f26364,f27343,f26363,f26268,f26271,f26274,f26294,f26291,f26290,f27652,f26282,f27653,f26295,f26270,f26196,f26195,f26365,f26193])).
fof(f27654,plain,(
  ( ! [X1019,X1013,X1018,X1014] : (s(bool,X1018) = s(bool,'const.combin.K_2'(s(bool,X1019),s(bool,X1018))) | s(bool,'F_0') = s(bool,X1019) | s(bool,X1018) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1013,X1014)))) ) | $spl66),
  inference(cnf_transformation,[],[f27654_D])).
fof(f27654_D,plain,(
  ( ! [X1019,X1013,X1018,X1014] : (s(bool,X1018) = s(bool,'const.combin.K_2'(s(bool,X1019),s(bool,X1018))) | s(bool,'F_0') = s(bool,X1019) | s(bool,X1018) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1013,X1014)))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f27656,plain,(
  ( ! [X1009,X1010,X1008] : (s(bool,'T_0') != s(bool,X1008) | s(bool,'T_0') = s(bool,happ(s(fun(X1009,bool),'const.combin.K_1'(s(bool,X1008))),s(X1009,X1010)))) ) | $spl70),
  inference(cnf_transformation,[],[f27656_D])).
fof(f27656_D,plain,(
  ( ! [X1009,X1010,X1008] : (s(bool,'T_0') != s(bool,X1008) | s(bool,'T_0') = s(bool,happ(s(fun(X1009,bool),'const.combin.K_1'(s(bool,X1008))),s(X1009,X1010)))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f26195,plain,(
  ( ! [X1011,X1009,X1006,X1010,X1008,X1012,X1007] : (s(bool,'T_0') != s(bool,X1008) | s(bool,'T_0') = s(bool,happ(s(fun(X1009,bool),'const.combin.K_1'(s(bool,X1008))),s(X1009,X1010))) | s(bool,X1011) = s(bool,'const.combin.K_2'(s(bool,X1012),s(bool,X1011))) | s(bool,X1011) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1006,X1007))) | s(bool,'F_0') = s(bool,X1012)) )),
  inference(superposition,[],[f1384,f349])).
fof(f26196,plain,(
  ( ! [X1019,X1017,X1015,X1013,X1018,X1016,X1014] : (s(bool,'T_0') != s(bool,X1015) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1015),s(X1016,X1017))) | s(bool,X1018) = s(bool,'const.combin.K_2'(s(bool,X1019),s(bool,X1018))) | s(bool,X1018) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1013,X1014))) | s(bool,'F_0') = s(bool,X1019)) )),
  inference(superposition,[],[f1455,f349])).
fof(f27199,plain,(
  ( ! [X271,X274] : (s(bool,'T_0') != s(bool,X271) | s(bool,'F_0') = s(bool,X274) | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X274),s(bool,X271)))) ) | $spl48),
  inference(cnf_transformation,[],[f27199_D])).
fof(f27199_D,plain,(
  ( ! [X271,X274] : (s(bool,'T_0') != s(bool,X271) | s(bool,'F_0') = s(bool,X274) | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X274),s(bool,X271)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f26290,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X2)) )),
  inference(equality_factoring,[],[f349])).
fof(f27651,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1)))) ) | $spl64),
  inference(cnf_transformation,[],[f27651_D])).
fof(f27651_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f26291,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'F_0')) )),
  inference(equality_factoring,[],[f349])).
fof(f27644,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f27643,f110])).
fof(f27643,plain,(
  ~p(s(bool,'T_0')) | $spl22),
  inference(forward_demodulation,[],[f111,f2275])).
fof(f27640,plain,(
  $false | ($spl22 | $spl24)),
  inference(subsumption_resolution,[],[f2276,f2275])).
fof(f27639,plain,(
  $false | ($spl22 | $spl24)),
  inference(subsumption_resolution,[],[f9907,f2275])).
fof(f27596,plain,(
  $false | ($spl24 | $spl62)),
  inference(subsumption_resolution,[],[f27443,f27386])).
fof(f27386,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl62),
  inference(condensation,[],[f27385])).
fof(f27385,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) ) | $spl62),
  inference(subsumption_resolution,[],[f27375,f27290])).
fof(f27375,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,'T_0'))) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2)) ) | $spl62),
  inference(condensation,[],[f27374])).
fof(f27374,plain,(
  ( ! [X78,X79,X77,X75,X73] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,'T_0'))) != s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,X73) = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75)) ) | $spl62),
  inference(backward_demodulation,[],[f27290,f11989])).
fof(f27443,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X2,X3)))) ) | ($spl24 | $spl62)),
  inference(backward_demodulation,[],[f27386,f9907])).
fof(f27595,plain,(
  $false | ($spl24 | $spl62)),
  inference(subsumption_resolution,[],[f27405,f27386])).
fof(f27405,plain,(
  ( ! [X97,X98] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X97,X98)))) ) | ($spl24 | $spl62)),
  inference(backward_demodulation,[],[f27386,f2276])).
fof(f27590,plain,(
  $false | $spl62),
  inference(subsumption_resolution,[],[f27387,f110])).
fof(f27387,plain,(
  ~p(s(bool,'T_0')) | $spl62),
  inference(backward_demodulation,[],[f27386,f111])).
fof(f26869,plain,(
  ( ! [X210,X208,X209,X205] : (s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,X208),s(bool,X205))) | s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X209,X210))) | s(bool,'F_0') = s(bool,X208)) ) | $spl38),
  inference(cnf_transformation,[],[f26869_D])).
fof(f26869_D,plain,(
  ( ! [X210,X208,X209,X205] : (s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,X208),s(bool,X205))) | s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X209,X210))) | s(bool,'F_0') = s(bool,X208)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f27343,plain,(
  ( ! [X1035,X1031,X1032,X1036,X1030] : (s(bool,'T_0') = s(bool,X1032) | s(bool,X1035) = s(bool,'const.combin.K_2'(s(bool,X1036),s(bool,X1035))) | s(bool,X1035) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1030,X1031))) | s(bool,'F_0') = s(bool,X1036)) )),
  inference(subsumption_resolution,[],[f26199,f9230])).
fof(f26199,plain,(
  ( ! [X1035,X1033,X1031,X1034,X1032,X1036,X1030] : (s(bool,'T_0') = s(bool,X1032) | s(bool,'T_0') = s(bool,happ(s(fun(X1033,bool),'const.combin.K_1'(s(bool,X1032))),s(X1033,X1034))) | s(bool,X1035) = s(bool,'const.combin.K_2'(s(bool,X1036),s(bool,X1035))) | s(bool,X1035) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1030,X1031))) | s(bool,'F_0') = s(bool,X1036)) )),
  inference(superposition,[],[f2047,f349])).
fof(f26364,plain,(
  ( ! [X1027,X1025,X1029,X1026,X1028] : (s(bool,'T_0') = s(bool,X1027) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,X1029),s(bool,X1028))) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1025,X1026))) | s(bool,'F_0') = s(bool,X1029)) )),
  inference(duplicate_literal_removal,[],[f26198])).
fof(f26198,plain,(
  ( ! [X1027,X1025,X1029,X1026,X1028] : (s(bool,'T_0') = s(bool,X1027) | s(bool,'T_0') = s(bool,X1027) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,X1029),s(bool,X1028))) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1025,X1026))) | s(bool,'F_0') = s(bool,X1029)) )),
  inference(superposition,[],[f1978,f349])).
fof(f26882,plain,(
  ( ! [X360,X359,X355,X361] : (s(bool,X355) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,X355))) | s(bool,X355) = s(bool,happ(s(fun(X360,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X360,X361))) | s(bool,'F_0') = s(bool,X359)) ) | $spl42),
  inference(cnf_transformation,[],[f26882_D])).
fof(f26882_D,plain,(
  ( ! [X360,X359,X355,X361] : (s(bool,X355) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,X355))) | s(bool,X355) = s(bool,happ(s(fun(X360,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X360,X361))) | s(bool,'F_0') = s(bool,X359)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f27342,plain,(
  ( ! [X841,X845,X839,X840,X844] : (s(bool,'T_0') = s(bool,X841) | s(bool,X844) = s(bool,'const.combin.K_2'(s(bool,X845),s(bool,X844))) | s(bool,X844) = s(bool,happ(s(fun(X839,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X839,X840))) | s(bool,'F_0') = s(bool,X845)) )),
  inference(subsumption_resolution,[],[f26175,f2006])).
fof(f26175,plain,(
  ( ! [X843,X841,X845,X839,X842,X840,X844] : (s(bool,'T_0') = s(bool,X841) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X841),s(X842,X843))) | s(bool,X844) = s(bool,'const.combin.K_2'(s(bool,X845),s(bool,X844))) | s(bool,X844) = s(bool,happ(s(fun(X839,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X839,X840))) | s(bool,'F_0') = s(bool,X845)) )),
  inference(superposition,[],[f9837,f349])).
fof(f27341,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,X1) = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(condensation,[],[f27340])).
fof(f27340,plain,(
  ( ! [X835,X833,X837,X834,X838,X836] : (s(bool,'T_0') = s(bool,X836) | s(bool,X835) = s(bool,X836) | s(bool,X837) = s(bool,'const.combin.K_2'(s(bool,X838),s(bool,X837))) | s(bool,X837) = s(bool,happ(s(fun(X833,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X833,X834))) | s(bool,'F_0') = s(bool,X838)) )),
  inference(subsumption_resolution,[],[f26174,f180])).
fof(f26174,plain,(
  ( ! [X835,X833,X837,X834,X838,X836] : (s(bool,'T_0') != s(bool,X835) | s(bool,'T_0') = s(bool,X836) | s(bool,X835) = s(bool,X836) | s(bool,X837) = s(bool,'const.combin.K_2'(s(bool,X838),s(bool,X837))) | s(bool,X837) = s(bool,happ(s(fun(X833,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X833,X834))) | s(bool,'F_0') = s(bool,X838)) )),
  inference(superposition,[],[f9770,f349])).
fof(f27290,plain,(
  ( ! [X721] : (s(bool,X721) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,'T_0')))) ) | $spl62),
  inference(cnf_transformation,[],[f27290_D])).
fof(f27290_D,plain,(
  ( ! [X721] : (s(bool,X721) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,'T_0')))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f27282,plain,(
  ( ! [X379,X374,X378] : (s(bool,X374) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X374))) | s(bool,'F_0') = s(bool,X379) | s(bool,X374) = s(bool,X378) | s(bool,X378) = s(bool,'const.combin.K_2'(s(bool,X379),s(bool,X378)))) ) | $spl56),
  inference(cnf_transformation,[],[f27282_D])).
fof(f27282_D,plain,(
  ( ! [X379,X374,X378] : (s(bool,X374) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X374))) | s(bool,'F_0') = s(bool,X379) | s(bool,X374) = s(bool,X378) | s(bool,X378) = s(bool,'const.combin.K_2'(s(bool,X379),s(bool,X378)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f26019,plain,(
  ( ! [X720,X722,X721,X723] : (s(bool,X720) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X720))) | s(bool,X721) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,'T_0'))) | s(bool,X722) = s(bool,'const.combin.K_2'(s(bool,X723),s(bool,X722))) | s(bool,X720) = s(bool,X722) | s(bool,'F_0') = s(bool,X723)) )),
  inference(superposition,[],[f2193,f349])).
fof(f27288,plain,(
  ( ! [X509,X511,X514,X510,X513] : (s(bool,'F_0') != s(bool,happ(s(fun(X510,bool),'const.combin.K_1'(s(bool,X509))),s(X510,X511))) | s(bool,'F_0') = s(bool,X514) | s(bool,X509) = s(bool,X513) | s(bool,X513) = s(bool,'const.combin.K_2'(s(bool,X514),s(bool,X513)))) ) | $spl60),
  inference(cnf_transformation,[],[f27288_D])).
fof(f27288_D,plain,(
  ( ! [X509,X511,X514,X510,X513] : (s(bool,'F_0') != s(bool,happ(s(fun(X510,bool),'const.combin.K_1'(s(bool,X509))),s(X510,X511))) | s(bool,'F_0') = s(bool,X514) | s(bool,X509) = s(bool,X513) | s(bool,X513) = s(bool,'const.combin.K_2'(s(bool,X514),s(bool,X513)))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f26393,plain,(
  ( ! [X509,X511,X512,X514,X510,X513] : (s(bool,'F_0') != s(bool,happ(s(fun(X510,bool),'const.combin.K_1'(s(bool,X509))),s(X510,X511))) | s(bool,'T_0') = s(bool,X512) | s(bool,X513) = s(bool,'const.combin.K_2'(s(bool,X514),s(bool,X513))) | s(bool,X509) = s(bool,X513) | s(bool,'F_0') = s(bool,X514)) )),
  inference(duplicate_literal_removal,[],[f25982])).
fof(f25982,plain,(
  ( ! [X509,X511,X512,X514,X510,X513] : (s(bool,'F_0') != s(bool,happ(s(fun(X510,bool),'const.combin.K_1'(s(bool,X509))),s(X510,X511))) | s(bool,'T_0') = s(bool,X512) | s(bool,'T_0') = s(bool,X512) | s(bool,X513) = s(bool,'const.combin.K_2'(s(bool,X514),s(bool,X513))) | s(bool,X509) = s(bool,X513) | s(bool,'F_0') = s(bool,X514)) )),
  inference(superposition,[],[f11995,f349])).
fof(f27287,plain,(
  ( ! [X447,X443,X444,X448] : (s(bool,X443) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X443))) | s(bool,'T_0') = s(bool,X444) | s(bool,X447) = s(bool,'const.combin.K_2'(s(bool,X448),s(bool,X447))) | s(bool,X443) = s(bool,X447) | s(bool,'F_0') = s(bool,X448)) ) | $spl24),
  inference(subsumption_resolution,[],[f25973,f1175])).
fof(f25973,plain,(
  ( ! [X445,X447,X443,X444,X446,X448] : (s(bool,X443) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X443))) | s(bool,X444) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X445,X446))) | s(bool,'T_0') = s(bool,X444) | s(bool,X447) = s(bool,'const.combin.K_2'(s(bool,X448),s(bool,X447))) | s(bool,X443) = s(bool,X447) | s(bool,'F_0') = s(bool,X448)) ) | $spl24),
  inference(superposition,[],[f3790,f349])).
fof(f27284,plain,(
  ( ! [X412,X414,X410,X415,X411] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X410),s(X411,X412))) | s(bool,'F_0') = s(bool,X415) | s(bool,X410) = s(bool,X414) | s(bool,X414) = s(bool,'const.combin.K_2'(s(bool,X415),s(bool,X414)))) ) | $spl58),
  inference(cnf_transformation,[],[f27284_D])).
fof(f27284_D,plain,(
  ( ! [X412,X414,X410,X415,X411] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X410),s(X411,X412))) | s(bool,'F_0') = s(bool,X415) | s(bool,X410) = s(bool,X414) | s(bool,X414) = s(bool,'const.combin.K_2'(s(bool,X415),s(bool,X414)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f27286,plain,(
  ( ! [X428,X426,X432,X431,X425,X427] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X425),s(X426,X427))) | s(bool,'T_0') = s(bool,X428) | s(bool,X431) = s(bool,'const.combin.K_2'(s(bool,X432),s(bool,X431))) | s(bool,X425) = s(bool,X431) | s(bool,'F_0') = s(bool,X432)) )),
  inference(subsumption_resolution,[],[f25970,f2006])).
fof(f25970,plain,(
  ( ! [X428,X430,X426,X432,X429,X431,X425,X427] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X425),s(X426,X427))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X428),s(X429,X430))) | s(bool,'T_0') = s(bool,X428) | s(bool,X431) = s(bool,'const.combin.K_2'(s(bool,X432),s(bool,X431))) | s(bool,X425) = s(bool,X431) | s(bool,'F_0') = s(bool,X432)) )),
  inference(superposition,[],[f3624,f349])).
fof(f27285,plain,(
  ( ! [X422,X416,X418,X423,X417,X419] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X416),s(X417,X418))) | s(bool,'T_0') = s(bool,X419) | s(bool,X422) = s(bool,'const.combin.K_2'(s(bool,X423),s(bool,X422))) | s(bool,X416) = s(bool,X422) | s(bool,'F_0') = s(bool,X423)) )),
  inference(subsumption_resolution,[],[f25969,f1175])).
fof(f25969,plain,(
  ( ! [X420,X422,X416,X418,X421,X423,X417,X419] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X416),s(X417,X418))) | s(bool,X419) = s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X420,X421))) | s(bool,'T_0') = s(bool,X419) | s(bool,X422) = s(bool,'const.combin.K_2'(s(bool,X423),s(bool,X422))) | s(bool,X416) = s(bool,X422) | s(bool,'F_0') = s(bool,X423)) )),
  inference(superposition,[],[f3538,f349])).
fof(f26399,plain,(
  ( ! [X412,X414,X410,X413,X415,X411] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X410),s(X411,X412))) | s(bool,'T_0') = s(bool,X413) | s(bool,X414) = s(bool,'const.combin.K_2'(s(bool,X415),s(bool,X414))) | s(bool,X410) = s(bool,X414) | s(bool,'F_0') = s(bool,X415)) )),
  inference(duplicate_literal_removal,[],[f25968])).
fof(f25968,plain,(
  ( ! [X412,X414,X410,X413,X415,X411] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X410),s(X411,X412))) | s(bool,'T_0') = s(bool,X413) | s(bool,'T_0') = s(bool,X413) | s(bool,X414) = s(bool,'const.combin.K_2'(s(bool,X415),s(bool,X414))) | s(bool,X410) = s(bool,X414) | s(bool,'F_0') = s(bool,X415)) )),
  inference(superposition,[],[f3461,f349])).
fof(f26400,plain,(
  ( ! [X383,X380,X382,X381] : (s(bool,X380) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X380))) | s(bool,'T_0') = s(bool,X381) | s(bool,X382) = s(bool,'const.combin.K_2'(s(bool,X383),s(bool,X382))) | s(bool,X380) = s(bool,X382) | s(bool,'F_0') = s(bool,X383)) ) | $spl24),
  inference(duplicate_literal_removal,[],[f25964])).
fof(f25964,plain,(
  ( ! [X383,X380,X382,X381] : (s(bool,X380) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X380))) | s(bool,'T_0') = s(bool,X381) | s(bool,'T_0') = s(bool,X381) | s(bool,X382) = s(bool,'const.combin.K_2'(s(bool,X383),s(bool,X382))) | s(bool,X380) = s(bool,X382) | s(bool,'F_0') = s(bool,X383)) ) | $spl24),
  inference(superposition,[],[f2359,f349])).
fof(f27281,plain,(
  ( ! [X379,X374,X378,X375] : (s(bool,X374) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X374))) | s(bool,'T_0') = s(bool,X375) | s(bool,X378) = s(bool,'const.combin.K_2'(s(bool,X379),s(bool,X378))) | s(bool,X374) = s(bool,X378) | s(bool,'F_0') = s(bool,X379)) ) | $spl24),
  inference(subsumption_resolution,[],[f25963,f2006])).
fof(f25963,plain,(
  ( ! [X377,X379,X374,X376,X378,X375] : (s(bool,X374) != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(bool,X374))) | s(bool,'T_0') = s(bool,X375) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X375),s(X376,X377))) | s(bool,X378) = s(bool,'const.combin.K_2'(s(bool,X379),s(bool,X378))) | s(bool,X374) = s(bool,X378) | s(bool,'F_0') = s(bool,X379)) ) | $spl24),
  inference(superposition,[],[f2358,f349])).
fof(f27210,plain,(
  ( ! [X492,X494,X493,X491] : (s(bool,'T_0') != s(bool,happ(s(fun(X492,bool),'const.combin.K_1'(s(bool,X491))),s(X492,X493))) | s(bool,'F_0') = s(bool,X494) | s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,X494),s(bool,X491)))) ) | $spl54),
  inference(cnf_transformation,[],[f27210_D])).
fof(f27210_D,plain,(
  ( ! [X492,X494,X493,X491] : (s(bool,'T_0') != s(bool,happ(s(fun(X492,bool),'const.combin.K_1'(s(bool,X491))),s(X492,X493))) | s(bool,'F_0') = s(bool,X494) | s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,X494),s(bool,X491)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f27212,plain,(
  ( ! [X516,X518,X521,X517,X515] : (s(bool,'T_0') != s(bool,happ(s(fun(X517,bool),'const.combin.K_1'(s(bool,X516))),s(X517,X518))) | s(bool,X516) = s(bool,'const.combin.K_2'(s(bool,X521),s(bool,X516))) | s(bool,'T_0') = s(bool,X515) | s(bool,'F_0') = s(bool,X521)) ) | ($spl15 | $spl24)),
  inference(subsumption_resolution,[],[f25745,f2006])).
fof(f25745,plain,(
  ( ! [X520,X516,X518,X521,X517,X519,X515] : (s(bool,'T_0') != s(bool,happ(s(fun(X517,bool),'const.combin.K_1'(s(bool,X516))),s(X517,X518))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X515),s(X519,X520))) | s(bool,X516) = s(bool,'const.combin.K_2'(s(bool,X521),s(bool,X516))) | s(bool,'T_0') = s(bool,X515) | s(bool,'F_0') = s(bool,X521)) ) | ($spl15 | $spl24)),
  inference(superposition,[],[f10223,f349])).
fof(f10223,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,happ(s(fun(X23,bool),'const.combin.K_1'(s(bool,X22))),s(X23,X24))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X22),s(X25,X26)))) ) | ($spl15 | $spl24)),
  inference(subsumption_resolution,[],[f10040,f194])).
fof(f10040,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,happ(s(fun(X23,bool),'const.combin.K_1'(s(bool,X22))),s(X23,X24))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X22),s(X25,X26)))) ) | $spl24),
  inference(superposition,[],[f9907,f279])).
fof(f27211,plain,(
  ( ! [X507,X502,X504,X501,X503] : (s(bool,X502) = s(bool,happ(s(fun(X503,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X503,X504))) | s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,X507),s(bool,X502))) | s(bool,'T_0') = s(bool,X501) | s(bool,'F_0') = s(bool,X507)) )),
  inference(subsumption_resolution,[],[f25743,f2006])).
fof(f25743,plain,(
  ( ! [X505,X507,X502,X504,X506,X501,X503] : (s(bool,X502) = s(bool,happ(s(fun(X503,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X503,X504))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X501),s(X505,X506))) | s(bool,X502) = s(bool,'const.combin.K_2'(s(bool,X507),s(bool,X502))) | s(bool,'T_0') = s(bool,X501) | s(bool,'F_0') = s(bool,X507)) )),
  inference(superposition,[],[f9837,f349])).
fof(f26465,plain,(
  ( ! [X492,X494,X490,X493,X491] : (s(bool,'T_0') != s(bool,happ(s(fun(X492,bool),'const.combin.K_1'(s(bool,X491))),s(X492,X493))) | s(bool,'T_0') = s(bool,X490) | s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,X494),s(bool,X491))) | s(bool,'F_0') = s(bool,X494)) )),
  inference(duplicate_literal_removal,[],[f25741])).
fof(f25741,plain,(
  ( ! [X492,X494,X490,X493,X491] : (s(bool,'T_0') != s(bool,happ(s(fun(X492,bool),'const.combin.K_1'(s(bool,X491))),s(X492,X493))) | s(bool,'T_0') = s(bool,X490) | s(bool,X491) = s(bool,'const.combin.K_2'(s(bool,X494),s(bool,X491))) | s(bool,'T_0') = s(bool,X490) | s(bool,'F_0') = s(bool,X494)) )),
  inference(superposition,[],[f9230,f349])).
fof(f26466,plain,(
  ( ! [X486,X488,X485,X487,X489] : (s(bool,X486) = s(bool,happ(s(fun(X487,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X487,X488))) | s(bool,'T_0') = s(bool,X485) | s(bool,X486) = s(bool,'const.combin.K_2'(s(bool,X489),s(bool,X486))) | s(bool,'F_0') = s(bool,X489)) )),
  inference(duplicate_literal_removal,[],[f25740])).
fof(f25740,plain,(
  ( ! [X486,X488,X485,X487,X489] : (s(bool,X486) = s(bool,happ(s(fun(X487,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X487,X488))) | s(bool,'T_0') = s(bool,X485) | s(bool,X486) = s(bool,'const.combin.K_2'(s(bool,X489),s(bool,X486))) | s(bool,'T_0') = s(bool,X485) | s(bool,'F_0') = s(bool,X489)) )),
  inference(superposition,[],[f9157,f349])).
fof(f27208,plain,(
  ( ! [X476,X474,X475,X477] : (s(bool,X474) != s(bool,happ(s(fun(X475,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X475,X476))) | s(bool,'F_0') = s(bool,X477) | s(bool,X474) = s(bool,'const.combin.K_2'(s(bool,X477),s(bool,X474)))) ) | $spl52),
  inference(cnf_transformation,[],[f27208_D])).
fof(f27208_D,plain,(
  ( ! [X476,X474,X475,X477] : (s(bool,X474) != s(bool,happ(s(fun(X475,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X475,X476))) | s(bool,'F_0') = s(bool,X477) | s(bool,X474) = s(bool,'const.combin.K_2'(s(bool,X477),s(bool,X474)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f27209,plain,(
  ( ! [X478,X484,X480,X479,X481] : (s(bool,X479) != s(bool,happ(s(fun(X480,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X480,X481))) | s(bool,X479) = s(bool,'const.combin.K_2'(s(bool,X484),s(bool,X479))) | s(bool,'T_0') = s(bool,X478) | s(bool,'F_0') = s(bool,X484)) )),
  inference(subsumption_resolution,[],[f25739,f2006])).
fof(f25739,plain,(
  ( ! [X478,X484,X480,X482,X479,X481,X483] : (s(bool,X479) != s(bool,happ(s(fun(X480,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X480,X481))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X478),s(X482,X483))) | s(bool,X479) = s(bool,'const.combin.K_2'(s(bool,X484),s(bool,X479))) | s(bool,'T_0') = s(bool,X478) | s(bool,'F_0') = s(bool,X484)) )),
  inference(superposition,[],[f8246,f349])).
fof(f26467,plain,(
  ( ! [X476,X474,X475,X477,X473] : (s(bool,X474) != s(bool,happ(s(fun(X475,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X475,X476))) | s(bool,'T_0') = s(bool,X473) | s(bool,X474) = s(bool,'const.combin.K_2'(s(bool,X477),s(bool,X474))) | s(bool,'F_0') = s(bool,X477)) )),
  inference(duplicate_literal_removal,[],[f25738])).
fof(f25738,plain,(
  ( ! [X476,X474,X475,X477,X473] : (s(bool,X474) != s(bool,happ(s(fun(X475,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X475,X476))) | s(bool,'T_0') = s(bool,X473) | s(bool,X474) = s(bool,'const.combin.K_2'(s(bool,X477),s(bool,X474))) | s(bool,'T_0') = s(bool,X473) | s(bool,'F_0') = s(bool,X477)) )),
  inference(superposition,[],[f7512,f349])).
fof(f27207,plain,(
  ( ! [X457,X460,X456] : (s(bool,'T_0') != s(bool,X457) | s(bool,X457) = s(bool,'const.combin.K_2'(s(bool,X460),s(bool,X457))) | s(bool,'T_0') = s(bool,X456) | s(bool,'F_0') = s(bool,X460)) ) | $spl15),
  inference(subsumption_resolution,[],[f25735,f9230])).
fof(f25735,plain,(
  ( ! [X457,X459,X460,X456,X458] : (s(bool,'T_0') != s(bool,X457) | s(bool,'T_0') = s(bool,happ(s(fun(X458,bool),'const.combin.K_1'(s(bool,X456))),s(X458,X459))) | s(bool,X457) = s(bool,'const.combin.K_2'(s(bool,X460),s(bool,X457))) | s(bool,'T_0') = s(bool,X456) | s(bool,'F_0') = s(bool,X460)) ) | $spl15),
  inference(superposition,[],[f5634,f349])).
fof(f5634,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4)))) ) | $spl15),
  inference(subsumption_resolution,[],[f5556,f194])).
fof(f5556,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4))) | s(bool,'T_0') = s(bool,'F_0')) )),
  inference(superposition,[],[f1384,f182])).
fof(f26873,plain,(
  ( ! [X253,X251,X252,X247] : (s(bool,X247) = s(bool,'const.combin.K_2'(s(bool,X251),s(bool,X247))) | s(bool,'F_0') = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X247))),s(X252,X253))) | s(bool,'F_0') = s(bool,X251)) ) | $spl40),
  inference(cnf_transformation,[],[f26873_D])).
fof(f26873_D,plain,(
  ( ! [X253,X251,X252,X247] : (s(bool,X247) = s(bool,'const.combin.K_2'(s(bool,X251),s(bool,X247))) | s(bool,'F_0') = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X247))),s(X252,X253))) | s(bool,'F_0') = s(bool,X251)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f26469,plain,(
  ( ! [X453,X455,X451,X452,X454] : (s(bool,'F_0') = s(bool,happ(s(fun(X453,bool),'const.combin.K_1'(s(bool,X452))),s(X453,X454))) | s(bool,'T_0') = s(bool,X451) | s(bool,X452) = s(bool,'const.combin.K_2'(s(bool,X455),s(bool,X452))) | s(bool,'F_0') = s(bool,X455)) )),
  inference(duplicate_literal_removal,[],[f25734])).
fof(f25734,plain,(
  ( ! [X453,X455,X451,X452,X454] : (s(bool,'F_0') = s(bool,happ(s(fun(X453,bool),'const.combin.K_1'(s(bool,X452))),s(X453,X454))) | s(bool,'T_0') = s(bool,X451) | s(bool,X452) = s(bool,'const.combin.K_2'(s(bool,X455),s(bool,X452))) | s(bool,'T_0') = s(bool,X451) | s(bool,'F_0') = s(bool,X455)) )),
  inference(superposition,[],[f4629,f349])).
fof(f27202,plain,(
  ( ! [X313,X312,X314,X311] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X311),s(X312,X313))) | s(bool,'F_0') = s(bool,X314) | s(bool,X311) = s(bool,'const.combin.K_2'(s(bool,X314),s(bool,X311)))) ) | $spl50),
  inference(cnf_transformation,[],[f27202_D])).
fof(f27202_D,plain,(
  ( ! [X313,X312,X314,X311] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X311),s(X312,X313))) | s(bool,'F_0') = s(bool,X314) | s(bool,X311) = s(bool,'const.combin.K_2'(s(bool,X314),s(bool,X311)))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f27206,plain,(
  ( ! [X366,X360,X362,X361,X363] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X361),s(X362,X363))) | s(bool,X361) = s(bool,'const.combin.K_2'(s(bool,X366),s(bool,X361))) | s(bool,'T_0') = s(bool,X360) | s(bool,'F_0') = s(bool,X366)) )),
  inference(subsumption_resolution,[],[f25720,f9230])).
fof(f25720,plain,(
  ( ! [X364,X366,X360,X362,X365,X361,X363] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X361),s(X362,X363))) | s(bool,'T_0') = s(bool,happ(s(fun(X364,bool),'const.combin.K_1'(s(bool,X360))),s(X364,X365))) | s(bool,X361) = s(bool,'const.combin.K_2'(s(bool,X366),s(bool,X361))) | s(bool,'T_0') = s(bool,X360) | s(bool,'F_0') = s(bool,X366)) )),
  inference(superposition,[],[f2451,f349])).
fof(f27205,plain,(
  ( ! [X356,X354,X359,X353,X355] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X354),s(X355,X356))) | s(bool,X354) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,X354))) | s(bool,'T_0') = s(bool,X353) | s(bool,'F_0') = s(bool,X359)) ) | ($spl15 | $spl24)),
  inference(subsumption_resolution,[],[f25719,f2006])).
fof(f25719,plain,(
  ( ! [X356,X358,X354,X357,X359,X353,X355] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X354),s(X355,X356))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X353),s(X357,X358))) | s(bool,X354) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,X354))) | s(bool,'T_0') = s(bool,X353) | s(bool,'F_0') = s(bool,X359)) ) | ($spl15 | $spl24)),
  inference(superposition,[],[f2424,f349])).
fof(f2424,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X22),s(X23,X24))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X22),s(X25,X26)))) ) | ($spl15 | $spl24)),
  inference(subsumption_resolution,[],[f2344,f194])).
fof(f2344,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X22),s(X23,X24))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X22),s(X25,X26)))) ) | $spl24),
  inference(superposition,[],[f2276,f279])).
fof(f27204,plain,(
  ( ! [X337,X339,X342,X336,X338] : (s(bool,X337) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X338,X339))) | s(bool,X337) = s(bool,'const.combin.K_2'(s(bool,X342),s(bool,X337))) | s(bool,'T_0') = s(bool,X336) | s(bool,'F_0') = s(bool,X342)) )),
  inference(subsumption_resolution,[],[f25716,f2006])).
fof(f25716,plain,(
  ( ! [X341,X337,X339,X340,X342,X336,X338] : (s(bool,X337) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X338,X339))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X336),s(X340,X341))) | s(bool,X337) = s(bool,'const.combin.K_2'(s(bool,X342),s(bool,X337))) | s(bool,'T_0') = s(bool,X336) | s(bool,'F_0') = s(bool,X342)) )),
  inference(superposition,[],[f2256,f349])).
fof(f27203,plain,(
  ( ! [X325,X323,X324,X322,X328] : (s(bool,X323) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X324,X325))) | s(bool,X323) = s(bool,'const.combin.K_2'(s(bool,X328),s(bool,X323))) | s(bool,'T_0') = s(bool,X322) | s(bool,'F_0') = s(bool,X328)) )),
  inference(subsumption_resolution,[],[f25714,f9230])).
fof(f25714,plain,(
  ( ! [X325,X327,X323,X324,X326,X322,X328] : (s(bool,X323) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X324,X325))) | s(bool,'T_0') = s(bool,happ(s(fun(X326,bool),'const.combin.K_1'(s(bool,X322))),s(X326,X327))) | s(bool,X323) = s(bool,'const.combin.K_2'(s(bool,X328),s(bool,X323))) | s(bool,'T_0') = s(bool,X322) | s(bool,'F_0') = s(bool,X328)) )),
  inference(superposition,[],[f2047,f349])).
fof(f26473,plain,(
  ( ! [X313,X310,X312,X314,X311] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X311),s(X312,X313))) | s(bool,'T_0') = s(bool,X310) | s(bool,X311) = s(bool,'const.combin.K_2'(s(bool,X314),s(bool,X311))) | s(bool,'F_0') = s(bool,X314)) )),
  inference(duplicate_literal_removal,[],[f25712])).
fof(f25712,plain,(
  ( ! [X313,X310,X312,X314,X311] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X311),s(X312,X313))) | s(bool,'T_0') = s(bool,X310) | s(bool,X311) = s(bool,'const.combin.K_2'(s(bool,X314),s(bool,X311))) | s(bool,'T_0') = s(bool,X310) | s(bool,'F_0') = s(bool,X314)) )),
  inference(superposition,[],[f2006,f349])).
fof(f26478,plain,(
  ( ! [X292,X290,X293,X289,X291] : (s(bool,X290) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X291,X292))) | s(bool,'T_0') = s(bool,X289) | s(bool,X290) = s(bool,'const.combin.K_2'(s(bool,X293),s(bool,X290))) | s(bool,'F_0') = s(bool,X293)) )),
  inference(duplicate_literal_removal,[],[f25709])).
fof(f25709,plain,(
  ( ! [X292,X290,X293,X289,X291] : (s(bool,X290) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X291,X292))) | s(bool,'T_0') = s(bool,X289) | s(bool,X290) = s(bool,'const.combin.K_2'(s(bool,X293),s(bool,X290))) | s(bool,'T_0') = s(bool,X289) | s(bool,'F_0') = s(bool,X293)) )),
  inference(superposition,[],[f1978,f349])).
fof(f27193,plain,(
  ( ! [X212,X210,X213,X211] : (s(bool,X210) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X211,X212))) | s(bool,'F_0') = s(bool,X213) | s(bool,X210) = s(bool,'const.combin.K_2'(s(bool,X213),s(bool,X210)))) ) | $spl46),
  inference(cnf_transformation,[],[f27193_D])).
fof(f27193_D,plain,(
  ( ! [X212,X210,X213,X211] : (s(bool,X210) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X211,X212))) | s(bool,'F_0') = s(bool,X213) | s(bool,X210) = s(bool,'const.combin.K_2'(s(bool,X213),s(bool,X210)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f27201,plain,(
  ( ! [X282,X288,X285,X283,X284] : (s(bool,X283) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X284,X285))) | s(bool,X283) = s(bool,'const.combin.K_2'(s(bool,X288),s(bool,X283))) | s(bool,'T_0') = s(bool,X282) | s(bool,'F_0') = s(bool,X288)) )),
  inference(subsumption_resolution,[],[f25708,f2006])).
fof(f25708,plain,(
  ( ! [X282,X288,X285,X287,X283,X284,X286] : (s(bool,X283) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X284,X285))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X282),s(X286,X287))) | s(bool,X283) = s(bool,'const.combin.K_2'(s(bool,X288),s(bool,X283))) | s(bool,'T_0') = s(bool,X282) | s(bool,'F_0') = s(bool,X288)) )),
  inference(superposition,[],[f1455,f349])).
fof(f27200,plain,(
  ( ! [X277,X275,X281,X276,X278] : (s(bool,X276) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X277,X278))) | s(bool,X276) = s(bool,'const.combin.K_2'(s(bool,X281),s(bool,X276))) | s(bool,'T_0') = s(bool,X275) | s(bool,'F_0') = s(bool,X281)) )),
  inference(subsumption_resolution,[],[f25707,f9230])).
fof(f25707,plain,(
  ( ! [X280,X277,X279,X275,X281,X276,X278] : (s(bool,X276) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X277,X278))) | s(bool,'T_0') = s(bool,happ(s(fun(X279,bool),'const.combin.K_1'(s(bool,X275))),s(X279,X280))) | s(bool,X276) = s(bool,'const.combin.K_2'(s(bool,X281),s(bool,X276))) | s(bool,'T_0') = s(bool,X275) | s(bool,'F_0') = s(bool,X281)) )),
  inference(superposition,[],[f1384,f349])).
fof(f27198,plain,(
  ( ! [X271,X270,X274] : (s(bool,'T_0') != s(bool,X271) | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X274),s(bool,X271))) | s(bool,'T_0') = s(bool,X270) | s(bool,'F_0') = s(bool,X274)) ) | $spl15),
  inference(subsumption_resolution,[],[f25706,f2006])).
fof(f25706,plain,(
  ( ! [X271,X273,X270,X272,X274] : (s(bool,'T_0') != s(bool,X271) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X270),s(X272,X273))) | s(bool,X271) = s(bool,'const.combin.K_2'(s(bool,X274),s(bool,X271))) | s(bool,'T_0') = s(bool,X270) | s(bool,'F_0') = s(bool,X274)) ) | $spl15),
  inference(superposition,[],[f1354,f349])).
fof(f1354,plain,(
  ( ! [X76,X77,X75] : (s(bool,'T_0') != s(bool,X75) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X75),s(X76,X77)))) ) | $spl15),
  inference(subsumption_resolution,[],[f1064,f194])).
fof(f1064,plain,(
  ( ! [X76,X77,X75] : (s(bool,'T_0') != s(bool,X75) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X75),s(X76,X77)))) ) | $spl15),
  inference(superposition,[],[f194,f279])).
fof(f26481,plain,(
  ( ! [X212,X210,X213,X211,X209] : (s(bool,X210) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X211,X212))) | s(bool,'T_0') = s(bool,X209) | s(bool,X210) = s(bool,'const.combin.K_2'(s(bool,X213),s(bool,X210))) | s(bool,'F_0') = s(bool,X213)) )),
  inference(duplicate_literal_removal,[],[f25698])).
fof(f25698,plain,(
  ( ! [X212,X210,X213,X211,X209] : (s(bool,X210) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X211,X212))) | s(bool,'T_0') = s(bool,X209) | s(bool,X210) = s(bool,'const.combin.K_2'(s(bool,X213),s(bool,X210))) | s(bool,'T_0') = s(bool,X209) | s(bool,'F_0') = s(bool,X213)) )),
  inference(superposition,[],[f1175,f349])).
fof(f26867,plain,(
  ( ! [X198,X202,X203,X201] : (s(bool,X198) = s(bool,'const.combin.K_2'(s(bool,X201),s(bool,X198))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X198),s(X202,X203))) | s(bool,'F_0') = s(bool,X201)) ) | $spl36),
  inference(cnf_transformation,[],[f26867_D])).
fof(f26867_D,plain,(
  ( ! [X198,X202,X203,X201] : (s(bool,X198) = s(bool,'const.combin.K_2'(s(bool,X201),s(bool,X198))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X198),s(X202,X203))) | s(bool,'F_0') = s(bool,X201)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f26487,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X151),s(X152,X153))) | s(bool,'T_0') = s(bool,X150) | s(bool,X151) = s(bool,'const.combin.K_2'(s(bool,X154),s(bool,X151))) | s(bool,'F_0') = s(bool,X154)) )),
  inference(duplicate_literal_removal,[],[f25689])).
fof(f25689,plain,(
  ( ! [X154,X152,X151,X153,X150] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X151),s(X152,X153))) | s(bool,'T_0') = s(bool,X150) | s(bool,X151) = s(bool,'const.combin.K_2'(s(bool,X154),s(bool,X151))) | s(bool,'T_0') = s(bool,X150) | s(bool,'F_0') = s(bool,X154)) )),
  inference(superposition,[],[f670,f349])).
fof(f27192,plain,(
  ( ! [X146,X144,X149,X145,X143] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X144),s(X145,X146))) | s(bool,X144) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X144))) | s(bool,'T_0') = s(bool,X143) | s(bool,'F_0') = s(bool,X149)) )),
  inference(subsumption_resolution,[],[f25688,f9230])).
fof(f25688,plain,(
  ( ! [X146,X144,X149,X147,X145,X143,X148] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X144),s(X145,X146))) | s(bool,'T_0') = s(bool,happ(s(fun(X147,bool),'const.combin.K_1'(s(bool,X143))),s(X147,X148))) | s(bool,X144) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X144))) | s(bool,'T_0') = s(bool,X143) | s(bool,'F_0') = s(bool,X149)) )),
  inference(superposition,[],[f556,f349])).
fof(f27189,plain,(
  ( ! [X47,X52,X48,X46,X49] : (s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),'const.combin.K_1'(s(bool,X47))),s(X48,X49))) | s(bool,X47) = s(bool,'const.combin.K_2'(s(bool,X52),s(bool,X47))) | s(bool,'T_0') = s(bool,X46) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f25672,f2006])).
fof(f25672,plain,(
  ( ! [X47,X52,X50,X48,X46,X51,X49] : (s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),'const.combin.K_1'(s(bool,X47))),s(X48,X49))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X46),s(X50,X51))) | s(bool,X47) = s(bool,'const.combin.K_2'(s(bool,X52),s(bool,X47))) | s(bool,'T_0') = s(bool,X46) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f233,f349])).
fof(f27188,plain,(
  ( ! [X39,X45,X41,X42,X40] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X40),s(X41,X42))) | s(bool,X40) = s(bool,'const.combin.K_2'(s(bool,X45),s(bool,X40))) | s(bool,'T_0') = s(bool,X39) | s(bool,'F_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f25671,f2006])).
fof(f25671,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X40),s(X41,X42))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X39),s(X43,X44))) | s(bool,X40) = s(bool,'const.combin.K_2'(s(bool,X45),s(bool,X40))) | s(bool,'T_0') = s(bool,X39) | s(bool,'F_0') = s(bool,X45)) )),
  inference(superposition,[],[f232,f349])).
fof(f27186,plain,(
  ( ! [X26,X24,X25] : (s(bool,X25) = s(bool,X26) | ~p(s(bool,X25)) | s(bool,'T_0') = s(bool,X24) | s(bool,'F_0') = s(bool,X26)) )),
  inference(forward_demodulation,[],[f26500,f139])).
fof(f26500,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | s(bool,'T_0') = s(bool,X24) | s(bool,X25) = s(bool,'const.combin.K_2'(s(bool,X26),s(bool,X25))) | s(bool,'F_0') = s(bool,X26)) )),
  inference(duplicate_literal_removal,[],[f25668])).
fof(f25668,plain,(
  ( ! [X26,X24,X25] : (~p(s(bool,X25)) | s(bool,'T_0') = s(bool,X24) | s(bool,X25) = s(bool,'const.combin.K_2'(s(bool,X26),s(bool,X25))) | s(bool,'T_0') = s(bool,X24) | s(bool,'F_0') = s(bool,X26)) )),
  inference(superposition,[],[f183,f349])).
fof(f26718,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1)))) ) | $spl32),
  inference(cnf_transformation,[],[f26718_D])).
fof(f26718_D,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f26505,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(duplicate_literal_removal,[],[f25662])).
fof(f25662,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f112,f349])).
fof(f27172,plain,(
  ( ! [X1085,X1079,X1082,X1084,X1083] : (s(bool,X1079) = s(bool,'const.combin.K_2'(s(bool,X1085),s(bool,X1079))) | s(bool,'T_0') = s(bool,X1082) | s(bool,X1079) = s(bool,happ(s(fun(X1083,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1083,X1084))) | s(bool,'F_0') = s(bool,X1085)) )),
  inference(forward_demodulation,[],[f26506,f139])).
fof(f26506,plain,(
  ( ! [X1081,X1085,X1079,X1082,X1080,X1084,X1083] : (s(bool,'T_0') = s(bool,X1082) | s(bool,X1079) = s(bool,happ(s(fun(X1083,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1083,X1084))) | s(bool,'const.combin.K_2'(s(bool,X1079),s(X1080,X1081))) = s(bool,'const.combin.K_2'(s(bool,X1085),s(bool,'const.combin.K_2'(s(bool,X1079),s(X1080,X1081))))) | s(bool,'F_0') = s(bool,X1085)) )),
  inference(duplicate_literal_removal,[],[f25583])).
fof(f25583,plain,(
  ( ! [X1081,X1085,X1079,X1082,X1080,X1084,X1083] : (s(bool,'T_0') = s(bool,X1082) | s(bool,X1079) = s(bool,happ(s(fun(X1083,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1083,X1084))) | s(bool,'const.combin.K_2'(s(bool,X1079),s(X1080,X1081))) = s(bool,'const.combin.K_2'(s(bool,X1085),s(bool,'const.combin.K_2'(s(bool,X1079),s(X1080,X1081))))) | s(bool,'T_0') = s(bool,X1082) | s(bool,'F_0') = s(bool,X1085)) )),
  inference(superposition,[],[f9837,f349])).
fof(f27159,plain,(
  ( ! [X1033,X1031,X1034,X1032,X1028] : (s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,X1034),s(bool,X1028))) | s(bool,'T_0') = s(bool,X1031) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1032,X1033))) | s(bool,'F_0') = s(bool,X1034)) )),
  inference(forward_demodulation,[],[f26507,f139])).
fof(f26507,plain,(
  ( ! [X1033,X1031,X1029,X1034,X1032,X1030,X1028] : (s(bool,'T_0') = s(bool,X1031) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1032,X1033))) | s(bool,'const.combin.K_2'(s(bool,X1028),s(X1029,X1030))) = s(bool,'const.combin.K_2'(s(bool,X1034),s(bool,'const.combin.K_2'(s(bool,X1028),s(X1029,X1030))))) | s(bool,'F_0') = s(bool,X1034)) )),
  inference(duplicate_literal_removal,[],[f25576])).
fof(f25576,plain,(
  ( ! [X1033,X1031,X1029,X1034,X1032,X1030,X1028] : (s(bool,'T_0') = s(bool,X1031) | s(bool,X1028) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1032,X1033))) | s(bool,'const.combin.K_2'(s(bool,X1028),s(X1029,X1030))) = s(bool,'const.combin.K_2'(s(bool,X1034),s(bool,'const.combin.K_2'(s(bool,X1028),s(X1029,X1030))))) | s(bool,'T_0') = s(bool,X1031) | s(bool,'F_0') = s(bool,X1034)) )),
  inference(superposition,[],[f2256,f349])).
fof(f27149,plain,(
  ( ! [X922,X920,X916,X921,X919] : (s(bool,X916) = s(bool,'const.combin.K_2'(s(bool,X922),s(bool,X916))) | s(bool,'T_0') = s(bool,X919) | s(bool,'F_0') = s(bool,happ(s(fun(X920,bool),'const.combin.K_1'(s(bool,X916))),s(X920,X921))) | s(bool,'F_0') = s(bool,X922)) )),
  inference(forward_demodulation,[],[f26520,f139])).
fof(f26520,plain,(
  ( ! [X922,X920,X918,X916,X921,X919,X917] : (s(bool,'T_0') = s(bool,X919) | s(bool,'F_0') = s(bool,happ(s(fun(X920,bool),'const.combin.K_1'(s(bool,X916))),s(X920,X921))) | s(bool,'const.combin.K_2'(s(bool,X916),s(X917,X918))) = s(bool,'const.combin.K_2'(s(bool,X922),s(bool,'const.combin.K_2'(s(bool,X916),s(X917,X918))))) | s(bool,'F_0') = s(bool,X922)) )),
  inference(duplicate_literal_removal,[],[f25560])).
fof(f25560,plain,(
  ( ! [X922,X920,X918,X916,X921,X919,X917] : (s(bool,'T_0') = s(bool,X919) | s(bool,'F_0') = s(bool,happ(s(fun(X920,bool),'const.combin.K_1'(s(bool,X916))),s(X920,X921))) | s(bool,'const.combin.K_2'(s(bool,X916),s(X917,X918))) = s(bool,'const.combin.K_2'(s(bool,X922),s(bool,'const.combin.K_2'(s(bool,X916),s(X917,X918))))) | s(bool,'T_0') = s(bool,X919) | s(bool,'F_0') = s(bool,X922)) )),
  inference(superposition,[],[f233,f349])).
fof(f27148,plain,(
  ( ! [X907,X905,X906,X908,X902] : (s(bool,X902) = s(bool,'const.combin.K_2'(s(bool,X908),s(bool,X902))) | s(bool,'T_0') = s(bool,X905) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X902),s(X906,X907))) | s(bool,'F_0') = s(bool,X908)) )),
  inference(forward_demodulation,[],[f26521,f139])).
fof(f26521,plain,(
  ( ! [X907,X905,X903,X906,X904,X908,X902] : (s(bool,'T_0') = s(bool,X905) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X902),s(X906,X907))) | s(bool,'const.combin.K_2'(s(bool,X902),s(X903,X904))) = s(bool,'const.combin.K_2'(s(bool,X908),s(bool,'const.combin.K_2'(s(bool,X902),s(X903,X904))))) | s(bool,'F_0') = s(bool,X908)) )),
  inference(duplicate_literal_removal,[],[f25558])).
fof(f25558,plain,(
  ( ! [X907,X905,X903,X906,X904,X908,X902] : (s(bool,'T_0') = s(bool,X905) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X902),s(X906,X907))) | s(bool,'const.combin.K_2'(s(bool,X902),s(X903,X904))) = s(bool,'const.combin.K_2'(s(bool,X908),s(bool,'const.combin.K_2'(s(bool,X902),s(X903,X904))))) | s(bool,'T_0') = s(bool,X905) | s(bool,'F_0') = s(bool,X908)) )),
  inference(superposition,[],[f232,f349])).
fof(f27147,plain,(
  ( ! [X897,X901,X900] : (s(bool,X897) = s(bool,'const.combin.K_2'(s(bool,X901),s(bool,X897))) | s(bool,'T_0') = s(bool,X900) | s(bool,'F_0') = s(bool,X897) | s(bool,'F_0') = s(bool,X901)) )),
  inference(forward_demodulation,[],[f26522,f139])).
fof(f26522,plain,(
  ( ! [X899,X897,X901,X898,X900] : (s(bool,'T_0') = s(bool,X900) | s(bool,'F_0') = s(bool,X897) | s(bool,'const.combin.K_2'(s(bool,X897),s(X898,X899))) = s(bool,'const.combin.K_2'(s(bool,X901),s(bool,'const.combin.K_2'(s(bool,X897),s(X898,X899))))) | s(bool,'F_0') = s(bool,X901)) )),
  inference(duplicate_literal_removal,[],[f25557])).
fof(f25557,plain,(
  ( ! [X899,X897,X901,X898,X900] : (s(bool,'T_0') = s(bool,X900) | s(bool,'F_0') = s(bool,X897) | s(bool,'const.combin.K_2'(s(bool,X897),s(X898,X899))) = s(bool,'const.combin.K_2'(s(bool,X901),s(bool,'const.combin.K_2'(s(bool,X897),s(X898,X899))))) | s(bool,'T_0') = s(bool,X900) | s(bool,'F_0') = s(bool,X901)) )),
  inference(superposition,[],[f182,f349])).
fof(f27132,plain,(
  ( ! [X831,X833,X830,X828,X832] : (s(bool,X828) = s(bool,'const.combin.K_2'(s(bool,X833),s(bool,X828))) | s(bool,'T_0') = s(bool,X830) | s(bool,X828) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X831,X832))) | s(bool,'F_0') = s(bool,X833)) )),
  inference(forward_demodulation,[],[f26523,f159])).
fof(f26523,plain,(
  ( ! [X831,X829,X833,X830,X828,X832,X827] : (s(bool,'T_0') = s(bool,X830) | s(bool,X828) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X831,X832))) | s(bool,happ(s(fun(X827,bool),'const.combin.K_1'(s(bool,X828))),s(X827,X829))) = s(bool,'const.combin.K_2'(s(bool,X833),s(bool,happ(s(fun(X827,bool),'const.combin.K_1'(s(bool,X828))),s(X827,X829))))) | s(bool,'F_0') = s(bool,X833)) )),
  inference(duplicate_literal_removal,[],[f25545])).
fof(f25545,plain,(
  ( ! [X831,X829,X833,X830,X828,X832,X827] : (s(bool,'T_0') = s(bool,X830) | s(bool,X828) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X831,X832))) | s(bool,happ(s(fun(X827,bool),'const.combin.K_1'(s(bool,X828))),s(X827,X829))) = s(bool,'const.combin.K_2'(s(bool,X833),s(bool,happ(s(fun(X827,bool),'const.combin.K_1'(s(bool,X828))),s(X827,X829))))) | s(bool,'T_0') = s(bool,X830) | s(bool,'F_0') = s(bool,X833)) )),
  inference(superposition,[],[f2047,f349])).
fof(f27131,plain,(
  ( ! [X825,X823,X821,X826,X824] : (s(bool,X821) = s(bool,'const.combin.K_2'(s(bool,X826),s(bool,X821))) | s(bool,'T_0') = s(bool,X823) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X821),s(X824,X825))) | s(bool,'F_0') = s(bool,X826)) )),
  inference(forward_demodulation,[],[f26524,f159])).
fof(f26524,plain,(
  ( ! [X825,X823,X821,X826,X824,X822,X820] : (s(bool,'T_0') = s(bool,X823) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X821),s(X824,X825))) | s(bool,happ(s(fun(X820,bool),'const.combin.K_1'(s(bool,X821))),s(X820,X822))) = s(bool,'const.combin.K_2'(s(bool,X826),s(bool,happ(s(fun(X820,bool),'const.combin.K_1'(s(bool,X821))),s(X820,X822))))) | s(bool,'F_0') = s(bool,X826)) )),
  inference(duplicate_literal_removal,[],[f25544])).
fof(f25544,plain,(
  ( ! [X825,X823,X821,X826,X824,X822,X820] : (s(bool,'T_0') = s(bool,X823) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X821),s(X824,X825))) | s(bool,happ(s(fun(X820,bool),'const.combin.K_1'(s(bool,X821))),s(X820,X822))) = s(bool,'const.combin.K_2'(s(bool,X826),s(bool,happ(s(fun(X820,bool),'const.combin.K_1'(s(bool,X821))),s(X820,X822))))) | s(bool,'T_0') = s(bool,X823) | s(bool,'F_0') = s(bool,X826)) )),
  inference(superposition,[],[f556,f349])).
fof(f27129,plain,(
  ( ! [X800,X799,X797] : (s(bool,X797) = s(bool,'const.combin.K_2'(s(bool,X800),s(bool,X797))) | s(bool,'T_0') = s(bool,X799) | s(bool,'F_0') = s(bool,X797) | s(bool,'F_0') = s(bool,X800)) )),
  inference(forward_demodulation,[],[f26527,f159])).
fof(f26527,plain,(
  ( ! [X798,X796,X800,X799,X797] : (s(bool,'T_0') = s(bool,X799) | s(bool,'F_0') = s(bool,X797) | s(bool,happ(s(fun(X796,bool),'const.combin.K_1'(s(bool,X797))),s(X796,X798))) = s(bool,'const.combin.K_2'(s(bool,X800),s(bool,happ(s(fun(X796,bool),'const.combin.K_1'(s(bool,X797))),s(X796,X798))))) | s(bool,'F_0') = s(bool,X800)) )),
  inference(duplicate_literal_removal,[],[f25540])).
fof(f25540,plain,(
  ( ! [X798,X796,X800,X799,X797] : (s(bool,'T_0') = s(bool,X799) | s(bool,'F_0') = s(bool,X797) | s(bool,happ(s(fun(X796,bool),'const.combin.K_1'(s(bool,X797))),s(X796,X798))) = s(bool,'const.combin.K_2'(s(bool,X800),s(bool,happ(s(fun(X796,bool),'const.combin.K_1'(s(bool,X797))),s(X796,X798))))) | s(bool,'T_0') = s(bool,X799) | s(bool,'F_0') = s(bool,X800)) )),
  inference(superposition,[],[f215,f349])).
fof(f27094,plain,(
  ( ! [X509,X512,X514,X508,X513] : (s(bool,X508) = s(bool,happ(s(fun(X512,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X512,X513))) | s(bool,X508) = s(bool,'const.combin.K_2'(s(bool,X514),s(bool,X508))) | s(bool,'T_0') = s(bool,X509) | s(bool,'F_0') = s(bool,X514)) )),
  inference(subsumption_resolution,[],[f25497,f2006])).
fof(f25497,plain,(
  ( ! [X509,X511,X512,X514,X508,X510,X513] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X509),s(X510,X511))) | s(bool,X508) = s(bool,happ(s(fun(X512,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X512,X513))) | s(bool,X508) = s(bool,'const.combin.K_2'(s(bool,X514),s(bool,X508))) | s(bool,'T_0') = s(bool,X509) | s(bool,'F_0') = s(bool,X514)) )),
  inference(superposition,[],[f9837,f349])).
fof(f27082,plain,(
  ( ! [X333,X335,X329,X334,X330] : (s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X333,X334))) | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X335),s(bool,X329))) | s(bool,'T_0') = s(bool,X330) | s(bool,'F_0') = s(bool,X335)) )),
  inference(subsumption_resolution,[],[f25468,f2006])).
fof(f25468,plain,(
  ( ! [X333,X335,X329,X331,X332,X334,X330] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X330),s(X331,X332))) | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X333,X334))) | s(bool,X329) = s(bool,'const.combin.K_2'(s(bool,X335),s(bool,X329))) | s(bool,'T_0') = s(bool,X330) | s(bool,'F_0') = s(bool,X335)) )),
  inference(superposition,[],[f2256,f349])).
fof(f27081,plain,(
  ( ! [X315,X321,X316,X320,X319] : (s(bool,X315) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X319,X320))) | s(bool,X315) = s(bool,'const.combin.K_2'(s(bool,X321),s(bool,X315))) | s(bool,'T_0') = s(bool,X316) | s(bool,'F_0') = s(bool,X321)) )),
  inference(subsumption_resolution,[],[f25466,f9230])).
fof(f25466,plain,(
  ( ! [X315,X321,X316,X318,X320,X317,X319] : (s(bool,'T_0') = s(bool,happ(s(fun(X317,bool),'const.combin.K_1'(s(bool,X316))),s(X317,X318))) | s(bool,X315) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X319,X320))) | s(bool,X315) = s(bool,'const.combin.K_2'(s(bool,X321),s(bool,X315))) | s(bool,'T_0') = s(bool,X316) | s(bool,'F_0') = s(bool,X321)) )),
  inference(superposition,[],[f2047,f349])).
fof(f27068,plain,(
  ( ! [X142,X140,X136,X141,X137] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X136),s(X140,X141))) | s(bool,X136) = s(bool,'const.combin.K_2'(s(bool,X142),s(bool,X136))) | s(bool,'T_0') = s(bool,X137) | s(bool,'F_0') = s(bool,X142)) )),
  inference(subsumption_resolution,[],[f25440,f9230])).
fof(f25440,plain,(
  ( ! [X142,X140,X138,X136,X141,X139,X137] : (s(bool,'T_0') = s(bool,happ(s(fun(X138,bool),'const.combin.K_1'(s(bool,X137))),s(X138,X139))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X136),s(X140,X141))) | s(bool,X136) = s(bool,'const.combin.K_2'(s(bool,X142),s(bool,X136))) | s(bool,'T_0') = s(bool,X137) | s(bool,'F_0') = s(bool,X142)) )),
  inference(superposition,[],[f556,f349])).
fof(f27065,plain,(
  ( ! [X59,X57,X54,X58,X53] : (s(bool,'F_0') = s(bool,happ(s(fun(X57,bool),'const.combin.K_1'(s(bool,X53))),s(X57,X58))) | s(bool,X53) = s(bool,'const.combin.K_2'(s(bool,X59),s(bool,X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,'F_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f25426,f2006])).
fof(f25426,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X54),s(X55,X56))) | s(bool,'F_0') = s(bool,happ(s(fun(X57,bool),'const.combin.K_1'(s(bool,X53))),s(X57,X58))) | s(bool,X53) = s(bool,'const.combin.K_2'(s(bool,X59),s(bool,X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,'F_0') = s(bool,X59)) )),
  inference(superposition,[],[f233,f349])).
fof(f27064,plain,(
  ( ! [X37,X33,X38,X36,X32] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X32),s(X36,X37))) | s(bool,X32) = s(bool,'const.combin.K_2'(s(bool,X38),s(bool,X32))) | s(bool,'T_0') = s(bool,X33) | s(bool,'F_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f25423,f2006])).
fof(f25423,plain,(
  ( ! [X37,X35,X33,X38,X36,X34,X32] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X33),s(X34,X35))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X32),s(X36,X37))) | s(bool,X32) = s(bool,'const.combin.K_2'(s(bool,X38),s(bool,X32))) | s(bool,'T_0') = s(bool,X33) | s(bool,'F_0') = s(bool,X38)) )),
  inference(superposition,[],[f232,f349])).
fof(f27063,plain,(
  ( ! [X28,X31,X27] : (s(bool,'F_0') = s(bool,X27) | s(bool,X27) = s(bool,'const.combin.K_2'(s(bool,X31),s(bool,X27))) | s(bool,'T_0') = s(bool,X28) | s(bool,'F_0') = s(bool,X31)) )),
  inference(subsumption_resolution,[],[f25422,f9230])).
fof(f25422,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s(bool,'T_0') = s(bool,happ(s(fun(X29,bool),'const.combin.K_1'(s(bool,X28))),s(X29,X30))) | s(bool,'F_0') = s(bool,X27) | s(bool,X27) = s(bool,'const.combin.K_2'(s(bool,X31),s(bool,X27))) | s(bool,'T_0') = s(bool,X28) | s(bool,'F_0') = s(bool,X31)) )),
  inference(superposition,[],[f215,f349])).
fof(f27062,plain,(
  ( ! [X23,X19,X20] : (s(bool,'F_0') = s(bool,X19) | s(bool,X19) = s(bool,'const.combin.K_2'(s(bool,X23),s(bool,X19))) | s(bool,'T_0') = s(bool,X20) | s(bool,'F_0') = s(bool,X23)) )),
  inference(subsumption_resolution,[],[f25420,f2006])).
fof(f25420,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X20),s(X21,X22))) | s(bool,'F_0') = s(bool,X19) | s(bool,X19) = s(bool,'const.combin.K_2'(s(bool,X23),s(bool,X19))) | s(bool,'T_0') = s(bool,X20) | s(bool,'F_0') = s(bool,X23)) )),
  inference(superposition,[],[f182,f349])).
fof(f26569,plain,(
  ( ! [X292,X294,X290,X293,X291] : (s(bool,'T_0') = s(bool,X292) | s(bool,X293) = s(bool,'const.combin.K_2'(s(bool,X294),s(bool,X293))) | s(bool,X293) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X290,X291))) | s(bool,'F_0') = s(bool,X294)) )),
  inference(duplicate_literal_removal,[],[f25221])).
fof(f25221,plain,(
  ( ! [X292,X294,X290,X293,X291] : (s(bool,'T_0') = s(bool,X292) | s(bool,X293) = s(bool,'const.combin.K_2'(s(bool,X294),s(bool,X293))) | s(bool,X293) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X290,X291))) | s(bool,'F_0') = s(bool,X294) | s(bool,'T_0') = s(bool,X292)) )),
  inference(superposition,[],[f349,f1978])).
fof(f26929,plain,(
  ( ! [X285,X287,X283,X284,X286] : (s(bool,'T_0') = s(bool,X285) | s(bool,X286) = s(bool,'const.combin.K_2'(s(bool,X287),s(bool,X286))) | s(bool,X286) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X283,X284))) | s(bool,'F_0') = s(bool,X287)) )),
  inference(subsumption_resolution,[],[f25220,f2006])).
fof(f25220,plain,(
  ( ! [X288,X285,X287,X283,X289,X284,X286] : (s(bool,'T_0') = s(bool,X285) | s(bool,X286) = s(bool,'const.combin.K_2'(s(bool,X287),s(bool,X286))) | s(bool,X286) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X283,X284))) | s(bool,'F_0') = s(bool,X287) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X285),s(X288,X289)))) )),
  inference(superposition,[],[f349,f2256])).
fof(f26928,plain,(
  ( ! [X280,X277,X279,X276,X278] : (s(bool,'T_0') = s(bool,X278) | s(bool,X279) = s(bool,'const.combin.K_2'(s(bool,X280),s(bool,X279))) | s(bool,X279) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X276,X277))) | s(bool,'F_0') = s(bool,X280)) )),
  inference(subsumption_resolution,[],[f25219,f9230])).
fof(f25219,plain,(
  ( ! [X280,X282,X277,X279,X281,X276,X278] : (s(bool,'T_0') = s(bool,X278) | s(bool,X279) = s(bool,'const.combin.K_2'(s(bool,X280),s(bool,X279))) | s(bool,X279) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X276,X277))) | s(bool,'F_0') = s(bool,X280) | s(bool,'T_0') = s(bool,happ(s(fun(X281,bool),'const.combin.K_1'(s(bool,X278))),s(X281,X282)))) )),
  inference(superposition,[],[f349,f2047])).
fof(f26575,plain,(
  ( ! [X173,X171,X174,X172,X170] : (s(bool,'T_0') = s(bool,X172) | s(bool,X173) = s(bool,'const.combin.K_2'(s(bool,X174),s(bool,X173))) | s(bool,X173) = s(bool,happ(s(fun(X170,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X170,X171))) | s(bool,'F_0') = s(bool,X174)) )),
  inference(duplicate_literal_removal,[],[f25208])).
fof(f25208,plain,(
  ( ! [X173,X171,X174,X172,X170] : (s(bool,'T_0') = s(bool,X172) | s(bool,X173) = s(bool,'const.combin.K_2'(s(bool,X174),s(bool,X173))) | s(bool,X173) = s(bool,happ(s(fun(X170,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X170,X171))) | s(bool,'F_0') = s(bool,X174) | s(bool,'T_0') = s(bool,X172)) )),
  inference(superposition,[],[f349,f9157])).
fof(f26926,plain,(
  ( ! [X167,X165,X163,X166,X164] : (s(bool,'T_0') = s(bool,X165) | s(bool,X166) = s(bool,'const.combin.K_2'(s(bool,X167),s(bool,X166))) | s(bool,X166) = s(bool,happ(s(fun(X163,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X163,X164))) | s(bool,'F_0') = s(bool,X167)) )),
  inference(subsumption_resolution,[],[f25207,f2006])).
fof(f25207,plain,(
  ( ! [X167,X165,X163,X169,X166,X164,X168] : (s(bool,'T_0') = s(bool,X165) | s(bool,X166) = s(bool,'const.combin.K_2'(s(bool,X167),s(bool,X166))) | s(bool,X166) = s(bool,happ(s(fun(X163,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X163,X164))) | s(bool,'F_0') = s(bool,X167) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X165),s(X168,X169)))) )),
  inference(superposition,[],[f349,f9837])).
fof(f26578,plain,(
  ( ! [X132,X130,X131] : (s(bool,'T_0') = s(bool,X130) | s(bool,X131) = s(bool,'const.combin.K_2'(s(bool,X132),s(bool,X131))) | s(bool,'F_0') = s(bool,X131) | s(bool,'F_0') = s(bool,X132)) )),
  inference(duplicate_literal_removal,[],[f25203])).
fof(f25203,plain,(
  ( ! [X132,X130,X131] : (s(bool,'T_0') = s(bool,X130) | s(bool,X131) = s(bool,'const.combin.K_2'(s(bool,X132),s(bool,X131))) | s(bool,'F_0') = s(bool,X131) | s(bool,'F_0') = s(bool,X132) | s(bool,'T_0') = s(bool,X130)) )),
  inference(superposition,[],[f349,f112])).
fof(f26769,plain,(
  ( ! [X146,X149,X145,X148] : (s(bool,X145) = s(bool,'const.combin.K_2'(s(bool,X146),s(bool,X145))) | s(bool,'F_0') = s(bool,X149) | s(bool,X145) = s(bool,X148) | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X148))) | s(bool,'F_0') = s(bool,X146)) ) | $spl34),
  inference(cnf_transformation,[],[f26769_D])).
fof(f26769_D,plain,(
  ( ! [X146,X149,X145,X148] : (s(bool,X145) = s(bool,'const.combin.K_2'(s(bool,X146),s(bool,X145))) | s(bool,'F_0') = s(bool,X149) | s(bool,X145) = s(bool,X148) | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X148))) | s(bool,'F_0') = s(bool,X146)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f26580,plain,(
  ( ! [X59,X57,X60,X58,X56] : (s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.combin.K_2'(s(bool,X59),s(bool,X58))) | s(bool,X56) = s(bool,X58) | s(bool,'F_0') = s(bool,X59) | s(bool,X56) = s(bool,'const.combin.K_2'(s(bool,X60),s(bool,X56))) | s(bool,'F_0') = s(bool,X60)) )),
  inference(duplicate_literal_removal,[],[f25193])).
fof(f25193,plain,(
  ( ! [X59,X57,X60,X58,X56] : (s(bool,'T_0') = s(bool,X57) | s(bool,X58) = s(bool,'const.combin.K_2'(s(bool,X59),s(bool,X58))) | s(bool,X56) = s(bool,X58) | s(bool,'F_0') = s(bool,X59) | s(bool,X56) = s(bool,'const.combin.K_2'(s(bool,X60),s(bool,X56))) | s(bool,'T_0') = s(bool,X57) | s(bool,'F_0') = s(bool,X60)) )),
  inference(superposition,[],[f349,f349])).
fof(f26907,plain,(
  ( ! [X263,X267,X266] : (s(bool,'F_0') = s(bool,X266) | s(bool,X266) = s(bool,'const.combin.K_2'(s(bool,X267),s(bool,X266))) | s(bool,'F_0') = s(bool,X267) | s(bool,'T_0') = s(bool,X263)) )),
  inference(subsumption_resolution,[],[f25144,f2006])).
fof(f25144,plain,(
  ( ! [X263,X265,X267,X264,X266] : (s(bool,'F_0') = s(bool,X266) | s(bool,X266) = s(bool,'const.combin.K_2'(s(bool,X267),s(bool,X266))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X263),s(X264,X265))) | s(bool,'F_0') = s(bool,X267) | s(bool,'T_0') = s(bool,X263)) )),
  inference(superposition,[],[f349,f670])).
fof(f26906,plain,(
  ( ! [X257,X259,X260,X256,X258] : (s(bool,'F_0') = s(bool,X259) | s(bool,X259) = s(bool,'const.combin.K_2'(s(bool,X260),s(bool,X259))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X256),s(X257,X258))) | s(bool,'F_0') = s(bool,X260)) ) | ($spl15 | $spl24)),
  inference(subsumption_resolution,[],[f25143,f10223])).
fof(f25143,plain,(
  ( ! [X261,X257,X259,X260,X262,X256,X258] : (s(bool,'F_0') = s(bool,X259) | s(bool,X259) = s(bool,'const.combin.K_2'(s(bool,X260),s(bool,X259))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X256),s(X257,X258))) | s(bool,'F_0') = s(bool,X260) | s(bool,'T_0') = s(bool,happ(s(fun(X261,bool),'const.combin.K_1'(s(bool,X256))),s(X261,X262)))) )),
  inference(superposition,[],[f349,f556])).
fof(f26595,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') = s(bool,X3) | s(bool,X3) = s(bool,'const.combin.K_2'(s(bool,X4),s(bool,X3))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(condensation,[],[f25139])).
fof(f25139,plain,(
  ( ! [X231,X235,X233,X230,X236,X234,X232] : (s(bool,'F_0') = s(bool,X233) | s(bool,X233) = s(bool,'const.combin.K_2'(s(bool,X234),s(bool,X233))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X230),s(X231,X232))) | s(bool,'F_0') = s(bool,X234) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X230),s(X235,X236)))) )),
  inference(superposition,[],[f349,f232])).
fof(f26901,plain,(
  ( ! [X204,X202,X205] : (s(bool,'F_0') = s(bool,X204) | s(bool,X204) = s(bool,'const.combin.K_2'(s(bool,X205),s(bool,X204))) | s(bool,'F_0') = s(bool,X205) | s(bool,'T_0') = s(bool,X202)) )),
  inference(subsumption_resolution,[],[f25134,f9230])).
fof(f25134,plain,(
  ( ! [X204,X202,X205,X203,X201] : (s(bool,'F_0') = s(bool,X204) | s(bool,X204) = s(bool,'const.combin.K_2'(s(bool,X205),s(bool,X204))) | s(bool,'T_0') = s(bool,happ(s(fun(X201,bool),'const.combin.K_1'(s(bool,X202))),s(X201,X203))) | s(bool,'F_0') = s(bool,X205) | s(bool,'T_0') = s(bool,X202)) )),
  inference(superposition,[],[f349,f4629])).
fof(f26897,plain,(
  ( ! [X171,X169,X172,X170,X168] : (s(bool,'F_0') = s(bool,X171) | s(bool,X171) = s(bool,'const.combin.K_2'(s(bool,X172),s(bool,X171))) | s(bool,'T_0') = s(bool,happ(s(fun(X168,bool),'const.combin.K_1'(s(bool,X169))),s(X168,X170))) | s(bool,'F_0') = s(bool,X172)) )),
  inference(subsumption_resolution,[],[f25129,f2451])).
fof(f25129,plain,(
  ( ! [X173,X171,X169,X174,X172,X170,X168] : (s(bool,'F_0') = s(bool,X171) | s(bool,X171) = s(bool,'const.combin.K_2'(s(bool,X172),s(bool,X171))) | s(bool,'T_0') = s(bool,happ(s(fun(X168,bool),'const.combin.K_1'(s(bool,X169))),s(X168,X170))) | s(bool,'F_0') = s(bool,X172) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X169),s(X173,X174)))) )),
  inference(superposition,[],[f349,f233])).
fof(f26895,plain,(
  ( ! [X142,X140,X138,X141,X139] : (s(bool,X141) = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X139,X140))) | s(bool,X141) = s(bool,'const.combin.K_2'(s(bool,X142),s(bool,X141))) | s(bool,'T_0') = s(bool,X138) | s(bool,'F_0') = s(bool,X142)) )),
  inference(subsumption_resolution,[],[f25121,f2006])).
fof(f25121,plain,(
  ( ! [X144,X142,X140,X138,X143,X141,X139] : (s(bool,X141) = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X139,X140))) | s(bool,X141) = s(bool,'const.combin.K_2'(s(bool,X142),s(bool,X141))) | s(bool,'T_0') = s(bool,X138) | s(bool,'F_0') = s(bool,X142) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X138),s(X143,X144)))) )),
  inference(superposition,[],[f349,f9837])).
fof(f26596,plain,(
  ( ! [X134,X136,X135,X133,X137] : (s(bool,X136) = s(bool,happ(s(fun(X134,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X134,X135))) | s(bool,X136) = s(bool,'const.combin.K_2'(s(bool,X137),s(bool,X136))) | s(bool,'T_0') = s(bool,X133) | s(bool,'F_0') = s(bool,X137)) )),
  inference(duplicate_literal_removal,[],[f25120])).
fof(f25120,plain,(
  ( ! [X134,X136,X135,X133,X137] : (s(bool,X136) = s(bool,happ(s(fun(X134,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X134,X135))) | s(bool,X136) = s(bool,'const.combin.K_2'(s(bool,X137),s(bool,X136))) | s(bool,'T_0') = s(bool,X133) | s(bool,'F_0') = s(bool,X137) | s(bool,'T_0') = s(bool,X133)) )),
  inference(superposition,[],[f349,f9157])).
fof(f26894,plain,(
  ( ! [X127,X130,X128,X126,X129] : (s(bool,X129) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X127,X128))) | s(bool,X129) = s(bool,'const.combin.K_2'(s(bool,X130),s(bool,X129))) | s(bool,'T_0') = s(bool,X126) | s(bool,'F_0') = s(bool,X130)) )),
  inference(subsumption_resolution,[],[f25119,f2006])).
fof(f25119,plain,(
  ( ! [X127,X132,X130,X128,X126,X131,X129] : (s(bool,X129) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X127,X128))) | s(bool,X129) = s(bool,'const.combin.K_2'(s(bool,X130),s(bool,X129))) | s(bool,'T_0') = s(bool,X126) | s(bool,'F_0') = s(bool,X130) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X126),s(X131,X132)))) )),
  inference(superposition,[],[f349,f2256])).
fof(f26893,plain,(
  ( ! [X123,X121,X122,X120,X119] : (s(bool,X122) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X120,X121))) | s(bool,X122) = s(bool,'const.combin.K_2'(s(bool,X123),s(bool,X122))) | s(bool,'T_0') = s(bool,X119) | s(bool,'F_0') = s(bool,X123)) )),
  inference(subsumption_resolution,[],[f25118,f9230])).
fof(f25118,plain,(
  ( ! [X125,X123,X121,X124,X122,X120,X119] : (s(bool,X122) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X120,X121))) | s(bool,X122) = s(bool,'const.combin.K_2'(s(bool,X123),s(bool,X122))) | s(bool,'T_0') = s(bool,X119) | s(bool,'F_0') = s(bool,X123) | s(bool,'T_0') = s(bool,happ(s(fun(X124,bool),'const.combin.K_1'(s(bool,X119))),s(X124,X125)))) )),
  inference(superposition,[],[f349,f2047])).
fof(f26597,plain,(
  ( ! [X118,X116,X114,X117,X115] : (s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X115,X116))) | s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,X118),s(bool,X117))) | s(bool,'T_0') = s(bool,X114) | s(bool,'F_0') = s(bool,X118)) )),
  inference(duplicate_literal_removal,[],[f25117])).
fof(f25117,plain,(
  ( ! [X118,X116,X114,X117,X115] : (s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X115,X116))) | s(bool,X117) = s(bool,'const.combin.K_2'(s(bool,X118),s(bool,X117))) | s(bool,'T_0') = s(bool,X114) | s(bool,'F_0') = s(bool,X118) | s(bool,'T_0') = s(bool,X114)) )),
  inference(superposition,[],[f349,f1978])).
fof(f26600,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s(bool,X68) = s(bool,X69) | s(bool,X69) = s(bool,'const.combin.K_2'(s(bool,X70),s(bool,X69))) | s(bool,'T_0') = s(bool,X67) | s(bool,'F_0') = s(bool,X70) | s(bool,X68) = s(bool,'const.combin.K_2'(s(bool,X71),s(bool,X68))) | s(bool,'F_0') = s(bool,X71)) )),
  inference(duplicate_literal_removal,[],[f25110])).
fof(f25110,plain,(
  ( ! [X70,X68,X71,X69,X67] : (s(bool,X68) = s(bool,X69) | s(bool,X69) = s(bool,'const.combin.K_2'(s(bool,X70),s(bool,X69))) | s(bool,'T_0') = s(bool,X67) | s(bool,'F_0') = s(bool,X70) | s(bool,X68) = s(bool,'const.combin.K_2'(s(bool,X71),s(bool,X68))) | s(bool,'T_0') = s(bool,X67) | s(bool,'F_0') = s(bool,X71)) )),
  inference(superposition,[],[f349,f349])).
fof(f26613,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X2)) )),
  inference(duplicate_literal_removal,[],[f25097])).
fof(f25097,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f349,f112])).
fof(f26884,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'F_0') = s(bool,X2) | s(bool,'F_0') = s(bool,X1)) )),
  inference(condensation,[],[f26883])).
fof(f26883,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,X2))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X3) | s(bool,'F_0') = s(bool,X2)) )),
  inference(forward_demodulation,[],[f26615,f139])).
fof(f26615,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X3) | s(bool,'F_0') = s(bool,X2)) )),
  inference(duplicate_literal_removal,[],[f26614])).
fof(f26614,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2)) )),
  inference(condensation,[],[f25090])).
fof(f25090,plain,(
  ( ! [X364,X366,X362,X365,X363] : (s(bool,X363) = s(bool,X364) | s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X363))) = s(bool,'const.combin.K_2'(s(bool,X365),s(bool,'const.combin.K_2'(s(bool,X362),s(bool,X363))))) | s(bool,'T_0') = s(bool,X364) | s(bool,'F_0') = s(bool,X365) | s(bool,X363) = s(bool,X366) | s(bool,'T_0') = s(bool,X366) | s(bool,'F_0') = s(bool,X362)) )),
  inference(superposition,[],[f349,f349])).
fof(f26881,plain,(
  ( ! [X358,X360,X359,X355,X361] : (s(bool,X355) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,X355))) | s(bool,'T_0') = s(bool,X358) | s(bool,'F_0') = s(bool,X359) | s(bool,X355) = s(bool,happ(s(fun(X360,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X360,X361)))) )),
  inference(forward_demodulation,[],[f26616,f139])).
fof(f26616,plain,(
  ( ! [X356,X358,X360,X357,X359,X355,X361] : (s(bool,'T_0') = s(bool,X358) | s(bool,'const.combin.K_2'(s(bool,X355),s(X356,X357))) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,'const.combin.K_2'(s(bool,X355),s(X356,X357))))) | s(bool,'F_0') = s(bool,X359) | s(bool,X355) = s(bool,happ(s(fun(X360,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X360,X361)))) )),
  inference(duplicate_literal_removal,[],[f25089])).
fof(f25089,plain,(
  ( ! [X356,X358,X360,X357,X359,X355,X361] : (s(bool,'T_0') = s(bool,X358) | s(bool,'const.combin.K_2'(s(bool,X355),s(X356,X357))) = s(bool,'const.combin.K_2'(s(bool,X359),s(bool,'const.combin.K_2'(s(bool,X355),s(X356,X357))))) | s(bool,'T_0') = s(bool,X358) | s(bool,'F_0') = s(bool,X359) | s(bool,X355) = s(bool,happ(s(fun(X360,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X360,X361)))) )),
  inference(superposition,[],[f349,f9837])).
fof(f26880,plain,(
  ( ! [X352,X354,X351,X353,X348] : (s(bool,X348) = s(bool,'const.combin.K_2'(s(bool,X352),s(bool,X348))) | s(bool,'T_0') = s(bool,X351) | s(bool,'F_0') = s(bool,X352) | s(bool,X348) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X353,X354)))) )),
  inference(forward_demodulation,[],[f26617,f139])).
fof(f26617,plain,(
  ( ! [X350,X352,X354,X349,X351,X353,X348] : (s(bool,'T_0') = s(bool,X351) | s(bool,'const.combin.K_2'(s(bool,X348),s(X349,X350))) = s(bool,'const.combin.K_2'(s(bool,X352),s(bool,'const.combin.K_2'(s(bool,X348),s(X349,X350))))) | s(bool,'F_0') = s(bool,X352) | s(bool,X348) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X353,X354)))) )),
  inference(duplicate_literal_removal,[],[f25088])).
fof(f25088,plain,(
  ( ! [X350,X352,X354,X349,X351,X353,X348] : (s(bool,'T_0') = s(bool,X351) | s(bool,'const.combin.K_2'(s(bool,X348),s(X349,X350))) = s(bool,'const.combin.K_2'(s(bool,X352),s(bool,'const.combin.K_2'(s(bool,X348),s(X349,X350))))) | s(bool,'T_0') = s(bool,X351) | s(bool,'F_0') = s(bool,X352) | s(bool,X348) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X353,X354)))) )),
  inference(superposition,[],[f349,f2256])).
fof(f26872,plain,(
  ( ! [X253,X251,X252,X250,X247] : (s(bool,X247) = s(bool,'const.combin.K_2'(s(bool,X251),s(bool,X247))) | s(bool,'T_0') = s(bool,X250) | s(bool,'F_0') = s(bool,X251) | s(bool,'F_0') = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X247))),s(X252,X253)))) )),
  inference(forward_demodulation,[],[f26630,f139])).
fof(f26630,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (s(bool,'T_0') = s(bool,X250) | s(bool,'const.combin.K_2'(s(bool,X247),s(X248,X249))) = s(bool,'const.combin.K_2'(s(bool,X251),s(bool,'const.combin.K_2'(s(bool,X247),s(X248,X249))))) | s(bool,'F_0') = s(bool,X251) | s(bool,'F_0') = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X247))),s(X252,X253)))) )),
  inference(duplicate_literal_removal,[],[f25074])).
fof(f25074,plain,(
  ( ! [X253,X251,X249,X252,X250,X248,X247] : (s(bool,'T_0') = s(bool,X250) | s(bool,'const.combin.K_2'(s(bool,X247),s(X248,X249))) = s(bool,'const.combin.K_2'(s(bool,X251),s(bool,'const.combin.K_2'(s(bool,X247),s(X248,X249))))) | s(bool,'T_0') = s(bool,X250) | s(bool,'F_0') = s(bool,X251) | s(bool,'F_0') = s(bool,happ(s(fun(X252,bool),'const.combin.K_1'(s(bool,X247))),s(X252,X253)))) )),
  inference(superposition,[],[f349,f233])).
fof(f26871,plain,(
  ( ! [X239,X237,X233,X238,X236] : (s(bool,X233) = s(bool,'const.combin.K_2'(s(bool,X237),s(bool,X233))) | s(bool,'T_0') = s(bool,X236) | s(bool,'F_0') = s(bool,X237) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X233),s(X238,X239)))) )),
  inference(forward_demodulation,[],[f26631,f139])).
fof(f26631,plain,(
  ( ! [X239,X237,X235,X233,X238,X236,X234] : (s(bool,'T_0') = s(bool,X236) | s(bool,'const.combin.K_2'(s(bool,X233),s(X234,X235))) = s(bool,'const.combin.K_2'(s(bool,X237),s(bool,'const.combin.K_2'(s(bool,X233),s(X234,X235))))) | s(bool,'F_0') = s(bool,X237) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X233),s(X238,X239)))) )),
  inference(duplicate_literal_removal,[],[f25072])).
fof(f25072,plain,(
  ( ! [X239,X237,X235,X233,X238,X236,X234] : (s(bool,'T_0') = s(bool,X236) | s(bool,'const.combin.K_2'(s(bool,X233),s(X234,X235))) = s(bool,'const.combin.K_2'(s(bool,X237),s(bool,'const.combin.K_2'(s(bool,X233),s(X234,X235))))) | s(bool,'T_0') = s(bool,X236) | s(bool,'F_0') = s(bool,X237) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X233),s(X238,X239)))) )),
  inference(superposition,[],[f349,f232])).
fof(f26870,plain,(
  ( ! [X231,X228,X232] : (s(bool,X228) = s(bool,'const.combin.K_2'(s(bool,X232),s(bool,X228))) | s(bool,'T_0') = s(bool,X231) | s(bool,'F_0') = s(bool,X232) | s(bool,'F_0') = s(bool,X228)) )),
  inference(forward_demodulation,[],[f26632,f139])).
fof(f26632,plain,(
  ( ! [X231,X229,X230,X228,X232] : (s(bool,'T_0') = s(bool,X231) | s(bool,'const.combin.K_2'(s(bool,X228),s(X229,X230))) = s(bool,'const.combin.K_2'(s(bool,X232),s(bool,'const.combin.K_2'(s(bool,X228),s(X229,X230))))) | s(bool,'F_0') = s(bool,X232) | s(bool,'F_0') = s(bool,X228)) )),
  inference(duplicate_literal_removal,[],[f25071])).
fof(f25071,plain,(
  ( ! [X231,X229,X230,X228,X232] : (s(bool,'T_0') = s(bool,X231) | s(bool,'const.combin.K_2'(s(bool,X228),s(X229,X230))) = s(bool,'const.combin.K_2'(s(bool,X232),s(bool,'const.combin.K_2'(s(bool,X228),s(X229,X230))))) | s(bool,'T_0') = s(bool,X231) | s(bool,'F_0') = s(bool,X232) | s(bool,'F_0') = s(bool,X228)) )),
  inference(superposition,[],[f349,f182])).
fof(f26868,plain,(
  ( ! [X210,X208,X209,X207,X205] : (s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,X208),s(bool,X205))) | s(bool,'T_0') = s(bool,X207) | s(bool,'F_0') = s(bool,X208) | s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X209,X210)))) )),
  inference(forward_demodulation,[],[f26633,f159])).
fof(f26633,plain,(
  ( ! [X210,X208,X206,X204,X209,X207,X205] : (s(bool,'T_0') = s(bool,X207) | s(bool,happ(s(fun(X204,bool),'const.combin.K_1'(s(bool,X205))),s(X204,X206))) = s(bool,'const.combin.K_2'(s(bool,X208),s(bool,happ(s(fun(X204,bool),'const.combin.K_1'(s(bool,X205))),s(X204,X206))))) | s(bool,'F_0') = s(bool,X208) | s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X209,X210)))) )),
  inference(duplicate_literal_removal,[],[f25067])).
fof(f25067,plain,(
  ( ! [X210,X208,X206,X204,X209,X207,X205] : (s(bool,'T_0') = s(bool,X207) | s(bool,happ(s(fun(X204,bool),'const.combin.K_1'(s(bool,X205))),s(X204,X206))) = s(bool,'const.combin.K_2'(s(bool,X208),s(bool,happ(s(fun(X204,bool),'const.combin.K_1'(s(bool,X205))),s(X204,X206))))) | s(bool,'T_0') = s(bool,X207) | s(bool,'F_0') = s(bool,X208) | s(bool,X205) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X209,X210)))) )),
  inference(superposition,[],[f349,f2047])).
fof(f26866,plain,(
  ( ! [X198,X202,X200,X203,X201] : (s(bool,X198) = s(bool,'const.combin.K_2'(s(bool,X201),s(bool,X198))) | s(bool,'T_0') = s(bool,X200) | s(bool,'F_0') = s(bool,X201) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X198),s(X202,X203)))) )),
  inference(forward_demodulation,[],[f26634,f159])).
fof(f26634,plain,(
  ( ! [X198,X202,X200,X199,X197,X203,X201] : (s(bool,'T_0') = s(bool,X200) | s(bool,happ(s(fun(X197,bool),'const.combin.K_1'(s(bool,X198))),s(X197,X199))) = s(bool,'const.combin.K_2'(s(bool,X201),s(bool,happ(s(fun(X197,bool),'const.combin.K_1'(s(bool,X198))),s(X197,X199))))) | s(bool,'F_0') = s(bool,X201) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X198),s(X202,X203)))) )),
  inference(duplicate_literal_removal,[],[f25066])).
fof(f25066,plain,(
  ( ! [X198,X202,X200,X199,X197,X203,X201] : (s(bool,'T_0') = s(bool,X200) | s(bool,happ(s(fun(X197,bool),'const.combin.K_1'(s(bool,X198))),s(X197,X199))) = s(bool,'const.combin.K_2'(s(bool,X201),s(bool,happ(s(fun(X197,bool),'const.combin.K_1'(s(bool,X198))),s(X197,X199))))) | s(bool,'T_0') = s(bool,X200) | s(bool,'F_0') = s(bool,X201) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X198),s(X202,X203)))) )),
  inference(superposition,[],[f349,f556])).
fof(f26864,plain,(
  ( ! [X177,X176,X174] : (s(bool,X174) = s(bool,'const.combin.K_2'(s(bool,X177),s(bool,X174))) | s(bool,'T_0') = s(bool,X176) | s(bool,'F_0') = s(bool,X177) | s(bool,'F_0') = s(bool,X174)) )),
  inference(forward_demodulation,[],[f26637,f159])).
fof(f26637,plain,(
  ( ! [X177,X175,X173,X176,X174] : (s(bool,'T_0') = s(bool,X176) | s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,X174))),s(X173,X175))) = s(bool,'const.combin.K_2'(s(bool,X177),s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,X174))),s(X173,X175))))) | s(bool,'F_0') = s(bool,X177) | s(bool,'F_0') = s(bool,X174)) )),
  inference(duplicate_literal_removal,[],[f25062])).
fof(f25062,plain,(
  ( ! [X177,X175,X173,X176,X174] : (s(bool,'T_0') = s(bool,X176) | s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,X174))),s(X173,X175))) = s(bool,'const.combin.K_2'(s(bool,X177),s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,X174))),s(X173,X175))))) | s(bool,'T_0') = s(bool,X176) | s(bool,'F_0') = s(bool,X177) | s(bool,'F_0') = s(bool,X174)) )),
  inference(superposition,[],[f349,f215])).
fof(f26644,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s(bool,'T_0') = s(bool,X78) | s(bool,X77) = s(bool,'const.combin.K_2'(s(bool,X79),s(bool,X77))) | s(bool,'F_0') = s(bool,X79) | s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X81),s(bool,X80))) | s(bool,X77) = s(bool,X80) | s(bool,'F_0') = s(bool,X81)) )),
  inference(duplicate_literal_removal,[],[f25046])).
fof(f25046,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s(bool,'T_0') = s(bool,X78) | s(bool,X77) = s(bool,'const.combin.K_2'(s(bool,X79),s(bool,X77))) | s(bool,'T_0') = s(bool,X78) | s(bool,'F_0') = s(bool,X79) | s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X81),s(bool,X80))) | s(bool,X77) = s(bool,X80) | s(bool,'F_0') = s(bool,X81)) )),
  inference(superposition,[],[f349,f349])).
fof(f26826,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2)) )),
  inference(condensation,[],[f26825])).
fof(f26825,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,X2))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2) | s(bool,'F_0') = s(bool,X3)) )),
  inference(forward_demodulation,[],[f26656,f139])).
fof(f26656,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2) | s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f26655])).
fof(f26655,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X2) | s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))) = s(bool,'const.combin.K_2'(s(bool,X3),s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X0))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X3)) )),
  inference(condensation,[],[f25019])).
fof(f25019,plain,(
  ( ! [X185,X182,X184,X183,X181] : (s(bool,X182) = s(bool,X183) | s(bool,X182) = s(bool,X184) | s(bool,'T_0') = s(bool,X184) | s(bool,'F_0') = s(bool,X181) | s(bool,'const.combin.K_2'(s(bool,X181),s(bool,X182))) = s(bool,'const.combin.K_2'(s(bool,X185),s(bool,'const.combin.K_2'(s(bool,X181),s(bool,X182))))) | s(bool,'T_0') = s(bool,X183) | s(bool,'F_0') = s(bool,X185)) )),
  inference(superposition,[],[f349,f349])).
fof(f26686,plain,(
  ( ! [X146,X149,X147,X145,X148] : (s(bool,X145) = s(bool,'const.combin.K_2'(s(bool,X146),s(bool,X145))) | s(bool,'T_0') = s(bool,X147) | s(bool,'F_0') = s(bool,X146) | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X148))) | s(bool,X145) = s(bool,X148) | s(bool,'F_0') = s(bool,X149)) )),
  inference(duplicate_literal_removal,[],[f24942])).
fof(f24942,plain,(
  ( ! [X146,X149,X147,X145,X148] : (s(bool,X145) = s(bool,'const.combin.K_2'(s(bool,X146),s(bool,X145))) | s(bool,'T_0') = s(bool,X147) | s(bool,'T_0') = s(bool,X147) | s(bool,'F_0') = s(bool,X146) | s(bool,X148) = s(bool,'const.combin.K_2'(s(bool,X149),s(bool,X148))) | s(bool,X145) = s(bool,X148) | s(bool,'F_0') = s(bool,X149)) )),
  inference(superposition,[],[f349,f349])).
fof(f26717,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(condensation,[],[f26716])).
fof(f26716,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X3) | s(bool,'F_0') = s(bool,X2)) )),
  inference(condensation,[],[f26715])).
fof(f26715,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s(bool,X74) = s(bool,X75) | s(bool,'T_0') = s(bool,X75) | s(bool,'F_0') = s(bool,X72) | s(bool,X72) = s(bool,'const.combin.K_2'(s(bool,X76),s(bool,X72))) | s(bool,'T_0') = s(bool,X73) | s(bool,'F_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f24865,f2465])).
fof(f24865,plain,(
  ( ! [X76,X74,X72,X75,X73] : (s(bool,X74) = s(bool,'const.combin.K_2'(s(bool,X73),s(bool,X74))) | s(bool,X74) = s(bool,X75) | s(bool,'T_0') = s(bool,X75) | s(bool,'F_0') = s(bool,X72) | s(bool,X72) = s(bool,'const.combin.K_2'(s(bool,X76),s(bool,X72))) | s(bool,'T_0') = s(bool,X73) | s(bool,'F_0') = s(bool,X76)) )),
  inference(superposition,[],[f349,f349])).
fof(f24815,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f24814,f156])).
fof(f24814,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24813,f159])).
fof(f24813,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24812,f159])).
fof(f24812,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24811,f119])).
fof(f24811,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24810,f119])).
fof(f24810,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24809,f141])).
fof(f24809,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24808,f141])).
fof(f24808,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24807,f118])).
fof(f24807,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24806,f118])).
fof(f24806,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24561,f114])).
fof(f24561,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(superposition,[],[f114,f24059])).
fof(f24059,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24058,f151])).
fof(f24058,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl6)),
  inference(forward_demodulation,[],[f147,f153])).
fof(f24729,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f24728,f156])).
fof(f24728,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24727,f159])).
fof(f24727,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24726,f159])).
fof(f24726,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24725,f119])).
fof(f24725,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24724,f119])).
fof(f24724,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24723,f141])).
fof(f24723,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24722,f141])).
fof(f24722,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24721,f118])).
fof(f24721,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24720,f118])).
fof(f24720,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24719,f114])).
fof(f24719,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24551,f114])).
fof(f24551,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f24059,f136])).
fof(f24668,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f24667,f156])).
fof(f24667,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24666,f159])).
fof(f24666,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24665,f159])).
fof(f24665,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24664,f119])).
fof(f24664,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24663,f119])).
fof(f24663,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24662,f141])).
fof(f24662,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24661,f141])).
fof(f24661,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24660,f118])).
fof(f24660,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24659,f118])).
fof(f24659,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24658,f114])).
fof(f24658,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f24556,f114])).
fof(f24556,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f24059,f136])).
fof(f24037,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f24036,f156])).
fof(f24036,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24035,f159])).
fof(f24035,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24034,f159])).
fof(f24034,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24033,f119])).
fof(f24033,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24032,f119])).
fof(f24032,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24031,f141])).
fof(f24031,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24030,f141])).
fof(f24030,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24029,f118])).
fof(f24029,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f24028,f118])).
fof(f24028,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23818,f114])).
fof(f23818,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(superposition,[],[f114,f168])).
fof(f168,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f167,f151])).
fof(f167,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f166,f153])).
fof(f166,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f147,f157])).
fof(f23973,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f23972,f156])).
fof(f23972,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23971,f159])).
fof(f23971,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23970,f159])).
fof(f23970,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23969,f119])).
fof(f23969,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23968,f119])).
fof(f23968,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23967,f141])).
fof(f23967,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23966,f141])).
fof(f23966,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23965,f118])).
fof(f23965,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23964,f118])).
fof(f23964,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23963,f114])).
fof(f23963,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23808,f114])).
fof(f23808,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(unit_resulting_resolution,[],[f168,f136])).
fof(f23924,plain,(
  $false | ($spl0 | $spl4 | $spl6 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f23923,f156])).
fof(f23923,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23922,f159])).
fof(f23922,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23921,f159])).
fof(f23921,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23920,f119])).
fof(f23920,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23919,f119])).
fof(f23919,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23918,f141])).
fof(f23918,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23917,f141])).
fof(f23917,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23916,f118])).
fof(f23916,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23915,f118])).
fof(f23915,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23914,f114])).
fof(f23914,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23813,f114])).
fof(f23813,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl4 | $spl6 | $spl10)),
  inference(unit_resulting_resolution,[],[f168,f136])).
fof(f23293,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f23292,f156])).
fof(f23292,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23291,f159])).
fof(f23291,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23290,f159])).
fof(f23290,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23289,f119])).
fof(f23289,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23288,f119])).
fof(f23288,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23287,f141])).
fof(f23287,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23286,f141])).
fof(f23286,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23285,f118])).
fof(f23285,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23284,f118])).
fof(f23284,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23095,f114])).
fof(f23095,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(superposition,[],[f114,f169])).
fof(f169,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f168,f149])).
fof(f23239,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f23238,f156])).
fof(f23238,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23237,f159])).
fof(f23237,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23236,f159])).
fof(f23236,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23235,f119])).
fof(f23235,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23234,f119])).
fof(f23234,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23233,f141])).
fof(f23233,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23232,f141])).
fof(f23232,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23231,f118])).
fof(f23231,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23230,f118])).
fof(f23230,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23229,f114])).
fof(f23229,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23085,f114])).
fof(f23085,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(unit_resulting_resolution,[],[f169,f136])).
fof(f23200,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f23199,f156])).
fof(f23199,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23198,f159])).
fof(f23198,plain,(
  s('type.num.num',sK10) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23197,f159])).
fof(f23197,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23196,f119])).
fof(f23196,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23195,f119])).
fof(f23195,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23194,f141])).
fof(f23194,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23193,f141])).
fof(f23193,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23192,f118])).
fof(f23192,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23191,f118])).
fof(f23191,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23190,f114])).
fof(f23190,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f23090,f114])).
fof(f23090,plain,(
  s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6 | $spl10)),
  inference(unit_resulting_resolution,[],[f169,f136])).
fof(f9872,plain,(
  ( ! [X173,X174] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174)))) ) | $spl26),
  inference(cnf_transformation,[],[f9872_D])).
fof(f9872_D,plain,(
  ( ! [X173,X174] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f9900,plain,(
  ( ! [X499,X496,X498,X493,X497] : (s(bool,'T_0') != s(bool,happ(s(fun(X496,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X496,X497))) | s(bool,'T_0') = s(bool,happ(s(fun(X498,bool),'const.combin.K_1'(s(bool,X493))),s(X498,X499)))) )),
  inference(subsumption_resolution,[],[f9571,f2451])).
fof(f9571,plain,(
  ( ! [X499,X494,X496,X498,X493,X495,X497] : (s(bool,'T_0') != s(bool,happ(s(fun(X496,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X496,X497))) | s(bool,'T_0') = s(bool,happ(s(fun(X498,bool),'const.combin.K_1'(s(bool,X493))),s(X498,X499))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X493),s(X494,X495)))) )),
  inference(superposition,[],[f2451,f9157])).
fof(f9765,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4)))) ) | ($spl15 | $spl24)),
  inference(condensation,[],[f9570])).
fof(f9570,plain,(
  ( ! [X486,X492,X488,X490,X487,X489,X491] : (s(bool,'T_0') != s(bool,happ(s(fun(X489,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X489,X490))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X486),s(X491,X492))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X486),s(X487,X488)))) ) | ($spl15 | $spl24)),
  inference(superposition,[],[f2424,f9157])).
fof(f9898,plain,(
  ( ! [X478,X474,X477] : (s(bool,'T_0') != s(bool,happ(s(fun(X477,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X477,X478))) | s(bool,'T_0') = s(bool,X474)) )),
  inference(subsumption_resolution,[],[f9568,f2006])).
fof(f9568,plain,(
  ( ! [X476,X478,X474,X475,X477] : (s(bool,'T_0') != s(bool,happ(s(fun(X477,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X477,X478))) | s(bool,'T_0') = s(bool,X474) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X474),s(X475,X476)))) )),
  inference(superposition,[],[f2006,f9157])).
fof(f9893,plain,(
  ( ! [X294,X296,X295] : (s(bool,'T_0') != s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) | s(bool,'T_0') = s(bool,X294)) )),
  inference(forward_demodulation,[],[f9892,f159])).
fof(f9892,plain,(
  ( ! [X294,X296,X298,X295,X297] : (s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) != s(bool,happ(s(fun(X297,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X297,X298))) | s(bool,'T_0') = s(bool,X294)) )),
  inference(subsumption_resolution,[],[f9549,f2006])).
fof(f9549,plain,(
  ( ! [X294,X300,X296,X298,X295,X297,X299] : (s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) != s(bool,happ(s(fun(X297,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X297,X298))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X294),s(X299,X300))) | s(bool,'T_0') = s(bool,X294)) )),
  inference(superposition,[],[f8246,f9157])).
fof(f9891,plain,(
  ( ! [X290,X289,X291] : (s(bool,'T_0') != s(bool,happ(s(fun(X290,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X290,X291))) | s(bool,'T_0') = s(bool,X289)) )),
  inference(forward_demodulation,[],[f9767,f159])).
fof(f9767,plain,(
  ( ! [X292,X290,X293,X289,X291] : (s(bool,happ(s(fun(X290,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X290,X291))) != s(bool,happ(s(fun(X292,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X292,X293))) | s(bool,'T_0') = s(bool,X289)) )),
  inference(duplicate_literal_removal,[],[f9548])).
fof(f9548,plain,(
  ( ! [X292,X290,X293,X289,X291] : (s(bool,happ(s(fun(X290,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X290,X291))) != s(bool,happ(s(fun(X292,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X292,X293))) | s(bool,'T_0') = s(bool,X289) | s(bool,'T_0') = s(bool,X289)) )),
  inference(superposition,[],[f7512,f9157])).
fof(f9890,plain,(
  ( ! [X285,X284,X286] : (s(bool,'T_0') != s(bool,happ(s(fun(X285,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X285,X286))) | s(bool,'T_0') = s(bool,X284)) ) | $spl15),
  inference(subsumption_resolution,[],[f9547,f9230])).
fof(f9547,plain,(
  ( ! [X288,X285,X287,X284,X286] : (s(bool,'T_0') != s(bool,happ(s(fun(X285,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X285,X286))) | s(bool,'T_0') = s(bool,happ(s(fun(X287,bool),'const.combin.K_1'(s(bool,X284))),s(X287,X288))) | s(bool,'T_0') = s(bool,X284)) ) | $spl15),
  inference(superposition,[],[f5634,f9157])).
fof(f9871,plain,(
  ( ! [X173,X174,X172] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174))) | s(bool,'T_0') = s(bool,X172)) ) | $spl15),
  inference(subsumption_resolution,[],[f9528,f2006])).
fof(f9528,plain,(
  ( ! [X175,X173,X176,X174,X172] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X172),s(X175,X176))) | s(bool,'T_0') = s(bool,X172)) ) | $spl15),
  inference(superposition,[],[f1354,f9157])).
fof(f2274,plain,(
  ( ! [X97,X98,X96] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98))) | s(bool,'T_0') = s(bool,X96)) ) | $spl15),
  inference(subsumption_resolution,[],[f2126,f2006])).
fof(f2126,plain,(
  ( ! [X99,X97,X100,X98,X96] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X96),s(X99,X100))) | s(bool,'T_0') = s(bool,X96)) ) | $spl15),
  inference(superposition,[],[f1354,f1978])).
fof(f781,plain,(
  ( ! [X12,X17,X16] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X16,X17))) | s(bool,'T_0') = s(bool,X12)) ) | $spl16),
  inference(cnf_transformation,[],[f781_D])).
fof(f781_D,plain,(
  ( ! [X12,X17,X16] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X16,X17))) | s(bool,'T_0') = s(bool,X12)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f636,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X25,X26))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X24),s(X27,X28))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f232,f112])).
fof(f782,plain,(
  ( ! [X14,X15,X13] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'T_0') = s(bool,X13)) ) | $spl18),
  inference(cnf_transformation,[],[f782_D])).
fof(f782_D,plain,(
  ( ! [X14,X15,X13] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'T_0') = s(bool,X13)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f635,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X19),s(X20,X21))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X18),s(X22,X23))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f232,f180])).
fof(f634,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X16,X17))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f232,f180])).
fof(f191,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f112])).
fof(f165,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(trivial_inequality_removal,[],[f164])).
fof(f164,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f163,f149])).
fof(f163,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl1 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f162,f151])).
fof(f162,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl1 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f161,f153])).
fof(f161,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl1 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f160,f155])).
fof(f160,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl1 | $spl10)),
  inference(forward_demodulation,[],[f148,f157])).
fof(f147,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f149,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK2) = s('type.list.list'('type.option.option'('type.closSem.v')),sK7) | $spl2),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK2) = s('type.list.list'('type.option.option'('type.closSem.v')),sK7) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f104,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK2) = s('type.list.list'('type.option.option'('type.closSem.v')),sK7) | s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  (s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | (s('type.list.list'('type.option.option'('type.closSem.v')),sK2) = s('type.list.list'('type.option.option'('type.closSem.v')),sK7) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) & s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK9) & s('type.num.num',sK5) = s('type.num.num',sK10) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))) & (s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | s('type.list.list'('type.option.option'('type.closSem.v')),sK2) != s('type.list.list'('type.option.option'('type.closSem.v')),sK7) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) | s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK9) | s('type.num.num',sK5) != s('type.num.num',sK10) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11])],[f99])).
fof(f99,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : ((s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) | (s('type.list.list'('type.option.option'('type.closSem.v')),X2) = s('type.list.list'('type.option.option'('type.closSem.v')),X7) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X9) & s('type.num.num',X5) = s('type.num.num',X10) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))) & (s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) | s('type.list.list'('type.option.option'('type.closSem.v')),X2) != s('type.list.list'('type.option.option'('type.closSem.v')),X7) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) | s('type.ffi.ffi_state'(X1),X4) != s('type.ffi.ffi_state'(X1),X9) | s('type.num.num',X5) != s('type.num.num',X10) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11)))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : ((s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) | (s('type.list.list'('type.option.option'('type.closSem.v')),X2) = s('type.list.list'('type.option.option'('type.closSem.v')),X7) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X9) & s('type.num.num',X5) = s('type.num.num',X10) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))) & (s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) | (s('type.list.list'('type.option.option'('type.closSem.v')),X2) != s('type.list.list'('type.option.option'('type.closSem.v')),X7) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) | s('type.ffi.ffi_state'(X1),X4) != s('type.ffi.ffi_state'(X1),X9) | s('type.num.num',X5) != s('type.num.num',X10) | s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : (s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) <~> (s('type.list.list'('type.option.option'('type.closSem.v')),X2) = s('type.list.list'('type.option.option'('type.closSem.v')),X7) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X9) & s('type.num.num',X5) = s('type.num.num',X10) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11)))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : (s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),X2) = s('type.list.list'('type.option.option'('type.closSem.v')),X7) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X9) & s('type.num.num',X5) = s('type.num.num',X10) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11] : (s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X2))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X7))),s('type.closSem.state'(X1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8))),s('type.closSem.state'(X1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.closSem.state'(X0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X10))),s('type.closSem.state'(X0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11))),s('type.closSem.state'(X0),'const.bool.ARB_0'))))))))))) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),X2) = s('type.list.list'('type.option.option'('type.closSem.v')),X7) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X8) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X9) & s('type.num.num',X5) = s('type.num.num',X10) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X11)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : (s('type.closSem.state'(X7),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X8))),s('type.closSem.state'(X7),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9))),s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X10))),s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12))),s('type.closSem.state'(X6),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X7),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X13))),s('type.closSem.state'(X7),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X14))),s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X15))),s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X16))),s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X17))),s('type.closSem.state'(X6),'const.bool.ARB_0'))))))))))) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),X8) = s('type.list.list'('type.option.option'('type.closSem.v')),X13) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X14) & s('type.ffi.ffi_state'(X7),X10) = s('type.ffi.ffi_state'(X7),X15) & s('type.num.num',X11) = s('type.num.num',X16) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X17)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17] : (s('type.closSem.state'(X7),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X8))),s('type.closSem.state'(X7),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9))),s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X10))),s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12))),s('type.closSem.state'(X6),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(X7),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),X13))),s('type.closSem.state'(X7),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X14))),s('type.closSem.state'(X7),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X15))),s('type.closSem.state'(X6),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X16))),s('type.closSem.state'(X6),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X17))),s('type.closSem.state'(X6),'const.bool.ARB_0'))))))))))) <=> (s('type.list.list'('type.option.option'('type.closSem.v')),X8) = s('type.list.list'('type.option.option'('type.closSem.v')),X13) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X14) & s('type.ffi.ffi_state'(X7),X10) = s('type.ffi.ffi_state'(X7),X15) & s('type.num.num',X11) = s('type.num.num',X16) & s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X17)))),
  file('thm.closSem.state_literal_|49||49|','thm.closSem.state_literal_|49||49|')).
fof(f151,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) | $spl4),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f105,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) | s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f100])).
fof(f153,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK9) | $spl6),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK9) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f106,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK9) | s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f100])).
fof(f155,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | $spl8),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f107,plain,(
  s('type.num.num',sK5) = s('type.num.num',sK10) | s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f100])).
fof(f157,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) | $spl10),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f108,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) = s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) | s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f100])).
fof(f148,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl1),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f150,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK2) != s('type.list.list'('type.option.option'('type.closSem.v')),sK7) | $spl3),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  s('type.list.list'('type.option.option'('type.closSem.v')),sK2) != s('type.list.list'('type.option.option'('type.closSem.v')),sK7) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f152,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) | $spl5),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f154,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK9) | $spl7),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK9) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f156,plain,(
  s('type.num.num',sK5) != s('type.num.num',sK10) | $spl9),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  s('type.num.num',sK5) != s('type.num.num',sK10) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f158,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) | $spl11),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f109,plain,(
  s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6) != s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11) | s('type.num.num',sK5) != s('type.num.num',sK10) | s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK9) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8) | s('type.list.list'('type.option.option'('type.closSem.v')),sK2) != s('type.list.list'('type.option.option'('type.closSem.v')),sK7) | s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK2))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK3))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK5))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK6))),s('type.closSem.state'(sK0),'const.bool.ARB_0'))))))))))) != s('type.closSem.state'(sK1),'const.closSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.closSem.v')),'type.list.list'('type.option.option'('type.closSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.closSem.v')),sK7))),s('type.closSem.state'(sK1),'const.closSem.state_refs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK8))),s('type.closSem.state'(sK1),'const.closSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.closSem.state'(sK0),'const.closSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK10))),s('type.closSem.state'(sK0),'const.closSem.state_code_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK11))),s('type.closSem.state'(sK0),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f100])).
% SZS output end Proof for thm.closSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 113
% Passive clauses: 872
% Generated clauses: 31417
% Final active clauses: 63
% Final passive clauses: 329
% Input formulas: 33
% Initial clauses: 43
% 
% Duplicate literals: 1239
% Trivial inequalities: 244
% Fw subsumption resolutions: 2611
% Fw demodulations: 3039
% Bw demodulations: 394
% Condensations: 4975
% Global subsumptions: 132
% 
% Simple tautologies: 251
% Equational tautologies: 126
% Forward subsumptions: 17553
% Fw demodulations to eq. taut.: 20
% 
% Unit resulting resolution: 570
% Forward superposition: 8263
% Backward superposition: 7191
% Self superposition: 311
% Equality factoring: 104
% Equality resolution: 26
% 
% Split clauses: 329
% Split components: 677
% SAT solver clauses: 1700
% SAT solver unit clauses: 63
% SAT solver binary clauses: 377
% 
% Sat splits: 329
% Sat splitting refutations: 36
% 
% Memory used [KB]: 19189
% Time elapsed: 1.896 s
% ------------------------------
% ------------------------------
% Success in time 3.25 s
