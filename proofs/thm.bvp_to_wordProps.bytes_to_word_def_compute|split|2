Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_to_wordProps
% (126041)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 270
% Passive clauses: 3998
% Generated clauses: 32215
% Final active clauses: 231
% Final passive clauses: 3520
% Input formulas: 133
% Initial clauses: 207
% 
% Duplicate literals: 627
% Trivial inequalities: 500
% Fw subsumption resolutions: 1665
% Fw demodulations: 5686
% Bw demodulations: 36
% 
% Simple tautologies: 407
% Equational tautologies: 42
% Forward subsumptions: 19198
% Fw demodulations to eq. taut.: 25
% 
% Binary resolution: 122
% Factoring: 1
% Forward superposition: 11503
% Backward superposition: 11553
% Self superposition: 165
% Equality factoring: 71
% Equality resolution: 31
% 
% Split clauses: 98
% Split components: 197
% SAT solver clauses: 233
% SAT solver unit clauses: 8
% SAT solver binary clauses: 73
% 
% Sat splits: 98
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 233
% TWLsolver calls for satisfiability: 66
% 
% Memory used [KB]: 22387
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvp_to_wordProps
% (126077)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 297
% Passive clauses: 1276
% Generated clauses: 27209
% Final active clauses: 197
% Final passive clauses: 591
% Input formulas: 133
% Initial clauses: 207
% 
% Duplicate literals: 13
% Trivial inequalities: 361
% Fw subsumption resolutions: 708
% Fw demodulations: 7828
% Bw demodulations: 432
% Condensations: 14
% Global subsumptions: 19
% 
% Simple tautologies: 80
% Equational tautologies: 9
% Forward subsumptions: 14976
% Fw demodulations to eq. taut.: 24
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 145
% Factoring: 2
% Forward superposition: 9058
% Backward superposition: 6300
% Self superposition: 90
% Equality factoring: 2
% Equality resolution: 26
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 1976
% SAT solver unit clauses: 312
% SAT solver binary clauses: 78
% SAT solver learnt clauses: 41
% SAT solver learnt literals: 8
% 
% Sat splits: 11
% Sat splitting refutations: 31
% 
% TWLsolver clauses: 1897
% TWLsolver calls for satisfiability: 703
% 
% Memory used [KB]: 23666
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvp_to_wordProps
% (126103)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 912
% Passive clauses: 12308
% Generated clauses: 244455
% Final active clauses: 379
% Final passive clauses: 1907
% Input formulas: 133
% Initial clauses: 207
% Discarded non-redundant clauses: 4693
% 
% Duplicate literals: 2746
% Trivial inequalities: 1518
% Fw subsumption resolutions: 8897
% Fw demodulations: 52571
% Bw demodulations: 6993
% Condensations: 4118
% Global subsumptions: 1023
% 
% Simple tautologies: 1050
% Equational tautologies: 682
% Forward subsumptions: 156709
% Fw demodulations to eq. taut.: 539
% Bw demodulations to eq. taut.: 230
% 
% Unit resulting resolution: 14623
% Factoring: 1
% Forward superposition: 89450
% Backward superposition: 51668
% Self superposition: 476
% Equality factoring: 211
% Equality resolution: 74
% 
% Split clauses: 84
% Split components: 168
% SAT solver clauses: 15176
% SAT solver unit clauses: 4871
% SAT solver binary clauses: 7272
% 
% Sat splits: 84
% Sat splitting refutations: 1675
% 
% Memory used [KB]: 223493
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.bvp_to_wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_to_wordProps
% SZS output start Proof for thm.bvp_to_wordProps
fof(f12889,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f423,f424,f454,f427,f428,f458,f435,f436,f464,f439,f440,f467,f441,f442,f468,f443,f445,f446,f447,f448,f449,f472,f450,f470,f476,f637,f638,f671,f452,f641,f642,f673,f456,f649,f650,f677,f707,f708,f714,f751,f752,f716,f845,f846,f871,f869,f1020,f1019,f1029,f1130,f1150,f1196,f1197,f1214,f1239,f1422,f1605,f1606,f462,f1705,f1704,f1713,f1787,f1152,f1807,f1830,f1241,f1855,f1969,f1970,f2072,f2073,f2104,f2102,f3097,f3098,f758,f3253,f3254,f3284,f3282,f3457,f3456,f3464,f3641,f3642,f3672,f3781,f3780,f3788,f3958,f3957,f3965,f4029,f4049,f4182,f4051,f4204,f4248,f4247,f4255,f4714,f4713,f4721,f5073,f5074,f3104,f5078,f5099,f5100,f5149,f5147,f5403,f5404,f5445,f5444,f5593,f5592,f5600,f5757,f5758,f5787,f5785,f5781,f5782,f5790,f5789,f6224,f6223,f6231,f6479,f6480,f6516,f3670,f6624,f6623,f6631,f6864,f6863,f6871,f7050,f7051,f7086,f7084,f7838,f7868,f7866,f7852,f7877,f7875,f8972,f8971,f8979,f9775,f9779,f9778,f9776,f9873,f9889,f9890,f9902,f9900,f9953,f9955,f9954,f9949,f9950,f9951,f1620,f10214,f10216,f10215,f10197,f10198,f10199,f10218,f474,f11251,f11250,f11258,f1027,f11386,f11410,f11408,f12649,f12667,f12669,f12668,f466,f12658,f12659,f12671,f465,f12875,f12876])).
fof(f12876,plain,(
  $false | $spl154),
  inference(trivial_inequality_removal,[],[f12864])).
fof(f12864,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl154),
  inference(superposition,[],[f12668,f341])).
fof(f341,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X14] : s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_lte|split|2')).
fof(f12875,plain,(
  $false | $spl154),
  inference(equality_resolution,[],[f12668])).
fof(f465,plain,(
  ~p(s(bool,sK4)) | $spl13),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  ~p(s(bool,sK4)) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f12671,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl157),
  inference(cnf_transformation,[],[f12671_D])).
fof(f12671_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f12659,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,sK4)) | $spl23),
  inference(superposition,[],[f473,f410])).
fof(f410,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f281])).
fof(f281,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bool.EQ_CLAUSES|split|1')).
fof(f473,plain,(
  s(bool,'F_0') != s(bool,sK4) | $spl23),
  inference(cnf_transformation,[],[f473_D])).
fof(f473_D,plain,(
  s(bool,'F_0') != s(bool,sK4) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f12658,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,sK4)) | $spl23),
  inference(superposition,[],[f473,f408])).
fof(f408,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f280])).
fof(f280,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bool.EQ_CLAUSES|split|0')).
fof(f466,plain,(
  p(s(bool,sK4)) | $spl12),
  inference(cnf_transformation,[],[f466_D])).
fof(f466_D,plain,(
  p(s(bool,sK4)) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f12668,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl154),
  inference(cnf_transformation,[],[f12668_D])).
fof(f12668_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f12669,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,sK4))) ) | $spl23),
  inference(subsumption_resolution,[],[f12651,f403])).
fof(f403,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f203])).
fof(f203,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bool.EQ_CLAUSES|split|3')).
fof(f12651,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,sK4)) | p(s(bool,X1))) ) | $spl23),
  inference(superposition,[],[f473,f288])).
fof(f288,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f214])).
fof(f214,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f105])).
fof(f105,axiom,(
  ! [X38,X39] : ((p(s(bool,X38)) => p(s(bool,X39))) => ((p(s(bool,X39)) => p(s(bool,X38))) => s(bool,X38) = s(bool,X39)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bool.IMP_ANTISYM_AX')).
fof(f12667,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,sK4))) ) | $spl23),
  inference(subsumption_resolution,[],[f12650,f403])).
fof(f12650,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X0)) | p(s(bool,sK4))) ) | $spl23),
  inference(superposition,[],[f473,f288])).
fof(f12649,plain,(
  $false | $spl22),
  inference(equality_resolution,[],[f12511])).
fof(f12511,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))) ) | $spl22),
  inference(superposition,[],[f12308,f340])).
fof(f340,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f128])).
fof(f128,axiom,(
  ! [X14] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14)))))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_suc|split|1')).
fof(f12308,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl22),
  inference(superposition,[],[f12258,f329])).
fof(f329,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X14] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_distrib|split|14')).
fof(f12258,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) ) | $spl22),
  inference(trivial_inequality_removal,[],[f12255])).
fof(f12255,plain,(
  ( ! [X1] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),sK2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) ) | $spl22),
  inference(superposition,[],[f11340,f296])).
fof(f296,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(flattening,[],[f147])).
fof(f147,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7,X8,X9,X10] : s('type.fcp.cart'(bool,X6),X7) = s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.fcp.cart'(bool,X6),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X6),X7),s(bool,X9)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bvp_to_wordProps.bytes_to_word_def|split|1')).
fof(f11340,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X2),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) ) | $spl22),
  inference(forward_demodulation,[],[f437,f474])).
fof(f437,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X2),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) )),
  inference(superposition,[],[f284,f286])).
fof(f286,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f228])).
fof(f228,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) <=> s('type.num.num',X14) = s('type.num.num',X15))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_distrib|split|19')).
fof(f284,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4)))),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4,sK5])],[f213])).
fof(f213,plain,(
  ? [X0,X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) != s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : s('type.fcp.cart'(bool,X6),X7) = s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))),s('type.fcp.cart'(bool,X6),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X6),X7),s(bool,X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : s('type.fcp.cart'(bool,X6),X7) = s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))),s('type.fcp.cart'(bool,X6),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,X6),X7),s(bool,X9)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2')).
fof(f11408,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl151),
  inference(cnf_transformation,[],[f11408_D])).
fof(f11408_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f11410,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl153),
  inference(cnf_transformation,[],[f11410_D])).
fof(f11410_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl153])])).
fof(f11386,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl99),
  inference(superposition,[],[f5550,f330])).
fof(f330,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f40])).
fof(f40,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_distrib|split|13')).
fof(f5550,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))) ) | $spl99),
  inference(superposition,[],[f5444,f287])).
fof(f287,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f228])).
fof(f1027,plain,(
  ( ! [X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl42),
  inference(cnf_transformation,[],[f1027_D])).
fof(f1027_D,plain,(
  ( ! [X15] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f11258,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | $spl149),
  inference(cnf_transformation,[],[f11258_D])).
fof(f11258_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) <=> ~$spl149),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl149])])).
fof(f11250,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl1),
  inference(trivial_inequality_removal,[],[f11235])).
fof(f11235,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl1),
  inference(superposition,[],[f3065,f320])).
fof(f320,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X14] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_distrib|split|17')).
fof(f3065,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl1),
  inference(trivial_inequality_removal,[],[f3043])).
fof(f3043,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl1),
  inference(superposition,[],[f709,f321])).
fof(f321,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f233])).
fof(f709,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3)))))) ) | $spl1),
  inference(superposition,[],[f452,f286])).
fof(f11251,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl1),
  inference(trivial_inequality_removal,[],[f11234])).
fof(f11234,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl1),
  inference(superposition,[],[f3065,f322])).
fof(f322,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f234])).
fof(f234,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X14] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_distrib|split|18')).
fof(f474,plain,(
  s(bool,'F_0') = s(bool,sK4) | $spl22),
  inference(cnf_transformation,[],[f474_D])).
fof(f474_D,plain,(
  s(bool,'F_0') = s(bool,sK4) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f10218,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | $spl146),
  inference(cnf_transformation,[],[f10218_D])).
fof(f10218_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f10199,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,sK4) | $spl6),
  inference(superposition,[],[f457,f412])).
fof(f412,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2',aHL_BOOL_CASES)).
fof(f457,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | $spl6),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f10198,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ~p(s(bool,sK4)) | $spl6),
  inference(superposition,[],[f457,f410])).
fof(f10197,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ~p(s(bool,sK4)) | $spl6),
  inference(superposition,[],[f457,f408])).
fof(f10215,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2)))) ) | $spl144),
  inference(cnf_transformation,[],[f10215_D])).
fof(f10215_D,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2)))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f10216,plain,(
  ( ! [X3] : (s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X3))) | ~p(s(bool,sK4))) ) | ($spl6 | $spl28)),
  inference(subsumption_resolution,[],[f10192,f1293])).
fof(f1293,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X1)))) ) | $spl28),
  inference(superposition,[],[f672,f406])).
fof(f406,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f279])).
fof(f279,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f205])).
fof(f205,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bool.EQ_CLAUSES|split|2')).
fof(f672,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl28),
  inference(cnf_transformation,[],[f672_D])).
fof(f672_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f10192,plain,(
  ( ! [X3] : (s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X3))) | ~p(s(bool,X3)) | ~p(s(bool,sK4))) ) | $spl6),
  inference(superposition,[],[f457,f291])).
fof(f291,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f215])).
fof(f10214,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,sK4))) ) | ($spl6 | $spl28)),
  inference(subsumption_resolution,[],[f10191,f1293])).
fof(f10191,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,sK4)) | ~p(s(bool,X2))) ) | $spl6),
  inference(superposition,[],[f457,f291])).
fof(f1620,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | $spl55),
  inference(cnf_transformation,[],[f1620_D])).
fof(f1620_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f9951,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,sK4) | $spl11),
  inference(superposition,[],[f464,f412])).
fof(f9950,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ~p(s(bool,sK4)) | $spl11),
  inference(superposition,[],[f464,f410])).
fof(f9949,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ~p(s(bool,sK4)) | $spl11),
  inference(superposition,[],[f464,f408])).
fof(f9954,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2)))) ) | $spl142),
  inference(cnf_transformation,[],[f9954_D])).
fof(f9954_D,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f9955,plain,(
  ( ! [X3] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X3))) | ~p(s(bool,sK4))) ) | ($spl11 | $spl31)),
  inference(subsumption_resolution,[],[f9944,f819])).
fof(f819,plain,(
  ( ! [X1] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X1))) | p(s(bool,X1))) ) | $spl31),
  inference(superposition,[],[f677,f406])).
fof(f9944,plain,(
  ( ! [X3] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X3))) | ~p(s(bool,X3)) | ~p(s(bool,sK4))) ) | $spl11),
  inference(superposition,[],[f464,f291])).
fof(f9953,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,sK4))) ) | ($spl11 | $spl31)),
  inference(subsumption_resolution,[],[f9943,f819])).
fof(f9943,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,sK4)) | ~p(s(bool,X2))) ) | $spl11),
  inference(superposition,[],[f464,f291])).
fof(f9900,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl139),
  inference(cnf_transformation,[],[f9900_D])).
fof(f9900_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl139),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl139])])).
fof(f9902,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl141),
  inference(cnf_transformation,[],[f9902_D])).
fof(f9902_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f9890,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl79),
  inference(superposition,[],[f3788,f321])).
fof(f9889,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl79),
  inference(superposition,[],[f3788,f323])).
fof(f323,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f234])).
fof(f9873,plain,(
  $false | $spl12),
  inference(equality_resolution,[],[f9708])).
fof(f9708,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))) ) | $spl12),
  inference(superposition,[],[f5746,f340])).
fof(f5746,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl12),
  inference(superposition,[],[f5433,f329])).
fof(f5433,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) ) | $spl12),
  inference(trivial_inequality_removal,[],[f5430])).
fof(f5430,plain,(
  ( ! [X1] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),sK2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) ) | $spl12),
  inference(superposition,[],[f1607,f296])).
fof(f1607,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X2),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))) ) | $spl12),
  inference(superposition,[],[f1572,f286])).
fof(f1572,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | $spl12),
  inference(forward_demodulation,[],[f284,f1435])).
fof(f1435,plain,(
  s(bool,'T_0') = s(bool,sK4) | $spl12),
  inference(resolution,[],[f466,f408])).
fof(f9776,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) | $spl134),
  inference(cnf_transformation,[],[f9776_D])).
fof(f9776_D,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f9778,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl137),
  inference(cnf_transformation,[],[f9778_D])).
fof(f9778_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f9779,plain,(
  ( ! [X4] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) ) | $spl12),
  inference(forward_demodulation,[],[f9760,f330])).
fof(f9760,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))) ) | $spl12),
  inference(superposition,[],[f5747,f320])).
fof(f5747,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl12),
  inference(superposition,[],[f5433,f339])).
fof(f339,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f126])).
fof(f126,axiom,(
  ! [X14] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_suc|split|2')).
fof(f9775,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) | $spl12),
  inference(forward_demodulation,[],[f9759,f330])).
fof(f9759,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) | $spl12),
  inference(superposition,[],[f5747,f322])).
fof(f8979,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl133),
  inference(cnf_transformation,[],[f8979_D])).
fof(f8979_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f8971,plain,(
  ( ! [X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl123),
  inference(trivial_inequality_removal,[],[f8956])).
fof(f8956,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl123),
  inference(superposition,[],[f8572,f320])).
fof(f8572,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl123),
  inference(forward_demodulation,[],[f8571,f330])).
fof(f8571,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl123),
  inference(trivial_inequality_removal,[],[f8547])).
fof(f8547,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl123),
  inference(superposition,[],[f7160,f323])).
fof(f7160,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl123),
  inference(superposition,[],[f7086,f286])).
fof(f8972,plain,(
  ( ! [X15] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl123),
  inference(trivial_inequality_removal,[],[f8955])).
fof(f8955,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl123),
  inference(superposition,[],[f8572,f322])).
fof(f7875,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl129),
  inference(cnf_transformation,[],[f7875_D])).
fof(f7875_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl129),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl129])])).
fof(f7877,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl131),
  inference(cnf_transformation,[],[f7877_D])).
fof(f7877_D,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f7852,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl41),
  inference(superposition,[],[f7813,f330])).
fof(f7813,plain,(
  ( ! [X0] : (s('type.num.num',sK3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl41),
  inference(superposition,[],[f7794,f287])).
fof(f7794,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl41),
  inference(equality_resolution,[],[f6258])).
fof(f6258,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl41),
  inference(superposition,[],[f6222,f287])).
fof(f6222,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl41),
  inference(equality_resolution,[],[f2198])).
fof(f2198,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl41),
  inference(trivial_inequality_removal,[],[f2176])).
fof(f2176,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl41),
  inference(superposition,[],[f889,f321])).
fof(f889,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl41),
  inference(superposition,[],[f871,f286])).
fof(f7866,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))))))) ) | $spl124),
  inference(cnf_transformation,[],[f7866_D])).
fof(f7866_D,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))))))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f7868,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl127),
  inference(cnf_transformation,[],[f7868_D])).
fof(f7868_D,plain,(
  s('type.num.num',sK3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f7838,plain,(
  ( ! [X21] : (s('type.num.num',sK3) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))))))) ) | $spl41),
  inference(superposition,[],[f7813,f338])).
fof(f338,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.numeral.numeral_distrib|split|10')).
fof(f7084,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl120),
  inference(cnf_transformation,[],[f7084_D])).
fof(f7084_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f7086,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl123),
  inference(cnf_transformation,[],[f7086_D])).
fof(f7086_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f7051,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl83),
  inference(superposition,[],[f4065,f321])).
fof(f4065,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl83),
  inference(superposition,[],[f4049,f287])).
fof(f7050,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl83),
  inference(superposition,[],[f4065,f323])).
fof(f6871,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl119),
  inference(cnf_transformation,[],[f6871_D])).
fof(f6871_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f6863,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl53),
  inference(trivial_inequality_removal,[],[f6848])).
fof(f6848,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl53),
  inference(superposition,[],[f1869,f320])).
fof(f1869,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl53),
  inference(superposition,[],[f1241,f286])).
fof(f6864,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl53),
  inference(trivial_inequality_removal,[],[f6847])).
fof(f6847,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl53),
  inference(superposition,[],[f1869,f322])).
fof(f6631,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl117),
  inference(cnf_transformation,[],[f6631_D])).
fof(f6631_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f6623,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl67),
  inference(trivial_inequality_removal,[],[f6608])).
fof(f6608,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl67),
  inference(superposition,[],[f5089,f320])).
fof(f5089,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl67),
  inference(superposition,[],[f3104,f286])).
fof(f6624,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl67),
  inference(trivial_inequality_removal,[],[f6607])).
fof(f6607,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl67),
  inference(superposition,[],[f5089,f322])).
fof(f3670,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl74),
  inference(cnf_transformation,[],[f3670_D])).
fof(f3670_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f6516,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl115),
  inference(cnf_transformation,[],[f6516_D])).
fof(f6516_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f6480,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f3811,f321])).
fof(f3811,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f3779,f287])).
fof(f3779,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl3 | $spl12)),
  inference(equality_resolution,[],[f2596])).
fof(f2596,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f2584,f286])).
fof(f2584,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl3 | $spl12)),
  inference(subsumption_resolution,[],[f2564,f297])).
fof(f297,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(flattening,[],[f149])).
fof(f149,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),s('type.fcp.cart'(bool,X0),X1),s(bool,X3)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7,X11,X9,X10] : s('type.fcp.cart'(bool,X6),X7) = s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,X6),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.fcp.cart'(bool,X6),X7),s(bool,X9)))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bvp_to_wordProps.bytes_to_word_def|split|0')).
fof(f2564,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl3 | $spl12)),
  inference(superposition,[],[f2226,f323])).
fof(f2226,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ($spl3 | $spl12)),
  inference(forward_demodulation,[],[f454,f1435])).
fof(f6479,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f3811,f323])).
fof(f6231,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl113),
  inference(cnf_transformation,[],[f6231_D])).
fof(f6231_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f6223,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl41),
  inference(trivial_inequality_removal,[],[f6208])).
fof(f6208,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl41),
  inference(superposition,[],[f2198,f320])).
fof(f6224,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl41),
  inference(trivial_inequality_removal,[],[f6207])).
fof(f6207,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl41),
  inference(superposition,[],[f2198,f322])).
fof(f5789,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))))) | $spl109),
  inference(cnf_transformation,[],[f5789_D])).
fof(f5789_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))))) <=> ~$spl109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl109])])).
fof(f5790,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) ) | $spl110),
  inference(cnf_transformation,[],[f5790_D])).
fof(f5790_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f5782,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))))) ) | $spl12),
  inference(superposition,[],[f5433,f320])).
fof(f5781,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))))) ) | $spl12),
  inference(superposition,[],[f5433,f322])).
fof(f5785,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) ) | $spl104),
  inference(cnf_transformation,[],[f5785_D])).
fof(f5785_D,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f5787,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl107),
  inference(cnf_transformation,[],[f5787_D])).
fof(f5787_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f5758,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) ) | $spl12),
  inference(superposition,[],[f5433,f320])).
fof(f5757,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) ) | $spl12),
  inference(superposition,[],[f5433,f322])).
fof(f5600,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl103),
  inference(cnf_transformation,[],[f5600_D])).
fof(f5600_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f5592,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl67),
  inference(trivial_inequality_removal,[],[f5577])).
fof(f5577,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl67),
  inference(superposition,[],[f5239,f320])).
fof(f5239,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl67),
  inference(trivial_inequality_removal,[],[f5217])).
fof(f5217,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl67),
  inference(superposition,[],[f5085,f321])).
fof(f5085,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl67),
  inference(superposition,[],[f3104,f287])).
fof(f5593,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl67),
  inference(trivial_inequality_removal,[],[f5576])).
fof(f5576,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl67),
  inference(superposition,[],[f5239,f322])).
fof(f5444,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl99),
  inference(cnf_transformation,[],[f5444_D])).
fof(f5444_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f5445,plain,(
  ( ! [X15] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X15),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl100),
  inference(cnf_transformation,[],[f5445_D])).
fof(f5445_D,plain,(
  ( ! [X15] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X15),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f5404,plain,(
  ( ! [X16] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X16),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl12),
  inference(superposition,[],[f1607,f320])).
fof(f5403,plain,(
  ( ! [X15] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num',X15),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl12),
  inference(superposition,[],[f1607,f322])).
fof(f5147,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl94),
  inference(cnf_transformation,[],[f5147_D])).
fof(f5147_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f5149,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | $spl97),
  inference(cnf_transformation,[],[f5149_D])).
fof(f5149_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f5100,plain,(
  ( ! [X7] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl12),
  inference(superposition,[],[f1599,f321])).
fof(f1599,plain,(
  ( ! [X0] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))) ) | $spl12),
  inference(superposition,[],[f1572,f286])).
fof(f5099,plain,(
  ( ! [X6] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl12),
  inference(superposition,[],[f1599,f323])).
fof(f5078,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(cnf_transformation,[],[f5078_D])).
fof(f5078_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f3104,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl67),
  inference(cnf_transformation,[],[f3104_D])).
fof(f3104_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f5074,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl49),
  inference(superposition,[],[f5043,f320])).
fof(f5043,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl49),
  inference(equality_resolution,[],[f1814])).
fof(f1814,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl49),
  inference(superposition,[],[f1152,f286])).
fof(f5073,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl49),
  inference(superposition,[],[f5043,f322])).
fof(f4721,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(cnf_transformation,[],[f4721_D])).
fof(f4721_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f4713,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl71),
  inference(trivial_inequality_removal,[],[f4698])).
fof(f4698,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl71),
  inference(superposition,[],[f3306,f320])).
fof(f3306,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl71),
  inference(superposition,[],[f3284,f286])).
fof(f4714,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl71),
  inference(trivial_inequality_removal,[],[f4697])).
fof(f4697,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl71),
  inference(superposition,[],[f3306,f322])).
fof(f4255,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl89),
  inference(cnf_transformation,[],[f4255_D])).
fof(f4255_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f4247,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | ($spl28 | $spl31)),
  inference(trivial_inequality_removal,[],[f4232])).
fof(f4232,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | ($spl28 | $spl31)),
  inference(superposition,[],[f1364,f320])).
fof(f1364,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl28 | $spl31)),
  inference(superposition,[],[f1348,f286])).
fof(f1348,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl28 | $spl31)),
  inference(trivial_inequality_removal,[],[f1341])).
fof(f1341,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl28 | $spl31)),
  inference(superposition,[],[f1322,f321])).
fof(f1322,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl28 | $spl31)),
  inference(subsumption_resolution,[],[f1288,f677])).
fof(f1288,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) = s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl28),
  inference(superposition,[],[f672,f322])).
fof(f4248,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | ($spl28 | $spl31)),
  inference(trivial_inequality_removal,[],[f4231])).
fof(f4231,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | ($spl28 | $spl31)),
  inference(superposition,[],[f1364,f322])).
fof(f4204,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl87),
  inference(cnf_transformation,[],[f4204_D])).
fof(f4204_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f4051,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl85),
  inference(cnf_transformation,[],[f4051_D])).
fof(f4051_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f4182,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl28 | $spl31)),
  inference(superposition,[],[f1356,f330])).
fof(f1356,plain,(
  ( ! [X2] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | ($spl28 | $spl31)),
  inference(superposition,[],[f1348,f286])).
fof(f4049,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl83),
  inference(cnf_transformation,[],[f4049_D])).
fof(f4049_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f4029,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl35),
  inference(superposition,[],[f782,f330])).
fof(f782,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl35),
  inference(superposition,[],[f763,f286])).
fof(f763,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl35),
  inference(trivial_inequality_removal,[],[f760])).
fof(f760,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl35),
  inference(superposition,[],[f716,f320])).
fof(f3965,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | $spl81),
  inference(cnf_transformation,[],[f3965_D])).
fof(f3965_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f3957,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl33),
  inference(trivial_inequality_removal,[],[f3942])).
fof(f3942,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl33),
  inference(superposition,[],[f775,f320])).
fof(f775,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3)))))) ) | $spl33),
  inference(superposition,[],[f755,f286])).
fof(f755,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | $spl33),
  inference(trivial_inequality_removal,[],[f748])).
fof(f748,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | $spl33),
  inference(superposition,[],[f714,f321])).
fof(f3958,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl33),
  inference(trivial_inequality_removal,[],[f3941])).
fof(f3941,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl33),
  inference(superposition,[],[f775,f322])).
fof(f3788,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl79),
  inference(cnf_transformation,[],[f3788_D])).
fof(f3788_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f3780,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | ($spl3 | $spl12)),
  inference(trivial_inequality_removal,[],[f3765])).
fof(f3765,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f2596,f320])).
fof(f3781,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | ($spl3 | $spl12)),
  inference(trivial_inequality_removal,[],[f3764])).
fof(f3764,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f2596,f322])).
fof(f3672,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | $spl77),
  inference(cnf_transformation,[],[f3672_D])).
fof(f3672_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f3642,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f2592,f321])).
fof(f2592,plain,(
  ( ! [X2] : (s('type.num.num',X2) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f2584,f286])).
fof(f3641,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f2592,f323])).
fof(f3464,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl73),
  inference(cnf_transformation,[],[f3464_D])).
fof(f3464_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f3456,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) )),
  inference(trivial_inequality_removal,[],[f3441])).
fof(f3441,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) )),
  inference(superposition,[],[f729,f320])).
fof(f729,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))) )),
  inference(superposition,[],[f459,f286])).
fof(f459,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))),
  inference(subsumption_resolution,[],[f431,f297])).
fof(f431,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))),
  inference(superposition,[],[f284,f323])).
fof(f3457,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) )),
  inference(trivial_inequality_removal,[],[f3440])).
fof(f3440,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) )),
  inference(superposition,[],[f729,f322])).
fof(f3282,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl68),
  inference(cnf_transformation,[],[f3282_D])).
fof(f3282_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f3284,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | $spl71),
  inference(cnf_transformation,[],[f3284_D])).
fof(f3284_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f3254,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) )),
  inference(superposition,[],[f725,f321])).
fof(f725,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f459,f286])).
fof(f3253,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) )),
  inference(superposition,[],[f725,f323])).
fof(f758,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))))) | $spl37),
  inference(cnf_transformation,[],[f758_D])).
fof(f758_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f3098,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))))) | $spl1),
  inference(superposition,[],[f3063,f320])).
fof(f3063,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | $spl1),
  inference(equality_resolution,[],[f709])).
fof(f3097,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))))) | $spl1),
  inference(superposition,[],[f3063,f322])).
fof(f2102,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl62),
  inference(cnf_transformation,[],[f2102_D])).
fof(f2102_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2104,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) | $spl65),
  inference(cnf_transformation,[],[f2104_D])).
fof(f2104_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f2073,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl9),
  inference(superposition,[],[f1661,f321])).
fof(f1661,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl9),
  inference(superposition,[],[f1647,f287])).
fof(f1647,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl9),
  inference(trivial_inequality_removal,[],[f1640])).
fof(f1640,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl9),
  inference(superposition,[],[f462,f321])).
fof(f2072,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl9),
  inference(superposition,[],[f1661,f323])).
fof(f1970,plain,(
  $false | ($spl7 | $spl12)),
  inference(subsumption_resolution,[],[f1967,f297])).
fof(f1967,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ($spl7 | $spl12)),
  inference(trivial_inequality_removal,[],[f1950])).
fof(f1950,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | ($spl7 | $spl12)),
  inference(superposition,[],[f1891,f321])).
fof(f1891,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ($spl7 | $spl12)),
  inference(forward_demodulation,[],[f458,f1435])).
fof(f1969,plain,(
  $false | ($spl7 | $spl12)),
  inference(subsumption_resolution,[],[f1968,f297])).
fof(f1968,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ($spl7 | $spl12)),
  inference(trivial_inequality_removal,[],[f1949])).
fof(f1949,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | ($spl7 | $spl12)),
  inference(superposition,[],[f1891,f323])).
fof(f1855,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl61),
  inference(cnf_transformation,[],[f1855_D])).
fof(f1855_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f1241,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl53),
  inference(cnf_transformation,[],[f1241_D])).
fof(f1241_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f1830,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f1792,f330])).
fof(f1792,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))) )),
  inference(trivial_inequality_removal,[],[f1784])).
fof(f1784,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) )),
  inference(superposition,[],[f804,f321])).
fof(f804,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))) )),
  inference(superposition,[],[f731,f287])).
fof(f731,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))),
  inference(trivial_inequality_removal,[],[f728])).
fof(f728,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))),
  inference(superposition,[],[f459,f320])).
fof(f1807,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl59),
  inference(cnf_transformation,[],[f1807_D])).
fof(f1807_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f1152,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl49),
  inference(cnf_transformation,[],[f1152_D])).
fof(f1152_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f1787,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f804,f330])).
fof(f1713,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl57),
  inference(cnf_transformation,[],[f1713_D])).
fof(f1713_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f1704,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl35),
  inference(trivial_inequality_removal,[],[f1689])).
fof(f1689,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl35),
  inference(superposition,[],[f761,f320])).
fof(f761,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl35),
  inference(superposition,[],[f716,f286])).
fof(f1705,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl35),
  inference(trivial_inequality_removal,[],[f1688])).
fof(f1688,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl35),
  inference(superposition,[],[f761,f322])).
fof(f462,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl9),
  inference(cnf_transformation,[],[f462_D])).
fof(f462_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1606,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl12),
  inference(superposition,[],[f1572,f320])).
fof(f1605,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl12),
  inference(superposition,[],[f1572,f322])).
fof(f1422,plain,(
  $false | ($spl7 | $spl13 | $spl28)),
  inference(subsumption_resolution,[],[f1054,f672])).
fof(f1054,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | ($spl7 | $spl13)),
  inference(forward_demodulation,[],[f458,f479])).
fof(f479,plain,(
  s(bool,'F_0') = s(bool,sK4) | $spl13),
  inference(resolution,[],[f465,f364])).
fof(f364,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f252])).
fof(f252,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X0)) & (s(bool,'F_0') != s(bool,X0) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(ennf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X0))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X13] : ((p(s(bool,X13)) => p(s(bool,'F_0'))) <=> s(bool,'F_0') = s(bool,X13))),
  file('thm.bvp_to_wordProps.bytes_to_word_def_compute|split|2','thm.bool.IMP_F_EQ_F')).
fof(f1239,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl51),
  inference(cnf_transformation,[],[f1239_D])).
fof(f1239_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f1214,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl33),
  inference(superposition,[],[f1135,f330])).
fof(f1135,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3)))) ) | $spl33),
  inference(trivial_inequality_removal,[],[f1127])).
fof(f1127,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl33),
  inference(superposition,[],[f749,f321])).
fof(f749,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3)))) ) | $spl33),
  inference(superposition,[],[f714,f287])).
fof(f1197,plain,(
  $false | $spl29),
  inference(subsumption_resolution,[],[f1194,f297])).
fof(f1194,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl29),
  inference(trivial_inequality_removal,[],[f1170])).
fof(f1170,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl29),
  inference(superposition,[],[f673,f321])).
fof(f1196,plain,(
  $false | $spl29),
  inference(subsumption_resolution,[],[f1195,f297])).
fof(f1195,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl29),
  inference(trivial_inequality_removal,[],[f1169])).
fof(f1169,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl29),
  inference(superposition,[],[f673,f323])).
fof(f1150,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl47),
  inference(cnf_transformation,[],[f1150_D])).
fof(f1150_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f1130,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl33),
  inference(superposition,[],[f749,f330])).
fof(f1029,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | $spl45),
  inference(cnf_transformation,[],[f1029_D])).
fof(f1029_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f1019,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl1),
  inference(trivial_inequality_removal,[],[f1004])).
fof(f1004,plain,(
  ( ! [X16] : (s('type.num.num',X16) != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))) ) | $spl1),
  inference(superposition,[],[f719,f320])).
fof(f719,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl1),
  inference(superposition,[],[f711,f286])).
fof(f711,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK3) | $spl1),
  inference(trivial_inequality_removal,[],[f704])).
fof(f704,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK3) | $spl1),
  inference(superposition,[],[f452,f321])).
fof(f1020,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl1),
  inference(trivial_inequality_removal,[],[f1003])).
fof(f1003,plain,(
  ( ! [X15] : (s('type.num.num',X15) != s('type.num.num',X15) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl1),
  inference(superposition,[],[f719,f322])).
fof(f869,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl38),
  inference(cnf_transformation,[],[f869_D])).
fof(f869_D,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f871,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK3) | $spl41),
  inference(cnf_transformation,[],[f871_D])).
fof(f871_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK3) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f846,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7)) ) | $spl1),
  inference(superposition,[],[f705,f321])).
fof(f705,plain,(
  ( ! [X0] : (s('type.num.num',sK3) != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl1),
  inference(superposition,[],[f452,f287])).
fof(f845,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK3) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X6)) ) | $spl1),
  inference(superposition,[],[f705,f323])).
fof(f716,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | $spl35),
  inference(cnf_transformation,[],[f716_D])).
fof(f716_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f752,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))))) | $spl33),
  inference(superposition,[],[f714,f320])).
fof(f751,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))))) | $spl33),
  inference(superposition,[],[f714,f322])).
fof(f714,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | $spl33),
  inference(cnf_transformation,[],[f714_D])).
fof(f714_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f708,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | $spl1),
  inference(superposition,[],[f452,f320])).
fof(f707,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))))) | $spl1),
  inference(superposition,[],[f452,f322])).
fof(f677,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl31),
  inference(cnf_transformation,[],[f677_D])).
fof(f677_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f650,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl13),
  inference(superposition,[],[f513,f320])).
fof(f513,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl13),
  inference(backward_demodulation,[],[f479,f284])).
fof(f649,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))))) | $spl13),
  inference(superposition,[],[f513,f322])).
fof(f456,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl5),
  inference(cnf_transformation,[],[f456_D])).
fof(f456_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f673,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl29),
  inference(cnf_transformation,[],[f673_D])).
fof(f673_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f642,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl13),
  inference(superposition,[],[f513,f320])).
fof(f641,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))) | $spl13),
  inference(superposition,[],[f513,f322])).
fof(f452,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | $spl1),
  inference(cnf_transformation,[],[f452_D])).
fof(f452_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f671,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl27),
  inference(cnf_transformation,[],[f671_D])).
fof(f671_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f638,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | $spl13),
  inference(superposition,[],[f513,f320])).
fof(f637,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3))) | $spl13),
  inference(superposition,[],[f513,f322])).
fof(f476,plain,(
  s(bool,'T_0') = s(bool,sK4) | $spl24),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  s(bool,'T_0') = s(bool,sK4) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f470,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | $spl19),
  inference(cnf_transformation,[],[f470_D])).
fof(f470_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f450,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,sK4)),
  inference(superposition,[],[f284,f412])).
fof(f472,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | $spl21),
  inference(cnf_transformation,[],[f472_D])).
fof(f472_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f449,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,sK4)),
  inference(superposition,[],[f284,f412])).
fof(f448,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ~p(s(bool,sK4))),
  inference(superposition,[],[f284,f410])).
fof(f447,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'T_0'))) | ~p(s(bool,sK4))),
  inference(superposition,[],[f284,f408])).
fof(f446,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | p(s(bool,sK4))),
  inference(superposition,[],[f284,f406])).
fof(f445,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | p(s(bool,sK4))),
  inference(superposition,[],[f284,f404])).
fof(f404,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f278])).
fof(f443,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,'F_0'))) | p(s(bool,sK4))),
  inference(superposition,[],[f284,f364])).
fof(f468,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,X2))) ) | $spl16),
  inference(cnf_transformation,[],[f468_D])).
fof(f468_D,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,X2))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f442,plain,(
  ( ! [X3] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X3))) | ~p(s(bool,X3)) | ~p(s(bool,sK4))) )),
  inference(superposition,[],[f284,f291])).
fof(f441,plain,(
  ( ! [X2] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X2))) | ~p(s(bool,sK4)) | ~p(s(bool,X2))) )),
  inference(superposition,[],[f284,f291])).
fof(f467,plain,(
  ( ! [X0] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X0))) | p(s(bool,X0))) ) | $spl14),
  inference(cnf_transformation,[],[f467_D])).
fof(f467_D,plain,(
  ( ! [X0] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X0))) | p(s(bool,X0))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f440,plain,(
  ( ! [X1] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X1))) | p(s(bool,sK4)) | p(s(bool,X1))) )),
  inference(superposition,[],[f284,f288])).
fof(f439,plain,(
  ( ! [X0] : (s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,X0))) | p(s(bool,X0)) | p(s(bool,sK4))) )),
  inference(superposition,[],[f284,f288])).
fof(f464,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | $spl11),
  inference(cnf_transformation,[],[f464_D])).
fof(f464_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f436,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))),
  inference(superposition,[],[f284,f320])).
fof(f435,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))))),
  inference(superposition,[],[f284,f322])).
fof(f458,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | $spl7),
  inference(cnf_transformation,[],[f458_D])).
fof(f458_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f428,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))),
  inference(superposition,[],[f284,f320])).
fof(f427,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK3)))))),
  inference(superposition,[],[f284,f322])).
fof(f454,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | $spl3),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f424,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3)))),
  inference(superposition,[],[f284,f320])).
fof(f423,plain,(
  s('type.fcp.cart'(bool,sK1),sK2) != s('type.fcp.cart'(bool,sK1),'const.bvp_to_wordProps.bytes_to_word_5'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'(bool,sK1),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.list.NIL_0'),s('type.fcp.cart'(bool,sK1),sK2),s(bool,sK4))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3)))),
  inference(superposition,[],[f284,f322])).
% SZS output end Proof for thm.bvp_to_wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 389
% Passive clauses: 4123
% Generated clauses: 12439
% Final active clauses: 323
% Final passive clauses: 2875
% Input formulas: 133
% Initial clauses: 136
% 
% Selected by SInE selection: 64
% SInE iterations: 1
% 
% Duplicate literals: 108
% Trivial inequalities: 495
% Fw subsumption resolutions: 178
% Fw demodulations: 2355
% Bw demodulations: 8
% 
% Simple tautologies: 103
% Equational tautologies: 2
% Forward subsumptions: 5271
% 
% Binary resolution: 78
% Forward superposition: 8742
% Backward superposition: 241
% Equality resolution: 111
% 
% Split clauses: 106
% Split components: 212
% SAT solver clauses: 116
% SAT solver unit clauses: 6
% SAT solver binary clauses: 25
% 
% Sat splits: 106
% Sat splitting refutations: 9
% 
% Memory used [KB]: 5117
% Time elapsed: 0.363 s
% ------------------------------
% ------------------------------
% Success in time 12.12 s
